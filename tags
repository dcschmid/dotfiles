!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ClassNameExVisitor	.config/nvim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^class ClassNameExVisitor extends NodeVisitorAbstract$/;"	c	language:PHP
namespace	.config/nvim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^    public $namespace;$/;"	v	language:PHP
imports	.config/nvim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^    public $imports = [];$/;"	v	language:PHP
imports	.config/nvim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^    public $imports = [];$/;"	v	language:PHP
name	.config/nvim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^    public $name;$/;"	v	language:PHP
start_line	.config/nvim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^    public $start_line;$/;"	v	language:PHP
end_line	.config/nvim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^    public $end_line;$/;"	v	language:PHP
enterNode	.config/nvim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^    public function enterNode(Node $node)$/;"	f	language:PHP
namespace	.config/nvim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^            $this->namespace = (string)$node->name;$/;"	v	language:PHP
prefix	.config/nvim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^            $prefix = (string)$node->prefix;$/;"	v	language:PHP
alias	.config/nvim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^                $alias = $use->alias;$/;"	v	language:PHP
name	.config/nvim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^                    $name = $prefix."\\\\".(string)$use->name;$/;"	v	language:PHP
alias	.config/nvim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^                $alias = $use->alias;$/;"	v	language:PHP
alias	.config/nvim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^                    $alias = end($use->name->parts);$/;"	v	language:PHP
name	.config/nvim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^            $this->name = $node->name;$/;"	v	language:PHP
start_line	.config/nvim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^            $this->start_line = $node->getLine();$/;"	v	language:PHP
end_line	.config/nvim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^            $this->end_line = $node->getAttribute('endLine');$/;"	v	language:PHP
ClassNameVisitor	.config/nvim/plugged/phpcd.vim/php/ClassNameVisitor.php	/^class ClassNameVisitor extends NodeVisitorAbstract$/;"	c	language:PHP
name	.config/nvim/plugged/phpcd.vim/php/ClassNameVisitor.php	/^    public $name;$/;"	v	language:PHP
leaveNode	.config/nvim/plugged/phpcd.vim/php/ClassNameVisitor.php	/^    public function leaveNode(Node $node)$/;"	f	language:PHP
class	.config/nvim/plugged/phpcd.vim/php/ClassNameVisitor.php	/^            $this->class = (string)$node->namespacedName;$/;"	v	language:PHP
Factory	.config/nvim/plugged/phpcd.vim/php/Matcher/Factory.php	/^class Factory$/;"	c	language:PHP
make	.config/nvim/plugged/phpcd.vim/php/Matcher/Factory.php	/^    public static function make(string $name)$/;"	f	language:PHP
FuzzyMatcher	.config/nvim/plugged/phpcd.vim/php/Matcher/FuzzyMatcher.php	/^class FuzzyMatcher implements Matcher$/;"	c	language:PHP
match	.config/nvim/plugged/phpcd.vim/php/Matcher/FuzzyMatcher.php	/^    public function match($pattern, $subject)$/;"	f	language:PHP
chars	.config/nvim/plugged/phpcd.vim/php/Matcher/FuzzyMatcher.php	/^        $chars = str_split($pattern);$/;"	v	language:PHP
parts	.config/nvim/plugged/phpcd.vim/php/Matcher/FuzzyMatcher.php	/^        $parts = ['\/.*'];$/;"	v	language:PHP
pattern	.config/nvim/plugged/phpcd.vim/php/Matcher/FuzzyMatcher.php	/^        $pattern = implode($parts);$/;"	v	language:PHP
Matcher	.config/nvim/plugged/phpcd.vim/php/Matcher/Matcher.php	/^interface Matcher$/;"	i	language:PHP
match	.config/nvim/plugged/phpcd.vim/php/Matcher/Matcher.php	/^    function match($pattern, $target);$/;"	f	language:PHP
PrefixMatcher	.config/nvim/plugged/phpcd.vim/php/Matcher/PrefixMatcher.php	/^class PrefixMatcher implements Matcher$/;"	c	language:PHP
match	.config/nvim/plugged/phpcd.vim/php/Matcher/PrefixMatcher.php	/^    public function match($pattern, $target)$/;"	f	language:PHP
PHPCD	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^class PHPCD implements RpcHandler$/;"	c	language:PHP
disable_modifier	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private $disable_modifier;$/;"	v	language:PHP
matcher	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private $matcher;$/;"	v	language:PHP
logger	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private $logger;$/;"	v	language:PHP
server	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private $server;$/;"	v	language:PHP
root	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private $root;$/;"	v	language:PHP
modifier_symbols	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private $modifier_symbols = [$/;"	v	language:PHP
modifier_symbols	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private $modifier_symbols = [$/;"	v	language:PHP
primitive_types	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private $primitive_types = [$/;"	v	language:PHP
primitive_types	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private $primitive_types = [$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    public function __construct($root, Logger $logger, $disable_modifier = 0)$/;"	f	language:PHP
disable_modifier	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    public function __construct($root, Logger $logger, $disable_modifier = 0)$/;"	v	language:PHP
logger	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $this->logger = $logger;$/;"	v	language:PHP
root	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $this->root = $root;$/;"	v	language:PHP
disable_modifier	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $this->disable_modifier = $disable_modifier;$/;"	v	language:PHP
matcher	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $this->matcher = Matcher\\Factory::make('prefix');$/;"	v	language:PHP
setServer	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    public function setServer(RpcServer $server)$/;"	f	language:PHP
server	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $this->server = $server;$/;"	v	language:PHP
setMatchType	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    public function setMatchType($type)$/;"	f	language:PHP
matcher	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $this->matcher = Matcher\\Factory::make($type);$/;"	v	language:PHP
translateStaticMode	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function translateStaticMode($mode)$/;"	f	language:PHP
map	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $map = [$/;"	v	language:PHP
info	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    public function info($class_name, $pattern, $static_mode, $public_only, $path)$/;"	f	language:PHP
static_mode	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $static_mode = $this->translateStaticMode($static_mode);$/;"	v	language:PHP
method	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^     * Fetch function or class method's source file path$/;"	c	language:PHP
or	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^     * Fetch function or class method's source file path$/;"	f	language:PHP
name	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^     * @param string $class_name class name$/;"	c	language:PHP
name	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^     * @param string $method_name method or function name$/;"	f	language:PHP
location	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    public function location($class_name, $method_name, $path)$/;"	f	language:PHP
reflection	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $reflection = $this->reflectClass($class_name, $path);$/;"	v	language:PHP
reflection	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                    $reflection = $reflection->getMethod($method_name);$/;"	v	language:PHP
line	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                    $line = $this->getPropertyDefLine($reflection, $method_name);$/;"	v	language:PHP
reflection	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $reflection = $this->reflectFunction($method_name, $path);$/;"	v	language:PHP
getPropertyDefLine	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getPropertyDefLine($classReflection, $property)$/;"	f	language:PHP
class	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $class = new \\SplFileObject($classReflection->getFileName());$/;"	v	language:PHP
pattern	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $pattern = '\/(private|protected|public|var)\\s\\$' . $property . '\/x';$/;"	v	language:PHP
line	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        foreach ($class as $line => $content) {$/;"	v	language:PHP
getConstPath	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getConstPath($const_name, $reflection)$/;"	f	language:PHP
origin	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $origin = $path = $reflection->getFileName();$/;"	v	language:PHP
origin_reflection	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $origin_reflection = $reflection;$/;"	v	language:PHP
path	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $path = $reflection->getFileName();$/;"	v	language:PHP
interfaces	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $interfaces = $origin_reflection->getInterfaces();$/;"	v	language:PHP
path	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                    $path = $interface->getFileName();$/;"	v	language:PHP
method	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^     * Fetch function, class method or class attribute's docblock$/;"	c	language:PHP
set	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^     * @param string $class_name for function set this args to empty$/;"	f	language:PHP
doc	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function doc($class_name, $name, $is_method = true, $path = null)$/;"	f	language:PHP
is_method	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function doc($class_name, $name, $is_method = true, $path = null)$/;"	v	language:PHP
docFunction	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function docFunction($name, $path)$/;"	f	language:PHP
nsuse	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $nsuse = $this->nsuse($path);$/;"	v	language:PHP
_name	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $_name = $nsuse['alias'][$name];$/;"	v	language:PHP
_name	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $_name = $nsuse['namespace'].'\\\\'.$name;$/;"	v	language:PHP
name	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $name = $_name;$/;"	v	language:PHP
reflection	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $reflection = $this->reflectFunction($name, $path);$/;"	v	language:PHP
doc	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $doc = $reflection->getDocComment();$/;"	v	language:PHP
path	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $path = $reflection->getFileName();$/;"	v	language:PHP
docClass	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function docClass($class_name, $name, $is_method, $path)$/;"	f	language:PHP
reflection_class	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $reflection_class = $this->reflectClass($class_name, $path);$/;"	v	language:PHP
reflection	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $reflection = null;$/;"	v	language:PHP
reflection	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $reflection = $reflection_class->getMethod($name);$/;"	v	language:PHP
methods	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $methods = $this->getPseudoMethods($reflection_class, $name);$/;"	v	language:PHP
method	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $method = $methods[$name];$/;"	v	language:PHP
reflection	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $reflection = $reflection_class->getProperty($name);$/;"	v	language:PHP
properties	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $properties = $this->getPseudoProperties($reflection_class, $name);$/;"	v	language:PHP
property	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $property = $properties[$name];$/;"	v	language:PHP
doc	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $doc = $reflection->getDocComment();$/;"	v	language:PHP
reflection	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $reflection = $this->getReflectionFromInheritDoc($reflection_class, $name);$/;"	v	language:PHP
doc	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $doc = $reflection->getDocComment();$/;"	v	language:PHP
path	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $path = $reflection_class->getFileName();$/;"	v	language:PHP
path	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $path = $reflection->getDeclaringClass()->getFileName();$/;"	v	language:PHP
getReflectionFromInheritDoc	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getReflectionFromInheritDoc($reflection_class, $method_name)$/;"	f	language:PHP
interfaces	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $interfaces = $reflection_class->getInterfaces();$/;"	v	language:PHP
reflection_method	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $reflection_method = $reflection_class->getMethod($method_name);$/;"	v	language:PHP
parent_class	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $parent_class = $reflection_class->getParentClass();$/;"	v	language:PHP
reflection_method	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $reflection_method = $parent_class->getMethod($method_name);$/;"	v	language:PHP
doc	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $doc = $reflection_method->getDocComment();$/;"	v	language:PHP
reflection_method	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $reflection_method = $this->getReflectionFromInheritDoc($parent_class, $method_name);$/;"	v	language:PHP
nsuse	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    public function nsuse($path)$/;"	f	language:PHP
s	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $s = Parser::getClassNameEx($path);$/;"	v	language:PHP
trim	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private static function trim($str)$/;"	f	language:PHP
method	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^     * Fetch the function or class method return value's type$/;"	c	language:PHP
or	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^     * Fetch the function or class method return value's type$/;"	f	language:PHP
functype	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    public function functype($class_name, $name, $path)$/;"	f	language:PHP
method	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $method = $class_name ? "$class_name::$name" : $name;$/;"	v	language:PHP
method	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $method = trim($method, '\\\\');$/;"	v	language:PHP
method_return	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $method_return = require __DIR__.'\/method_return.php';$/;"	v	language:PHP
type	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $type = $this->typeByReturnType($class_name, $name, $path);$/;"	v	language:PHP
method	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^     * Fetch the function or class method parameter type by type hint or docblock$/;"	c	language:PHP
or	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^     * Fetch the function or class method parameter type by type hint or docblock$/;"	f	language:PHP
argtype	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    public function argtype($class_name, $func_name, $name, $path)$/;"	f	language:PHP
name	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $name = substr($name, 1);$/;"	v	language:PHP
type	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $type = $this->argTypeByHint($class_name, $func_name, $name, $path);$/;"	v	language:PHP
argTypeByHint	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function argTypeByHint($class_name, $func_name, $name, $path)$/;"	f	language:PHP
reflection	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $reflection = $this->reflectClass($class_name, $path);$/;"	v	language:PHP
reflection	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $reflection = $reflection->getMethod($func_name);$/;"	v	language:PHP
reflection	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $reflection = $this->reflectFunction($func_name, $path);$/;"	v	language:PHP
argTypeByDoc	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function argTypeByDoc($path, $doc, $name)$/;"	f	language:PHP
has_doc	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $has_doc = preg_match('\/@param\\s+(\\S+)\\s+\\$'.$name.'\/m', $doc, $matches);$/;"	v	language:PHP
attribute	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^     * Fetch class attribute's type by @var annotation$/;"	c	language:PHP
proptype	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    public function proptype($class_name, $name, $path)$/;"	f	language:PHP
types	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $types = $this->typeByDoc($path, $doc);$/;"	v	language:PHP
types	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $types = $this->proptypeByMethod($class_name, $name, '__construct', $path);$/;"	v	language:PHP
setter	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $setter = 'set'.ucfirst($name);$/;"	v	language:PHP
types	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $types = $this->proptypeByMethod($class_name, $name, $setter, $path);$/;"	v	language:PHP
proptypeByMethod	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function proptypeByMethod($class_name, $name, $method, $path)$/;"	f	language:PHP
reflection	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $reflection = $this->reflectClass($class_name, $path);$/;"	v	language:PHP
constructor	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $constructor = $reflection->getMethod($method);$/;"	v	language:PHP
path	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $path = $constructor->getFileName();$/;"	v	language:PHP
start_line	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $start_line = $constructor->getStartLine();$/;"	v	language:PHP
end_line	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $end_line = $constructor->getEndLine();$/;"	v	language:PHP
lines	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $lines = file($path);$/;"	v	language:PHP
body_lines	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $body_lines = array_slice($lines, $start_line, $end_line - $start_line);$/;"	v	language:PHP
foo	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                if ($matches[2][0] == 'n') { \/\/ $this->foo = new Foo;$/;"	v	language:PHP
types	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                    $types = [$matches[3]];$/;"	v	language:PHP
value_name	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $value_name = $matches[3];$/;"	v	language:PHP
value_type	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                        $value_type = (string) $parameter->getType();$/;"	v	language:PHP
typeByReturnType	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function typeByReturnType($class_name, $name, $path)$/;"	f	language:PHP
reflection	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $reflection = $this->reflectClass($class_name, $path);$/;"	v	language:PHP
reflection	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $reflection = $reflection->getMethod($name);$/;"	v	language:PHP
reflection	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $reflection = $this->reflectFunction($name, $path);$/;"	v	language:PHP
type	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $type = (string) $reflection->getReturnType();$/;"	v	language:PHP
type	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $type = $class_name;$/;"	v	language:PHP
typeByDoc	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function typeByDoc($path, $doc)$/;"	f	language:PHP
has_doc	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $has_doc = preg_match('\/@(return|var)\\s+(\\S+)\/m', $doc, $matches);$/;"	v	language:PHP
fixRelativeType	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function fixRelativeType($path, $names)$/;"	f	language:PHP
nsuse	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $nsuse = null;$/;"	v	language:PHP
types	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $types = [];$/;"	v	language:PHP
nsuse	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $nsuse = $this->nsuse($path);$/;"	v	language:PHP
type	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $type = $nsuse['namespace'] . '\\\\' . $nsuse['class'];$/;"	v	language:PHP
parts	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $parts = explode('\\\\', $type);$/;"	v	language:PHP
alias	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $alias = array_shift($parts);$/;"	v	language:PHP
type	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                    $type = $nsuse['imports'][$alias];$/;"	v	language:PHP
type	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                        $type = $type . '\\\\' . join('\\\\', $parts);$/;"	v	language:PHP
type	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                    $type = $nsuse['namespace'] . '\\\\' . $type;$/;"	v	language:PHP
type	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                    $type = '\\\\' . $type;$/;"	v	language:PHP
arrayUnique	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private static function arrayUnique($array)$/;"	f	language:PHP
_	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $_ = [];$/;"	v	language:PHP
reflectFunction	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function reflectFunction($name, $path)$/;"	f	language:PHP
nsuse	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $nsuse = $this->nsuse($path);$/;"	v	language:PHP
_name	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $_name = $nsuse['alias'][$name];$/;"	v	language:PHP
name	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $name = $_name;$/;"	v	language:PHP
_name	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $_name = $nsuse['namespace'].'\\\\'.$name;$/;"	v	language:PHP
name	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $name = $_name;$/;"	v	language:PHP
reflection	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $reflection = new \\ReflectionFunction($name);$/;"	v	language:PHP
ast_locator	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $ast_locator = (new BetterReflection())->astLocator();$/;"	v	language:PHP
source_locator	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $source_locator = new SingleFileSourceLocator($path, $ast_locator);$/;"	v	language:PHP
class_reflector	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $class_reflector = new ClassReflector($source_locator);$/;"	v	language:PHP
reflector	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $reflector = new FunctionReflector($source_locator, $class_reflector);$/;"	v	language:PHP
reflection	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $reflection = $reflector->reflect($name);$/;"	v	language:PHP
reflectClass	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function reflectClass($class_name, $path)$/;"	f	language:PHP
reflection	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $reflection = new \\ReflectionClass($class_name);$/;"	v	language:PHP
ast_locator	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $ast_locator = (new BetterReflection())->astLocator();$/;"	v	language:PHP
source_locator	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $source_locator = new SingleFileSourceLocator($path, $ast_locator);$/;"	v	language:PHP
internal_locator	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $internal_locator = new PhpInternalSourceLocator($ast_locator);$/;"	v	language:PHP
autoload_locator	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $autoload_locator = new AutoloadSourceLocator($ast_locator);$/;"	v	language:PHP
locator	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $locator = new AggregateSourceLocator([$source_locator, $autoload_locator, $internal_locator]);$/;"	v	language:PHP
reflector	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $reflector = new ClassReflector($locator);$/;"	v	language:PHP
reflection	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $reflection = $reflector->reflect($class_name);$/;"	v	language:PHP
classInfo	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function classInfo($class_name, $pattern, $is_static, $public_only, $path)$/;"	f	language:PHP
items	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $items = [];$/;"	v	language:PHP
reflection	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $reflection = $this->reflectClass($class_name, $path);$/;"	v	language:PHP
name	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                foreach ($this->getAvailableConstants($reflection, $pattern) as $name => $value) {$/;"	v	language:PHP
value	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                            $value = '[...]';$/;"	v	language:PHP
methods	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $methods = $this->getAvailableMethods($reflection, $is_static, $public_only, $pattern);$/;"	v	language:PHP
properties	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $properties = $this->getAvailableProperties($reflection, $is_static, $public_only, $pattern);$/;"	v	language:PHP
pseudo_methods	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $pseudo_methods = $this->getPseudoMethods($reflection, $pattern);$/;"	v	language:PHP
name	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            foreach ($pseudo_methods as $name => $info) {$/;"	v	language:PHP
abbr	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                    $abbr = sprintf("%s(%s)", $name,  $info['params']);$/;"	v	language:PHP
abbr	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                    $abbr = sprintf("%3s %s(%s)", '+', $name, $info['params']);$/;"	v	language:PHP
pseudo_properties	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $pseudo_properties = $this->getPseudoProperties($reflection, $pattern);$/;"	v	language:PHP
name	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            foreach ($pseudo_properties as $name => $info) {$/;"	v	language:PHP
functionOrConstantInfo	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function functionOrConstantInfo($pattern)$/;"	f	language:PHP
items	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $items = [];$/;"	v	language:PHP
funcs	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $funcs = get_defined_functions();$/;"	v	language:PHP
info	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $info = $this->getFunctionInfo($func, $pattern);$/;"	v	language:PHP
info	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $info = $this->getFunctionInfo($func, $pattern);$/;"	v	language:PHP
getConstantsInfo	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getConstantsInfo($pattern)$/;"	f	language:PHP
items	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $items = [];$/;"	v	language:PHP
name	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        foreach (get_defined_constants() as $name => $value) {$/;"	v	language:PHP
value	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $value = '[...]';$/;"	v	language:PHP
name	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                'abbr' => "@ $name = $value",$/;"	v	language:PHP
classes	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    public function classes($pattern)$/;"	f	language:PHP
items	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $items = [];$/;"	v	language:PHP
reflection	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $reflection = new \\ReflectionClass($name);$/;"	v	language:PHP
item	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $item = [$/;"	v	language:PHP
getFunctionInfo	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getFunctionInfo($name, $pattern)$/;"	f	language:PHP
reflection	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $reflection = new \\ReflectionFunction($name);$/;"	v	language:PHP
params	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $params = array_map(function ($param) {$/;"	v	language:PHP
getPropertyInfo	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getPropertyInfo($property)$/;"	f	language:PHP
name	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $name = $property->getName();$/;"	v	language:PHP
modifier	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $modifier = $this->getModifiers($property);$/;"	v	language:PHP
name	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $name = '$'.$name;$/;"	v	language:PHP
formatParamInfo	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function formatParamInfo($param)$/;"	f	language:PHP
hintedClass	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $hintedClass = $param->getClass();$/;"	v	language:PHP
paramString	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $paramString = '';$/;"	v	language:PHP
default	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $default = $param->getDefaultValueConstantName();$/;"	v	language:PHP
default	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $default = $param->getDefaultValue();$/;"	v	language:PHP
default	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $default = json_encode($default);$/;"	v	language:PHP
getExtraMethodInfo	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getExtraMethodInfo($method)$/;"	f	language:PHP
name	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $name = $method->getName();$/;"	v	language:PHP
declaringClass	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $declaringClass = $method->getDeclaringClass()->getName();$/;"	v	language:PHP
visibility	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $visibility  = $method->isPrivate()   ? 'private'$/;"	v	language:PHP
accessMode	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $accessMode = $method->isStatic() ? "::" : "->";$/;"	v	language:PHP
paramsInfo	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $paramsInfo = [];$/;"	v	language:PHP
returnType	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $returnType = '';$/;"	v	language:PHP
returnType	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $returnType = " : " . (string)$method->getReturnType();$/;"	v	language:PHP
docblock	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $docblock = $this->clearDoc($method->getDocComment());$/;"	v	language:PHP
getMethodInfo	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getMethodInfo($method)$/;"	f	language:PHP
name	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $name = $method->getName();$/;"	v	language:PHP
params	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $params = array_map(function ($param) {$/;"	v	language:PHP
modifier	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $modifier = $this->getModifiers($method);$/;"	v	language:PHP
abbr	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $abbr = sprintf("%3s %s(%s)", $modifier, $name, join(', ', $params));$/;"	v	language:PHP
abbr	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $abbr = sprintf("%s(%s)", $name, join(', ', $params));$/;"	v	language:PHP
getModifiers	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getModifiers($reflection)$/;"	f	language:PHP
signs	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $signs = '';$/;"	v	language:PHP
modifiers	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $modifiers = $reflection->getModifiers();$/;"	v	language:PHP
symbols	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $symbols = $this->modifier_symbols;$/;"	v	language:PHP
number	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        foreach ($symbols as $number => $sign) {$/;"	v	language:PHP
clearDoc	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function clearDoc($doc)$/;"	f	language:PHP
doc	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $doc = preg_replace('\/[ \\t]*\\* ?\/m','', $doc);$/;"	v	language:PHP
psr4ns	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    public function psr4ns($path)$/;"	f	language:PHP
dir	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $dir = dirname($path);$/;"	v	language:PHP
composer_path	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $composer_path = $this->root . '\/composer.json';$/;"	v	language:PHP
composer	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $composer = json_decode(file_get_contents($composer_path), true);$/;"	v	language:PHP
list	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $list = (array) $composer['autoload']['psr-4'];$/;"	v	language:PHP
list	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $list = [];$/;"	v	language:PHP
dev_list	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $dev_list = (array) $composer['autoload-dev']['psr-4'];$/;"	v	language:PHP
dev_list	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $dev_list = [];$/;"	v	language:PHP
namespace	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        foreach ($dev_list as $namespace => $paths) {$/;"	v	language:PHP
namespaces	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $namespaces = [];$/;"	v	language:PHP
namespace	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        foreach ($list as $namespace => $paths) {$/;"	v	language:PHP
path	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $path = realpath($this->root.'\/'.$path);$/;"	v	language:PHP
sub_path	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                    $sub_path = str_replace($path, '', $dir);$/;"	v	language:PHP
sub_path	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                    $sub_path = str_replace('\/', '\\\\', $sub_path);$/;"	v	language:PHP
sub_namespace	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                    $sub_namespace = trim($sub_path, '\\\\');$/;"	v	language:PHP
sub_namespace	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                        $sub_namespace = '\\\\' . $sub_namespace;$/;"	v	language:PHP
keyword	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    public function keyword($pattern)$/;"	f	language:PHP
keywords	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $keywords = require __DIR__.'\/keyword.php';$/;"	v	language:PHP
items	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $items = [];$/;"	v	language:PHP
classmap	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    public function classmap($pattern)$/;"	f	language:PHP
use_fqdn	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $use_fqdn = isset($pattern[0]) && $pattern[0] === "\\\\";$/;"	v	language:PHP
pattern	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $pattern = trim($pattern, "\\\\");$/;"	v	language:PHP
classmap_file	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $classmap_file = $this->root.'\/vendor\/composer\/autoload_classmap.php';$/;"	v	language:PHP
defined	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $defined = array_merge(get_declared_traits(),$/;"	v	language:PHP
_classmap	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $_classmap = require $classmap_file;$/;"	v	language:PHP
defined	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $defined = array_merge($defined, array_keys($_classmap));$/;"	v	language:PHP
classmap	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $classmap = [];$/;"	v	language:PHP
name	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^                $name = "\\\\".$name;$/;"	v	language:PHP
getAvailableConstants	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getAvailableConstants($reflection, $pattern)$/;"	f	language:PHP
constants	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $constants = $reflection->getConstants();$/;"	v	language:PHP
name	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        foreach ($constants as $name => $value) {$/;"	v	language:PHP
getAvailableMethods	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getAvailableMethods($reflection, $static, $public_only, $pattern)$/;"	f	language:PHP
methods	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $methods = $reflection->getMethods();$/;"	v	language:PHP
key	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        foreach ($methods as $key => $method) {$/;"	v	language:PHP
getAvailableProperties	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getAvailableProperties($reflection, $static, $public_only, $pattern)$/;"	f	language:PHP
properties	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $properties = $reflection->getProperties();$/;"	v	language:PHP
key	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        foreach ($properties as $key => $property) {$/;"	v	language:PHP
getPseudoProperties	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getPseudoProperties($reflection, $pattern)$/;"	f	language:PHP
properties	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $properties = [];$/;"	v	language:PHP
file_name	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        foreach ($this->getAllClassDocComments($reflection) as $file_name => $doc) {$/;"	v	language:PHP
has_doc	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $has_doc = preg_match_all('\/@property(|-read|-write)\\s+(?<types>\\S+)\\s+\\$?(?<names>[a-zA-Z0-9_$]+)\/mi', $doc, $matches);$/;"	v	language:PHP
idx	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            foreach ($matches['names'] as $idx => $name) {$/;"	v	language:PHP
getPseudoMethods	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getPseudoMethods($reflection, $pattern)$/;"	f	language:PHP
methods	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $methods = [];$/;"	v	language:PHP
file_name	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        foreach ($this->getAllClassDocComments($reflection) as $file_name => $doc) {$/;"	v	language:PHP
has_doc	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $has_doc = preg_match_all('\/@method\\s+(?<statics>static)?\\s*(?<types>\\S+)\\s+(?<names>[a-zA-Z0-9_$]+)\\((?<params>.*)\\)\/mi', $doc, $matches);$/;"	v	language:PHP
idx	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            foreach ($matches['names'] as $idx => $name) {$/;"	v	language:PHP
getAllClassDocComments	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getAllClassDocComments($reflection)$/;"	f	language:PHP
doc	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^        $doc = [];$/;"	v	language:PHP
file_name	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $file_name = $reflection->getFileName();$/;"	v	language:PHP
reflection	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^            $reflection = $reflection->getParentClass();$/;"	v	language:PHP
filter	.config/nvim/plugged/phpcd.vim/php/PHPCD.php	/^    private function filter($reflection, $element, $static, $public_only, $pattern)$/;"	f	language:PHP
PHPID	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^class PHPID implements RpcHandler$/;"	c	language:PHP
server	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^    private $server;$/;"	v	language:PHP
logger	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^    private $logger;$/;"	v	language:PHP
root	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^    private $root;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^    public function __construct($root, Logger $logger)$/;"	f	language:PHP
root	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^        $this->root = $root;$/;"	v	language:PHP
logger	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^        $this->logger = $logger;$/;"	v	language:PHP
setServer	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^    public function setServer(RpcServer $server)$/;"	f	language:PHP
server	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^        $this->server = $server;$/;"	v	language:PHP
update	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^    public function update($class_name)$/;"	f	language:PHP
_update	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^    private function _update($class_name, $parents, $interfaces)$/;"	f	language:PHP
or	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^     * @param string $name name of interface or abstract class$/;"	i	language:PHP
name	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^     *   'full class name 1',$/;"	c	language:PHP
name	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^     *   'full class name 2',$/;"	c	language:PHP
ls	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^    public function ls($name, $is_abstract_class = false)$/;"	f	language:PHP
is_abstract_class	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^    public function ls($name, $is_abstract_class = false)$/;"	v	language:PHP
base_path	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^        $base_path = $is_abstract_class ? $this->getIntefacesDir()$/;"	v	language:PHP
path	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^        $path = $base_path . '\/' . $this->getIndexFileName($name);$/;"	v	language:PHP
list	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^        $list = json_decode(file_get_contents($path));$/;"	v	language:PHP
and	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^     * Fetch and save class's interface and parent info$/;"	i	language:PHP
index	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^    public function index()$/;"	f	language:PHP
files	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^        $files = $this->searchPhpFileList($this->root);$/;"	v	language:PHP
count	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^        $count = count($files);$/;"	v	language:PHP
last	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^        $last = 0;$/;"	v	language:PHP
name	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^             $name = Parser::getClassName($files[$i]);$/;"	v	language:PHP
interfaces	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^                 $interfaces = class_implements($name) ?: [];$/;"	v	language:PHP
parents	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^                 $parents = class_parents($name) ?: [];$/;"	v	language:PHP
percent	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^             $percent = number_format(($i + 1) \/ $count * 100);$/;"	v	language:PHP
last	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^                 $last = $percent;$/;"	v	language:PHP
searchPhpFileList	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^    public static function searchPhpFileList($folder)$/;"	f	language:PHP
iterator	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^        $iterator = new \\RecursiveDirectoryIterator($folder);$/;"	v	language:PHP
iterator	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^        $iterator = new \\RecursiveIteratorIterator($iterator);$/;"	v	language:PHP
iterator	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^        $iterator = new \\RegexIterator($iterator, '\/\\.php$\/i', \\RegexIterator::MATCH);$/;"	v	language:PHP
files	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^        $files = [];$/;"	v	language:PHP
getIndexDir	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^    private function getIndexDir()$/;"	f	language:PHP
getIntefacesDir	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^    private function getIntefacesDir()$/;"	f	language:PHP
getExtendsDir	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^    private function getExtendsDir()$/;"	f	language:PHP
initIndexDir	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^    private function initIndexDir()$/;"	f	language:PHP
extends_dir	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^        $extends_dir = $this->getExtendsDir();$/;"	v	language:PHP
interfaces_dir	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^        $interfaces_dir = $this->getIntefacesDir();$/;"	v	language:PHP
updateParentIndex	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^    private function updateParentIndex($parent, $child)$/;"	f	language:PHP
index_file	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^        $index_file = $this->getExtendsDir() . '\/' . $this->getIndexFileName($parent);$/;"	v	language:PHP
updateInterfaceIndex	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^    private function updateInterfaceIndex($interface, $implementation)$/;"	f	language:PHP
index_file	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^        $index_file = $this->getIntefacesDir() . '\/' . $this->getIndexFileName($interface);$/;"	v	language:PHP
saveChild	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^    private function saveChild($index_file, $child)$/;"	f	language:PHP
index_directory	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^        $index_directory = dirname($index_file);$/;"	v	language:PHP
childs	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^            $childs = json_decode(file_get_contents($index_file));$/;"	v	language:PHP
childs	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^            $childs = [];$/;"	v	language:PHP
childs	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^        $childs = array_unique($childs);$/;"	v	language:PHP
getIndexFileName	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^    private function getIndexFileName($name)$/;"	f	language:PHP
getClassInfo	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^    private function getClassInfo($name) {$/;"	f	language:PHP
reflection	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^            $reflection = new \\ReflectionClass($name);$/;"	v	language:PHP
parent	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^            $parent = $reflection->getParentClass();$/;"	v	language:PHP
parent	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^                $parent = $parent->getName();$/;"	v	language:PHP
interfaces	.config/nvim/plugged/phpcd.vim/php/PHPID.php	/^            $interfaces = array_keys($reflection->getInterfaces());$/;"	v	language:PHP
Parser	.config/nvim/plugged/phpcd.vim/php/Parser.php	/^class Parser$/;"	c	language:PHP
getClassName	.config/nvim/plugged/phpcd.vim/php/Parser.php	/^    public static function getClassName($path)$/;"	f	language:PHP
visitor	.config/nvim/plugged/phpcd.vim/php/Parser.php	/^        $visitor = new ClassNameVisitor;$/;"	v	language:PHP
getClassNameEx	.config/nvim/plugged/phpcd.vim/php/Parser.php	/^    public static function getClassNameEx($path)$/;"	f	language:PHP
visitor	.config/nvim/plugged/phpcd.vim/php/Parser.php	/^        $visitor = new ClassNameExVisitor;$/;"	v	language:PHP
visit	.config/nvim/plugged/phpcd.vim/php/Parser.php	/^    private static function visit($path, $visitor)$/;"	f	language:PHP
parser	.config/nvim/plugged/phpcd.vim/php/Parser.php	/^        $parser = (new \\PhpParser\\ParserFactory)->create(\\PhpParser\\ParserFactory::PREFER_PHP7);$/;"	v	language:PHP
traverser	.config/nvim/plugged/phpcd.vim/php/Parser.php	/^        $traverser = new \\PhpParser\\NodeTraverser;$/;"	v	language:PHP
stmts	.config/nvim/plugged/phpcd.vim/php/Parser.php	/^            $stmts = $parser->parse(file_get_contents($path));$/;"	v	language:PHP
stmts	.config/nvim/plugged/phpcd.vim/php/Parser.php	/^            $stmts = $traverser->traverse($stmts);$/;"	v	language:PHP
root	.config/nvim/plugged/phpcd.vim/php/main.php	/^$root   = $argv[1];$/;"	v	language:PHP
messenger	.config/nvim/plugged/phpcd.vim/php/main.php	/^$messenger = $argv[2];$/;"	v	language:PHP
autoload_file	.config/nvim/plugged/phpcd.vim/php/main.php	/^$autoload_file = $argv[3];$/;"	v	language:PHP
disable_modifier	.config/nvim/plugged/phpcd.vim/php/main.php	/^$disable_modifier = $argv[4];$/;"	v	language:PHP
log_path	.config/nvim/plugged/phpcd.vim/php/main.php	/^$log_path = getenv('HOME') . '\/.phpcd.log';$/;"	v	language:PHP
logger	.config/nvim/plugged/phpcd.vim/php/main.php	/^$logger = new Logger('PHPCD');$/;"	v	language:PHP
messenger	.config/nvim/plugged/phpcd.vim/php/main.php	/^    $messenger = new JsonMessenger(new StdIo());$/;"	v	language:PHP
messenger	.config/nvim/plugged/phpcd.vim/php/main.php	/^    $messenger = new MsgpackMessenger(new StdIo());$/;"	v	language:PHP
server	.config/nvim/plugged/phpcd.vim/php/main.php	/^$server = new ForkServer($messenger, new PHPCD\\PHPCD($root, $logger, $disable_modifier));$/;"	v	language:PHP
Alpha	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/A/Alpha.php	/^class Alpha$/;"	c	language:PHP
staticVar	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/A/Alpha.php	/^    public static $staticVar;$/;"	v	language:PHP
pubvar	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/A/Alpha.php	/^    public $pubvar;$/;"	v	language:PHP
privateKey	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/A/Alpha.php	/^    private $privateKey;$/;"	v	language:PHP
setPrivateKey	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/A/Alpha.php	/^    public function setPrivateKey($privateKey)$/;"	f	language:PHP
privateKey	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/A/Alpha.php	/^        $this->privateKey = $privateKey;$/;"	v	language:PHP
ExpectClassConstantOnly	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/B/C/ExpectClassConstantOnly.php	/^class ExpectClassConstantOnly$/;"	c	language:PHP
xxx	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/B/C/ExpectClassConstantOnly.php	/^    public function xxx()$/;"	f	language:PHP
ExpectLocate	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/B/C/ExpectLocate.php	/^class ExpectLocate$/;"	c	language:PHP
xxx	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/B/C/ExpectLocate.php	/^    public function xxx()$/;"	f	language:PHP
a	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/B/C/ExpectLocate.php	/^        $a = new Same();$/;"	v	language:PHP
b	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/B/C/ExpectLocate.php	/^        $b = new BSame();$/;"	v	language:PHP
ExpectPublicVariable	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/B/C/ExpectPublicVariable.php	/^class ExpectPublicVariable$/;"	c	language:PHP
x	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/B/C/ExpectPublicVariable.php	/^    public function x()$/;"	f	language:PHP
alpha	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/B/C/ExpectPublicVariable.php	/^        $alpha = new \\PHPCD\\A\\Alpha;$/;"	v	language:PHP
class_name	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/B/C/ExpectPublicVariable.php	/^\/\/ classInfo $class_name == parent$/;"	v	language:PHP
Same	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/SameName/A/Same.php	/^class Same extends SuperSame$/;"	c	language:PHP
instance	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/SameName/A/Same.php	/^    protected static $instance;$/;"	v	language:PHP
pa	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/SameName/A/Same.php	/^    public $pa;$/;"	v	language:PHP
mm	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/SameName/A/Same.php	/^    function mm()$/;"	f	language:PHP
na	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/SameName/A/Same.php	/^    function na()$/;"	f	language:PHP
SuperSame	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/SameName/A/SuperSame.php	/^abstract class SuperSame$/;"	c	language:PHP
getInstance	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/SameName/A/SuperSame.php	/^    public static function getInstance()$/;"	f	language:PHP
mm	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/SameName/A/SuperSame.php	/^    abstract function mm();$/;"	f	language:PHP
Same	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/SameName/B/Same.php	/^class Same$/;"	c	language:PHP
pa	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/SameName/B/Same.php	/^    public $pa;$/;"	v	language:PHP
na	.config/nvim/plugged/phpcd.vim/tests/fixtures/PHPCD/SameName/B/Same.php	/^    function na()$/;"	f	language:PHP
align-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.align-3 {$/;"	c	language:css
animations-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.animations-1 {$/;"	c	language:css
backgrounds-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.backgrounds-3 {$/;"	c	language:css
backgrounds-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.backgrounds-4 {$/;"	c	language:css
box-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.box-3 {$/;"	c	language:css
break-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.break-3 {$/;"	c	language:css
break-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.break-4 {$/;"	c	language:css
cascade-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.cascade-3 {$/;"	c	language:css
cascade-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.cascade-4 {$/;"	c	language:css
color-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.color-3 {$/;"	c	language:css
color-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.color-4 {$/;"	c	language:css
compositing-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.compositing-1 {$/;"	c	language:css
conditional-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^  .conditional-3 {$/;"	c	language:css
contain-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.contain-1 {$/;"	c	language:css
content-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.content-3 {$/;"	c	language:css
cssom-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.cssom-1 {$/;"	c	language:css
cssom-view-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.cssom-view-1 {$/;"	c	language:css
device-adapt-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.device-adapt-1 {$/;"	c	language:css
display-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.display-3 {$/;"	c	language:css
easing-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.easing-1 {$/;"	c	language:css
exclusions-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.exclusions-3 {$/;"	c	language:css
fill-stroke-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.fill-stroke-3 {$/;"	c	language:css
filter-effects-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.filter-effects-1 {$/;"	c	language:css
flexbox-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.flexbox-1 {$/;"	c	language:css
font-loading-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.font-loading-3 {$/;"	c	language:css
fonts-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.fonts-3 {$/;"	c	language:css
fonts-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.fonts-4 {$/;"	c	language:css
gcpm-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.gcpm-3::footnote-call,$/;"	c	language:css
gcpm-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.gcpm-3::footnote-marker {$/;"	c	language:css
geometry-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.geometry-1 {$/;"	c	language:css
grid-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.grid-1 {$/;"	c	language:css
grid-2	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.grid-2 {$/;"	c	language:css
html5	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.html5,$/;"	c	language:css
template	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^template {$/;"	t	language:css
images-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.images-3 {$/;"	c	language:css
images-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.images-4 {$/;"	c	language:css
inline-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.inline-3 {$/;"	c	language:css
layout-api-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.layout-api-1 {$/;"	c	language:css
line-grid-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.line-grid-1 {$/;"	c	language:css
lists-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.lists-3::marker {$/;"	c	language:css
logical-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.logical-1 {$/;"	c	language:css
masking-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.masking-1,$/;"	c	language:css
mask	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^mask {$/;"	t	language:css
motion-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.motion-1 {$/;"	c	language:css
multicol-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.multicol-1 {$/;"	c	language:css
namespace-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.namespace-3 {$/;"	c	language:css
overflow-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.overflow-3 {$/;"	c	language:css
overflow-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.overflow-4::nth-fragment(1) {$/;"	c	language:css
page-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.page-3 {$/;"	c	language:css
page-floats-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.page-floats-3 {$/;"	c	language:css
paint-api-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.paint-api-1 {$/;"	c	language:css
pointerevents	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.pointerevents {$/;"	c	language:css
position-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.position-3 {$/;"	c	language:css
properties-values-api-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.properties-values-api-1 {$/;"	c	language:css
pseudo-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.pseudo-4::inactive-selection,$/;"	c	language:css
pseudo-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.pseudo-4::spelling-error,$/;"	c	language:css
pseudo-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.pseudo-4::grammer-error {$/;"	c	language:css
regions-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.regions-1:region {$/;"	c	language:css
rhythm-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.rhythm-1 {$/;"	c	language:css
round-display-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^  .round-display-1 {$/;"	c	language:css
ruby-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.ruby-1 {$/;"	c	language:css
scoping-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.scoping-1:scope-context div,$/;"	c	language:css
scoping-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.scoping-1:host,$/;"	c	language:css
scoping-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.scoping-1:host(.foo),$/;"	c	language:css
scoping-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.scoping-1:host-context,$/;"	c	language:css
scoping-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.scoping-1::shadow,$/;"	c	language:css
scoping-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.scoping-1::content,$/;"	c	language:css
scoping-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.scoping-1 \/deep\/ span {$/;"	c	language:css
div	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^  div {$/;"	t	language:css
scroll-snap-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.scroll-snap-1 {$/;"	c	language:css
selectors-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-3:enabled,$/;"	c	language:css
selectors-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-3:indeterminate,$/;"	c	language:css
selectors-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-3:nth-child(2n+1),$/;"	c	language:css
selectors-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-3:nth-last-child(-n+2),$/;"	c	language:css
selectors-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-3:nth-of-type(2n+1),$/;"	c	language:css
selectors-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-3:nth-last-of-type(n+2),$/;"	c	language:css
selectors-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-3:not([DISABLED]) {$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4 | h1,$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:scope,$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:current,$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:past,$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:future,$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:default,$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:valid,$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:required,$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:optional,$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:blank,$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:any-link,$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:local-link,$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:read-only,$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:read-write,$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:placeholder-shown,$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:in-range,$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:out-of-range,$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:user-invalid,$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:is(:hover, :focus),$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:dir(ltr),$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:local-link(0),$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:current(p, li, dt, dd),$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:nth-col(2n+1),$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:nth-last-col(-n+2),$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:target-within,$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:focus-within,$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:focus-visible,$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:playing,$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:paused,$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:has(> img),$/;"	c	language:css
selectors-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:where(:not(:hover)) {$/;"	c	language:css
selectors-nonelement-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.selectors-nonelement-1::attr(title) {$/;"	c	language:css
shadow-parts	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.shadow-parts::part(textspan) {$/;"	c	language:css
shapes-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.shapes-1 {$/;"	c	language:css
sizing-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.sizing-3 {$/;"	c	language:css
style-attr	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.style-attr {$/;"	c	language:css
svg2	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.svg2,$/;"	c	language:css
view	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^view {$/;"	t	language:css
syntax-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.syntax-3 {$/;"	c	language:css
tables-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.tables-3 {$/;"	c	language:css
text-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.text-3 {$/;"	c	language:css
text-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.text-4 {$/;"	c	language:css
text-decor-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.text-decor-3 {$/;"	c	language:css
text-decor-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.text-decor-4 {$/;"	c	language:css
timing-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.timing-1 {$/;"	c	language:css
transforms-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.transforms-1 {$/;"	c	language:css
transitions-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.transitions-1 {$/;"	c	language:css
typed-om-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.typed-om-1 {$/;"	c	language:css
ui-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.ui-3 {$/;"	c	language:css
ui-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.ui-4 {$/;"	c	language:css
values-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.values-3 {$/;"	c	language:css
values-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.values-4 {$/;"	c	language:css
variables-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.variables-1 {$/;"	c	language:css
web-animations-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.web-animations-1 {$/;"	c	language:css
webvtt1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.webvtt1::cue,$/;"	c	language:css
webvtt1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.webvtt1::cue-region,$/;"	c	language:css
webvtt1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.webvtt1::cue(#cue1),$/;"	c	language:css
webvtt1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.webvtt1::cue-region(#scroll), {$/;"	c	language:css
will-change-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.will-change-1 {$/;"	c	language:css
worklets-1	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.worklets-1 {$/;"	c	language:css
writing-modes-3	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.writing-modes-3 {$/;"	c	language:css
writing-modes-4	.config/nvim/plugged/vim-css3-syntax/test/test.css	/^.writing-modes-4 {$/;"	c	language:css
section, article, aside, hgroup, header, footer, nav, figure	.config/nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^section, article, aside, hgroup, header, footer, nav, figure { display: block; }$/;"	t	language:css
body	.config/nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^body {$/;"	t	language:css
section	.config/nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^section {$/;"	t	language:css
article	.config/nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^article {$/;"	t	language:css
img	.config/nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^img {$/;"	t	language:css
content	.config/nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^#content {$/;"	i	language:css
h1	.config/nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^h1 {$/;"	t	language:css
subtitle	.config/nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^.subtitle {$/;"	c	language:css
maintitle	.config/nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^.maintitle {$/;"	c	language:css
blocked-content	.config/nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^.blocked-content {$/;"	c	language:css
li a, h3 a	.config/nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^li a, h3 a {$/;"	t	language:css
tty	.config/nvim/plugged/emmet-vim/docs/static/css/style-sites.css	/^#tty {$/;"	i	language:css
collection	.config/nvim/plugged/vim-blade/test.blade.php	/^    $collection = collect([$/;"	v	language:PHP
environment	.config/nvim/plugged/vim-blade/test.blade.php	/^    $environment = isset($env) ? $env : 'testing';$/;"	v	language:PHP
autoloadFile	.config/nvim/plugged/phpactor/bin/phpactor	/^        $autoloadFile = $file;$/;"	v	language:PHP
minVersion	.config/nvim/plugged/phpactor/bin/phpactor	/^$minVersion = '7.0.0';$/;"	v	language:PHP
application	.config/nvim/plugged/phpactor/bin/phpactor	/^$application = new Application(realpath(dirname($autoloadFile)));$/;"	v	language:PHP
output	.config/nvim/plugged/phpactor/bin/phpactor	/^$output = new ConsoleOutput();$/;"	v	language:PHP
tomorrow-comment	.config/nvim/plugged/phpactor/doc/template/css/highlight.tomorrow-night.css	/^.tomorrow-comment, pre .comment, pre .title {$/;"	c	language:css
tomorrow-red	.config/nvim/plugged/phpactor/doc/template/css/highlight.tomorrow-night.css	/^.tomorrow-red, pre .variable, pre .attribute, pre .tag, pre .regexp, pre .ruby .constant, pre .xml .tag .title, pre .xml .pi, pre .xml .doctype, pre .html .doctype, pre .css .id, pre .css .class, pre .css .pseudo {$/;"	c	language:css
tomorrow-orange	.config/nvim/plugged/phpactor/doc/template/css/highlight.tomorrow-night.css	/^.tomorrow-orange, pre .number, pre .preprocessor, pre .built_in, pre .literal, pre .params, pre .constant {$/;"	c	language:css
tomorrow-yellow	.config/nvim/plugged/phpactor/doc/template/css/highlight.tomorrow-night.css	/^.tomorrow-yellow, pre .class, pre .ruby .class .title, pre .css .rules .attribute {$/;"	c	language:css
tomorrow-green	.config/nvim/plugged/phpactor/doc/template/css/highlight.tomorrow-night.css	/^.tomorrow-green, pre .string, pre .value, pre .inheritance, pre .header, pre .ruby .symbol, pre .xml .cdata {$/;"	c	language:css
tomorrow-aqua	.config/nvim/plugged/phpactor/doc/template/css/highlight.tomorrow-night.css	/^.tomorrow-aqua, pre .css .hexcolor {$/;"	c	language:css
tomorrow-blue	.config/nvim/plugged/phpactor/doc/template/css/highlight.tomorrow-night.css	/^.tomorrow-blue, pre .function, pre .python .decorator, pre .python .title, pre .ruby .function .title, pre .ruby .title .keyword, pre .perl .sub, pre .javascript .title, pre .coffeescript .title {$/;"	c	language:css
tomorrow-purple	.config/nvim/plugged/phpactor/doc/template/css/highlight.tomorrow-night.css	/^.tomorrow-purple, pre .keyword, pre .javascript .function {$/;"	c	language:css
pre code	.config/nvim/plugged/phpactor/doc/template/css/highlight.tomorrow-night.css	/^pre code {$/;"	t	language:css
body	.config/nvim/plugged/phpactor/doc/template/css/main.css	/^body {$/;"	t	language:css
main	.config/nvim/plugged/phpactor/doc/template/css/main.css	/^main {$/;"	t	language:css
section	.config/nvim/plugged/phpactor/doc/template/css/main.css	/^section {$/;"	t	language:css
h1, h2, h3, h4	.config/nvim/plugged/phpactor/doc/template/css/main.css	/^h1, h2, h3, h4 {$/;"	t	language:css
h2	.config/nvim/plugged/phpactor/doc/template/css/main.css	/^h2 {$/;"	t	language:css
h3	.config/nvim/plugged/phpactor/doc/template/css/main.css	/^h3 {$/;"	t	language:css
li	.config/nvim/plugged/phpactor/doc/template/css/main.css	/^li {$/;"	t	language:css
img	.config/nvim/plugged/phpactor/doc/template/css/main.css	/^img {$/;"	t	language:css
logo	.config/nvim/plugged/phpactor/doc/template/css/main.css	/^.logo {$/;"	c	language:css
navbar	.config/nvim/plugged/phpactor/doc/template/css/main.css	/^.navbar .navbar-brand {$/;"	c	language:css
navbar	.config/nvim/plugged/phpactor/doc/template/css/main.css	/^.navbar a.navbar-brand:hover {$/;"	c	language:css
navbar	.config/nvim/plugged/phpactor/doc/template/css/main.css	/^.navbar .navbar-brand small {$/;"	c	language:css
sidebar	.config/nvim/plugged/phpactor/doc/template/css/main.css	/^    #sidebar {$/;"	i	language:css
body	.config/nvim/plugged/phpactor/doc/template/css/main.css	/^    body {$/;"	t	language:css
pre	.config/nvim/plugged/phpactor/doc/template/css/main.css	/^    pre {$/;"	t	language:css
page-header	.config/nvim/plugged/phpactor/doc/template/css/main.css	/^.page-header {$/;"	c	language:css
sidebar	.config/nvim/plugged/phpactor/doc/template/css/main.css	/^#sidebar .github-star {$/;"	i	language:css
sidebar	.config/nvim/plugged/phpactor/doc/template/css/main.css	/^#sidebar .text-muted {$/;"	i	language:css
pre	.config/nvim/plugged/phpactor/doc/template/css/main.css	/^pre {$/;"	t	language:css
pre code	.config/nvim/plugged/phpactor/doc/template/css/main.css	/^pre code {$/;"	t	language:css
code	.config/nvim/plugged/phpactor/doc/template/css/main.css	/^code {$/;"	t	language:css
Application	.config/nvim/plugged/phpactor/lib/Application.php	/^class Application extends SymfonyApplication$/;"	c	language:PHP
container	.config/nvim/plugged/phpactor/lib/Application.php	/^    private $container;$/;"	v	language:PHP
vendorDir	.config/nvim/plugged/phpactor/lib/Application.php	/^    private $vendorDir;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Application.php	/^    public function __construct(string $vendorDir)$/;"	f	language:PHP
vendorDir	.config/nvim/plugged/phpactor/lib/Application.php	/^        $this->vendorDir = $vendorDir;$/;"	v	language:PHP
doRun	.config/nvim/plugged/phpactor/lib/Application.php	/^    public function doRun(InputInterface $input, OutputInterface $output)$/;"	f	language:PHP
formatter	.config/nvim/plugged/phpactor/lib/Application.php	/^        $formatter = $output->getFormatter();$/;"	v	language:PHP
getDefaultInputDefinition	.config/nvim/plugged/phpactor/lib/Application.php	/^    protected function getDefaultInputDefinition()$/;"	f	language:PHP
definition	.config/nvim/plugged/phpactor/lib/Application.php	/^        $definition = parent::getDefaultInputDefinition();$/;"	v	language:PHP
handleException	.config/nvim/plugged/phpactor/lib/Application.php	/^    private function handleException(OutputInterface $output, string $dumper, \\Exception $e)$/;"	f	language:PHP
errors	.config/nvim/plugged/phpactor/lib/Application.php	/^        $errors = [$/;"	v	language:PHP
serializeException	.config/nvim/plugged/phpactor/lib/Application.php	/^    private function serializeException(\\Exception $e)$/;"	f	language:PHP
initialize	.config/nvim/plugged/phpactor/lib/Application.php	/^    private function initialize(InputInterface $input)$/;"	f	language:PHP
container	.config/nvim/plugged/phpactor/lib/Application.php	/^        $this->container = Phpactor::boot($input, $this->vendorDir);$/;"	v	language:PHP
ClassCopy	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^class ClassCopy$/;"	c	language:PHP
classFileNormalizer	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^    private $classFileNormalizer;$/;"	v	language:PHP
classMover	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^    private $classMover;$/;"	v	language:PHP
filesystem	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^    private $filesystem;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^    public function __construct($/;"	f	language:PHP
classFileNormalizer	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^        $this->classFileNormalizer = $classFileNormalizer;$/;"	v	language:PHP
classMover	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^        $this->classMover = $classMover;$/;"	v	language:PHP
filesystem	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^        $this->filesystem = $filesystem;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^     * Move - guess if moving by class name or file.$/;"	c	language:PHP
copy	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^    public function copy(ClassCopyLogger $logger, string $src, string $dest)$/;"	f	language:PHP
srcPath	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^        $srcPath = $this->classFileNormalizer->normalizeToFile($src);$/;"	v	language:PHP
destPath	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^        $destPath = $this->classFileNormalizer->normalizeToFile($dest);$/;"	v	language:PHP
copyClass	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^    public function copyClass(ClassCopyLogger $logger, string $srcName, string $destName)$/;"	f	language:PHP
copyFile	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^    public function copyFile(ClassCopyLogger $logger, string $srcPath, string $destPath)$/;"	f	language:PHP
srcPath	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^        $srcPath = Phpactor::normalizePath($srcPath);$/;"	v	language:PHP
globDest	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^            $globDest = $destPath;$/;"	v	language:PHP
globDest	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^                $globDest = Path::join($destPath, Path::getFilename($globPath));$/;"	v	language:PHP
doCopyFile	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^    private function doCopyFile(ClassCopyLogger $logger, string $srcPath, string $destPath)$/;"	f	language:PHP
destPath	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^        $destPath = Phpactor::normalizePath($destPath);$/;"	v	language:PHP
srcPath	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^        $srcPath = $this->filesystem->createPath($srcPath);$/;"	v	language:PHP
destPath	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^        $destPath = $this->filesystem->createPath($destPath);$/;"	v	language:PHP
report	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^        $report = $this->filesystem->copy($srcPath, $destPath);$/;"	v	language:PHP
updateReferences	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^    private function updateReferences(ClassCopyLogger $logger, CopyReport $copyReport)$/;"	f	language:PHP
destPath	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^            $destPath = $copyReport->destFiles()->current();$/;"	v	language:PHP
srcClassName	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^            $srcClassName = $this->classFileNormalizer->fileToClass($srcPath->path());$/;"	v	language:PHP
destClassName	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^            $destClassName = $this->classFileNormalizer->fileToClass($destPath->path());$/;"	v	language:PHP
references	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^            $references = $this->classMover->findReferences($this->filesystem->getContents($srcPath), $srcClassName);$/;"	v	language:PHP
source	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^            $source = $this->classMover->replaceReferences($/;"	v	language:PHP
ClassMemberReferences	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^class ClassMemberReferences$/;"	c	language:PHP
filesystemRegistry	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    private $filesystemRegistry;$/;"	v	language:PHP
memberFinder	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    private $memberFinder;$/;"	v	language:PHP
classFileNormalizer	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    private $classFileNormalizer;$/;"	v	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    private $reflector;$/;"	v	language:PHP
memberReplacer	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    private $memberReplacer;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    public function __construct($/;"	f	language:PHP
classFileNormalizer	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $this->classFileNormalizer = $classFileNormalizer;$/;"	v	language:PHP
filesystemRegistry	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $this->filesystemRegistry = $filesystemRegistry;$/;"	v	language:PHP
memberFinder	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $this->memberFinder = $memberFinder;$/;"	v	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $this->reflector = $reflector;$/;"	v	language:PHP
memberReplacer	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $this->memberReplacer = $memberReplacer;$/;"	v	language:PHP
findOrReplaceReferences	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    public function findOrReplaceReferences($/;"	f	language:PHP
class	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        string $class = null,$/;"	v	language:PHP
memberName	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        string $memberName = null,$/;"	v	language:PHP
memberType	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        string $memberType = null,$/;"	v	language:PHP
replace	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        string $replace = null,$/;"	v	language:PHP
dryRun	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        bool $dryRun = false$/;"	v	language:PHP
className	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $className = $class ? $this->classFileNormalizer->normalizeToClass($class) : null;$/;"	v	language:PHP
reflection	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $reflection = $className ? $this->reflector->reflectClassLike($className) : null;$/;"	v	language:PHP
filesystem	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $filesystem = $this->filesystemRegistry->get($scope);$/;"	v	language:PHP
filePaths	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $filePaths = (new FileFinder())->filesFor($filesystem, $reflection, $memberName);$/;"	v	language:PHP
results	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $results = [];$/;"	v	language:PHP
references	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^            $references = $this->referencesInFile($filesystem, $filePath, $className, $memberName, $memberType, $replace, $dryRun);$/;"	v	language:PHP
replaceInSource	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    public function replaceInSource($/;"	f	language:PHP
className	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $className = $class ? $this->classFileNormalizer->normalizeToClass($class) : null;$/;"	v	language:PHP
query	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $query = $this->createQuery($className, $memberName, $memberType);$/;"	v	language:PHP
referenceList	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $referenceList = $this->memberFinder->findMembers($/;"	v	language:PHP
referencesInFile	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    private function referencesInFile($/;"	f	language:PHP
className	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        string $className = null,$/;"	v	language:PHP
memberName	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        string $memberName = null,$/;"	v	language:PHP
memberType	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        string $memberType = null,$/;"	v	language:PHP
replace	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        string $replace = null,$/;"	v	language:PHP
dryRun	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        bool $dryRun = false$/;"	v	language:PHP
code	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $code = $filesystem->getContents($filePath);$/;"	v	language:PHP
query	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $query = $this->createQuery($className, $memberName, $memberType);$/;"	v	language:PHP
referenceList	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $referenceList = $this->memberFinder->findMembers($/;"	v	language:PHP
confidentList	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $confidentList = $referenceList->withClasses();$/;"	v	language:PHP
riskyList	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $riskyList = $referenceList->withoutClasses();$/;"	v	language:PHP
result	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $result = [$/;"	v	language:PHP
updatedSource	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^            $updatedSource = $this->replaceReferencesInCode($code, $confidentList, $replace);$/;"	v	language:PHP
query	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^            $query = $this->createQuery($className, $replace, $memberType);$/;"	v	language:PHP
replacedReferences	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^            $replacedReferences = $this->memberFinder->findMembers($/;"	v	language:PHP
serializeReferenceList	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    private function serializeReferenceList(string $code, MemberReferences $referenceList)$/;"	f	language:PHP
references	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $references = [];$/;"	v	language:PHP
ref	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^            $ref = $this->serializeReference($code, $reference);$/;"	v	language:PHP
serializeReference	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    private function serializeReference(string $code, MemberReference $reference)$/;"	f	language:PHP
line	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    private function line(string $code, int $offset)$/;"	f	language:PHP
lines	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $lines = explode(PHP_EOL, $code);$/;"	v	language:PHP
number	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $number = 0;$/;"	v	language:PHP
startPosition	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $startPosition = 0;$/;"	v	language:PHP
number	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        foreach ($lines as $number => $line) {$/;"	v	language:PHP
number	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^            $number = $number + 1;$/;"	v	language:PHP
endPosition	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^            $endPosition = $startPosition + strlen($line) + 1;$/;"	v	language:PHP
col	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^                $col = $offset - $startPosition;$/;"	v	language:PHP
startPosition	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^            $startPosition = $endPosition;$/;"	v	language:PHP
replaceReferencesInCode	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    private function replaceReferencesInCode(string $code, MemberReferences $list, string $replace): SourceCode$/;"	f	language:PHP
code	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $code = SourceCode::fromString($code);$/;"	v	language:PHP
createQuery	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    private function createQuery(string $className = null, string $memberName = null, $memberType = null)$/;"	f	language:PHP
className	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    private function createQuery(string $className = null, string $memberName = null, $memberType = null)$/;"	v	language:PHP
query	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $query = ClassMemberQuery::create();$/;"	v	language:PHP
query	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^            $query = $query->withClass($className);$/;"	v	language:PHP
query	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^            $query = $query->withMember($memberName);$/;"	v	language:PHP
query	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^            $query = $query->withType($memberType);$/;"	v	language:PHP
ClassMover	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^class ClassMover$/;"	c	language:PHP
classFileNormalizer	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^    private $classFileNormalizer;$/;"	v	language:PHP
classMover	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^    private $classMover;$/;"	v	language:PHP
filesystemRegistry	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^    private $filesystemRegistry;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^    public function __construct($/;"	f	language:PHP
classFileNormalizer	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        $this->classFileNormalizer = $classFileNormalizer;$/;"	v	language:PHP
filesystemRegistry	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        $this->filesystemRegistry = $filesystemRegistry;$/;"	v	language:PHP
classMover	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        $this->classMover = $classMover;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^     * Move - guess if moving by class name or file.$/;"	c	language:PHP
move	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^    public function move(ClassMoverLogger $logger, string $filesystemName, string $src, string $dest)$/;"	f	language:PHP
srcPath	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        $srcPath = $this->classFileNormalizer->normalizeToFile($src);$/;"	v	language:PHP
destPath	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        $destPath = $this->classFileNormalizer->normalizeToFile($dest);$/;"	v	language:PHP
moveClass	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^    public function moveClass(ClassMoverLogger $logger, string $filesystemName, string $srcName, string $destName)$/;"	f	language:PHP
moveFile	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^    public function moveFile(ClassMoverLogger $logger, string $filesystemName, string $srcPath, string $destPath)$/;"	f	language:PHP
srcPath	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        $srcPath = Phpactor::normalizePath($srcPath);$/;"	v	language:PHP
globSrc	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        foreach (FilesystemHelper::globSourceDestination($srcPath, $destPath) as $globSrc => $globDest) {$/;"	v	language:PHP
doMoveFile	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^    private function doMoveFile(ClassMoverLogger $logger, string $filesystemName, string $srcPath, string $destPath)$/;"	f	language:PHP
filesystem	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        $filesystem = $this->filesystemRegistry->get($filesystemName);$/;"	v	language:PHP
destPath	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        $destPath = Phpactor::normalizePath($destPath);$/;"	v	language:PHP
srcPath	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        $srcPath = $filesystem->createPath($srcPath);$/;"	v	language:PHP
destPath	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        $destPath = $filesystem->createPath($destPath);$/;"	v	language:PHP
files	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        $files = [[$srcPath, $destPath]];$/;"	v	language:PHP
files	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^            $files = $this->directoryMap($filesystem, $srcPath, $destPath);$/;"	v	language:PHP
directoryMap	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^    private function directoryMap(Filesystem $filesystem, FilePath $srcPath, FilePath $destPath)$/;"	f	language:PHP
files	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        $files = [];$/;"	v	language:PHP
suffix	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^            $suffix = substr($file->path(), strlen($srcPath->path()));$/;"	v	language:PHP
replaceThoseReferences	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^    private function replaceThoseReferences(ClassMoverLogger $logger, Filesystem $filesystem, array $files)$/;"	f	language:PHP
srcPath	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^            $srcPath = $filesystem->createPath($srcPath);$/;"	v	language:PHP
destPath	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^            $destPath = $filesystem->createPath($destPath);$/;"	v	language:PHP
srcClassName	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^            $srcClassName = $this->classFileNormalizer->fileToClass($srcPath->path());$/;"	v	language:PHP
destClassName	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^            $destClassName = $this->classFileNormalizer->fileToClass($destPath->path());$/;"	v	language:PHP
replaceReferences	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^    private function replaceReferences(ClassMoverLogger $logger, Filesystem $filesystem, string $srcName, string $destName)$/;"	f	language:PHP
references	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^            $references = $this->classMover->findReferences($filesystem->getContents($filePath), $srcName);$/;"	v	language:PHP
source	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^            $source = $this->classMover->replaceReferences($/;"	v	language:PHP
ClassReferences	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^class ClassReferences$/;"	c	language:PHP
filesystemRegistry	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    private $filesystemRegistry;$/;"	v	language:PHP
refFinder	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    private $refFinder;$/;"	v	language:PHP
classFileNormalizerasd	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    private $classFileNormalizerasd;$/;"	v	language:PHP
refReplacer	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    private $refReplacer;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    public function __construct($/;"	f	language:PHP
classFileNormalizerasd	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $this->classFileNormalizerasd = $classFileNormalizer;$/;"	v	language:PHP
filesystemRegistry	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $this->filesystemRegistry = $filesystemRegistry;$/;"	v	language:PHP
refFinder	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $this->refFinder = $refFinder;$/;"	v	language:PHP
refReplacer	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $this->refReplacer = $refReplacer;$/;"	v	language:PHP
replaceReferences	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    public function replaceReferences(string $filesystemName, string $class, string $replace, bool $dryRun)$/;"	f	language:PHP
findReferences	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    public function findReferences(string $filesystemName, string $class)$/;"	f	language:PHP
findOrReplaceReferences	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    public function findOrReplaceReferences(string $filesystemName, string $class, string $replace = null, bool $dryRun = false)$/;"	f	language:PHP
replace	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    public function findOrReplaceReferences(string $filesystemName, string $class, string $replace = null, bool $dryRun = false)$/;"	v	language:PHP
classPath	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $classPath = $this->classFileNormalizerasd->normalizeToFile($class);$/;"	v	language:PHP
classPath	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $classPath = Phpactor::normalizePath($classPath);$/;"	v	language:PHP
className	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $className = $this->classFileNormalizerasd->normalizeToClass($class);$/;"	v	language:PHP
filesystem	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $filesystem = $this->filesystemRegistry->get($filesystemName);$/;"	v	language:PHP
results	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $results = [];$/;"	v	language:PHP
references	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^            $references = $this->fileReferences($filesystem, $filePath, $className, $replace, $dryRun);$/;"	v	language:PHP
replaceInSource	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    public function replaceInSource(string $source, $className, $replace): string$/;"	f	language:PHP
referenceList	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $referenceList = $this->refFinder$/;"	v	language:PHP
updatedSource	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $updatedSource = $this->replaceReferencesInCode($source, $referenceList, $className, $replace);$/;"	v	language:PHP
fileReferences	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    private function fileReferences(Filesystem $filesystem, $filePath, $className, $replace = null, $dryRun = false)$/;"	f	language:PHP
replace	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    private function fileReferences(Filesystem $filesystem, $filePath, $className, $replace = null, $dryRun = false)$/;"	v	language:PHP
code	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $code = $filesystem->getContents($filePath);$/;"	v	language:PHP
referenceList	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $referenceList = $this->refFinder$/;"	v	language:PHP
result	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $result = [$/;"	v	language:PHP
updatedSource	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $updatedSource = null;$/;"	v	language:PHP
updatedSource	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^            $updatedSource = $this->replaceReferencesInCode($code, $referenceList, $className, $replace);$/;"	v	language:PHP
newReferenceList	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^            $newReferenceList = $this->refFinder$/;"	v	language:PHP
serializeReferenceList	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    private function serializeReferenceList(string $code, NamespacedClassReferences $referenceList)$/;"	f	language:PHP
references	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $references = [];$/;"	v	language:PHP
ref	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^            $ref = $this->serializeReference($code, $reference);$/;"	v	language:PHP
serializeReference	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    private function serializeReference(string $code, ClassReference $reference)$/;"	f	language:PHP
line	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    private function line(string $code, int $offset)$/;"	f	language:PHP
lines	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $lines = explode(PHP_EOL, $code);$/;"	v	language:PHP
number	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $number = 0;$/;"	v	language:PHP
startPosition	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $startPosition = 0;$/;"	v	language:PHP
number	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        foreach ($lines as $number => $line) {$/;"	v	language:PHP
number	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^            $number = $number + 1;$/;"	v	language:PHP
endPosition	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^            $endPosition = $startPosition + strlen($line) + 1;$/;"	v	language:PHP
col	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^                $col = $offset - $startPosition;$/;"	v	language:PHP
startPosition	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^            $startPosition = $endPosition;$/;"	v	language:PHP
replaceReferencesInCode	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    private function replaceReferencesInCode(string $code, NamespacedClassReferences $list, string $class, string $replace): SourceCode$/;"	f	language:PHP
class	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $class = FullyQualifiedName::fromString($class);$/;"	v	language:PHP
replace	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $replace = FullyQualifiedName::fromString($replace);$/;"	v	language:PHP
code	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $code = SourceCode::fromString($code);$/;"	v	language:PHP
FileFinder	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^class FileFinder$/;"	c	language:PHP
filesFor	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^    public function filesFor(Filesystem $filesystem, ReflectionClassLike $reflection = null, string $memberName = null): FileList$/;"	f	language:PHP
reflection	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^    public function filesFor(Filesystem $filesystem, ReflectionClassLike $reflection = null, string $memberName = null): FileList$/;"	v	language:PHP
members	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^        $members = $reflection->members();$/;"	v	language:PHP
publicMembers	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^        $publicMembers = $members->byName($memberName)->byVisibilities([$/;"	v	language:PHP
private	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^        $private = false;$/;"	v	language:PHP
private	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^                $private = true;$/;"	v	language:PHP
pathsFromReflectionClass	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^    private function pathsFromReflectionClass(ReflectionClass $reflection, bool $private)$/;"	f	language:PHP
path	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^        $path = $reflection->sourceCode()->path();$/;"	v	language:PHP
filePaths	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^        $filePaths = [ $path ];$/;"	v	language:PHP
filePaths	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^        $filePaths = $this->traitFilePaths($reflection, $filePaths);$/;"	v	language:PHP
filePaths	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^        $filePaths = $this->parentFilePaths($reflection, $filePaths);$/;"	v	language:PHP
filePaths	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^        $filePaths = $this->interfaceFilePaths($reflection, $filePaths);$/;"	v	language:PHP
allPhpFiles	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^    private function allPhpFiles(Filesystem $filesystem)$/;"	f	language:PHP
filePaths	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^        $filePaths = $filesystem->fileList()->existing()->phpFiles();$/;"	v	language:PHP
parentFilePaths	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^    private function parentFilePaths(ReflectionClass $reflection, $filePaths)$/;"	f	language:PHP
context	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^        $context = $reflection->parent();$/;"	v	language:PHP
context	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^            $context = $context->parent();$/;"	v	language:PHP
traitFilePaths	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^    private function traitFilePaths(ReflectionClass $reflection, $filePaths)$/;"	f	language:PHP
interfaceFilePaths	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^    private function interfaceFilePaths(ReflectionClass $reflection, $filePaths)$/;"	f	language:PHP
ClassCopyLogger	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Logger/ClassCopyLogger.php	/^interface ClassCopyLogger$/;"	i	language:PHP
copying	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Logger/ClassCopyLogger.php	/^    public function copying(FilePath $srcPath, FilePath $destPath);$/;"	f	language:PHP
replacing	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Logger/ClassCopyLogger.php	/^    public function replacing(FilePath $path, FoundReferences $references, FullyQualifiedName $replacementName);$/;"	f	language:PHP
ClassMoverLogger	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Logger/ClassMoverLogger.php	/^interface ClassMoverLogger$/;"	i	language:PHP
moving	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Logger/ClassMoverLogger.php	/^    public function moving(FilePath $srcPath, FilePath $destPath);$/;"	f	language:PHP
replacing	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Logger/ClassMoverLogger.php	/^    public function replacing(FilePath $path, FoundReferences $references, FullyQualifiedName $replacementName);$/;"	f	language:PHP
NullLogger	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Logger/NullLogger.php	/^class NullLogger implements ClassCopyLogger, ClassMoverLogger$/;"	c	language:PHP
copying	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Logger/NullLogger.php	/^    public function copying(FilePath $srcPath, FilePath $destPath)$/;"	f	language:PHP
replacing	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Logger/NullLogger.php	/^    public function replacing(FilePath $path, FoundReferences $references, FullyQualifiedName $replacementName)$/;"	f	language:PHP
moving	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Application/Logger/NullLogger.php	/^    public function moving(FilePath $srcPath, FilePath $destPath)$/;"	f	language:PHP
ClassMoverExtension	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/ClassMoverExtension.php	/^class ClassMoverExtension implements Extension$/;"	c	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/ClassMoverExtension.php	/^    public function configure(Resolver $schema)$/;"	f	language:PHP
load	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/ClassMoverExtension.php	/^    public function load(ContainerBuilder $container)$/;"	f	language:PHP
registerRpc	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/ClassMoverExtension.php	/^    private function registerRpc(ContainerBuilder $container)$/;"	f	language:PHP
registerClassMover	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/ClassMoverExtension.php	/^    private function registerClassMover(ContainerBuilder $container)$/;"	f	language:PHP
registerApplicationServices	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/ClassMoverExtension.php	/^    private function registerApplicationServices(ContainerBuilder $container)$/;"	f	language:PHP
registerConsoleCommands	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/ClassMoverExtension.php	/^    private function registerConsoleCommands(ContainerBuilder $container)$/;"	f	language:PHP
ClassCopyCommand	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassCopyCommand.php	/^class ClassCopyCommand extends Command$/;"	c	language:PHP
copier	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassCopyCommand.php	/^    private $copier;$/;"	v	language:PHP
prompt	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassCopyCommand.php	/^    private $prompt;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassCopyCommand.php	/^    public function __construct($/;"	f	language:PHP
copier	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassCopyCommand.php	/^        $this->copier = $copier;$/;"	v	language:PHP
prompt	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassCopyCommand.php	/^        $this->prompt = $prompt;$/;"	v	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassCopyCommand.php	/^    public function configure()$/;"	f	language:PHP
execute	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassCopyCommand.php	/^    public function execute(InputInterface $input, OutputInterface $output)$/;"	f	language:PHP
type	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassCopyCommand.php	/^        $type = $input->getOption('type');$/;"	v	language:PHP
logger	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassCopyCommand.php	/^        $logger = new SymfonyConsoleCopyLogger($output);$/;"	v	language:PHP
src	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassCopyCommand.php	/^        $src = $input->getArgument('src');$/;"	v	language:PHP
dest	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassCopyCommand.php	/^        $dest = $input->getArgument('dest');$/;"	v	language:PHP
dest	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassCopyCommand.php	/^            $dest = $this->prompt->prompt('Move to: ', $src);$/;"	v	language:PHP
ClassMoveCommand	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassMoveCommand.php	/^class ClassMoveCommand extends Command$/;"	c	language:PHP
mover	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassMoveCommand.php	/^    private $mover;$/;"	v	language:PHP
prompt	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassMoveCommand.php	/^    private $prompt;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassMoveCommand.php	/^    public function __construct($/;"	f	language:PHP
mover	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassMoveCommand.php	/^        $this->mover = $mover;$/;"	v	language:PHP
prompt	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassMoveCommand.php	/^        $this->prompt = $prompt;$/;"	v	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassMoveCommand.php	/^    public function configure()$/;"	f	language:PHP
execute	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassMoveCommand.php	/^    public function execute(InputInterface $input, OutputInterface $output)$/;"	f	language:PHP
type	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassMoveCommand.php	/^        $type = $input->getOption('type');$/;"	v	language:PHP
logger	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassMoveCommand.php	/^        $logger = new SymfonyConsoleMoveLogger($output);$/;"	v	language:PHP
src	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassMoveCommand.php	/^        $src = $input->getArgument('src');$/;"	v	language:PHP
dest	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassMoveCommand.php	/^        $dest = $input->getArgument('dest');$/;"	v	language:PHP
filesystem	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassMoveCommand.php	/^        $filesystem = $input->getOption('filesystem');$/;"	v	language:PHP
dest	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ClassMoveCommand.php	/^            $dest = $this->prompt->prompt('Move to: ', $src);$/;"	v	language:PHP
SymfonyConsoleCopyLogger	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/Logger/SymfonyConsoleCopyLogger.php	/^class SymfonyConsoleCopyLogger implements ClassCopyLogger$/;"	c	language:PHP
output	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/Logger/SymfonyConsoleCopyLogger.php	/^    private $output;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/Logger/SymfonyConsoleCopyLogger.php	/^    public function __construct(OutputInterface $output)$/;"	f	language:PHP
output	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/Logger/SymfonyConsoleCopyLogger.php	/^        $this->output = $output;$/;"	v	language:PHP
copying	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/Logger/SymfonyConsoleCopyLogger.php	/^    public function copying(FilePath $srcPath, FilePath $destPath)$/;"	f	language:PHP
replacing	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/Logger/SymfonyConsoleCopyLogger.php	/^    public function replacing(FilePath $path, FoundReferences $references, FullyQualifiedName $replacementName)$/;"	f	language:PHP
SymfonyConsoleMoveLogger	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/Logger/SymfonyConsoleMoveLogger.php	/^class SymfonyConsoleMoveLogger implements ClassMoverLogger$/;"	c	language:PHP
output	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/Logger/SymfonyConsoleMoveLogger.php	/^    private $output;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/Logger/SymfonyConsoleMoveLogger.php	/^    public function __construct(OutputInterface $output)$/;"	f	language:PHP
output	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/Logger/SymfonyConsoleMoveLogger.php	/^        $this->output = $output;$/;"	v	language:PHP
moving	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/Logger/SymfonyConsoleMoveLogger.php	/^    public function moving(FilePath $srcPath, FilePath $destPath)$/;"	f	language:PHP
replacing	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/Logger/SymfonyConsoleMoveLogger.php	/^    public function replacing(FilePath $path, FoundReferences $references, FullyQualifiedName $replacementName)$/;"	f	language:PHP
ReferencesClassCommand	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesClassCommand.php	/^class ReferencesClassCommand extends Command$/;"	c	language:PHP
referenceFinder	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesClassCommand.php	/^    private $referenceFinder;$/;"	v	language:PHP
dumperRegistry	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesClassCommand.php	/^    private $dumperRegistry;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesClassCommand.php	/^    public function __construct($/;"	f	language:PHP
referenceFinder	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesClassCommand.php	/^        $this->referenceFinder = $referenceFinder;$/;"	v	language:PHP
dumperRegistry	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesClassCommand.php	/^        $this->dumperRegistry = $dumperRegistry;$/;"	v	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesClassCommand.php	/^    public function configure()$/;"	f	language:PHP
execute	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesClassCommand.php	/^    public function execute(InputInterface $input, OutputInterface $output)$/;"	f	language:PHP
class	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesClassCommand.php	/^        $class = $input->getArgument('class');$/;"	v	language:PHP
replace	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesClassCommand.php	/^        $replace = $input->getOption('replace');$/;"	v	language:PHP
dryRun	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesClassCommand.php	/^        $dryRun = $input->getOption('dry-run');$/;"	v	language:PHP
format	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesClassCommand.php	/^        $format = $input->getOption('format');$/;"	v	language:PHP
filesystem	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesClassCommand.php	/^        $filesystem = $input->getOption('filesystem');$/;"	v	language:PHP
results	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesClassCommand.php	/^        $results = $this->findOrReplaceReferences($filesystem, $class, $replace, $dryRun);$/;"	v	language:PHP
count	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesClassCommand.php	/^        $count = $this->renderTable($output, $results, 'references', $output->isDecorated());$/;"	v	language:PHP
findOrReplaceReferences	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesClassCommand.php	/^    private function findOrReplaceReferences($filesystem, $class, $replace, $dryRun)$/;"	f	language:PHP
renderTable	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesClassCommand.php	/^    private function renderTable(OutputInterface $output, array $results, string $type, bool $ansi)$/;"	f	language:PHP
table	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesClassCommand.php	/^        $table = new Table($output);$/;"	v	language:PHP
count	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesClassCommand.php	/^        $count = 0;$/;"	v	language:PHP
filePath	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesClassCommand.php	/^            $filePath = $references['file'];$/;"	v	language:PHP
addReferenceRow	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesClassCommand.php	/^    private function addReferenceRow(Table $table, string $filePath, array $reference, bool $ansi)$/;"	f	language:PHP
ReferencesMemberCommand	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^class ReferencesMemberCommand extends Command$/;"	c	language:PHP
memberReferences	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^    private $memberReferences;$/;"	v	language:PHP
dumperRegistry	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^    private $dumperRegistry;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^    public function __construct($/;"	f	language:PHP
memberReferences	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^        $this->memberReferences = $memberReferences;$/;"	v	language:PHP
dumperRegistry	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^        $this->dumperRegistry = $dumperRegistry;$/;"	v	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^    public function configure()$/;"	f	language:PHP
execute	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^    public function execute(InputInterface $input, OutputInterface $output, $bar = null)$/;"	f	language:PHP
bar	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^    public function execute(InputInterface $input, OutputInterface $output, $bar = null)$/;"	v	language:PHP
class	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^        $class = $input->getArgument('class');$/;"	v	language:PHP
member	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^        $member = $input->getArgument('member');$/;"	v	language:PHP
format	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^        $format = $input->getOption('format');$/;"	v	language:PHP
replace	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^        $replace = $input->getOption('replace');$/;"	v	language:PHP
dryRun	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^        $dryRun = $input->getOption('dry-run');$/;"	v	language:PHP
risky	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^        $risky = $input->getOption('risky');$/;"	v	language:PHP
memberType	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^        $memberType = $input->getOption('type');$/;"	v	language:PHP
filesystem	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^        $filesystem = $input->getOption('filesystem');$/;"	v	language:PHP
results	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^        $results = $this->memberReferences->findOrReplaceReferences($filesystem, $class, $member, $memberType, $replace, $dryRun);$/;"	v	language:PHP
count	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^        $count = $this->renderTable($output, $results, 'references', $output->isDecorated());$/;"	v	language:PHP
riskyCount	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^            $riskyCount = $this->renderTable($output, $results, 'risky_references', $output->isDecorated());$/;"	v	language:PHP
riskyCount	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^            $riskyCount = array_reduce($results, function ($acc, $result) {$/;"	v	language:PHP
renderTable	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^    private function renderTable(OutputInterface $output, array $results, string $type, bool $ansi)$/;"	f	language:PHP
table	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^        $table = new Table($output);$/;"	v	language:PHP
count	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^        $count = 0;$/;"	v	language:PHP
filePath	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^            $filePath = $references['file'];$/;"	v	language:PHP
addReferenceRow	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Command/ReferencesMemberCommand.php	/^    private function addReferenceRow(Table $table, string $filePath, array $reference, bool $ansi)$/;"	f	language:PHP
ClassCopyHandler	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ClassCopyHandler.php	/^class ClassCopyHandler extends AbstractHandler$/;"	c	language:PHP
classCopy	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ClassCopyHandler.php	/^    private $classCopy;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ClassCopyHandler.php	/^    public function __construct(ClassCopy $classCopy)$/;"	f	language:PHP
classCopy	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ClassCopyHandler.php	/^        $this->classCopy = $classCopy;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ClassCopyHandler.php	/^    public function name(): string$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ClassCopyHandler.php	/^    public function configure(Resolver $schema)$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ClassCopyHandler.php	/^    public function handle(array $arguments)$/;"	f	language:PHP
ClassMoveHandler	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ClassMoveHandler.php	/^class ClassMoveHandler extends AbstractHandler$/;"	c	language:PHP
classMove	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ClassMoveHandler.php	/^    private $classMove;$/;"	v	language:PHP
defaultFilesystem	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ClassMoveHandler.php	/^    private $defaultFilesystem;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ClassMoveHandler.php	/^    public function __construct(ClassMover $classMove, string $defaultFilesystem)$/;"	f	language:PHP
classMove	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ClassMoveHandler.php	/^        $this->classMove = $classMove;$/;"	v	language:PHP
defaultFilesystem	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ClassMoveHandler.php	/^        $this->defaultFilesystem = $defaultFilesystem;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ClassMoveHandler.php	/^    public function name(): string$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ClassMoveHandler.php	/^    public function configure(Resolver $resolver)$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ClassMoveHandler.php	/^    public function handle(array $arguments)$/;"	f	language:PHP
and	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ClassMoveHandler.php	/^                'WARNING: This command will move the class and update ALL references in the git tree.' . PHP_EOL .$/;"	c	language:PHP
ReferencesHandler	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^class ReferencesHandler extends AbstractHandler$/;"	c	language:PHP
classReferences	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^    private $classReferences;$/;"	v	language:PHP
defaultFilesystem	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^    private $defaultFilesystem;$/;"	v	language:PHP
classMemberReferences	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^    private $classMemberReferences;$/;"	v	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^    private $reflector;$/;"	v	language:PHP
registry	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^    private $registry;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^    public function __construct($/;"	f	language:PHP
defaultFilesystem	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^        string $defaultFilesystem = SourceCodeFilesystemExtension::FILESYSTEM_GIT$/;"	v	language:PHP
classReferences	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^        $this->classReferences = $classReferences;$/;"	v	language:PHP
defaultFilesystem	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^        $this->defaultFilesystem = $defaultFilesystem;$/;"	v	language:PHP
classMemberReferences	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^        $this->classMemberReferences = $classMemberReferences;$/;"	v	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^        $this->reflector = $reflector;$/;"	v	language:PHP
registry	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^        $this->registry = $registry;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^    public function name(): string$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^    public function configure(Resolver $resolver)$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^    public function handle(array $arguments)$/;"	f	language:PHP
offset	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^        $offset = $this->reflector->reflectOffset($/;"	v	language:PHP
symbolContext	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^        $symbolContext = $offset->symbolContext();$/;"	v	language:PHP
findReferences	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^    private function findReferences(SymbolContext $symbolContext, string $filesystem)$/;"	f	language:PHP
references	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^        $references = array_filter($references, function (array $referenceList) {$/;"	v	language:PHP
replaceReferences	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^    private function replaceReferences($/;"	f	language:PHP
originalSource	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^        $originalSource = $source;$/;"	v	language:PHP
actions	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^        $actions = [$/;"	v	language:PHP
originalSource	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^                $originalSource = file_get_contents($path);$/;"	v	language:PHP
classReferences	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^    private function classReferences(string $filesystem, SymbolContext $symbolContext, string $source = null, string $replacement = null)$/;"	f	language:PHP
source	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^    private function classReferences(string $filesystem, SymbolContext $symbolContext, string $source = null, string $replacement = null)$/;"	v	language:PHP
classType	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^        $classType = (string) $symbolContext->type();$/;"	v	language:PHP
references	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^        $references = $this->classReferences->findOrReplaceReferences($filesystem, $classType, $replacement);$/;"	v	language:PHP
updatedSource	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^        $updatedSource = null;$/;"	v	language:PHP
updatedSource	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^            $updatedSource = $this->classReferences->replaceInSource($/;"	v	language:PHP
memberReferences	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^    private function memberReferences($/;"	f	language:PHP
source	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^        string $source = null,$/;"	v	language:PHP
replacement	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^        string $replacement = null$/;"	v	language:PHP
classType	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^        $classType = (string) $symbolContext->containerType();$/;"	v	language:PHP
references	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^        $references = $this->classMemberReferences->findOrReplaceReferences($/;"	v	language:PHP
updatedSource	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^        $updatedSource = null;$/;"	v	language:PHP
updatedSource	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^            $updatedSource = $this->classMemberReferences->replaceInSource($/;"	v	language:PHP
performFindOrReplaceReferences	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^    private function performFindOrReplaceReferences($/;"	f	language:PHP
source	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^        string $source = null,$/;"	v	language:PHP
replacement	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^        string $replacement = null$/;"	v	language:PHP
echoMessage	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^    private function echoMessage(string $action, SymbolContext $symbolContext, string $filesystem, array $references): EchoResponse$/;"	f	language:PHP
count	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^        $count = array_reduce($references, function ($count, $result) {$/;"	v	language:PHP
riskyCount	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^        $riskyCount = array_reduce($references, function ($count, $result) {$/;"	v	language:PHP
risky	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^        $risky = '';$/;"	v	language:PHP
risky	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^            $risky = sprintf(' (%s risky references not listed)', $riskyCount);$/;"	v	language:PHP
defaultReplacement	.config/nvim/plugged/phpactor/lib/Extension/ClassMover/Rpc/ReferencesHandler.php	/^    private function defaultReplacement(SymbolContext $symbolContext)$/;"	f	language:PHP
FileInfo	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Application/FileInfo.php	/^class FileInfo$/;"	c	language:PHP
classToFileConverter	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Application/FileInfo.php	/^    private $classToFileConverter;$/;"	v	language:PHP
filesystem	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Application/FileInfo.php	/^    private $filesystem;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Application/FileInfo.php	/^    public function __construct($/;"	f	language:PHP
classToFileConverter	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Application/FileInfo.php	/^        $this->classToFileConverter = $classToFileConverter;$/;"	v	language:PHP
filesystem	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Application/FileInfo.php	/^        $this->filesystem = $filesystem;$/;"	v	language:PHP
infoForFile	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Application/FileInfo.php	/^    public function infoForFile(string $sourcePath)$/;"	f	language:PHP
path	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Application/FileInfo.php	/^        $path = $this->filesystem->createPath($sourcePath);$/;"	v	language:PHP
classCandidates	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Application/FileInfo.php	/^        $classCandidates = $this->classToFileConverter->fileToClassCandidates(FilePath::fromString((string) $path));$/;"	v	language:PHP
return	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Application/FileInfo.php	/^        $return = [$/;"	v	language:PHP
best	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Application/FileInfo.php	/^        $best = $classCandidates->best();$/;"	v	language:PHP
ClassToFileExtraExtension	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/ClassToFileExtraExtension.php	/^class ClassToFileExtraExtension implements Extension$/;"	c	language:PHP
load	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/ClassToFileExtraExtension.php	/^    public function load(ContainerBuilder $container)$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/ClassToFileExtraExtension.php	/^    public function configure(Resolver $schema)$/;"	f	language:PHP
FileInfoCommand	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Command/FileInfoCommand.php	/^class FileInfoCommand extends Command$/;"	c	language:PHP
infoForOffset	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Command/FileInfoCommand.php	/^    private $infoForOffset;$/;"	v	language:PHP
dumperRegistry	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Command/FileInfoCommand.php	/^    private $dumperRegistry;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Command/FileInfoCommand.php	/^    public function __construct($/;"	f	language:PHP
infoForOffset	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Command/FileInfoCommand.php	/^        $this->infoForOffset = $infoForOffset;$/;"	v	language:PHP
dumperRegistry	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Command/FileInfoCommand.php	/^        $this->dumperRegistry = $dumperRegistry;$/;"	v	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Command/FileInfoCommand.php	/^    public function configure()$/;"	f	language:PHP
execute	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Command/FileInfoCommand.php	/^    public function execute(InputInterface $input, OutputInterface $output)$/;"	f	language:PHP
info	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Command/FileInfoCommand.php	/^        $info = $this->infoForOffset->infoForFile($/;"	v	language:PHP
format	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Command/FileInfoCommand.php	/^        $format = $input->getOption('format');$/;"	v	language:PHP
FileInfoHandler	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Rpc/FileInfoHandler.php	/^class FileInfoHandler extends AbstractHandler$/;"	c	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Rpc/FileInfoHandler.php	/^    public function __construct(FileInfo $fileInfo)$/;"	f	language:PHP
fileInfo	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Rpc/FileInfoHandler.php	/^        $this->fileInfo = $fileInfo;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Rpc/FileInfoHandler.php	/^    public function name(): string$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Rpc/FileInfoHandler.php	/^    public function configure(Resolver $resolver)$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Rpc/FileInfoHandler.php	/^    public function handle(array $arguments)$/;"	f	language:PHP
fileInfo	.config/nvim/plugged/phpactor/lib/Extension/ClassToFileExtra/Rpc/FileInfoHandler.php	/^        $fileInfo = $this->fileInfo->infoForFile($arguments[self::PARAM_PATH]);$/;"	v	language:PHP
AbstractClassGenerator	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/AbstractClassGenerator.php	/^class AbstractClassGenerator$/;"	c	language:PHP
normalizer	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/AbstractClassGenerator.php	/^    protected $normalizer;$/;"	v	language:PHP
generators	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/AbstractClassGenerator.php	/^    protected $generators;$/;"	v	language:PHP
logger	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/AbstractClassGenerator.php	/^    private $logger;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/AbstractClassGenerator.php	/^    public function __construct(ClassFileNormalizer $normalizer, Generators $generators, LoggerInterface $logger = null)$/;"	f	language:PHP
logger	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/AbstractClassGenerator.php	/^    public function __construct(ClassFileNormalizer $normalizer, Generators $generators, LoggerInterface $logger = null)$/;"	v	language:PHP
normalizer	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/AbstractClassGenerator.php	/^        $this->normalizer = $normalizer;$/;"	v	language:PHP
generators	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/AbstractClassGenerator.php	/^        $this->generators = $generators;$/;"	v	language:PHP
logger	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/AbstractClassGenerator.php	/^        $this->logger = $logger ?: new NullLogger();$/;"	v	language:PHP
availableGenerators	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/AbstractClassGenerator.php	/^    public function availableGenerators()$/;"	f	language:PHP
logger	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/AbstractClassGenerator.php	/^    protected function logger(): LoggerInterface$/;"	f	language:PHP
writeFile	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/AbstractClassGenerator.php	/^    protected function writeFile(string $filePath, string $code, bool $overwrite)$/;"	f	language:PHP
ClassInflect	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/ClassInflect.php	/^class ClassInflect extends AbstractClassGenerator$/;"	c	language:PHP
generateFromExisting	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/ClassInflect.php	/^    public function generateFromExisting(string $srcPath, string $dest, string $variant = 'default', bool $overwrite = false): array$/;"	f	language:PHP
variant	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/ClassInflect.php	/^    public function generateFromExisting(string $srcPath, string $dest, string $variant = 'default', bool $overwrite = false): array$/;"	v	language:PHP
srcPath	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/ClassInflect.php	/^        $srcPath = Phpactor::normalizePath($srcPath);$/;"	v	language:PHP
newCodes	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/ClassInflect.php	/^        $newCodes = [];$/;"	v	language:PHP
globSrc	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/ClassInflect.php	/^        foreach (FilesystemHelper::globSourceDestination($srcPath, $dest) as $globSrc => $globDest) {$/;"	v	language:PHP
doGenerateFromExisting	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/ClassInflect.php	/^    private function doGenerateFromExisting(string $src, string $dest, string $variant, bool $overwrite): SourceCode$/;"	f	language:PHP
srcClassName	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/ClassInflect.php	/^        $srcClassName = $this->normalizer->normalizeToClass($src);$/;"	v	language:PHP
destClassName	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/ClassInflect.php	/^        $destClassName = $this->normalizer->normalizeToClass($dest);$/;"	v	language:PHP
code	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/ClassInflect.php	/^        $code = $this->generators->get($variant)->generateFromExisting($/;"	v	language:PHP
filePath	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/ClassInflect.php	/^        $filePath = $this->normalizer->normalizeToFile($destClassName);$/;"	v	language:PHP
code	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/ClassInflect.php	/^        $code = $code->withPath($filePath);$/;"	v	language:PHP
ClassNew	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/ClassNew.php	/^class ClassNew extends AbstractClassGenerator$/;"	c	language:PHP
generate	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/ClassNew.php	/^    public function generate(string $src, string $variant = 'default', bool $overwrite = false): SourceCode$/;"	f	language:PHP
variant	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/ClassNew.php	/^    public function generate(string $src, string $variant = 'default', bool $overwrite = false): SourceCode$/;"	v	language:PHP
className	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/ClassNew.php	/^        $className = $this->normalizer->normalizeToClass($src);$/;"	v	language:PHP
code	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/ClassNew.php	/^        $code = $this->generators->get($variant)->generateNew(ClassName::fromString((string) $className));$/;"	v	language:PHP
filePath	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/ClassNew.php	/^        $filePath = $this->normalizer->normalizeToFile($className);$/;"	v	language:PHP
code	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/ClassNew.php	/^        $code = $code->withPath($filePath);$/;"	v	language:PHP
FileAlreadyExists	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/Exception/FileAlreadyExists.php	/^class FileAlreadyExists extends \\Exception$/;"	c	language:PHP
Transformer	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/Transformer.php	/^class Transformer$/;"	c	language:PHP
transform	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/Transformer.php	/^    private $transform;$/;"	v	language:PHP
filesystemHelper	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/Transformer.php	/^    private $filesystemHelper;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/Transformer.php	/^    public function __construct($/;"	f	language:PHP
transform	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/Transformer.php	/^        $this->transform = $transform;$/;"	v	language:PHP
filesystemHelper	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/Transformer.php	/^        $this->filesystemHelper = new FilesystemHelper();$/;"	v	language:PHP
transform	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/Transformer.php	/^    public function transform($source, array $transformations)$/;"	f	language:PHP
source	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/Transformer.php	/^            $source = Path::makeAbsolute($source, getcwd());$/;"	v	language:PHP
source	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/Transformer.php	/^            $source = SourceCode::fromStringAndPath(file_get_contents($source), $source);$/;"	v	language:PHP
source	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/Transformer.php	/^            $source = $this->filesystemHelper->contentsFromFileOrStdin($source);$/;"	v	language:PHP
source	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/Transformer.php	/^            $source = SourceCode::fromString($source);$/;"	v	language:PHP
transformedCode	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Application/Transformer.php	/^        $transformedCode = $this->transform->transform($source, $transformations);$/;"	v	language:PHP
CodeTransformExtension	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/CodeTransformExtension.php	/^class CodeTransformExtension implements Extension$/;"	c	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/CodeTransformExtension.php	/^    public function configure(Resolver $schema)$/;"	f	language:PHP
load	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/CodeTransformExtension.php	/^    public function load(ContainerBuilder $container)$/;"	f	language:PHP
registerApplication	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/CodeTransformExtension.php	/^    private function registerApplication(ContainerBuilder $container)$/;"	f	language:PHP
registerConsole	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/CodeTransformExtension.php	/^    private function registerConsole(ContainerBuilder $container)$/;"	f	language:PHP
registerTransformers	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/CodeTransformExtension.php	/^    private function registerTransformers(ContainerBuilder $container)$/;"	f	language:PHP
transformers	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/CodeTransformExtension.php	/^            $transformers = [];$/;"	v	language:PHP
serviceId	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/CodeTransformExtension.php	/^            foreach ($container->getServiceIdsForTag('code_transform.transformer') as $serviceId => $attrs) {$/;"	v	language:PHP
registerGenerators	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/CodeTransformExtension.php	/^    private function registerGenerators(ContainerBuilder $container)$/;"	f	language:PHP
generators	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/CodeTransformExtension.php	/^            $generators = [$/;"	v	language:PHP
variantName	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/CodeTransformExtension.php	/^            foreach ($container->getParameter(self::CLASS_NEW_VARIANTS) as $variantName => $variant) {$/;"	v	language:PHP
generators	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/CodeTransformExtension.php	/^            $generators = [$/;"	v	language:PHP
registerRenderer	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/CodeTransformExtension.php	/^    private function registerRenderer(ContainerBuilder $container)$/;"	f	language:PHP
resolver	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/CodeTransformExtension.php	/^            $resolver = $container->get(FilePathResolverExtension::SERVICE_FILE_PATH_RESOLVER);$/;"	v	language:PHP
loaders	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/CodeTransformExtension.php	/^            $loaders = [];$/;"	v	language:PHP
templatePath	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/CodeTransformExtension.php	/^                $templatePath = $resolver->resolve($templatePath);$/;"	v	language:PHP
twig	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/CodeTransformExtension.php	/^            $twig = new Environment($container->get('code_transform.twig_loader'), [$/;"	v	language:PHP
renderer	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/CodeTransformExtension.php	/^            $renderer = new TwigRenderer($twig);$/;"	v	language:PHP
registerRefactorings	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/CodeTransformExtension.php	/^    private function registerRefactorings(ContainerBuilder $container)$/;"	f	language:PHP
registerUpdater	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/CodeTransformExtension.php	/^    private function registerUpdater(ContainerBuilder $container)$/;"	f	language:PHP
registerRpc	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/CodeTransformExtension.php	/^    private function registerRpc(ContainerBuilder $container)$/;"	f	language:PHP
ClassInflectCommand	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassInflectCommand.php	/^class ClassInflectCommand extends Command$/;"	c	language:PHP
dumperRegistry	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassInflectCommand.php	/^    private $dumperRegistry;$/;"	v	language:PHP
classInflect	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassInflectCommand.php	/^    private $classInflect;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassInflectCommand.php	/^    public function __construct($/;"	f	language:PHP
dumperRegistry	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassInflectCommand.php	/^        $this->dumperRegistry = $dumperRegistry;$/;"	v	language:PHP
classInflect	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassInflectCommand.php	/^        $this->classInflect = $classInflect;$/;"	v	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassInflectCommand.php	/^    public function configure()$/;"	f	language:PHP
from	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassInflectCommand.php	/^        $this->setDescription('Inflect new class from existing class (path or FQN)');$/;"	c	language:PHP
execute	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassInflectCommand.php	/^    public function execute(InputInterface $input, OutputInterface $output)$/;"	f	language:PHP
out	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassInflectCommand.php	/^        $out = $this->process($input, $output);$/;"	v	language:PHP
process	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassInflectCommand.php	/^    private function process(InputInterface $input, OutputInterface $output)$/;"	f	language:PHP
src	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassInflectCommand.php	/^        $src = $input->getArgument('src');$/;"	v	language:PHP
dest	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassInflectCommand.php	/^        $dest = $input->getArgument('dest');$/;"	v	language:PHP
variant	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassInflectCommand.php	/^        $variant = $input->getArgument('variant');$/;"	v	language:PHP
response	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassInflectCommand.php	/^        $response = [$/;"	v	language:PHP
questionHelper	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassInflectCommand.php	/^            $questionHelper = new QuestionHelper();$/;"	v	language:PHP
question	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassInflectCommand.php	/^            $question = new ConfirmationQuestion('<question>File already exists, overwrite? [y\/n]<\/>', false);$/;"	v	language:PHP
filePath	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassInflectCommand.php	/^            $filePath = $this->classInflect->generateFromExisting($src, $dest, $variant, true);$/;"	v	language:PHP
listGenerators	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassInflectCommand.php	/^    private function listGenerators(InputInterface $input, OutputInterface $output)$/;"	f	language:PHP
dumper	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassInflectCommand.php	/^        $dumper = $this->dumperRegistry->get($input->getOption('format'));$/;"	v	language:PHP
ClassNewCommand	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassNewCommand.php	/^class ClassNewCommand extends Command$/;"	c	language:PHP
dumperRegistry	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassNewCommand.php	/^    private $dumperRegistry;$/;"	v	language:PHP
classNew	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassNewCommand.php	/^    private $classNew;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassNewCommand.php	/^    public function __construct($/;"	f	language:PHP
dumperRegistry	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassNewCommand.php	/^        $this->dumperRegistry = $dumperRegistry;$/;"	v	language:PHP
classNew	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassNewCommand.php	/^        $this->classNew = $classNew;$/;"	v	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassNewCommand.php	/^    public function configure()$/;"	f	language:PHP
execute	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassNewCommand.php	/^    public function execute(InputInterface $input, OutputInterface $output)$/;"	f	language:PHP
out	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassNewCommand.php	/^        $out = $this->process($input, $output);$/;"	v	language:PHP
process	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassNewCommand.php	/^    private function process(InputInterface $input, OutputInterface $output)$/;"	f	language:PHP
src	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassNewCommand.php	/^        $src = $input->getArgument('src');$/;"	v	language:PHP
variant	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassNewCommand.php	/^        $variant = $input->getOption('variant');$/;"	v	language:PHP
response	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassNewCommand.php	/^        $response = [$/;"	v	language:PHP
questionHelper	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassNewCommand.php	/^            $questionHelper = new QuestionHelper();$/;"	v	language:PHP
question	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassNewCommand.php	/^            $question = new ConfirmationQuestion('<question>File already exists, overwrite? [y\/n]<\/>', false);$/;"	v	language:PHP
filePath	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassNewCommand.php	/^            $filePath = $this->classNew->generate($src, $variant, true);$/;"	v	language:PHP
listGenerators	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassNewCommand.php	/^    private function listGenerators(InputInterface $input, OutputInterface $output)$/;"	f	language:PHP
dumper	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassNewCommand.php	/^        $dumper = $this->dumperRegistry->get($input->getOption('format'));$/;"	v	language:PHP
ClassTransformCommand	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassTransformCommand.php	/^class ClassTransformCommand extends Command$/;"	c	language:PHP
transformer	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassTransformCommand.php	/^    private $transformer;$/;"	v	language:PHP
differ	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassTransformCommand.php	/^    private $differ;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassTransformCommand.php	/^    public function __construct($/;"	f	language:PHP
transformer	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassTransformCommand.php	/^        $this->transformer = $transformer;$/;"	v	language:PHP
differ	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassTransformCommand.php	/^        $this->differ = new Differ();$/;"	v	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassTransformCommand.php	/^    public function configure()$/;"	f	language:PHP
execute	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassTransformCommand.php	/^    public function execute(InputInterface $input, OutputInterface $output)$/;"	f	language:PHP
pattern	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassTransformCommand.php	/^        $pattern = $input->getArgument('src');$/;"	v	language:PHP
dryRun	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassTransformCommand.php	/^        $dryRun = $input->getOption('dry-run');$/;"	v	language:PHP
diff	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassTransformCommand.php	/^        $diff = $input->getOption('diff');$/;"	v	language:PHP
transformations	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassTransformCommand.php	/^        $transformations = $input->getOption('transform');$/;"	v	language:PHP
pattern	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassTransformCommand.php	/^        $pattern = Phpactor::normalizePath($pattern);$/;"	v	language:PHP
paths	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassTransformCommand.php	/^        $paths = array_filter(Glob::glob($pattern), function ($path) {$/;"	v	language:PHP
affected	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassTransformCommand.php	/^        $affected = 0;$/;"	v	language:PHP
existing	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassTransformCommand.php	/^            $existing = SourceCode::fromStringAndPath(file_get_contents($path), $path);$/;"	v	language:PHP
transformed	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassTransformCommand.php	/^            $transformed = $this->transformer->transform($existing, $transformations);$/;"	v	language:PHP
changed	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Command/ClassTransformCommand.php	/^            $changed = trim($existing->__toString()) != trim($transformed);$/;"	v	language:PHP
AbstractClassGenerateHandler	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/AbstractClassGenerateHandler.php	/^abstract class AbstractClassGenerateHandler extends AbstractHandler$/;"	c	language:PHP
classGenerator	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/AbstractClassGenerateHandler.php	/^    protected $classGenerator;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/AbstractClassGenerateHandler.php	/^    public function __construct(AbstractClassGenerator $classGenerator)$/;"	f	language:PHP
classGenerator	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/AbstractClassGenerateHandler.php	/^        $this->classGenerator = $classGenerator;$/;"	v	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/AbstractClassGenerateHandler.php	/^    public function configure(Resolver $resolver)$/;"	f	language:PHP
generate	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/AbstractClassGenerateHandler.php	/^    abstract protected function generate(array $arguments): SourceCode;$/;"	f	language:PHP
newMessage	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/AbstractClassGenerateHandler.php	/^    abstract protected function newMessage(): string;$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/AbstractClassGenerateHandler.php	/^    public function handle(array $arguments)$/;"	f	language:PHP
missingInputs	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/AbstractClassGenerateHandler.php	/^        $missingInputs = [];$/;"	v	language:PHP
code	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/AbstractClassGenerateHandler.php	/^            $code = $this->generate($arguments);$/;"	v	language:PHP
ChangeVisiblityHandler	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ChangeVisiblityHandler.php	/^class ChangeVisiblityHandler implements Handler$/;"	c	language:PHP
changeVisiblity	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ChangeVisiblityHandler.php	/^    private $changeVisiblity;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ChangeVisiblityHandler.php	/^    public function __construct(ChangeVisiblity $changeVisiblity)$/;"	f	language:PHP
changeVisiblity	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ChangeVisiblityHandler.php	/^        $this->changeVisiblity = $changeVisiblity;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ChangeVisiblityHandler.php	/^    public function name(): string$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ChangeVisiblityHandler.php	/^    public function configure(Resolver $resolver)$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ChangeVisiblityHandler.php	/^    public function handle(array $arguments)$/;"	f	language:PHP
source	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ChangeVisiblityHandler.php	/^        $source = $arguments[self::PARAM_SOURCE];$/;"	v	language:PHP
source	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ChangeVisiblityHandler.php	/^        $source = SourceCode::fromStringAndPath($source, $arguments[self::PARAM_PATH]);$/;"	v	language:PHP
source	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ChangeVisiblityHandler.php	/^        $source = $this->changeVisiblity->changeVisiblity($source, $arguments[self::PARAM_OFFSET]);$/;"	v	language:PHP
ClassInflectHandler	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ClassInflectHandler.php	/^class ClassInflectHandler extends AbstractClassGenerateHandler$/;"	c	language:PHP
generate	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ClassInflectHandler.php	/^    protected function generate(array $arguments): SourceCode$/;"	f	language:PHP
newCodes	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ClassInflectHandler.php	/^        $newCodes = $this->classGenerator->generateFromExisting($/;"	v	language:PHP
generator	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ClassInflectHandler.php	/^                'Expected 1 path from class generator, got %s',$/;"	c	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ClassInflectHandler.php	/^    public function name(): string$/;"	f	language:PHP
newMessage	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ClassInflectHandler.php	/^    public function newMessage(): string$/;"	f	language:PHP
ClassNewHandler	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ClassNewHandler.php	/^class ClassNewHandler extends AbstractClassGenerateHandler$/;"	c	language:PHP
generate	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ClassNewHandler.php	/^    protected function generate(array $arguments): SourceCode$/;"	f	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ClassNewHandler.php	/^    public function name(): string$/;"	f	language:PHP
newMessage	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ClassNewHandler.php	/^    public function newMessage(): string$/;"	f	language:PHP
ExtractConstantHandler	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ExtractConstantHandler.php	/^class ExtractConstantHandler extends AbstractHandler$/;"	c	language:PHP
extractConstant	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ExtractConstantHandler.php	/^    private $extractConstant;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ExtractConstantHandler.php	/^    public function __construct(ExtractConstant $extractConstant)$/;"	f	language:PHP
extractConstant	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ExtractConstantHandler.php	/^        $this->extractConstant = $extractConstant;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ExtractConstantHandler.php	/^    public function name(): string$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ExtractConstantHandler.php	/^    public function configure(Resolver $resolver)$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ExtractConstantHandler.php	/^    public function handle(array $arguments)$/;"	f	language:PHP
sourceCode	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ExtractConstantHandler.php	/^        $sourceCode = $this->extractConstant->extractConstant($/;"	v	language:PHP
ExtractExpressionHandler	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ExtractExpressionHandler.php	/^class ExtractExpressionHandler extends AbstractHandler$/;"	c	language:PHP
extractExpression	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ExtractExpressionHandler.php	/^    private $extractExpression;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ExtractExpressionHandler.php	/^    public function __construct(ExtractExpression $extractExpression)$/;"	f	language:PHP
extractExpression	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ExtractExpressionHandler.php	/^        $this->extractExpression = $extractExpression;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ExtractExpressionHandler.php	/^    public function name(): string$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ExtractExpressionHandler.php	/^    public function configure(Resolver $resolver)$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ExtractExpressionHandler.php	/^    public function handle(array $arguments)$/;"	f	language:PHP
sourceCode	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ExtractExpressionHandler.php	/^        $sourceCode = $this->extractExpression->extractExpression($/;"	v	language:PHP
ExtractMethodHandler	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ExtractMethodHandler.php	/^class ExtractMethodHandler extends AbstractHandler$/;"	c	language:PHP
extractMethod	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ExtractMethodHandler.php	/^    private $extractMethod;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ExtractMethodHandler.php	/^    public function __construct(ExtractMethod $extractMethod)$/;"	f	language:PHP
extractMethod	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ExtractMethodHandler.php	/^        $this->extractMethod = $extractMethod;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ExtractMethodHandler.php	/^    public function name(): string$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ExtractMethodHandler.php	/^    public function configure(Resolver $resolver)$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ExtractMethodHandler.php	/^    public function handle(array $arguments)$/;"	f	language:PHP
sourceCode	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ExtractMethodHandler.php	/^        $sourceCode = $this->extractMethod->extractMethod($/;"	v	language:PHP
GenerateAccessorHandler	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/GenerateAccessorHandler.php	/^class GenerateAccessorHandler extends AbstractHandler$/;"	c	language:PHP
generateAccessor	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/GenerateAccessorHandler.php	/^    private $generateAccessor;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/GenerateAccessorHandler.php	/^    public function __construct($/;"	f	language:PHP
generateAccessor	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/GenerateAccessorHandler.php	/^        $this->generateAccessor = $generateAccessor;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/GenerateAccessorHandler.php	/^    public function name(): string$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/GenerateAccessorHandler.php	/^    public function configure(Resolver $resolver)$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/GenerateAccessorHandler.php	/^    public function handle(array $arguments)$/;"	f	language:PHP
sourceCode	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/GenerateAccessorHandler.php	/^        $sourceCode = $this->generateAccessor->generateAccessor($/;"	v	language:PHP
GenerateMethodHandler	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/GenerateMethodHandler.php	/^class GenerateMethodHandler extends AbstractHandler$/;"	c	language:PHP
generateMethod	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/GenerateMethodHandler.php	/^    private $generateMethod;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/GenerateMethodHandler.php	/^    public function __construct(GenerateMethod $generateMethod)$/;"	f	language:PHP
generateMethod	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/GenerateMethodHandler.php	/^        $this->generateMethod = $generateMethod;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/GenerateMethodHandler.php	/^    public function name(): string$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/GenerateMethodHandler.php	/^    public function configure(Resolver $resolver)$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/GenerateMethodHandler.php	/^    public function handle(array $arguments)$/;"	f	language:PHP
sourceCode	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/GenerateMethodHandler.php	/^        $sourceCode = $this->generateMethod->generateMethod($/;"	v	language:PHP
originalSource	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/GenerateMethodHandler.php	/^        $originalSource = $this->determineOriginalSource($sourceCode, $arguments);$/;"	v	language:PHP
determineOriginalSource	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/GenerateMethodHandler.php	/^    private function determineOriginalSource(SourceCode $sourceCode, array $arguments)$/;"	f	language:PHP
originalSource	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/GenerateMethodHandler.php	/^        $originalSource = $sourceCode->path() === $arguments[self::PARAM_PATH] ?$/;"	v	language:PHP
ImportClassHandler	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ImportClassHandler.php	/^class ImportClassHandler extends AbstractHandler$/;"	c	language:PHP
classImport	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ImportClassHandler.php	/^    private $classImport;$/;"	v	language:PHP
classSearch	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ImportClassHandler.php	/^    private $classSearch;$/;"	v	language:PHP
filesystem	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ImportClassHandler.php	/^    private $filesystem;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ImportClassHandler.php	/^    public function __construct($/;"	f	language:PHP
classImport	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ImportClassHandler.php	/^        $this->classImport = $classImport;$/;"	v	language:PHP
classSearch	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ImportClassHandler.php	/^        $this->classSearch = $classSearch;$/;"	v	language:PHP
filesystem	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ImportClassHandler.php	/^        $this->filesystem = $filesystem;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ImportClassHandler.php	/^    public function name(): string$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ImportClassHandler.php	/^    public function configure(Resolver $resolver)$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ImportClassHandler.php	/^    public function handle(array $arguments)$/;"	f	language:PHP
suggestions	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ImportClassHandler.php	/^            $suggestions = $this->suggestions($arguments[self::PARAM_NAME]);$/;"	v	language:PHP
sourceCode	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ImportClassHandler.php	/^            $sourceCode = $this->classImport->importClass($/;"	v	language:PHP
suggestions	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ImportClassHandler.php	/^    private function suggestions(string $name)$/;"	f	language:PHP
suggestions	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/ImportClassHandler.php	/^        $suggestions = $this->classSearch->classSearch($/;"	v	language:PHP
OverrideMethodHandler	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/OverrideMethodHandler.php	/^class OverrideMethodHandler extends AbstractHandler$/;"	c	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/OverrideMethodHandler.php	/^    private $reflector;$/;"	v	language:PHP
overrideMethod	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/OverrideMethodHandler.php	/^    private $overrideMethod;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/OverrideMethodHandler.php	/^    public function __construct($/;"	f	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/OverrideMethodHandler.php	/^        $this->reflector = $reflector;$/;"	v	language:PHP
overrideMethod	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/OverrideMethodHandler.php	/^        $this->overrideMethod = $overrideMethod;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/OverrideMethodHandler.php	/^    public function name(): string$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/OverrideMethodHandler.php	/^    public function configure(Resolver $resolver)$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/OverrideMethodHandler.php	/^    public function handle(array $arguments)$/;"	f	language:PHP
class	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/OverrideMethodHandler.php	/^        $class = $this->class($arguments[self::PARAM_SOURCE], $arguments[self::PARAM_CLASS_NAME]);$/;"	v	language:PHP
parentClass	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/OverrideMethodHandler.php	/^        $parentClass = $this->parentClass($class);$/;"	v	language:PHP
transformedCode	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/OverrideMethodHandler.php	/^        $transformedCode = $this->overrideMethod->overrideMethod($/;"	v	language:PHP
class	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/OverrideMethodHandler.php	/^    private function class($source, $className = null)$/;"	f	language:PHP
className	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/OverrideMethodHandler.php	/^    private function class($source, $className = null)$/;"	v	language:PHP
classes	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/OverrideMethodHandler.php	/^        $classes = $this->reflector->reflectClassesIn($source);$/;"	v	language:PHP
parentClass	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/OverrideMethodHandler.php	/^    private function parentClass(ReflectionClass $class)$/;"	f	language:PHP
parentClass	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/OverrideMethodHandler.php	/^        $parentClass = $class->parent();$/;"	v	language:PHP
methodChoices	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/OverrideMethodHandler.php	/^    private function methodChoices(ReflectionClass $parentClass)$/;"	f	language:PHP
methodNames	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/OverrideMethodHandler.php	/^        $methodNames = array_map(function (ReflectionMethod $method) {$/;"	v	language:PHP
RenameVariableHandler	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/RenameVariableHandler.php	/^class RenameVariableHandler extends AbstractHandler$/;"	c	language:PHP
renameVariable	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/RenameVariableHandler.php	/^    private $renameVariable;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/RenameVariableHandler.php	/^    public function __construct(RenameVariable $renameVariable)$/;"	f	language:PHP
renameVariable	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/RenameVariableHandler.php	/^        $this->renameVariable = $renameVariable;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/RenameVariableHandler.php	/^    public function name(): string$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/RenameVariableHandler.php	/^    public function configure(Resolver $resolver)$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/RenameVariableHandler.php	/^    public function handle(array $arguments)$/;"	f	language:PHP
sourceCode	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/RenameVariableHandler.php	/^        $sourceCode = $this->renameVariable->renameVariable($/;"	v	language:PHP
TransformHandler	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/TransformHandler.php	/^class TransformHandler implements Handler$/;"	c	language:PHP
codeTransform	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/TransformHandler.php	/^    private $codeTransform;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/TransformHandler.php	/^    public function __construct(CodeTransform $codeTransform)$/;"	f	language:PHP
codeTransform	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/TransformHandler.php	/^        $this->codeTransform = $codeTransform;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/TransformHandler.php	/^    public function name(): string$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/TransformHandler.php	/^    public function configure(Resolver $resolver)$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/TransformHandler.php	/^    public function handle(array $arguments)$/;"	f	language:PHP
code	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/TransformHandler.php	/^        $code = SourceCode::fromStringAndPath($arguments['source'], $arguments['path']);$/;"	v	language:PHP
transformedCode	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/TransformHandler.php	/^        $transformedCode = $this->codeTransform->transform($code, [$/;"	v	language:PHP
transformerChoiceAction	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/TransformHandler.php	/^    private function transformerChoiceAction(string $path, string $source)$/;"	f	language:PHP
transformers	.config/nvim/plugged/phpactor/lib/Extension/CodeTransform/Rpc/TransformHandler.php	/^        $transformers= $this->codeTransform->transformers()->names();$/;"	v	language:PHP
Complete	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Application/Complete.php	/^class Complete$/;"	c	language:PHP
registry	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Application/Complete.php	/^    private $registry;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Application/Complete.php	/^    public function __construct(TypedCompletorRegistry $registry)$/;"	f	language:PHP
registry	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Application/Complete.php	/^        $this->registry = $registry;$/;"	v	language:PHP
complete	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Application/Complete.php	/^    public function complete(string $source, int $offset, string $type = 'php'): array$/;"	f	language:PHP
type	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Application/Complete.php	/^    public function complete(string $source, int $offset, string $type = 'php'): array$/;"	v	language:PHP
completor	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Application/Complete.php	/^        $completor = $this->registry->completorForType($type);$/;"	v	language:PHP
suggestions	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Application/Complete.php	/^        $suggestions = $completor->complete($source, $offset);$/;"	v	language:PHP
suggestions	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Application/Complete.php	/^        $suggestions = iterator_to_array($suggestions);$/;"	v	language:PHP
suggestions	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Application/Complete.php	/^        $suggestions = array_map(function (Suggestion $suggestion) {$/;"	v	language:PHP
CompleteCommand	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Command/CompleteCommand.php	/^class CompleteCommand extends Command$/;"	c	language:PHP
complete	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Command/CompleteCommand.php	/^    private $complete;$/;"	v	language:PHP
dumperRegistry	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Command/CompleteCommand.php	/^    private $dumperRegistry;$/;"	v	language:PHP
helper	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Command/CompleteCommand.php	/^    private $helper;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Command/CompleteCommand.php	/^    public function __construct($/;"	f	language:PHP
complete	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Command/CompleteCommand.php	/^        $this->complete = $complete;$/;"	v	language:PHP
dumperRegistry	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Command/CompleteCommand.php	/^        $this->dumperRegistry = $dumperRegistry;$/;"	v	language:PHP
helper	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Command/CompleteCommand.php	/^        $this->helper = new FilesystemHelper();$/;"	v	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Command/CompleteCommand.php	/^    public function configure()$/;"	f	language:PHP
execute	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Command/CompleteCommand.php	/^    public function execute(InputInterface $input, OutputInterface $output)$/;"	f	language:PHP
completions	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Command/CompleteCommand.php	/^        $completions = $this->complete->complete($/;"	v	language:PHP
format	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Command/CompleteCommand.php	/^        $format = $input->getOption('format');$/;"	v	language:PHP
CompletionExtraExtension	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/CompletionExtraExtension.php	/^class CompletionExtraExtension implements Extension$/;"	c	language:PHP
load	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/CompletionExtraExtension.php	/^    public function load(ContainerBuilder $container)$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/CompletionExtraExtension.php	/^    public function configure(Resolver $schema)$/;"	f	language:PHP
registerRpc	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/CompletionExtraExtension.php	/^    private function registerRpc(ContainerBuilder $container)$/;"	f	language:PHP
registerCommands	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/CompletionExtraExtension.php	/^    private function registerCommands(ContainerBuilder $container)$/;"	f	language:PHP
registerApplicationServices	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/CompletionExtraExtension.php	/^    private function registerApplicationServices(ContainerBuilder $container)$/;"	f	language:PHP
registerLanguageServer	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/CompletionExtraExtension.php	/^    private function registerLanguageServer(ContainerBuilder $container)$/;"	f	language:PHP
CompletionHandler	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionHandler.php	/^class CompletionHandler implements Handler$/;"	c	language:PHP
completor	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionHandler.php	/^    private $completor;$/;"	v	language:PHP
sessionManager	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionHandler.php	/^    private $sessionManager;$/;"	v	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionHandler.php	/^    private $reflector;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionHandler.php	/^    public function __construct(Manager $sessionManager, Completor $completor, SourceCodeReflector $reflector)$/;"	f	language:PHP
completor	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionHandler.php	/^        $this->completor = $completor;$/;"	v	language:PHP
sessionManager	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionHandler.php	/^        $this->sessionManager = $sessionManager;$/;"	v	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionHandler.php	/^        $this->reflector = $reflector;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionHandler.php	/^    public function name(): string$/;"	f	language:PHP
__invoke	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionHandler.php	/^    public function __invoke(TextDocumentItem $textDocument, Position $position): Generator$/;"	f	language:PHP
textDocument	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionHandler.php	/^        $textDocument = $this->sessionManager->current()->workspace()->get($textDocument->uri);$/;"	v	language:PHP
suggestions	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionHandler.php	/^        $suggestions = $this->completor->complete($/;"	v	language:PHP
completionList	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionHandler.php	/^        $completionList = new CompletionList();$/;"	v	language:PHP
diagnostics	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionHandler.php	/^        $diagnostics = $this->resolveDiagnostics($textDocument, $position);$/;"	v	language:PHP
resolveDiagnostics	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionHandler.php	/^    private function resolveDiagnostics(TextDocumentItem $textDocument, Position $position)$/;"	f	language:PHP
reflectionOffset	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionHandler.php	/^        $reflectionOffset = $this->reflector->reflectOffset($/;"	v	language:PHP
issues	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionHandler.php	/^        $issues = $reflectionOffset->symbolContext()->issues();$/;"	v	language:PHP
diagnostics	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionHandler.php	/^        $diagnostics = [];$/;"	v	language:PHP
position	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionHandler.php	/^        $position = $reflectionOffset->symbolContext()->symbol()->position();$/;"	v	language:PHP
CompletionLanguageExtension	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionLanguageExtension.php	/^class CompletionLanguageExtension implements Extension$/;"	c	language:PHP
sessionManager	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionLanguageExtension.php	/^    private $sessionManager;$/;"	v	language:PHP
completor	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionLanguageExtension.php	/^    private $completor;$/;"	v	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionLanguageExtension.php	/^    private $reflector;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionLanguageExtension.php	/^    public function __construct(Manager $sessionManager, Completor $completor, SourceCodeReflector $reflector)$/;"	f	language:PHP
sessionManager	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionLanguageExtension.php	/^        $this->sessionManager = $sessionManager;$/;"	v	language:PHP
completor	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionLanguageExtension.php	/^        $this->completor = $completor;$/;"	v	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionLanguageExtension.php	/^        $this->reflector = $reflector;$/;"	v	language:PHP
handlers	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionLanguageExtension.php	/^    public function handlers(): Handlers$/;"	f	language:PHP
configureCapabilities	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/CompletionLanguageExtension.php	/^    public function configureCapabilities(ServerCapabilities $capabilities): void$/;"	f	language:PHP
PhpactorToLspCompletionType	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/PhpactorToLspCompletionType.php	/^class PhpactorToLspCompletionType$/;"	c	language:PHP
fromPhpactorType	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/LanguageServer/PhpactorToLspCompletionType.php	/^    public static function fromPhpactorType(?string $suggestionType)$/;"	f	language:PHP
HoverHandler	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^class HoverHandler implements Handler$/;"	c	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^    private $reflector;$/;"	v	language:PHP
formatter	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^    private $formatter;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^    public function __construct(Reflector $reflector, ObjectFormatter $formatter)$/;"	f	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^        $this->reflector = $reflector;$/;"	v	language:PHP
formatter	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^        $this->formatter = $formatter;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^    public function name(): string$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^    public function configure(Resolver $resolver)$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^    public function handle(array $arguments)$/;"	f	language:PHP
offset	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^        $offset = $this->reflector->reflectOffset($arguments[self::PARAM_SOURCE], $arguments[self::PARAM_OFFSET]);$/;"	v	language:PHP
types	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^        $types = $offset->symbolContext()->types();$/;"	v	language:PHP
symbolContext	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^        $symbolContext = $offset->symbolContext();$/;"	v	language:PHP
info	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^        $info = $this->messageFromSymbolContext($symbolContext);$/;"	v	language:PHP
info	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^        $info = $info ?: sprintf($/;"	v	language:PHP
renderSymbolContext	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^    private function renderSymbolContext(SymbolContext $symbolContext): ?string$/;"	f	language:PHP
renderMember	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^    private function renderMember(SymbolContext $symbolContext): ?string$/;"	f	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^        $name = $symbolContext->symbol()->name();$/;"	v	language:PHP
container	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^        $container = $symbolContext->containerType();$/;"	v	language:PHP
class	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^            $class = $this->reflector->reflectClassLike((string) $container);$/;"	v	language:PHP
member	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^                $member = $class->methods()->get($name);$/;"	v	language:PHP
member	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^                $member = $class->members()->get($name);$/;"	v	language:PHP
member	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^                $member = $class->members()->get($name);$/;"	v	language:PHP
renderFunction	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^    private function renderFunction(SymbolContext $symbolContext)$/;"	f	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^        $name = $symbolContext->symbol()->name();$/;"	v	language:PHP
function	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^        $function = $this->reflector->reflectFunction($name);$/;"	v	language:PHP
renderVariable	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^    private function renderVariable(SymbolContext $symbolContext)$/;"	f	language:PHP
renderClass	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^    private function renderClass(Type $type)$/;"	f	language:PHP
class	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^            $class = $this->reflector->reflectClassLike((string) $type);$/;"	v	language:PHP
messageFromSymbolContext	.config/nvim/plugged/phpactor/lib/Extension/CompletionExtra/Rpc/HoverHandler.php	/^    private function messageFromSymbolContext(SymbolContext $symbolContext): ?string$/;"	f	language:PHP
ContextMenuExtension	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/ContextMenuExtension.php	/^class ContextMenuExtension implements Extension$/;"	c	language:PHP
load	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/ContextMenuExtension.php	/^    public function load(ContainerBuilder $container)$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/ContextMenuExtension.php	/^    public function configure(Resolver $schema)$/;"	f	language:PHP
ContextMenuHandler	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^class ContextMenuHandler implements Handler$/;"	c	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^    private $reflector;$/;"	v	language:PHP
menu	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^    private $menu;$/;"	v	language:PHP
container	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^    private $container;$/;"	v	language:PHP
classFileNormalizer	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^    private $classFileNormalizer;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^    public function __construct($/;"	f	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^        $this->reflector = $reflector;$/;"	v	language:PHP
menu	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^        $this->menu = $menu;$/;"	v	language:PHP
container	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^        $this->container = $container;$/;"	v	language:PHP
classFileNormalizer	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^        $this->classFileNormalizer = $classFileNormalizer;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^    public function name(): string$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^    public function configure(Resolver $resolver)$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^    public function handle(array $arguments)$/;"	f	language:PHP
offset	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^        $offset = $this->offsetFromSourceAndOffset($arguments[self::PARAMETER_SOURCE], $arguments[self::PARAMETER_OFFSET], $arguments[self::PARAMETER_CURRENT_PATH]);$/;"	v	language:PHP
symbol	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^        $symbol = $offset->symbolContext()->symbol();$/;"	v	language:PHP
resolveAction	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^    private function resolveAction(ReflectionOffset $offset, Symbol $symbol, array $arguments)$/;"	f	language:PHP
symbolMenu	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^        $symbolMenu = $this->menu[$symbol->symbolType()];$/;"	v	language:PHP
delegateAction	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^    private function delegateAction(array $symbolMenu, array $arguments, ReflectionOffset $offset): Response$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^        $action = $symbolMenu[$arguments[self::PARAMETER_ACTION]];$/;"	v	language:PHP
actionSelectionAction	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^    private function actionSelectionAction(Symbol $symbol, $symbolMenu, array $arguments): InputCallbackResponse$/;"	f	language:PHP
offsetFromSourceAndOffset	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^    private function offsetFromSourceAndOffset(string $source, int $offset, string $currentPath)$/;"	f	language:PHP
replaceTokens	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^    private function replaceTokens(array $parameters, ReflectionOffset $offset, array $arguments)$/;"	f	language:PHP
symbolContext	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^        $symbolContext = $offset->symbolContext();$/;"	v	language:PHP
parameterName	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^        foreach ($parameters as $parameterName => $parameterValue) {$/;"	v	language:PHP
parameterValue	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^                    $parameterValue = $arguments[self::PARAMETER_CURRENT_PATH];$/;"	v	language:PHP
type	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^                    $type = $symbolContext->hasContainerType() ? $symbolContext->containerType() : $symbolContext->type();$/;"	v	language:PHP
parameterValue	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^                    $parameterValue = $this->classFileNormalizer->classToFile($type);$/;"	v	language:PHP
parameterValue	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^                    $parameterValue = $arguments[self::PARAMETER_OFFSET];$/;"	v	language:PHP
parameterValue	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^                    $parameterValue = $arguments[self::PARAMETER_SOURCE];$/;"	v	language:PHP
parameterValue	.config/nvim/plugged/phpactor/lib/Extension/ContextMenu/Handler/ContextMenuHandler.php	/^                    $parameterValue = $symbolContext->symbol()->name();$/;"	v	language:PHP
CacheClear	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/CacheClear.php	/^class CacheClear$/;"	c	language:PHP
cachePath	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/CacheClear.php	/^    private $cachePath;$/;"	v	language:PHP
filesystem	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/CacheClear.php	/^    private $filesystem;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/CacheClear.php	/^    public function __construct(string $cachePath)$/;"	f	language:PHP
cachePath	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/CacheClear.php	/^        $this->cachePath = Path::canonicalize($cachePath);$/;"	v	language:PHP
filesystem	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/CacheClear.php	/^        $this->filesystem = new Filesystem();$/;"	v	language:PHP
clearCache	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/CacheClear.php	/^    public function clearCache()$/;"	f	language:PHP
cachePath	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/CacheClear.php	/^    public function cachePath()$/;"	f	language:PHP
ClassFileNormalizer	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Helper/ClassFileNormalizer.php	/^class ClassFileNormalizer$/;"	c	language:PHP
fileClassConverter	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Helper/ClassFileNormalizer.php	/^    private $fileClassConverter;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Helper/ClassFileNormalizer.php	/^    public function __construct($/;"	f	language:PHP
fileClassConverter	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Helper/ClassFileNormalizer.php	/^        $this->fileClassConverter = $fileClassConverter;$/;"	v	language:PHP
normalizeToFile	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Helper/ClassFileNormalizer.php	/^    public function normalizeToFile(string $classOrFile): string$/;"	f	language:PHP
normalizeToClass	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Helper/ClassFileNormalizer.php	/^    public function normalizeToClass(string $classOrFile): string$/;"	f	language:PHP
resp	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Helper/ClassFileNormalizer.php	/^        if (true === $resp = Phpactor::isFile($classOrFile)) {$/;"	v	language:PHP
classToFile	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Helper/ClassFileNormalizer.php	/^    public function classToFile(string $class, bool $hasToExist = false)$/;"	f	language:PHP
hasToExist	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Helper/ClassFileNormalizer.php	/^    public function classToFile(string $class, bool $hasToExist = false)$/;"	v	language:PHP
filePathCandidates	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Helper/ClassFileNormalizer.php	/^        $filePathCandidates = $this->fileClassConverter->classToFileCandidates($/;"	v	language:PHP
fileToClass	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Helper/ClassFileNormalizer.php	/^    public function fileToClass(string $file): string$/;"	f	language:PHP
classCandidates	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Helper/ClassFileNormalizer.php	/^        $classCandidates = $this->fileClassConverter->fileToClassCandidates($/;"	v	language:PHP
FilesystemHelper	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Helper/FilesystemHelper.php	/^final class FilesystemHelper$/;"	c	language:PHP
contentsFromFileOrStdin	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Helper/FilesystemHelper.php	/^    public function contentsFromFileOrStdin(string $filePath): string$/;"	f	language:PHP
contents	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Helper/FilesystemHelper.php	/^        $contents = '';$/;"	v	language:PHP
globSourceDestination	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Helper/FilesystemHelper.php	/^    public static function globSourceDestination(string $src, string $dest): \\Generator$/;"	f	language:PHP
globDest	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Helper/FilesystemHelper.php	/^            $globDest = $dest;$/;"	v	language:PHP
globDest	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Helper/FilesystemHelper.php	/^                $globDest = Path::join($dest, Path::getFilename($globSrc));$/;"	v	language:PHP
globSrc	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Helper/FilesystemHelper.php	/^            yield $globSrc => $globDest;$/;"	v	language:PHP
Status	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Status.php	/^class Status$/;"	c	language:PHP
registry	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Status.php	/^    private $registry;$/;"	v	language:PHP
executableFinder	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Status.php	/^    private $executableFinder;$/;"	v	language:PHP
paths	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Status.php	/^    private $paths;$/;"	v	language:PHP
workingDirectory	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Status.php	/^    private $workingDirectory;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Status.php	/^    public function __construct($/;"	f	language:PHP
executableFinder	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Status.php	/^        ExecutableFinder $executableFinder = null$/;"	v	language:PHP
registry	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Status.php	/^        $this->registry = $registry;$/;"	v	language:PHP
executableFinder	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Status.php	/^        $this->executableFinder = $executableFinder ?: new ExecutableFinder();$/;"	v	language:PHP
paths	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Status.php	/^        $this->paths = $paths;$/;"	v	language:PHP
workingDirectory	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Status.php	/^        $this->workingDirectory = $workingDirectory;$/;"	v	language:PHP
check	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Status.php	/^    public function check(): array$/;"	f	language:PHP
filesystems	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Status.php	/^        $filesystems = $this->registry->names();$/;"	v	language:PHP
diagnostics	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Status.php	/^        $diagnostics = [$/;"	v	language:PHP
location	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Status.php	/^            $diagnostics['good'][] = 'Composer detected - faster class location and more features!';$/;"	c	language:PHP
creation	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Status.php	/^            $diagnostics['bad'][] = 'Composer not found - some functionality will not be available (e.g. class creation) and class location will fallback to scanning the filesystem - this can be slow. Make sure you\\'ve run `composer install` in your project!';$/;"	c	language:PHP
process	.config/nvim/plugged/phpactor/lib/Extension/Core/Application/Status.php	/^            $process = new Process('git log -1 --pretty=format:"%h (%ad) %f" --date=relative', __DIR__ . '\/..\/..\/..\/..');$/;"	v	language:PHP
CacheClearCommand	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/CacheClearCommand.php	/^class CacheClearCommand extends Command$/;"	c	language:PHP
cache	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/CacheClearCommand.php	/^    private $cache;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/CacheClearCommand.php	/^    public function __construct(CacheClear $cache)$/;"	f	language:PHP
cache	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/CacheClearCommand.php	/^        $this->cache = $cache;$/;"	v	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/CacheClearCommand.php	/^    protected function configure()$/;"	f	language:PHP
execute	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/CacheClearCommand.php	/^    protected function execute(InputInterface $input, OutputInterface $output)$/;"	f	language:PHP
ConfigDumpCommand	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/ConfigDumpCommand.php	/^class ConfigDumpCommand extends Command$/;"	c	language:PHP
config	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/ConfigDumpCommand.php	/^    private $config;$/;"	v	language:PHP
registry	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/ConfigDumpCommand.php	/^    private $registry;$/;"	v	language:PHP
paths	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/ConfigDumpCommand.php	/^    private $paths;$/;"	v	language:PHP
expanders	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/ConfigDumpCommand.php	/^    private $expanders;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/ConfigDumpCommand.php	/^    public function __construct($/;"	f	language:PHP
config	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/ConfigDumpCommand.php	/^        $this->config = $config;$/;"	v	language:PHP
registry	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/ConfigDumpCommand.php	/^        $this->registry = $registry;$/;"	v	language:PHP
paths	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/ConfigDumpCommand.php	/^        $this->paths = $paths;$/;"	v	language:PHP
expanders	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/ConfigDumpCommand.php	/^        $this->expanders = $expanders;$/;"	v	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/ConfigDumpCommand.php	/^    public function configure()$/;"	f	language:PHP
execute	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/ConfigDumpCommand.php	/^    public function execute(InputInterface $input, OutputInterface $output)$/;"	f	language:PHP
dumpMetaInformation	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/ConfigDumpCommand.php	/^    private function dumpMetaInformation(OutputInterface $output)$/;"	f	language:PHP
tokenName	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/ConfigDumpCommand.php	/^        foreach ($this->expanders->toArray() as $tokenName => $value) {$/;"	v	language:PHP
terminal	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/ConfigDumpCommand.php	/^        $terminal = new Terminal();$/;"	v	language:PHP
StatusCommand	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/StatusCommand.php	/^class StatusCommand extends Command$/;"	c	language:PHP
status	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/StatusCommand.php	/^    private $status;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/StatusCommand.php	/^    public function __construct(Status $status)$/;"	f	language:PHP
status	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/StatusCommand.php	/^        $this->status = $status;$/;"	v	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/StatusCommand.php	/^    protected function configure()$/;"	f	language:PHP
execute	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/StatusCommand.php	/^    protected function execute(InputInterface $input, OutputInterface $output)$/;"	f	language:PHP
diagnostics	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/StatusCommand.php	/^        $diagnostics = $this->status->check();$/;"	v	language:PHP
configFile	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/StatusCommand.php	/^        foreach ($diagnostics['config_files'] as $configFile => $exists) {$/;"	v	language:PHP
check	.config/nvim/plugged/phpactor/lib/Extension/Core/Command/StatusCommand.php	/^            $check = $exists ? '<info>✔<\/>' : '<error>✘<\/>';$/;"	v	language:PHP
Dumper	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/Dumper.php	/^interface Dumper$/;"	i	language:PHP
dump	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/Dumper.php	/^    public function dump(OutputInterface $output, array $data);$/;"	f	language:PHP
DumperRegistry	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/DumperRegistry.php	/^final class DumperRegistry$/;"	c	language:PHP
default	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/DumperRegistry.php	/^    private $default;$/;"	v	language:PHP
dumpers	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/DumperRegistry.php	/^    private $dumpers = [];$/;"	v	language:PHP
dumpers	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/DumperRegistry.php	/^    private $dumpers = [];$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/DumperRegistry.php	/^    public function __construct(array $dumpers, string $default)$/;"	f	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/DumperRegistry.php	/^        foreach ($dumpers as $name => $dumper) {$/;"	v	language:PHP
default	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/DumperRegistry.php	/^        $this->default = $default;$/;"	v	language:PHP
get	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/DumperRegistry.php	/^    public function get(string $name = null): Dumper$/;"	f	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/DumperRegistry.php	/^    public function get(string $name = null): Dumper$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/DumperRegistry.php	/^        $name = $name ?: $this->default;$/;"	v	language:PHP
add	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/DumperRegistry.php	/^    private function add(string $name, Dumper $dumper)$/;"	f	language:PHP
IndentedDumper	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/IndentedDumper.php	/^final class IndentedDumper implements Dumper$/;"	c	language:PHP
dump	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/IndentedDumper.php	/^    public function dump(OutputInterface $output, array $data)$/;"	f	language:PHP
doDump	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/IndentedDumper.php	/^    private function doDump(OutputInterface $output, array $data, $padding = 0)$/;"	f	language:PHP
padding	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/IndentedDumper.php	/^    private function doDump(OutputInterface $output, array $data, $padding = 0)$/;"	v	language:PHP
style	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/IndentedDumper.php	/^                $style = 'info';$/;"	v	language:PHP
style	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/IndentedDumper.php	/^                $style = 'comment';$/;"	v	language:PHP
key	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/IndentedDumper.php	/^        foreach ($data as $key => $value) {$/;"	v	language:PHP
formatValue	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/IndentedDumper.php	/^    private function formatValue($value)$/;"	f	language:PHP
JsonDumper	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/JsonDumper.php	/^final class JsonDumper implements Dumper$/;"	c	language:PHP
dump	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/JsonDumper.php	/^    public function dump(OutputInterface $output, array $data)$/;"	f	language:PHP
TableDumper	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/TableDumper.php	/^final class TableDumper implements Dumper$/;"	c	language:PHP
dump	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/TableDumper.php	/^    public function dump(OutputInterface $output, array $data)$/;"	f	language:PHP
table	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/TableDumper.php	/^        $table = new Table($output);$/;"	v	language:PHP
key	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/TableDumper.php	/^        foreach ($data as $key => $value) {$/;"	v	language:PHP
value	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/TableDumper.php	/^                $value = $this->formatArray($value);$/;"	v	language:PHP
formatArray	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/TableDumper.php	/^    private function formatArray(array $data, $padding = 0)$/;"	f	language:PHP
padding	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/TableDumper.php	/^    private function formatArray(array $data, $padding = 0)$/;"	v	language:PHP
output	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/TableDumper.php	/^        $output = [];$/;"	v	language:PHP
key	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Dumper/TableDumper.php	/^        foreach ($data as $key => $value) {$/;"	v	language:PHP
Highlight	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Formatter/Highlight.php	/^class Highlight$/;"	c	language:PHP
highlightAtCol	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Formatter/Highlight.php	/^    public static function highlightAtCol(string $line, string $subject, int $col, bool $ansi)$/;"	f	language:PHP
leftBracket	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Formatter/Highlight.php	/^        $leftBracket = '⟶';$/;"	v	language:PHP
rightBracket	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Formatter/Highlight.php	/^        $rightBracket = '⟵';$/;"	v	language:PHP
leftBracket	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Formatter/Highlight.php	/^            $leftBracket = '<highlight>';$/;"	v	language:PHP
rightBracket	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Formatter/Highlight.php	/^            $rightBracket = '<\/>';$/;"	v	language:PHP
FilesystemHandler	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Handler/FilesystemHandler.php	/^class FilesystemHandler$/;"	c	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Handler/FilesystemHandler.php	/^    public static function configure(Command $command, string $default)$/;"	f	language:PHP
FormatHandler	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Handler/FormatHandler.php	/^class FormatHandler$/;"	c	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Handler/FormatHandler.php	/^    public static function configure(Command $command)$/;"	f	language:PHP
PhpactorCommandLoader	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/PhpactorCommandLoader.php	/^class PhpactorCommandLoader extends ContainerCommandLoader$/;"	c	language:PHP
get	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/PhpactorCommandLoader.php	/^    public function get($name)$/;"	f	language:PHP
command	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/PhpactorCommandLoader.php	/^        $command = parent::get($name);$/;"	v	language:PHP
BashPrompt	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Prompt/BashPrompt.php	/^class BashPrompt implements Prompt$/;"	c	language:PHP
prompt	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Prompt/BashPrompt.php	/^    public function prompt(string $prompt, string $prefill): string$/;"	f	language:PHP
cmd	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Prompt/BashPrompt.php	/^        $cmd = sprintf($/;"	v	language:PHP
cmd	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Prompt/BashPrompt.php	/^        $cmd = str_replace('\\'', '__QUOTE__', $cmd);$/;"	v	language:PHP
cmd	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Prompt/BashPrompt.php	/^        $cmd = str_replace('"', '\\'', $cmd);$/;"	v	language:PHP
cmd	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Prompt/BashPrompt.php	/^        $cmd = str_replace('__QUOTE__', '"', $cmd);$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Prompt/BashPrompt.php	/^    public function name(): string$/;"	f	language:PHP
isSupported	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Prompt/BashPrompt.php	/^    public function isSupported()$/;"	f	language:PHP
getBashPath	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Prompt/BashPrompt.php	/^    private function getBashPath()$/;"	f	language:PHP
executableFinder	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Prompt/BashPrompt.php	/^        $executableFinder = new ExecutableFinder();$/;"	v	language:PHP
ChainPrompt	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Prompt/ChainPrompt.php	/^final class ChainPrompt implements Prompt$/;"	c	language:PHP
prompts	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Prompt/ChainPrompt.php	/^    private $prompts;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Prompt/ChainPrompt.php	/^    public function __construct(array $prompts)$/;"	f	language:PHP
prompt	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Prompt/ChainPrompt.php	/^    public function prompt(string $prompt, string $prefill): string$/;"	f	language:PHP
isSupported	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Prompt/ChainPrompt.php	/^    public function isSupported()$/;"	f	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Prompt/ChainPrompt.php	/^    public function name(): string$/;"	f	language:PHP
addPrompt	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Prompt/ChainPrompt.php	/^    private function addPrompt(Prompt $prompt)$/;"	f	language:PHP
Prompt	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Prompt/Prompt.php	/^interface Prompt$/;"	i	language:PHP
prompt	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Prompt/Prompt.php	/^    public function prompt(string $prompt, string $default): string;$/;"	f	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Prompt/Prompt.php	/^    public function name(): string;$/;"	f	language:PHP
isSupported	.config/nvim/plugged/phpactor/lib/Extension/Core/Console/Prompt/Prompt.php	/^    public function isSupported();$/;"	f	language:PHP
CoreExtension	.config/nvim/plugged/phpactor/lib/Extension/Core/CoreExtension.php	/^class CoreExtension implements Extension$/;"	c	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/Core/CoreExtension.php	/^    public function configure(Resolver $schema)$/;"	f	language:PHP
load	.config/nvim/plugged/phpactor/lib/Extension/Core/CoreExtension.php	/^    public function load(ContainerBuilder $container)$/;"	f	language:PHP
registerConsole	.config/nvim/plugged/phpactor/lib/Extension/Core/CoreExtension.php	/^    private function registerConsole(ContainerBuilder $container)$/;"	f	language:PHP
dumpers	.config/nvim/plugged/phpactor/lib/Extension/Core/CoreExtension.php	/^            $dumpers = [];$/;"	v	language:PHP
dumperId	.config/nvim/plugged/phpactor/lib/Extension/Core/CoreExtension.php	/^            foreach ($container->getServiceIdsForTag('console.dumper') as $dumperId => $attrs) {$/;"	v	language:PHP
registerApplicationServices	.config/nvim/plugged/phpactor/lib/Extension/Core/CoreExtension.php	/^    private function registerApplicationServices(Container $container)$/;"	f	language:PHP
registerRpc	.config/nvim/plugged/phpactor/lib/Extension/Core/CoreExtension.php	/^    private function registerRpc(ContainerBuilder $container)$/;"	f	language:PHP
registerFilePathExpanders	.config/nvim/plugged/phpactor/lib/Extension/Core/CoreExtension.php	/^    private function registerFilePathExpanders(ContainerBuilder $container)$/;"	f	language:PHP
path	.config/nvim/plugged/phpactor/lib/Extension/Core/CoreExtension.php	/^            $path = $container->getParameter(FilePathResolverExtension::PARAM_PROJECT_ROOT) . '\/.phpactor';$/;"	v	language:PHP
CacheClearHandler	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/CacheClearHandler.php	/^class CacheClearHandler implements Handler$/;"	c	language:PHP
cacheClear	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/CacheClearHandler.php	/^    private $cacheClear;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/CacheClearHandler.php	/^    public function __construct(CacheClear $cacheClear)$/;"	f	language:PHP
cacheClear	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/CacheClearHandler.php	/^        $this->cacheClear = $cacheClear;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/CacheClearHandler.php	/^    public function name(): string$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/CacheClearHandler.php	/^    public function configure(Resolver $resolver)$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/CacheClearHandler.php	/^    public function handle(array $arguments)$/;"	f	language:PHP
ConfigHandler	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/ConfigHandler.php	/^class ConfigHandler implements Handler$/;"	c	language:PHP
config	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/ConfigHandler.php	/^    private $config;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/ConfigHandler.php	/^    public function __construct(array $config)$/;"	f	language:PHP
config	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/ConfigHandler.php	/^        $this->config = $config;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/ConfigHandler.php	/^    public function name(): string$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/ConfigHandler.php	/^    public function configure(Resolver $resolver)$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/ConfigHandler.php	/^    public function handle(array $arguments)$/;"	f	language:PHP
StatusHandler	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/StatusHandler.php	/^class StatusHandler implements Handler$/;"	c	language:PHP
status	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/StatusHandler.php	/^    private $status;$/;"	v	language:PHP
paths	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/StatusHandler.php	/^    private $paths;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/StatusHandler.php	/^    public function __construct(Status $status, PathCandidates $paths)$/;"	f	language:PHP
status	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/StatusHandler.php	/^        $this->status = $status;$/;"	v	language:PHP
paths	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/StatusHandler.php	/^        $this->paths = $paths;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/StatusHandler.php	/^    public function name(): string$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/StatusHandler.php	/^    public function configure(Resolver $resolver)$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/StatusHandler.php	/^    public function handle(array $arguments)$/;"	f	language:PHP
diagnostics	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/StatusHandler.php	/^        $diagnostics = $this->status->check();$/;"	v	language:PHP
buildSupportMessage	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/StatusHandler.php	/^    private function buildSupportMessage(array $diagnostics)$/;"	f	language:PHP
buildConfigFileMessage	.config/nvim/plugged/phpactor/lib/Extension/Core/Rpc/StatusHandler.php	/^    private function buildConfigFileMessage()$/;"	f	language:PHP
Navigator	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Application/Navigator.php	/^class Navigator$/;"	c	language:PHP
navigator	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Application/Navigator.php	/^    private $navigator;$/;"	v	language:PHP
classNew	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Application/Navigator.php	/^    private $classNew;$/;"	v	language:PHP
autoCreateConfig	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Application/Navigator.php	/^    private $autoCreateConfig;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Application/Navigator.php	/^    public function __construct($/;"	f	language:PHP
navigator	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Application/Navigator.php	/^        $this->navigator = $navigator;$/;"	v	language:PHP
classNew	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Application/Navigator.php	/^        $this->classNew = $classNew;$/;"	v	language:PHP
autoCreateConfig	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Application/Navigator.php	/^        $this->autoCreateConfig = $autoCreateConfig;$/;"	v	language:PHP
destinationsFor	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Application/Navigator.php	/^    public function destinationsFor(string $path)$/;"	f	language:PHP
canCreateNew	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Application/Navigator.php	/^    public function canCreateNew(string $path, string $destinationName)$/;"	f	language:PHP
destination	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Application/Navigator.php	/^        $destination = $this->destination($path, $destinationName);$/;"	v	language:PHP
createNew	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Application/Navigator.php	/^    public function createNew(string $path, string $destinationName)$/;"	f	language:PHP
destination	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Application/Navigator.php	/^        $destination = $this->destination($path, $destinationName);$/;"	v	language:PHP
variant	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Application/Navigator.php	/^        $variant = $this->variant($destinationName);$/;"	v	language:PHP
destination	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Application/Navigator.php	/^    private function destination(string $path, string $destinationName)$/;"	f	language:PHP
destinations	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Application/Navigator.php	/^        $destinations = $this->destinationsFor($path);$/;"	v	language:PHP
variant	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Application/Navigator.php	/^    private function variant(string $destinationName)$/;"	f	language:PHP
variant	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Application/Navigator.php	/^                'Destination "%s" has no new class variant set',$/;"	c	language:PHP
NavigateHandler	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Handler/NavigateHandler.php	/^class NavigateHandler extends AbstractHandler$/;"	c	language:PHP
navigator	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Handler/NavigateHandler.php	/^    private $navigator;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Handler/NavigateHandler.php	/^    public function __construct(Navigator $navigator)$/;"	f	language:PHP
navigator	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Handler/NavigateHandler.php	/^        $this->navigator = $navigator;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Handler/NavigateHandler.php	/^    public function name(): string$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Handler/NavigateHandler.php	/^    public function configure(Resolver $resolver)$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Handler/NavigateHandler.php	/^    public function handle(array $arguments)$/;"	f	language:PHP
destinations	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Handler/NavigateHandler.php	/^        $destinations = $this->navigator->destinationsFor($arguments[self::PARAM_SOURCE_PATH]);$/;"	v	language:PHP
path	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Handler/NavigateHandler.php	/^        $path = $destinations[$arguments[self::PARAM_DESTINATION]];$/;"	v	language:PHP
canCreate	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Handler/NavigateHandler.php	/^        $canCreate = $this->navigator->canCreateNew($arguments[self::PARAM_SOURCE_PATH], $arguments[self::PARAM_DESTINATION]);$/;"	v	language:PHP
NavigationExtension	.config/nvim/plugged/phpactor/lib/Extension/Navigation/NavigationExtension.php	/^class NavigationExtension implements Extension$/;"	c	language:PHP
load	.config/nvim/plugged/phpactor/lib/Extension/Navigation/NavigationExtension.php	/^    public function load(ContainerBuilder $container)$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/Navigation/NavigationExtension.php	/^    public function configure(Resolver $schema)$/;"	f	language:PHP
registerPathFinder	.config/nvim/plugged/phpactor/lib/Extension/Navigation/NavigationExtension.php	/^    private function registerPathFinder(ContainerBuilder $container)$/;"	f	language:PHP
registerRpc	.config/nvim/plugged/phpactor/lib/Extension/Navigation/NavigationExtension.php	/^    private function registerRpc(ContainerBuilder $container)$/;"	f	language:PHP
registerNavigators	.config/nvim/plugged/phpactor/lib/Extension/Navigation/NavigationExtension.php	/^    private function registerNavigators(ContainerBuilder $container)$/;"	f	language:PHP
navigators	.config/nvim/plugged/phpactor/lib/Extension/Navigation/NavigationExtension.php	/^            $navigators = [];$/;"	v	language:PHP
serviceId	.config/nvim/plugged/phpactor/lib/Extension/Navigation/NavigationExtension.php	/^            foreach ($container->getServiceIdsForTag('navigation.navigator') as $serviceId => $attrs) {$/;"	v	language:PHP
ChainNavigator	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/ChainNavigator.php	/^class ChainNavigator implements Navigator$/;"	c	language:PHP
navigators	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/ChainNavigator.php	/^    private $navigators;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/ChainNavigator.php	/^    public function __construct(array $navigators)$/;"	f	language:PHP
navigators	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/ChainNavigator.php	/^        $this->navigators = $navigators;$/;"	v	language:PHP
destinationsFor	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/ChainNavigator.php	/^    public function destinationsFor(string $path): array$/;"	f	language:PHP
destinations	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/ChainNavigator.php	/^        $destinations = [];$/;"	v	language:PHP
destinations	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/ChainNavigator.php	/^            $destinations = array_merge($destinations, $navigator->destinationsFor($path));$/;"	v	language:PHP
Navigator	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/Navigator.php	/^interface Navigator$/;"	i	language:PHP
destinationsFor	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/Navigator.php	/^    public function destinationsFor(string $path): array;$/;"	f	language:PHP
PathFinderNavigator	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/PathFinderNavigator.php	/^class PathFinderNavigator implements Navigator$/;"	c	language:PHP
pathFinder	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/PathFinderNavigator.php	/^    private $pathFinder;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/PathFinderNavigator.php	/^    public function __construct(PathFinder $pathFinder)$/;"	f	language:PHP
pathFinder	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/PathFinderNavigator.php	/^        $this->pathFinder = $pathFinder;$/;"	v	language:PHP
destinationsFor	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/PathFinderNavigator.php	/^    public function destinationsFor(string $path): array$/;"	f	language:PHP
WorseReflectionNavigator	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/WorseReflectionNavigator.php	/^class WorseReflectionNavigator implements Navigator$/;"	c	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/WorseReflectionNavigator.php	/^    private $reflector;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/WorseReflectionNavigator.php	/^    public function __construct(Reflector $reflector)$/;"	f	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/WorseReflectionNavigator.php	/^        $this->reflector = $reflector;$/;"	v	language:PHP
destinationsFor	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/WorseReflectionNavigator.php	/^    public function destinationsFor(string $path): array$/;"	f	language:PHP
destinations	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/WorseReflectionNavigator.php	/^        $destinations = [];$/;"	v	language:PHP
source	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/WorseReflectionNavigator.php	/^        $source = SourceCode::fromPath($path);$/;"	v	language:PHP
classes	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/WorseReflectionNavigator.php	/^        $classes = $this->reflector->reflectClassesIn($source);$/;"	v	language:PHP
destinations	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/WorseReflectionNavigator.php	/^                $destinations = $this->forReflectionClass($destinations, $class);$/;"	v	language:PHP
destinations	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/WorseReflectionNavigator.php	/^                $destinations = $this->forReflectionInterface($destinations, $class);$/;"	v	language:PHP
forReflectionClass	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/WorseReflectionNavigator.php	/^    private function forReflectionClass(array $destinations, ReflectionClass $class)$/;"	f	language:PHP
parentClass	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/WorseReflectionNavigator.php	/^        $parentClass = $class->parent();$/;"	v	language:PHP
forReflectionInterface	.config/nvim/plugged/phpactor/lib/Extension/Navigation/Navigator/WorseReflectionNavigator.php	/^    private function forReflectionInterface($destinations, ReflectionInterface $class)$/;"	f	language:PHP
ClassSearchCommand	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/Command/ClassSearchCommand.php	/^class ClassSearchCommand extends Command$/;"	c	language:PHP
search	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/Command/ClassSearchCommand.php	/^    private $search;$/;"	v	language:PHP
dumperRegistry	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/Command/ClassSearchCommand.php	/^    private $dumperRegistry;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/Command/ClassSearchCommand.php	/^    public function __construct($/;"	f	language:PHP
search	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/Command/ClassSearchCommand.php	/^        $this->search = $search;$/;"	v	language:PHP
dumperRegistry	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/Command/ClassSearchCommand.php	/^        $this->dumperRegistry = $dumperRegistry;$/;"	v	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/Command/ClassSearchCommand.php	/^    public function configure()$/;"	f	language:PHP
by	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/Command/ClassSearchCommand.php	/^        $this->setDescription('Search for class by (short) name and return informations on candidates');$/;"	c	language:PHP
execute	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/Command/ClassSearchCommand.php	/^    public function execute(InputInterface $input, OutputInterface $output)$/;"	f	language:PHP
results	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/Command/ClassSearchCommand.php	/^        $results = $this->search->classSearch($/;"	v	language:PHP
dumper	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/Command/ClassSearchCommand.php	/^        $dumper = $this->dumperRegistry->get($input->getOption('format'));$/;"	v	language:PHP
ClassSearchHandler	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/Rpc/ClassSearchHandler.php	/^class ClassSearchHandler implements Handler$/;"	c	language:PHP
classSearch	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/Rpc/ClassSearchHandler.php	/^    private $classSearch;$/;"	v	language:PHP
defaultFilesystem	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/Rpc/ClassSearchHandler.php	/^    private $defaultFilesystem;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/Rpc/ClassSearchHandler.php	/^    public function __construct($/;"	f	language:PHP
defaultFilesystem	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/Rpc/ClassSearchHandler.php	/^        string $defaultFilesystem = SourceCodeFilesystemExtension::FILESYSTEM_COMPOSER$/;"	v	language:PHP
classSearch	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/Rpc/ClassSearchHandler.php	/^        $this->classSearch = $classSearch;$/;"	v	language:PHP
defaultFilesystem	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/Rpc/ClassSearchHandler.php	/^        $this->defaultFilesystem = $defaultFilesystem;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/Rpc/ClassSearchHandler.php	/^    public function name(): string$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/Rpc/ClassSearchHandler.php	/^    public function configure(Resolver $resolver)$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/Rpc/ClassSearchHandler.php	/^    public function handle(array $arguments)$/;"	f	language:PHP
results	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/Rpc/ClassSearchHandler.php	/^        $results = $this->classSearch->classSearch($/;"	v	language:PHP
result	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/Rpc/ClassSearchHandler.php	/^            $result = reset($results);$/;"	v	language:PHP
options	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/Rpc/ClassSearchHandler.php	/^        $options = [];$/;"	v	language:PHP
ClassSearch	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/SourceCodeFilestem/Application/ClassSearch.php	/^class ClassSearch$/;"	c	language:PHP
fileToClass	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/SourceCodeFilestem/Application/ClassSearch.php	/^    private $fileToClass;$/;"	v	language:PHP
filesystemRegistry	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/SourceCodeFilestem/Application/ClassSearch.php	/^    private $filesystemRegistry;$/;"	v	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/SourceCodeFilestem/Application/ClassSearch.php	/^    private $reflector;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/SourceCodeFilestem/Application/ClassSearch.php	/^    public function __construct(FilesystemRegistry $filesystemRegistry, FileToClass $fileToClass, Reflector $reflector)$/;"	f	language:PHP
filesystemRegistry	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/SourceCodeFilestem/Application/ClassSearch.php	/^        $this->filesystemRegistry = $filesystemRegistry;$/;"	v	language:PHP
fileToClass	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/SourceCodeFilestem/Application/ClassSearch.php	/^        $this->fileToClass = $fileToClass;$/;"	v	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/SourceCodeFilestem/Application/ClassSearch.php	/^        $this->reflector = $reflector;$/;"	v	language:PHP
classSearch	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/SourceCodeFilestem/Application/ClassSearch.php	/^    public function classSearch(string $filesystemName, string $name)$/;"	f	language:PHP
filesystem	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/SourceCodeFilestem/Application/ClassSearch.php	/^        $filesystem = $this->filesystemRegistry->get($filesystemName);$/;"	v	language:PHP
files	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/SourceCodeFilestem/Application/ClassSearch.php	/^        $files = $filesystem->fileList('{' . $name . '}')->named($name . '.php');$/;"	v	language:PHP
results	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/SourceCodeFilestem/Application/ClassSearch.php	/^        $results = [];$/;"	v	language:PHP
result	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/SourceCodeFilestem/Application/ClassSearch.php	/^            $result = [$/;"	v	language:PHP
candidates	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/SourceCodeFilestem/Application/ClassSearch.php	/^            $candidates = $this->fileToClass->fileToClassCandidates(FilePath::fromString((string) $file->path()));$/;"	v	language:PHP
tryAndReflect	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/SourceCodeFilestem/Application/ClassSearch.php	/^    private function tryAndReflect(string $name)$/;"	f	language:PHP
reflectionClass	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/SourceCodeFilestem/Application/ClassSearch.php	/^            $reflectionClass = $this->reflector->reflectClassLike($name);$/;"	v	language:PHP
SourceCodeFilesystemExtraExtension	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/SourceCodeFilesystemExtraExtension.php	/^class SourceCodeFilesystemExtraExtension implements Extension$/;"	c	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/SourceCodeFilesystemExtraExtension.php	/^    public function configure(Resolver $schema)$/;"	f	language:PHP
load	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/SourceCodeFilesystemExtraExtension.php	/^    public function load(ContainerBuilder $container)$/;"	f	language:PHP
registerCommands	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/SourceCodeFilesystemExtraExtension.php	/^    private function registerCommands(ContainerBuilder $container)$/;"	f	language:PHP
registerApplicationServices	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/SourceCodeFilesystemExtraExtension.php	/^    private function registerApplicationServices(ContainerBuilder $container)$/;"	f	language:PHP
registerRpc	.config/nvim/plugged/phpactor/lib/Extension/SourceCodeFilesystemExtra/SourceCodeFilesystemExtraExtension.php	/^    private function registerRpc(ContainerBuilder $container)$/;"	f	language:PHP
ClassReflector	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/ClassReflector.php	/^class ClassReflector$/;"	c	language:PHP
classFileNormalizer	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/ClassReflector.php	/^    private $classFileNormalizer;$/;"	v	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/ClassReflector.php	/^    private $reflector;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/ClassReflector.php	/^    public function __construct($/;"	f	language:PHP
classFileNormalizer	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/ClassReflector.php	/^        $this->classFileNormalizer = $classFileNormalizer;$/;"	v	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/ClassReflector.php	/^        $this->reflector = $reflector;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/ClassReflector.php	/^     * Move - guess if moving by class name or file.$/;"	c	language:PHP
reflect	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/ClassReflector.php	/^    public function reflect(string $classOrFile): array$/;"	f	language:PHP
className	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/ClassReflector.php	/^        $className = $this->classFileNormalizer->normalizeToClass($classOrFile);$/;"	v	language:PHP
reflection	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/ClassReflector.php	/^        $reflection = $this->reflector->reflectClassLike(ClassName::fromString($className));$/;"	v	language:PHP
return	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/ClassReflector.php	/^        $return  = [$/;"	v	language:PHP
methodInfo	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/ClassReflector.php	/^            $methodInfo = [$/;"	v	language:PHP
paramInfos	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/ClassReflector.php	/^            $paramInfos = [];$/;"	v	language:PHP
parameterType	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/ClassReflector.php	/^                $parameterType = $parameter->type();$/;"	v	language:PHP
paramInfo	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/ClassReflector.php	/^                $paramInfo = [];$/;"	v	language:PHP
methodType	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/ClassReflector.php	/^            $methodType = $method->returnType();$/;"	v	language:PHP
propertyType	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/ClassReflector.php	/^            $propertyType = $property->inferredTypes()->best();$/;"	v	language:PHP
OffsetInfo	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/OffsetInfo.php	/^final class OffsetInfo$/;"	c	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/OffsetInfo.php	/^    private $reflector;$/;"	v	language:PHP
filesystemHelper	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/OffsetInfo.php	/^    private $filesystemHelper;$/;"	v	language:PHP
classFileNormalizer	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/OffsetInfo.php	/^    private $classFileNormalizer;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/OffsetInfo.php	/^    public function __construct($/;"	f	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/OffsetInfo.php	/^        $this->reflector = $reflector;$/;"	v	language:PHP
classFileNormalizer	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/OffsetInfo.php	/^        $this->classFileNormalizer = $classFileNormalizer;$/;"	v	language:PHP
filesystemHelper	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/OffsetInfo.php	/^        $this->filesystemHelper = new FilesystemHelper();$/;"	v	language:PHP
infoForOffset	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/OffsetInfo.php	/^    public function infoForOffset(string $sourcePath, int $offset, $showFrame = false): array$/;"	f	language:PHP
showFrame	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/OffsetInfo.php	/^    public function infoForOffset(string $sourcePath, int $offset, $showFrame = false): array$/;"	v	language:PHP
result	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/OffsetInfo.php	/^        $result = $this->reflector->reflectOffset($/;"	v	language:PHP
symbolContext	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/OffsetInfo.php	/^        $symbolContext = $result->symbolContext();$/;"	v	language:PHP
return	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/OffsetInfo.php	/^        $return = [$/;"	v	language:PHP
frame	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/OffsetInfo.php	/^            $frame = [];$/;"	v	language:PHP
info	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Application/OffsetInfo.php	/^                    $info = sprintf($/;"	v	language:PHP
ClassReflectorCommand	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Command/ClassReflectorCommand.php	/^class ClassReflectorCommand extends Command$/;"	c	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Command/ClassReflectorCommand.php	/^    private $reflector;$/;"	v	language:PHP
dumperRegistry	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Command/ClassReflectorCommand.php	/^    private $dumperRegistry;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Command/ClassReflectorCommand.php	/^    public function __construct($/;"	f	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Command/ClassReflectorCommand.php	/^        $this->reflector = $reflector;$/;"	v	language:PHP
dumperRegistry	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Command/ClassReflectorCommand.php	/^        $this->dumperRegistry = $dumperRegistry;$/;"	v	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Command/ClassReflectorCommand.php	/^    public function configure()$/;"	f	language:PHP
execute	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Command/ClassReflectorCommand.php	/^    public function execute(InputInterface $input, OutputInterface $output)$/;"	f	language:PHP
reflection	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Command/ClassReflectorCommand.php	/^        $reflection = $this->reflector->reflect($input->getArgument('name'));$/;"	v	language:PHP
OffsetInfoCommand	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Command/OffsetInfoCommand.php	/^class OffsetInfoCommand extends Command$/;"	c	language:PHP
infoForOffset	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Command/OffsetInfoCommand.php	/^    private $infoForOffset;$/;"	v	language:PHP
dumperRegistry	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Command/OffsetInfoCommand.php	/^    private $dumperRegistry;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Command/OffsetInfoCommand.php	/^    public function __construct($/;"	f	language:PHP
infoForOffset	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Command/OffsetInfoCommand.php	/^        $this->infoForOffset = $infoForOffset;$/;"	v	language:PHP
dumperRegistry	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Command/OffsetInfoCommand.php	/^        $this->dumperRegistry = $dumperRegistry;$/;"	v	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Command/OffsetInfoCommand.php	/^    public function configure()$/;"	f	language:PHP
execute	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Command/OffsetInfoCommand.php	/^    public function execute(InputInterface $input, OutputInterface $output)$/;"	f	language:PHP
info	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Command/OffsetInfoCommand.php	/^        $info = $this->infoForOffset->infoForOffset($/;"	v	language:PHP
format	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Command/OffsetInfoCommand.php	/^        $format = $input->getOption('format');$/;"	v	language:PHP
GotoDefinitionHandler	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/LanguageServer/GotoDefinitionHandler.php	/^class GotoDefinitionHandler implements Handler$/;"	c	language:PHP
sessionManager	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/LanguageServer/GotoDefinitionHandler.php	/^    private $sessionManager;$/;"	v	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/LanguageServer/GotoDefinitionHandler.php	/^    private $reflector;$/;"	v	language:PHP
gotoDefinition	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/LanguageServer/GotoDefinitionHandler.php	/^    private $gotoDefinition;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/LanguageServer/GotoDefinitionHandler.php	/^    public function __construct(Manager $sessionManager, SourceCodeReflector $reflector)$/;"	f	language:PHP
sessionManager	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/LanguageServer/GotoDefinitionHandler.php	/^        $this->sessionManager = $sessionManager;$/;"	v	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/LanguageServer/GotoDefinitionHandler.php	/^        $this->reflector = $reflector;$/;"	v	language:PHP
gotoDefinition	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/LanguageServer/GotoDefinitionHandler.php	/^        $this->gotoDefinition = new GotoDefinition($reflector);$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/LanguageServer/GotoDefinitionHandler.php	/^    public function name(): string$/;"	f	language:PHP
__invoke	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/LanguageServer/GotoDefinitionHandler.php	/^    public function __invoke($/;"	f	language:PHP
textDocument	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/LanguageServer/GotoDefinitionHandler.php	/^        $textDocument = $this->sessionManager->current()->workspace()->get($textDocument->uri);$/;"	v	language:PHP
offset	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/LanguageServer/GotoDefinitionHandler.php	/^        $offset = $position->toOffset($textDocument->text);$/;"	v	language:PHP
offsetReflection	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/LanguageServer/GotoDefinitionHandler.php	/^        $offsetReflection = $this->reflector->reflectOffset($/;"	v	language:PHP
result	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/LanguageServer/GotoDefinitionHandler.php	/^        $result = $this->gotoDefinition->gotoDefinition($offsetReflection->symbolContext());$/;"	v	language:PHP
sourceCode	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/LanguageServer/GotoDefinitionHandler.php	/^        $sourceCode = file_get_contents($result->path());$/;"	v	language:PHP
startPosition	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/LanguageServer/GotoDefinitionHandler.php	/^        $startPosition = OffsetHelper::offsetToPosition($/;"	v	language:PHP
location	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/LanguageServer/GotoDefinitionHandler.php	/^        $location = new Location('file:\/\/'.$result->path(), new Range($/;"	v	language:PHP
WorseReflectionLanguageExtension	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/LanguageServer/WorseReflectionLanguageExtension.php	/^class WorseReflectionLanguageExtension implements Extension$/;"	c	language:PHP
sessionManager	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/LanguageServer/WorseReflectionLanguageExtension.php	/^    private $sessionManager;$/;"	v	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/LanguageServer/WorseReflectionLanguageExtension.php	/^    private $reflector;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/LanguageServer/WorseReflectionLanguageExtension.php	/^    public function __construct(Manager $sessionManager, SourceCodeReflector $reflector)$/;"	f	language:PHP
sessionManager	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/LanguageServer/WorseReflectionLanguageExtension.php	/^        $this->sessionManager = $sessionManager;$/;"	v	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/LanguageServer/WorseReflectionLanguageExtension.php	/^        $this->reflector = $reflector;$/;"	v	language:PHP
handlers	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/LanguageServer/WorseReflectionLanguageExtension.php	/^    public function handlers(): Handlers$/;"	f	language:PHP
configureCapabilities	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/LanguageServer/WorseReflectionLanguageExtension.php	/^    public function configureCapabilities(ServerCapabilities $capabilities): void$/;"	f	language:PHP
ContextMenuHandler	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^class ContextMenuHandler implements Handler$/;"	c	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^    private $reflector;$/;"	v	language:PHP
menu	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^    private $menu;$/;"	v	language:PHP
container	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^    private $container;$/;"	v	language:PHP
classFileNormalizer	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^    private $classFileNormalizer;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^    public function __construct($/;"	f	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^        $this->reflector = $reflector;$/;"	v	language:PHP
menu	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^        $this->menu = $menu;$/;"	v	language:PHP
container	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^        $this->container = $container;$/;"	v	language:PHP
classFileNormalizer	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^        $this->classFileNormalizer = $classFileNormalizer;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^    public function name(): string$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^    public function configure(Resolver $resolver)$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^    public function handle(array $arguments)$/;"	f	language:PHP
offset	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^        $offset = $this->offsetFromSourceAndOffset($arguments[self::PARAMETER_SOURCE], $arguments[self::PARAMETER_OFFSET], $arguments[self::PARAMETER_CURRENT_PATH]);$/;"	v	language:PHP
symbol	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^        $symbol = $offset->symbolContext()->symbol();$/;"	v	language:PHP
resolveAction	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^    private function resolveAction(ReflectionOffset $offset, Symbol $symbol, array $arguments)$/;"	f	language:PHP
symbolMenu	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^        $symbolMenu = $this->menu[$symbol->symbolType()];$/;"	v	language:PHP
delegateAction	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^    private function delegateAction(array $symbolMenu, array $arguments, ReflectionOffset $offset): Response$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^        $action = $symbolMenu[$arguments[self::PARAMETER_ACTION]];$/;"	v	language:PHP
actionSelectionAction	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^    private function actionSelectionAction(Symbol $symbol, $symbolMenu, array $arguments): InputCallbackResponse$/;"	f	language:PHP
offsetFromSourceAndOffset	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^    private function offsetFromSourceAndOffset(string $source, int $offset, string $currentPath)$/;"	f	language:PHP
replaceTokens	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^    private function replaceTokens(array $parameters, ReflectionOffset $offset, array $arguments)$/;"	f	language:PHP
symbolContext	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^        $symbolContext = $offset->symbolContext();$/;"	v	language:PHP
parameterName	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^        foreach ($parameters as $parameterName => $parameterValue) {$/;"	v	language:PHP
parameterValue	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^                    $parameterValue = $arguments[self::PARAMETER_CURRENT_PATH];$/;"	v	language:PHP
type	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^                    $type = $symbolContext->hasContainerType() ? $symbolContext->containerType() : $symbolContext->type();$/;"	v	language:PHP
parameterValue	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^                    $parameterValue = $this->classFileNormalizer->classToFile($type);$/;"	v	language:PHP
parameterValue	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^                    $parameterValue = $arguments[self::PARAMETER_OFFSET];$/;"	v	language:PHP
parameterValue	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^                    $parameterValue = $arguments[self::PARAMETER_SOURCE];$/;"	v	language:PHP
parameterValue	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/ContextMenuHandler.php	/^                    $parameterValue = $symbolContext->symbol()->name();$/;"	v	language:PHP
OffsetInfoHandler	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/OffsetInfoHandler.php	/^class OffsetInfoHandler implements Handler$/;"	c	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/OffsetInfoHandler.php	/^    private $reflector;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/OffsetInfoHandler.php	/^    public function __construct(Reflector $reflector)$/;"	f	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/OffsetInfoHandler.php	/^        $this->reflector = $reflector;$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/OffsetInfoHandler.php	/^    public function name(): string$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/OffsetInfoHandler.php	/^    public function configure(Resolver $resolver)$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/OffsetInfoHandler.php	/^    public function handle(array $arguments)$/;"	f	language:PHP
offset	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/OffsetInfoHandler.php	/^        $offset = $this->reflector->reflectOffset($/;"	v	language:PHP
serialize	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/OffsetInfoHandler.php	/^    private function serialize(int $offset, ReflectionOffset $reflectionOffset)$/;"	f	language:PHP
symbolContext	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/OffsetInfoHandler.php	/^        $symbolContext = $reflectionOffset->symbolContext();$/;"	v	language:PHP
return	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/OffsetInfoHandler.php	/^        $return = [$/;"	v	language:PHP
frame	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/OffsetInfoHandler.php	/^        $frame = [];$/;"	v	language:PHP
info	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/OffsetInfoHandler.php	/^                $info = sprintf($/;"	v	language:PHP
GotoDefinitionHandler	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/GotoDefinitionHandler.php	/^class GotoDefinitionHandler implements Handler$/;"	c	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/GotoDefinitionHandler.php	/^    private $reflector;$/;"	v	language:PHP
gotoDefinition	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/GotoDefinitionHandler.php	/^    private $gotoDefinition;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/GotoDefinitionHandler.php	/^    public function __construct($/;"	f	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/GotoDefinitionHandler.php	/^        $this->reflector = $reflector;$/;"	v	language:PHP
gotoDefinition	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/GotoDefinitionHandler.php	/^        $this->gotoDefinition = new GotoDefinition($reflector);$/;"	v	language:PHP
name	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/GotoDefinitionHandler.php	/^    public function name(): string$/;"	f	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/GotoDefinitionHandler.php	/^    public function configure(Resolver $resolver)$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/GotoDefinitionHandler.php	/^    public function handle(array $arguments)$/;"	f	language:PHP
result	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/GotoDefinitionHandler.php	/^        $result = $this->reflector->reflectOffset($/;"	v	language:PHP
result	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/Rpc/GotoDefinitionHandler.php	/^        $result = $this->gotoDefinition->gotoDefinition($result->symbolContext());$/;"	v	language:PHP
WorseReflectionExtraExtension	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/WorseReflectionExtraExtension.php	/^class WorseReflectionExtraExtension implements Extension$/;"	c	language:PHP
configure	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/WorseReflectionExtraExtension.php	/^    public function configure(Resolver $schema)$/;"	f	language:PHP
load	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/WorseReflectionExtraExtension.php	/^    public function load(ContainerBuilder $container)$/;"	f	language:PHP
registerGotoDefinition	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/WorseReflectionExtraExtension.php	/^    private function registerGotoDefinition(ContainerBuilder $container)$/;"	f	language:PHP
registerApplicationServices	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/WorseReflectionExtraExtension.php	/^    private function registerApplicationServices(ContainerBuilder $container)$/;"	f	language:PHP
registerCommands	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/WorseReflectionExtraExtension.php	/^    private function registerCommands(ContainerBuilder $container)$/;"	f	language:PHP
registerLanguageServer	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/WorseReflectionExtraExtension.php	/^    private function registerLanguageServer(ContainerBuilder $container)$/;"	f	language:PHP
registerRpc	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/WorseReflectionExtraExtension.php	/^    private function registerRpc(ContainerBuilder $container)$/;"	f	language:PHP
GotoDefinitionException	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/Exception/GotoDefinitionException.php	/^class GotoDefinitionException extends \\DomainException$/;"	c	language:PHP
GotoDefinition	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinition.php	/^class GotoDefinition$/;"	c	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinition.php	/^    private $reflector;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinition.php	/^    public function __construct(Reflector $reflector)$/;"	f	language:PHP
reflector	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinition.php	/^        $this->reflector = $reflector;$/;"	v	language:PHP
gotoDefinition	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinition.php	/^    public function gotoDefinition(SymbolContext $symbolContext): GotoDefinitionResult$/;"	f	language:PHP
gotoClass	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinition.php	/^    public function gotoClass(SymbolContext $symbolContext): GotoDefinitionResult$/;"	f	language:PHP
className	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinition.php	/^        $className = $symbolContext->type();$/;"	v	language:PHP
class	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinition.php	/^            $class = $this->reflector->reflectClassLike(ClassName::fromString((string) $className));$/;"	v	language:PHP
path	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinition.php	/^        $path = $class->sourceCode()->path();$/;"	v	language:PHP
gotoFunction	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinition.php	/^    public function gotoFunction(SymbolContext $symbolContext): GotoDefinitionResult$/;"	f	language:PHP
functionName	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinition.php	/^        $functionName = $symbolContext->name();$/;"	v	language:PHP
function	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinition.php	/^            $function = $this->reflector->reflectFunction($functionName);$/;"	v	language:PHP
path	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinition.php	/^        $path = $function->sourceCode()->path();$/;"	v	language:PHP
gotoMember	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinition.php	/^    private function gotoMember(SymbolContext $symbolContext)$/;"	f	language:PHP
symbolName	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinition.php	/^        $symbolName = $symbolContext->symbol()->name();$/;"	v	language:PHP
symbolType	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinition.php	/^        $symbolType = $symbolContext->symbol()->symbolType();$/;"	v	language:PHP
for	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinition.php	/^            throw new GotoDefinitionException(sprintf('Containing class for member "%s" could not be determined', $symbolName));$/;"	c	language:PHP
containingClass	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinition.php	/^            $containingClass = $this->reflector->reflectClassLike(ClassName::fromString((string) $symbolContext->containerType()));$/;"	v	language:PHP
path	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinition.php	/^        $path = $containingClass->sourceCode()->path();$/;"	v	language:PHP
members	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinition.php	/^                $members = $containingClass->methods();$/;"	v	language:PHP
members	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinition.php	/^                $members = $containingClass->constants();$/;"	v	language:PHP
members	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinition.php	/^                $members = $containingClass->properties();$/;"	v	language:PHP
member	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinition.php	/^        $member = $members->get($symbolName);$/;"	v	language:PHP
GotoDefinitionResult	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinitionResult.php	/^final class GotoDefinitionResult implements \\JsonSerializable$/;"	c	language:PHP
path	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinitionResult.php	/^    private $path;$/;"	v	language:PHP
offset	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinitionResult.php	/^    private $offset;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinitionResult.php	/^    private function __construct(string $path, int $offset)$/;"	f	language:PHP
path	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinitionResult.php	/^        $this->path = $path;$/;"	v	language:PHP
offset	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinitionResult.php	/^        $this->offset = $offset;$/;"	v	language:PHP
fromClassPathAndOffset	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinitionResult.php	/^    public static function fromClassPathAndOffset(string $path, int $offset): GotoDefinitionResult$/;"	f	language:PHP
path	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinitionResult.php	/^    public function path(): string$/;"	f	language:PHP
offset	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinitionResult.php	/^    public function offset(): int$/;"	f	language:PHP
jsonSerialize	.config/nvim/plugged/phpactor/lib/Extension/WorseReflectionExtra/GotoDefinition/GotoDefinitionResult.php	/^    public function jsonSerialize()$/;"	f	language:PHP
Phpactor	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^class Phpactor$/;"	c	language:PHP
boot	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^    public static function boot(InputInterface $input, string $vendorDir): PhpactorContainer$/;"	f	language:PHP
config	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^        $config = [];$/;"	v	language:PHP
cwd	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^        $cwd = getcwd();$/;"	v	language:PHP
loader	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^        $loader = ConfigLoaderBuilder::create()$/;"	v	language:PHP
config	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^        $config = $loader->load();$/;"	v	language:PHP
config	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^        $config = self::configureExtensionManager($config, $vendorDir);$/;"	v	language:PHP
cwd	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^            $config[FilePathResolverExtension::PARAM_PROJECT_ROOT] = $cwd = $input->getParameterOption([ '--working-dir', '-d' ]);$/;"	v	language:PHP
xdebug	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^            $xdebug = new XdebugHandler('PHPACTOR', '--ansi');$/;"	v	language:PHP
extensionNames	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^        $extensionNames = [$/;"	v	language:PHP
extensionNames	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^            $extensionNames = array_merge($extensionNames, require($config[ExtensionManagerExtension::PARAM_INSTALLED_EXTENSIONS_FILE]));$/;"	v	language:PHP
container	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^        $container = new PhpactorContainer();$/;"	v	language:PHP
masterSchema	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^        $masterSchema = new Resolver();$/;"	v	language:PHP
extensions	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^        $extensions = [];$/;"	v	language:PHP
schema	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^            $schema = new Resolver();$/;"	v	language:PHP
extension	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^            $extension = new $extensionClass();$/;"	v	language:PHP
masterSchema	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^            $masterSchema = $masterSchema->merge($schema);$/;"	v	language:PHP
config	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^        $config = $masterSchema->resolve($config);$/;"	v	language:PHP
normalizePath	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^    public static function normalizePath(string $path): string$/;"	f	language:PHP
relativizePath	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^    public static function relativizePath(string $path): string$/;"	f	language:PHP
isFile	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^    public static function isFile(string $string)$/;"	f	language:PHP
containsInvalidNamespaceChars	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^        $containsInvalidNamespaceChars = (bool) preg_match('{[\\.\\*\/]}', $string);$/;"	v	language:PHP
configureExtensionManager	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^    private static function configureExtensionManager(array $config, string $vendorDir): array$/;"	f	language:PHP
extensionDir	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^        $config[ExtensionManagerExtension::PARAM_EXTENSION_VENDOR_DIR] = $extensionDir = __DIR__ . '\/..\/extensions';$/;"	v	language:PHP
extensionsFile	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^        $config[ExtensionManagerExtension::PARAM_INSTALLED_EXTENSIONS_FILE] = $extensionsFile = $extensionDir. '\/extensions.php';$/;"	v	language:PHP
autoloadFile	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^        $autoloadFile = $config[ExtensionManagerExtension::PARAM_EXTENSION_VENDOR_DIR] . '\/autoload.php';$/;"	v	language:PHP
resolveApplicationRoot	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^    private static function resolveApplicationRoot(): string$/;"	f	language:PHP
paths	.config/nvim/plugged/phpactor/lib/Phpactor.php	/^        $paths = [ __DIR__ . '\/..', __DIR__ .'\/..\/..\/..\/..' ];$/;"	v	language:PHP
Edentate	.config/nvim/plugged/phpactor/tests/Assets/Projects/Animals/lib/Aardvark/Edentate.php	/^class Edentate$/;"	c	language:PHP
Badger	.config/nvim/plugged/phpactor/tests/Assets/Projects/Animals/lib/Badger.php	/^class Badger$/;"	c	language:PHP
carnivorous	.config/nvim/plugged/phpactor/tests/Assets/Projects/Animals/lib/Badger.php	/^    private $carnivorous;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/tests/Assets/Projects/Animals/lib/Badger.php	/^    public function __construct(Carnivorous $carnivorous)$/;"	f	language:PHP
carnivorous	.config/nvim/plugged/phpactor/tests/Assets/Projects/Animals/lib/Badger.php	/^        $this->carnivorous = $carnivorous;$/;"	v	language:PHP
badge	.config/nvim/plugged/phpactor/tests/Assets/Projects/Animals/lib/Badger.php	/^    public function badge()$/;"	f	language:PHP
carnivorous	.config/nvim/plugged/phpactor/tests/Assets/Projects/Animals/lib/Badger.php	/^    public function carnivorous()$/;"	f	language:PHP
Carnivorous	.config/nvim/plugged/phpactor/tests/Assets/Projects/Animals/lib/Badger/Carnivorous.php	/^class Carnivorous$/;"	c	language:PHP
eat	.config/nvim/plugged/phpactor/tests/Assets/Projects/Animals/lib/Badger/Carnivorous.php	/^    public function eat()$/;"	f	language:PHP
FoobarTest	.config/nvim/plugged/phpactor/tests/Assets/Projects/PhpUnit/tests/FoobarTest.php	/^class FoobarTest extends TestCase$/;"	c	language:PHP
testBar	.config/nvim/plugged/phpactor/tests/Assets/Projects/PhpUnit/tests/FoobarTest.php	/^    public function testBar()$/;"	f	language:PHP
BaseBenchCase	.config/nvim/plugged/phpactor/tests/Benchmark/BaseBenchCase.php	/^class BaseBenchCase extends IntegrationTestCase$/;"	c	language:PHP
runCommand	.config/nvim/plugged/phpactor/tests/Benchmark/BaseBenchCase.php	/^    protected function runCommand(string $command, string $stdin = null): string$/;"	f	language:PHP
stdin	.config/nvim/plugged/phpactor/tests/Benchmark/BaseBenchCase.php	/^    protected function runCommand(string $command, string $stdin = null): string$/;"	v	language:PHP
process	.config/nvim/plugged/phpactor/tests/Benchmark/BaseBenchCase.php	/^        $process = new Process(__DIR__ . '\/..\/..\/bin\/phpactor ' . $command);$/;"	v	language:PHP
BaseLineBench	.config/nvim/plugged/phpactor/tests/Benchmark/BaseLineBench.php	/^class BaseLineBench extends BaseBenchCase$/;"	c	language:PHP
benchVersion	.config/nvim/plugged/phpactor/tests/Benchmark/BaseLineBench.php	/^    public function benchVersion()$/;"	f	language:PHP
benchRpcEcho	.config/nvim/plugged/phpactor/tests/Benchmark/BaseLineBench.php	/^    public function benchRpcEcho()$/;"	f	language:PHP
ClassSearchBench	.config/nvim/plugged/phpactor/tests/Benchmark/ClassSearchBench.php	/^class ClassSearchBench extends BaseBenchCase$/;"	c	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Benchmark/ClassSearchBench.php	/^    public function setUp()$/;"	f	language:PHP
benchClassSearch	.config/nvim/plugged/phpactor/tests/Benchmark/ClassSearchBench.php	/^    public function benchClassSearch()$/;"	f	language:PHP
CompleteBench	.config/nvim/plugged/phpactor/tests/Benchmark/CompleteBench.php	/^class CompleteBench extends BaseBenchCase$/;"	c	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Benchmark/CompleteBench.php	/^    public function setUp()$/;"	f	language:PHP
benchComplete	.config/nvim/plugged/phpactor/tests/Benchmark/CompleteBench.php	/^    public function benchComplete()$/;"	f	language:PHP
output	.config/nvim/plugged/phpactor/tests/Benchmark/CompleteBench.php	/^        $output = $this->runCommand('complete tests\/FoobarTest.php 145'); \/\/145?$/;"	v	language:PHP
ApplicationTest	.config/nvim/plugged/phpactor/tests/Integration/ApplicationTest.php	/^class ApplicationTest extends IntegrationTestCase$/;"	c	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Integration/ApplicationTest.php	/^    public function setUp()$/;"	f	language:PHP
tearDown	.config/nvim/plugged/phpactor/tests/Integration/ApplicationTest.php	/^    public function tearDown()$/;"	f	language:PHP
application	.config/nvim/plugged/phpactor/tests/Integration/ApplicationTest.php	/^    public function application(): Application$/;"	f	language:PHP
testConfig	.config/nvim/plugged/phpactor/tests/Integration/ApplicationTest.php	/^    public function testConfig()$/;"	f	language:PHP
output	.config/nvim/plugged/phpactor/tests/Integration/ApplicationTest.php	/^        $output = new BufferedOutput();$/;"	v	language:PHP
application	.config/nvim/plugged/phpactor/tests/Integration/ApplicationTest.php	/^        $application = $this->application();$/;"	v	language:PHP
testSerializesExceptions	.config/nvim/plugged/phpactor/tests/Integration/ApplicationTest.php	/^    public function testSerializesExceptions()$/;"	f	language:PHP
output	.config/nvim/plugged/phpactor/tests/Integration/ApplicationTest.php	/^        $output = new BufferedOutput();$/;"	v	language:PHP
application	.config/nvim/plugged/phpactor/tests/Integration/ApplicationTest.php	/^        $application = $this->application();$/;"	v	language:PHP
out	.config/nvim/plugged/phpactor/tests/Integration/ApplicationTest.php	/^        $out = json_decode($output->fetch(), true);$/;"	v	language:PHP
testCwd	.config/nvim/plugged/phpactor/tests/Integration/ApplicationTest.php	/^    public function testCwd()$/;"	f	language:PHP
output	.config/nvim/plugged/phpactor/tests/Integration/ApplicationTest.php	/^        $output = new BufferedOutput();$/;"	v	language:PHP
application	.config/nvim/plugged/phpactor/tests/Integration/ApplicationTest.php	/^        $application = $this->application();$/;"	v	language:PHP
exitCode	.config/nvim/plugged/phpactor/tests/Integration/ApplicationTest.php	/^        $exitCode = $application->run(new ArrayInput([$/;"	v	language:PHP
CacheClearTest	.config/nvim/plugged/phpactor/tests/Integration/Extension/Core/CacheClearTest.php	/^class CacheClearTest extends IntegrationTestCase$/;"	c	language:PHP
cacheClear	.config/nvim/plugged/phpactor/tests/Integration/Extension/Core/CacheClearTest.php	/^    private $cacheClear;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Integration/Extension/Core/CacheClearTest.php	/^    public function setUp()$/;"	f	language:PHP
cacheClear	.config/nvim/plugged/phpactor/tests/Integration/Extension/Core/CacheClearTest.php	/^        $this->cacheClear = new CacheClear($this->workspaceDir());$/;"	v	language:PHP
testCacheClear	.config/nvim/plugged/phpactor/tests/Integration/Extension/Core/CacheClearTest.php	/^    public function testCacheClear()$/;"	f	language:PHP
WorseReflectionNavigatorTest	.config/nvim/plugged/phpactor/tests/Integration/Extension/Navigation/Navigator/WorseReflectionNavigatorTest.php	/^class WorseReflectionNavigatorTest extends IntegrationTestCase$/;"	c	language:PHP
reflector	.config/nvim/plugged/phpactor/tests/Integration/Extension/Navigation/Navigator/WorseReflectionNavigatorTest.php	/^    private $reflector;$/;"	v	language:PHP
testNavigateToParent	.config/nvim/plugged/phpactor/tests/Integration/Extension/Navigation/Navigator/WorseReflectionNavigatorTest.php	/^    public function testNavigateToParent()$/;"	f	language:PHP
navigator	.config/nvim/plugged/phpactor/tests/Integration/Extension/Navigation/Navigator/WorseReflectionNavigatorTest.php	/^        $navigator = $this->create($/;"	v	language:PHP
One	.config/nvim/plugged/phpactor/tests/Integration/Extension/Navigation/Navigator/WorseReflectionNavigatorTest.php	/^class One$/;"	c	language:PHP
Two	.config/nvim/plugged/phpactor/tests/Integration/Extension/Navigation/Navigator/WorseReflectionNavigatorTest.php	/^class Two extends One$/;"	c	language:PHP
destinations	.config/nvim/plugged/phpactor/tests/Integration/Extension/Navigation/Navigator/WorseReflectionNavigatorTest.php	/^        $destinations = $navigator->destinationsFor($this->workspaceDir() . '\/Two.php');$/;"	v	language:PHP
testNavigateToInterfaces	.config/nvim/plugged/phpactor/tests/Integration/Extension/Navigation/Navigator/WorseReflectionNavigatorTest.php	/^    public function testNavigateToInterfaces()$/;"	f	language:PHP
navigator	.config/nvim/plugged/phpactor/tests/Integration/Extension/Navigation/Navigator/WorseReflectionNavigatorTest.php	/^        $navigator = $this->create($/;"	v	language:PHP
One	.config/nvim/plugged/phpactor/tests/Integration/Extension/Navigation/Navigator/WorseReflectionNavigatorTest.php	/^interface One$/;"	i	language:PHP
Two	.config/nvim/plugged/phpactor/tests/Integration/Extension/Navigation/Navigator/WorseReflectionNavigatorTest.php	/^interface Two$/;"	i	language:PHP
Three	.config/nvim/plugged/phpactor/tests/Integration/Extension/Navigation/Navigator/WorseReflectionNavigatorTest.php	/^class Three implements One, Two$/;"	c	language:PHP
destinations	.config/nvim/plugged/phpactor/tests/Integration/Extension/Navigation/Navigator/WorseReflectionNavigatorTest.php	/^        $destinations = $navigator->destinationsFor($this->workspaceDir() . '\/Three.php');$/;"	v	language:PHP
testNavigateFromInterfaceToParents	.config/nvim/plugged/phpactor/tests/Integration/Extension/Navigation/Navigator/WorseReflectionNavigatorTest.php	/^    public function testNavigateFromInterfaceToParents()$/;"	f	language:PHP
navigator	.config/nvim/plugged/phpactor/tests/Integration/Extension/Navigation/Navigator/WorseReflectionNavigatorTest.php	/^        $navigator = $this->create($/;"	v	language:PHP
One	.config/nvim/plugged/phpactor/tests/Integration/Extension/Navigation/Navigator/WorseReflectionNavigatorTest.php	/^interface One$/;"	i	language:PHP
Two	.config/nvim/plugged/phpactor/tests/Integration/Extension/Navigation/Navigator/WorseReflectionNavigatorTest.php	/^interface Two$/;"	i	language:PHP
Three	.config/nvim/plugged/phpactor/tests/Integration/Extension/Navigation/Navigator/WorseReflectionNavigatorTest.php	/^interface Three extends One, Two$/;"	i	language:PHP
destinations	.config/nvim/plugged/phpactor/tests/Integration/Extension/Navigation/Navigator/WorseReflectionNavigatorTest.php	/^        $destinations = $navigator->destinationsFor($this->workspaceDir() . '\/Three.php');$/;"	v	language:PHP
create	.config/nvim/plugged/phpactor/tests/Integration/Extension/Navigation/Navigator/WorseReflectionNavigatorTest.php	/^    private function create(string $manifest): WorseReflectionNavigator$/;"	f	language:PHP
workspace	.config/nvim/plugged/phpactor/tests/Integration/Extension/Navigation/Navigator/WorseReflectionNavigatorTest.php	/^        $workspace = $this->workspace()->create($this->workspaceDir());$/;"	v	language:PHP
reflector	.config/nvim/plugged/phpactor/tests/Integration/Extension/Navigation/Navigator/WorseReflectionNavigatorTest.php	/^        $reflector = ReflectorBuilder::create()->addLocator($/;"	v	language:PHP
IntegrationTestCase	.config/nvim/plugged/phpactor/tests/IntegrationTestCase.php	/^abstract class IntegrationTestCase extends TestCase$/;"	c	language:PHP
workspaceDir	.config/nvim/plugged/phpactor/tests/IntegrationTestCase.php	/^    protected function workspaceDir()$/;"	f	language:PHP
cacheDir	.config/nvim/plugged/phpactor/tests/IntegrationTestCase.php	/^    private function cacheDir(string $name)$/;"	f	language:PHP
cacheWorkspace	.config/nvim/plugged/phpactor/tests/IntegrationTestCase.php	/^    private function cacheWorkspace($name)$/;"	f	language:PHP
filesystem	.config/nvim/plugged/phpactor/tests/IntegrationTestCase.php	/^        $filesystem = new Filesystem();$/;"	v	language:PHP
cacheDir	.config/nvim/plugged/phpactor/tests/IntegrationTestCase.php	/^        $cacheDir = $this->cacheDir($name);$/;"	v	language:PHP
workspace	.config/nvim/plugged/phpactor/tests/IntegrationTestCase.php	/^    protected function workspace(): Workspace$/;"	f	language:PHP
assertSuccess	.config/nvim/plugged/phpactor/tests/IntegrationTestCase.php	/^    protected function assertSuccess(Process $process)$/;"	f	language:PHP
assertFailure	.config/nvim/plugged/phpactor/tests/IntegrationTestCase.php	/^    protected function assertFailure(Process $process, $message)$/;"	f	language:PHP
loadProject	.config/nvim/plugged/phpactor/tests/IntegrationTestCase.php	/^    protected function loadProject($name)$/;"	f	language:PHP
filesystem	.config/nvim/plugged/phpactor/tests/IntegrationTestCase.php	/^        $filesystem = new Filesystem();$/;"	v	language:PHP
currentDir	.config/nvim/plugged/phpactor/tests/IntegrationTestCase.php	/^        $currentDir = getcwd();$/;"	v	language:PHP
container	.config/nvim/plugged/phpactor/tests/IntegrationTestCase.php	/^    protected function container(): Container$/;"	f	language:PHP
RpcHandlerTest	.config/nvim/plugged/phpactor/tests/Smoke/RpcHandlerTest.php	/^class RpcHandlerTest extends IntegrationTestCase$/;"	c	language:PHP
testRpcCommandIsAvailable	.config/nvim/plugged/phpactor/tests/Smoke/RpcHandlerTest.php	/^    public function testRpcCommandIsAvailable(string $name)$/;"	f	language:PHP
registry	.config/nvim/plugged/phpactor/tests/Smoke/RpcHandlerTest.php	/^        $registry = $this->container()->get('rpc.handler_registry');$/;"	v	language:PHP
provideName	.config/nvim/plugged/phpactor/tests/Smoke/RpcHandlerTest.php	/^    public function provideName()$/;"	f	language:PHP
ClassCopyCommandTest	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassCopyCommandTest.php	/^class ClassCopyCommandTest extends SystemTestCase$/;"	c	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassCopyCommandTest.php	/^    public function setUp()$/;"	f	language:PHP
testSmokeSuccess	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassCopyCommandTest.php	/^    public function testSmokeSuccess($command, array $fileMap = [], array $contentExpectations = [])$/;"	f	language:PHP
fileMap	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassCopyCommandTest.php	/^    public function testSmokeSuccess($command, array $fileMap = [], array $contentExpectations = [])$/;"	v	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassCopyCommandTest.php	/^        $process = $this->phpactor($command);$/;"	v	language:PHP
filePath	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassCopyCommandTest.php	/^        foreach ($fileMap as $filePath => $shouldExist) {$/;"	v	language:PHP
exists	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassCopyCommandTest.php	/^            $exists = file_exists($this->workspaceDir() . '\/' . $filePath);$/;"	v	language:PHP
filePath	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassCopyCommandTest.php	/^        foreach ($contentExpectations as $filePath => $contentExpectation) {$/;"	v	language:PHP
path	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassCopyCommandTest.php	/^            $path = $this->workspaceDir() . '\/' . $filePath;$/;"	v	language:PHP
contents	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassCopyCommandTest.php	/^            $contents = file_get_contents($path);$/;"	v	language:PHP
provideSmokeSuccess	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassCopyCommandTest.php	/^    public function provideSmokeSuccess()$/;"	f	language:PHP
by	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassCopyCommandTest.php	/^            'Copy class by name 1' => [$/;"	c	language:PHP
by	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassCopyCommandTest.php	/^            'Copy class by name force' => [$/;"	c	language:PHP
testSmokeFailure	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassCopyCommandTest.php	/^    public function testSmokeFailure($command, $expectedMessage = null)$/;"	f	language:PHP
expectedMessage	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassCopyCommandTest.php	/^    public function testSmokeFailure($command, $expectedMessage = null)$/;"	v	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassCopyCommandTest.php	/^        $process = $this->phpactor($command);$/;"	v	language:PHP
provideSmokeFailure	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassCopyCommandTest.php	/^    public function provideSmokeFailure()$/;"	f	language:PHP
by	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassCopyCommandTest.php	/^            'Copy class by name force file' => [$/;"	c	language:PHP
by	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassCopyCommandTest.php	/^            'Copy class by file force class' => [$/;"	c	language:PHP
ClassMoveCommandTest	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassMoveCommandTest.php	/^class ClassMoveCommandTest extends SystemTestCase$/;"	c	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassMoveCommandTest.php	/^    public function setUp()$/;"	f	language:PHP
testSmokeSuccess	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassMoveCommandTest.php	/^    public function testSmokeSuccess($command, array $fileMap = [])$/;"	f	language:PHP
fileMap	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassMoveCommandTest.php	/^    public function testSmokeSuccess($command, array $fileMap = [])$/;"	v	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassMoveCommandTest.php	/^        $process = $this->phpactor($command);$/;"	v	language:PHP
filePath	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassMoveCommandTest.php	/^        foreach ($fileMap as $filePath => $shouldExist) {$/;"	v	language:PHP
exists	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassMoveCommandTest.php	/^            $exists = file_exists($this->workspaceDir() . '\/' . $filePath);$/;"	v	language:PHP
provideSmokeSuccess	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassMoveCommandTest.php	/^    public function provideSmokeSuccess()$/;"	f	language:PHP
by	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassMoveCommandTest.php	/^            'Move class by name 1' => [$/;"	c	language:PHP
by	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassMoveCommandTest.php	/^            'Move class by name force' => [$/;"	c	language:PHP
testOutdatedGitIndex	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassMoveCommandTest.php	/^    public function testOutdatedGitIndex()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassMoveCommandTest.php	/^        $process = $this->phpactor('class:move lib\/Badger\/Carnivorous.php lib\/Aardvark\/Insectarian.php');$/;"	v	language:PHP
testSmokeFailure	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassMoveCommandTest.php	/^    public function testSmokeFailure($command, $expectedMessage = null)$/;"	f	language:PHP
expectedMessage	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassMoveCommandTest.php	/^    public function testSmokeFailure($command, $expectedMessage = null)$/;"	v	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassMoveCommandTest.php	/^        $process = $this->phpactor($command);$/;"	v	language:PHP
provideSmokeFailure	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassMoveCommandTest.php	/^    public function provideSmokeFailure()$/;"	f	language:PHP
by	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassMoveCommandTest.php	/^            'Move class by name force file' => [$/;"	c	language:PHP
by	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ClassMoveCommandTest.php	/^            'Move class by file force class' => [$/;"	c	language:PHP
ReferencesClassCommandTest	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesClassCommandTest.php	/^class ReferencesClassCommandTest extends SystemTestCase$/;"	c	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesClassCommandTest.php	/^    public function setUp()$/;"	f	language:PHP
testReferences	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesClassCommandTest.php	/^    public function testReferences()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesClassCommandTest.php	/^        $process = $this->phpactor('references:class "Animals\\Badger"');$/;"	v	language:PHP
testReferencesFormatted	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesClassCommandTest.php	/^    public function testReferencesFormatted()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesClassCommandTest.php	/^        $process = $this->phpactor('references:class "Animals\\Badger" --format=json');$/;"	v	language:PHP
references	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesClassCommandTest.php	/^     * @testdox It should replace class references$/;"	c	language:PHP
testReferencesReplace	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesClassCommandTest.php	/^    public function testReferencesReplace()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesClassCommandTest.php	/^        $process = $this->phpactor('references:class "Animals\\Badger" --replace="Kangaroo"');$/;"	v	language:PHP
references	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesClassCommandTest.php	/^     * @testdox It should replace class references$/;"	c	language:PHP
testReferencesReplaceDryRun	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesClassCommandTest.php	/^    public function testReferencesReplaceDryRun()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesClassCommandTest.php	/^        $process = $this->phpactor('references:class "Animals\\Badger" --dry-run --replace="Kangaroo"');$/;"	v	language:PHP
testReferencesScope	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesClassCommandTest.php	/^    public function testReferencesScope()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesClassCommandTest.php	/^        $process = $this->phpactor('references:class "Animals\\Badger" --filesystem=simple');$/;"	v	language:PHP
ReferencesMemberCommandTest	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesMemberCommandTest.php	/^class ReferencesMemberCommandTest extends SystemTestCase$/;"	c	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesMemberCommandTest.php	/^    public function setUp()$/;"	f	language:PHP
testReferences	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesMemberCommandTest.php	/^    public function testReferences()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesMemberCommandTest.php	/^        $process = $this->phpactor('references:member "Animals\\Badger" badge');$/;"	v	language:PHP
testNonExistingMember	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesMemberCommandTest.php	/^    public function testNonExistingMember()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesMemberCommandTest.php	/^        $process = $this->phpactor('references:member "Animals\\Badger" bad --type="method"');$/;"	v	language:PHP
testFindAllForClass	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesMemberCommandTest.php	/^    public function testFindAllForClass()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesMemberCommandTest.php	/^        $process = $this->phpactor('references:member "Animals\\Badger"');$/;"	v	language:PHP
testFindAll	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesMemberCommandTest.php	/^    public function testFindAll()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesMemberCommandTest.php	/^        $process = $this->phpactor('references:member');$/;"	v	language:PHP
testReplace	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesMemberCommandTest.php	/^    public function testReplace()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesMemberCommandTest.php	/^        $process = $this->phpactor('references:member "Animals\\Badger" badge --replace=dodge');$/;"	v	language:PHP
testReplaceDryRun	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesMemberCommandTest.php	/^    public function testReplaceDryRun()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesMemberCommandTest.php	/^        $process = $this->phpactor('references:member "Animals\\Badger" badge --replace=dodge --dry-run');$/;"	v	language:PHP
testReferencesScope	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesMemberCommandTest.php	/^    public function testReferencesScope()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesMemberCommandTest.php	/^        $process = $this->phpactor('references:member "Animals\\Badger" badge --filesystem=composer');$/;"	v	language:PHP
testByTypeProperty	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesMemberCommandTest.php	/^    public function testByTypeProperty()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesMemberCommandTest.php	/^        $process = $this->phpactor('references:member "Animals\\Badger" carnivorous --type=property');$/;"	v	language:PHP
testDifferentTypees	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesMemberCommandTest.php	/^    public function testDifferentTypees()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesMemberCommandTest.php	/^        $process = $this->phpactor('references:member "Animals\\Badger" carnivorous');$/;"	v	language:PHP
⟶carnivorous⟵	.config/nvim/plugged/phpactor/tests/System/Extension/ClassMover/Command/ReferencesMemberCommandTest.php	/^        $this->assertContains('public function ⟶carnivorous⟵(', $process->getOutput());$/;"	f	language:PHP
FileInfoCommandTest	.config/nvim/plugged/phpactor/tests/System/Extension/ClassToFile/Command/FileInfoCommandTest.php	/^class FileInfoCommandTest extends SystemTestCase$/;"	c	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/System/Extension/ClassToFile/Command/FileInfoCommandTest.php	/^    public function setUp()$/;"	f	language:PHP
testProvideInformationForOffset	.config/nvim/plugged/phpactor/tests/System/Extension/ClassToFile/Command/FileInfoCommandTest.php	/^    public function testProvideInformationForOffset()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/ClassToFile/Command/FileInfoCommandTest.php	/^        $process = $this->phpactor('file:info lib\/Badger.php');$/;"	v	language:PHP
testProvideInformationForOffsetAsJson	.config/nvim/plugged/phpactor/tests/System/Extension/ClassToFile/Command/FileInfoCommandTest.php	/^    public function testProvideInformationForOffsetAsJson()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/ClassToFile/Command/FileInfoCommandTest.php	/^        $process = $this->phpactor('file:info lib\/Badger.php --format=json');$/;"	v	language:PHP
ClassInflectCommandTest	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassInflectCommandTest.php	/^class ClassInflectCommandTest extends SystemTestCase$/;"	c	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassInflectCommandTest.php	/^    public function setUp()$/;"	f	language:PHP
testInflectClass	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassInflectCommandTest.php	/^    public function testInflectClass($command, $expectedFilePath, $expectedContents)$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassInflectCommandTest.php	/^        $process = $this->phpactor($command);$/;"	v	language:PHP
expectedFilePath	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassInflectCommandTest.php	/^        $expectedFilePath = $this->workspaceDir() . '\/' . $expectedFilePath;$/;"	v	language:PHP
provideInflectClass	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassInflectCommandTest.php	/^    public function provideInflectClass()$/;"	f	language:PHP
Carnivorous	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassInflectCommandTest.php	/^interface Carnivorous$/;"	i	language:PHP
Badger	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassInflectCommandTest.php	/^interface Badger$/;"	i	language:PHP
CarnivorousInterface	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassInflectCommandTest.php	/^interface CarnivorousInterface$/;"	i	language:PHP
testInflectClassExistingAndForce	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassInflectCommandTest.php	/^    public function testInflectClassExistingAndForce()$/;"	f	language:PHP
filePath	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassInflectCommandTest.php	/^        $filePath =  'lib\/Badger\/Carnivorous.php';$/;"	v	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassInflectCommandTest.php	/^        $process = $this->phpactor('class:inflect '.$filePath. ' ' . $filePath . ' interface');$/;"	v	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassInflectCommandTest.php	/^        $process = $this->phpactor('class:inflect '.$filePath. ' ' . $filePath . ' interface --force');$/;"	v	language:PHP
testSmokeFailure	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassInflectCommandTest.php	/^    public function testSmokeFailure($command, $expectedMessage = null)$/;"	f	language:PHP
expectedMessage	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassInflectCommandTest.php	/^    public function testSmokeFailure($command, $expectedMessage = null)$/;"	v	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassInflectCommandTest.php	/^        $process = $this->phpactor($command);$/;"	v	language:PHP
provideSmokeFailure	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassInflectCommandTest.php	/^    public function provideSmokeFailure()$/;"	f	language:PHP
ClassNewCommandTest	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassNewCommandTest.php	/^class ClassNewCommandTest extends SystemTestCase$/;"	c	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassNewCommandTest.php	/^    public function setUp()$/;"	f	language:PHP
testNewClass	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassNewCommandTest.php	/^    public function testNewClass($command, $expected)$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassNewCommandTest.php	/^        $process = $this->phpactor($command);$/;"	v	language:PHP
provideNewClass	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassNewCommandTest.php	/^    public function provideNewClass()$/;"	f	language:PHP
ClassTransformCommandTest	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassTransformCommandTest.php	/^class ClassTransformCommandTest extends SystemTestCase$/;"	c	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassTransformCommandTest.php	/^    public function setUp()$/;"	f	language:PHP
Foobar	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassTransformCommandTest.php	/^class Foobar implements Countable$/;"	c	language:PHP
testSmokeSuccess	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassTransformCommandTest.php	/^    public function testSmokeSuccess($command, string $expectedOutput, $error = false)$/;"	f	language:PHP
error	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassTransformCommandTest.php	/^    public function testSmokeSuccess($command, string $expectedOutput, $error = false)$/;"	v	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassTransformCommandTest.php	/^        $process = $this->phpactor($command);$/;"	v	language:PHP
provideSmokeSuccess	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassTransformCommandTest.php	/^    public function provideSmokeSuccess()$/;"	f	language:PHP
count	.config/nvim/plugged/phpactor/tests/System/Extension/CodeTransform/Command/ClassTransformCommandTest.php	/^            'public function count',$/;"	f	language:PHP
CompleteTest	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^class CompleteTest extends SystemTestCase$/;"	c	language:PHP
testComplete	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^    public function testComplete(string $source, array $expected)$/;"	f	language:PHP
suggestions	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^        $suggestions = $this->complete($source)['suggestions'];$/;"	v	language:PHP
index	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^        foreach ($expected as $index => $expectedSuggestion) {$/;"	v	language:PHP
provideComplete	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^    public function provideComplete()$/;"	f	language:PHP
Foobar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^class Foobar$/;"	c	language:PHP
foo	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^    public $foo;$/;"	v	language:PHP
foobar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^$foobar = new Foobar();$/;"	v	language:PHP
Foobar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^class Foobar$/;"	c	language:PHP
foo	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^    private $foo;$/;"	v	language:PHP
foobar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^$foobar = new Foobar();$/;"	v	language:PHP
Barar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^class Barar$/;"	c	language:PHP
bar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^    public $bar;$/;"	v	language:PHP
Foobar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^class Foobar$/;"	c	language:PHP
foo	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^    public $foo;$/;"	v	language:PHP
foobar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^$foobar = new Foobar();$/;"	v	language:PHP
Foobar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^class Foobar$/;"	c	language:PHP
foo	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^    public function foo(string $zzzbar = 'bar', $def): Barbar$/;"	f	language:PHP
zzzbar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^    public function foo(string $zzzbar = 'bar', $def): Barbar$/;"	v	language:PHP
foobar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^$foobar = new Foobar();$/;"	v	language:PHP
zzzbar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^                        'short_description' => 'pub foo(string $zzzbar = \\'bar\\', $def): Barbar',$/;"	v	language:PHP
Foobar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^class Foobar$/;"	c	language:PHP
foo	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^    public function foo()$/;"	f	language:PHP
foobar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^$foobar = new Foobar();$/;"	v	language:PHP
Foobar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^class Foobar$/;"	c	language:PHP
foo	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^    private function foo(): Barbar$/;"	f	language:PHP
foobar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^$foobar = new Foobar();$/;"	v	language:PHP
Foobar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^class Foobar$/;"	c	language:PHP
foo	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^    public static $foo;$/;"	v	language:PHP
foobar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^$foobar = new Foobar();$/;"	v	language:PHP
Foobar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^class Foobar$/;"	c	language:PHP
foo	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^    public static $foo;$/;"	v	language:PHP
me	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^    public $me;$/;"	v	language:PHP
foobar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^$foobar = new Foobar();$/;"	v	language:PHP
Foobar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^class Foobar$/;"	c	language:PHP
foobar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^    public static $foobar;$/;"	v	language:PHP
barfoo	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^    public static $barfoo;$/;"	v	language:PHP
foobar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^$foobar = new Foobar();$/;"	v	language:PHP
Foobar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^class Foobar$/;"	c	language:PHP
foobar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^$foobar = new Foobar();$/;"	v	language:PHP
Foobar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^class Foobar$/;"	c	language:PHP
foobar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^    public $foobar;$/;"	v	language:PHP
foobar	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^$foobar = new Foobar();$/;"	v	language:PHP
complete	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^    private function complete(string $source)$/;"	f	language:PHP
complete	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^        $complete = $this->container()->get('application.complete');$/;"	v	language:PHP
result	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Application/CompleteTest.php	/^        $result = $complete->complete($source, $offset);$/;"	v	language:PHP
CompleteCommandTest	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Command/CompleteCommandTest.php	/^class CompleteCommandTest extends SystemTestCase$/;"	c	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Command/CompleteCommandTest.php	/^    public function setUp()$/;"	f	language:PHP
testComplete	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Command/CompleteCommandTest.php	/^    public function testComplete($command, $expected)$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Command/CompleteCommandTest.php	/^        $process = $this->phpactor($command);$/;"	v	language:PHP
provideComplete	.config/nvim/plugged/phpactor/tests/System/Extension/Completion/Command/CompleteCommandTest.php	/^    public function provideComplete()$/;"	f	language:PHP
CacheClearCommandTest	.config/nvim/plugged/phpactor/tests/System/Extension/Core/Command/CacheClearCommandTest.php	/^class CacheClearCommandTest extends SystemTestCase$/;"	c	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/System/Extension/Core/Command/CacheClearCommandTest.php	/^    public function setUp()$/;"	f	language:PHP
testCacheClear	.config/nvim/plugged/phpactor/tests/System/Extension/Core/Command/CacheClearCommandTest.php	/^    public function testCacheClear()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/Core/Command/CacheClearCommandTest.php	/^        $process = $this->phpactor('cache:clear');$/;"	v	language:PHP
ConfigDumpCommandTest	.config/nvim/plugged/phpactor/tests/System/Extension/Core/Command/ConfigDumpCommandTest.php	/^class ConfigDumpCommandTest extends SystemTestCase$/;"	c	language:PHP
testConfigDump	.config/nvim/plugged/phpactor/tests/System/Extension/Core/Command/ConfigDumpCommandTest.php	/^    public function testConfigDump()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/Core/Command/ConfigDumpCommandTest.php	/^        $process = $this->phpactor('config:dump');$/;"	v	language:PHP
testConfigDumpOnly	.config/nvim/plugged/phpactor/tests/System/Extension/Core/Command/ConfigDumpCommandTest.php	/^    public function testConfigDumpOnly()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/Core/Command/ConfigDumpCommandTest.php	/^        $process = $this->phpactor('config:dump --config-only');$/;"	v	language:PHP
config	.config/nvim/plugged/phpactor/tests/System/Extension/Core/Command/ConfigDumpCommandTest.php	/^        $config = json_decode($process->getOutput(), true);$/;"	v	language:PHP
StatusCommandTest	.config/nvim/plugged/phpactor/tests/System/Extension/Core/Command/StatusCommandTest.php	/^class StatusCommandTest extends SystemTestCase$/;"	c	language:PHP
testStatus	.config/nvim/plugged/phpactor/tests/System/Extension/Core/Command/StatusCommandTest.php	/^    public function testStatus()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/Core/Command/StatusCommandTest.php	/^        $process = $this->phpactor('status');$/;"	v	language:PHP
RpcCommandTest	.config/nvim/plugged/phpactor/tests/System/Extension/Rpc/Command/RpcCommandTest.php	/^class RpcCommandTest extends SystemTestCase$/;"	c	language:PHP
testReadsFromStdin	.config/nvim/plugged/phpactor/tests/System/Extension/Rpc/Command/RpcCommandTest.php	/^    public function testReadsFromStdin()$/;"	f	language:PHP
stdin	.config/nvim/plugged/phpactor/tests/System/Extension/Rpc/Command/RpcCommandTest.php	/^        $stdin = json_encode([$/;"	v	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/Rpc/Command/RpcCommandTest.php	/^        $process = $this->phpactor('rpc', $stdin);$/;"	v	language:PHP
response	.config/nvim/plugged/phpactor/tests/System/Extension/Rpc/Command/RpcCommandTest.php	/^        $response = json_decode($process->getOutput(), true);$/;"	v	language:PHP
testPrettyPrintsOutput	.config/nvim/plugged/phpactor/tests/System/Extension/Rpc/Command/RpcCommandTest.php	/^    public function testPrettyPrintsOutput()$/;"	f	language:PHP
stdin	.config/nvim/plugged/phpactor/tests/System/Extension/Rpc/Command/RpcCommandTest.php	/^        $stdin = json_encode([$/;"	v	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/Rpc/Command/RpcCommandTest.php	/^        $process = $this->phpactor('rpc --pretty', $stdin);$/;"	v	language:PHP
testReplaysLastRequest	.config/nvim/plugged/phpactor/tests/System/Extension/Rpc/Command/RpcCommandTest.php	/^    public function testReplaysLastRequest()$/;"	f	language:PHP
randomString	.config/nvim/plugged/phpactor/tests/System/Extension/Rpc/Command/RpcCommandTest.php	/^        $randomString = md5(rand(0, 100000));$/;"	v	language:PHP
stdin	.config/nvim/plugged/phpactor/tests/System/Extension/Rpc/Command/RpcCommandTest.php	/^        $stdin = json_encode([$/;"	v	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/Rpc/Command/RpcCommandTest.php	/^        $process = $this->phpactor('rpc', $stdin);$/;"	v	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/Rpc/Command/RpcCommandTest.php	/^        $process = $this->phpactor('rpc --replay');$/;"	v	language:PHP
response	.config/nvim/plugged/phpactor/tests/System/Extension/Rpc/Command/RpcCommandTest.php	/^        $response = json_decode($process->getOutput(), true);$/;"	v	language:PHP
ClassSearchCommandTest	.config/nvim/plugged/phpactor/tests/System/Extension/SourceCodeFilesystem/Command/ClassSearchCommandTest.php	/^class ClassSearchCommandTest extends SystemTestCase$/;"	c	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/System/Extension/SourceCodeFilesystem/Command/ClassSearchCommandTest.php	/^    public function setUp()$/;"	f	language:PHP
testSearchName	.config/nvim/plugged/phpactor/tests/System/Extension/SourceCodeFilesystem/Command/ClassSearchCommandTest.php	/^    public function testSearchName()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/SourceCodeFilesystem/Command/ClassSearchCommandTest.php	/^        $process = $this->phpactor('class:search "Badger"');$/;"	v	language:PHP
testSearchNameJson	.config/nvim/plugged/phpactor/tests/System/Extension/SourceCodeFilesystem/Command/ClassSearchCommandTest.php	/^    public function testSearchNameJson()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/SourceCodeFilesystem/Command/ClassSearchCommandTest.php	/^        $process = $this->phpactor('class:search "Badger" --format=json');$/;"	v	language:PHP
testSearchNameInternalName	.config/nvim/plugged/phpactor/tests/System/Extension/SourceCodeFilesystem/Command/ClassSearchCommandTest.php	/^    public function testSearchNameInternalName()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/SourceCodeFilesystem/Command/ClassSearchCommandTest.php	/^        $process = $this->phpactor('class:search "DateTime" --format=json');$/;"	v	language:PHP
ClassReflectorCommandTest	.config/nvim/plugged/phpactor/tests/System/Extension/WorseReflection/Command/ClassReflectorCommandTest.php	/^class ClassReflectorCommandTest extends SystemTestCase$/;"	c	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/System/Extension/WorseReflection/Command/ClassReflectorCommandTest.php	/^    public function setUp()$/;"	f	language:PHP
testReflectCommand	.config/nvim/plugged/phpactor/tests/System/Extension/WorseReflection/Command/ClassReflectorCommandTest.php	/^    public function testReflectCommand()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/WorseReflection/Command/ClassReflectorCommandTest.php	/^        $process = $this->phpactor('class:reflect lib\/Badger.php');$/;"	v	language:PHP
output	.config/nvim/plugged/phpactor/tests/System/Extension/WorseReflection/Command/ClassReflectorCommandTest.php	/^        $output = $process->getOutput();$/;"	v	language:PHP
testReflectCommandWithClass	.config/nvim/plugged/phpactor/tests/System/Extension/WorseReflection/Command/ClassReflectorCommandTest.php	/^    public function testReflectCommandWithClass()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/WorseReflection/Command/ClassReflectorCommandTest.php	/^        $process = $this->phpactor('class:reflect "Animals\\\\Badger"');$/;"	v	language:PHP
output	.config/nvim/plugged/phpactor/tests/System/Extension/WorseReflection/Command/ClassReflectorCommandTest.php	/^        $output = $process->getOutput();$/;"	v	language:PHP
OffsetInfoCommandTest	.config/nvim/plugged/phpactor/tests/System/Extension/WorseReflection/Command/OffsetInfoCommandTest.php	/^class OffsetInfoCommandTest extends SystemTestCase$/;"	c	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/System/Extension/WorseReflection/Command/OffsetInfoCommandTest.php	/^    public function setUp()$/;"	f	language:PHP
testProvideInformationForOffset	.config/nvim/plugged/phpactor/tests/System/Extension/WorseReflection/Command/OffsetInfoCommandTest.php	/^    public function testProvideInformationForOffset()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/WorseReflection/Command/OffsetInfoCommandTest.php	/^        $process = $this->phpactor('offset:info lib\/Badger.php 163');$/;"	v	language:PHP
testProvideInformationForOffsetAsJson	.config/nvim/plugged/phpactor/tests/System/Extension/WorseReflection/Command/OffsetInfoCommandTest.php	/^    public function testProvideInformationForOffsetAsJson()$/;"	f	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/Extension/WorseReflection/Command/OffsetInfoCommandTest.php	/^        $process = $this->phpactor('offset:info lib\/Badger.php 137 --format=json');$/;"	v	language:PHP
SystemTestCase	.config/nvim/plugged/phpactor/tests/System/SystemTestCase.php	/^abstract class SystemTestCase extends IntegrationTestCase$/;"	c	language:PHP
phpactor	.config/nvim/plugged/phpactor/tests/System/SystemTestCase.php	/^    protected function phpactor(string $args, string $stdin = null): Process$/;"	f	language:PHP
stdin	.config/nvim/plugged/phpactor/tests/System/SystemTestCase.php	/^    protected function phpactor(string $args, string $stdin = null): Process$/;"	v	language:PHP
bin	.config/nvim/plugged/phpactor/tests/System/SystemTestCase.php	/^        $bin = __DIR__ . '\/..\/..\/bin\/phpactor --verbose ';$/;"	v	language:PHP
process	.config/nvim/plugged/phpactor/tests/System/SystemTestCase.php	/^        $process = new Process(sprintf($/;"	v	language:PHP
FileFinderTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^class FileFinderTest extends TestCase$/;"	c	language:PHP
filesystem	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^    private $filesystem;$/;"	v	language:PHP
fileList	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^    private $fileList;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^    public function setUp()$/;"	f	language:PHP
filesystem	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^        $this->filesystem = $this->prophesize(Filesystem::class);$/;"	v	language:PHP
fileList	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^        $this->fileList = $this->prophesize(FileList::class);$/;"	v	language:PHP
testReturnsAllPhpFilesIfNoMemberNameGiven	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^    public function testReturnsAllPhpFilesIfNoMemberNameGiven()$/;"	f	language:PHP
class	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^        $class = $this->reflectClass('class Foobar {}', 'Foobar');$/;"	v	language:PHP
files	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^        $files = $this->filesFor($class, null);$/;"	v	language:PHP
testReturnsAllPhpFilesIfNoClassReflectionGiven	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^    public function testReturnsAllPhpFilesIfNoClassReflectionGiven()$/;"	f	language:PHP
files	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^        $files = $this->filesFor(null, null);$/;"	v	language:PHP
testThrowsExceptionIfClassHasNoMembersByName	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^    public function testThrowsExceptionIfClassHasNoMembersByName()$/;"	f	language:PHP
bar	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^        $class = $this->reflectClass('class Foobar { public function bar() {} }', 'Foobar');$/;"	f	language:PHP
class	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^        $class = $this->reflectClass('class Foobar { public function bar() {} }', 'Foobar');$/;"	v	language:PHP
files	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^        $files = $this->filesFor($class, 'foobar');$/;"	v	language:PHP
testReturnsAllPhpFilesFilteredByMemberIfMemberIsPublic	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^    public function testReturnsAllPhpFilesFilteredByMemberIfMemberIsPublic()$/;"	f	language:PHP
abcde	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^        $class = $this->reflectClass('class Foobar { public function abcde() {} }', 'Foobar');$/;"	f	language:PHP
class	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^        $class = $this->reflectClass('class Foobar { public function abcde() {} }', 'Foobar');$/;"	v	language:PHP
files	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^        $files = $this->filesFor($class, 'abcde');$/;"	v	language:PHP
testReturnsClassAndTraitFilePathsIfMemberIsPrivate	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^    public function testReturnsClassAndTraitFilePathsIfMemberIsPrivate()$/;"	f	language:PHP
class	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^        $class = $this->reflectClass($/;"	v	language:PHP
Foobar	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^            SourceCode::fromPathAndString('barfoo', 'trait Barbar {} class Foobar { use Barbar; private function foobar(){} }'),$/;"	c	language:PHP
foobar	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^            SourceCode::fromPathAndString('barfoo', 'trait Barbar {} class Foobar { use Barbar; private function foobar(){} }'),$/;"	f	language:PHP
files	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^        $files = $this->filesFor($class, 'foobar');$/;"	v	language:PHP
testParentsTraitsAndInterfacesIfMemberIsProtected	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^    public function testParentsTraitsAndInterfacesIfMemberIsProtected()$/;"	f	language:PHP
class	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^        $class = $this->reflectClass($/;"	v	language:PHP
ParentClass	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^            SourceCode::fromPathAndString('barfoo', 'interface Inter1 {} class ParentClass {} trait Barbar {} class Foobar extends ParentClass implements Inter1 { use Barbar; protected function foobar(){} }'),$/;"	c	language:PHP
foobar	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^            SourceCode::fromPathAndString('barfoo', 'interface Inter1 {} class ParentClass {} trait Barbar {} class Foobar extends ParentClass implements Inter1 { use Barbar; protected function foobar(){} }'),$/;"	f	language:PHP
files	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^        $files = $this->filesFor($class, 'foobar');$/;"	v	language:PHP
filesFor	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^    private function filesFor(ReflectionClassLike $class = null, string $memberName = null)$/;"	f	language:PHP
class	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^    private function filesFor(ReflectionClassLike $class = null, string $memberName = null)$/;"	v	language:PHP
setupAllFiles	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^    private function setupAllFiles()$/;"	f	language:PHP
reflectClass	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^    private function reflectClass($source, string $name)$/;"	f	language:PHP
builder	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Application/Finder/FileFinderTest.php	/^        $builder = ReflectorBuilder::create()->addSource(SourceCode::fromPathAndString('foobar', '<?php ' . $source));$/;"	v	language:PHP
SymfonyConsoleMoveLoggerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Command/Logger/SymfonyConsoleMoveLoggerTest.php	/^class SymfonyConsoleMoveLoggerTest extends TestCase$/;"	c	language:PHP
output	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Command/Logger/SymfonyConsoleMoveLoggerTest.php	/^    private $output;$/;"	v	language:PHP
logger	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Command/Logger/SymfonyConsoleMoveLoggerTest.php	/^    private $logger;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Command/Logger/SymfonyConsoleMoveLoggerTest.php	/^    public function setUp()$/;"	f	language:PHP
output	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Command/Logger/SymfonyConsoleMoveLoggerTest.php	/^        $this->output = new BufferedOutput();$/;"	v	language:PHP
logger	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Command/Logger/SymfonyConsoleMoveLoggerTest.php	/^        $this->logger = new SymfonyConsoleMoveLogger($this->output);$/;"	v	language:PHP
testReplacing	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Command/Logger/SymfonyConsoleMoveLoggerTest.php	/^    public function testReplacing()$/;"	f	language:PHP
references	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Command/Logger/SymfonyConsoleMoveLoggerTest.php	/^        $references = new FoundReferences($/;"	v	language:PHP
Foobar	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Command/Logger/SymfonyConsoleMoveLoggerTest.php	/^class Foobar$/;"	c	language:PHP
source	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Command/Logger/SymfonyConsoleMoveLoggerTest.php	/^    public function source(): SourceCode$/;"	f	language:PHP
targetName	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Command/Logger/SymfonyConsoleMoveLoggerTest.php	/^    public function targetName(): FullyQualifiedName$/;"	f	language:PHP
references	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Command/Logger/SymfonyConsoleMoveLoggerTest.php	/^    public function references(): NamespacedClassRefList$/;"	f	language:PHP
target	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Command/Logger/SymfonyConsoleMoveLoggerTest.php	/^        $target = FullyQualifiedName::fromString('Hello\\World');$/;"	v	language:PHP
output	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Command/Logger/SymfonyConsoleMoveLoggerTest.php	/^        $output = $this->output->fetch();$/;"	v	language:PHP
ClassCopyHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassCopyHandlerTest.php	/^class ClassCopyHandlerTest extends HandlerTestCase$/;"	c	language:PHP
classCopy	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassCopyHandlerTest.php	/^    private $classCopy;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassCopyHandlerTest.php	/^    public function setUp()$/;"	f	language:PHP
classCopy	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassCopyHandlerTest.php	/^        $this->classCopy = $this->prophesize(ClassCopy::class);$/;"	v	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassCopyHandlerTest.php	/^    public function createHandler(): Handler$/;"	f	language:PHP
testNoDestPath	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassCopyHandlerTest.php	/^    public function testNoDestPath()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassCopyHandlerTest.php	/^        $action = $this->handle('copy_class', [$/;"	v	language:PHP
inputs	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassCopyHandlerTest.php	/^        $inputs = $action->inputs();$/;"	v	language:PHP
testCopyClass	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassCopyHandlerTest.php	/^    public function testCopyClass()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassCopyHandlerTest.php	/^        $action = $this->handle('copy_class', [$/;"	v	language:PHP
ClassMoveHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassMoveHandlerTest.php	/^class ClassMoveHandlerTest extends HandlerTestCase$/;"	c	language:PHP
classMover	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassMoveHandlerTest.php	/^    private $classMover;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassMoveHandlerTest.php	/^    public function setUp()$/;"	f	language:PHP
classMover	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassMoveHandlerTest.php	/^        $this->classMover = $this->prophesize(ClassMover::class);$/;"	v	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassMoveHandlerTest.php	/^    public function createHandler(): Handler$/;"	f	language:PHP
testNotConfirmed	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassMoveHandlerTest.php	/^    public function testNotConfirmed()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassMoveHandlerTest.php	/^        $action = $this->handle('move_class', [$/;"	v	language:PHP
testConfirmChallenge	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassMoveHandlerTest.php	/^    public function testConfirmChallenge()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassMoveHandlerTest.php	/^        $action = $this->handle('move_class', [$/;"	v	language:PHP
inputs	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassMoveHandlerTest.php	/^        $inputs = $action->inputs();$/;"	v	language:PHP
testNoDestPath	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassMoveHandlerTest.php	/^    public function testNoDestPath()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassMoveHandlerTest.php	/^        $action = $this->handle('move_class', [$/;"	v	language:PHP
inputs	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassMoveHandlerTest.php	/^        $inputs = $action->inputs();$/;"	v	language:PHP
testMoveClass	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassMoveHandlerTest.php	/^    public function testMoveClass()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassMoveHandlerTest.php	/^        $action = $this->handle('move_class', [$/;"	v	language:PHP
actions	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassMoveHandlerTest.php	/^        $actions = $action->actions();$/;"	v	language:PHP
firstAction	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassMoveHandlerTest.php	/^        $firstAction = array_shift($actions);$/;"	v	language:PHP
secondAction	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ClassMoveHandlerTest.php	/^        $secondAction = array_shift($actions);$/;"	v	language:PHP
ReferencesHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^class ReferencesHandlerTest extends HandlerTestCase$/;"	c	language:PHP
classReferences	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^    private $classReferences;$/;"	v	language:PHP
reflector	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^    private $reflector;$/;"	v	language:PHP
classMemberReferences	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^    private $classMemberReferences;$/;"	v	language:PHP
logger	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^    private $logger;$/;"	v	language:PHP
filesystemRegistry	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^    private $filesystemRegistry;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^    public function setUp()$/;"	f	language:PHP
classReferences	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $this->classReferences = $this->prophesize(ClassReferences::class);$/;"	v	language:PHP
classMemberReferences	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $this->classMemberReferences = $this->prophesize(ClassMemberReferences::class);$/;"	v	language:PHP
logger	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $this->logger = new ArrayLogger();$/;"	v	language:PHP
reflector	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $this->reflector = ReflectorBuilder::create()->addSource(SourceCode::fromPath(__FILE__))->withLogger($this->logger)->build();$/;"	v	language:PHP
filesystemRegistry	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $this->filesystemRegistry = $this->prophesize(FilesystemRegistry::class);$/;"	v	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^    public function createHandler(): Handler$/;"	f	language:PHP
testFilesystemSelection	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^    public function testFilesystemSelection()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $action = $this->handle('references', [$/;"	v	language:PHP
inputs	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $inputs = $action->inputs();$/;"	v	language:PHP
input	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $input = reset($inputs);$/;"	v	language:PHP
testInvalidSymbolType	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^    public function testInvalidSymbolType()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $action = $this->handle('references', [$/;"	v	language:PHP
testClassReturnNoneFound	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^    public function testClassReturnNoneFound()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $action = $this->handle('references', [$/;"	v	language:PHP
testClassReferences	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^    public function testClassReferences()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $action = $this->handle('references', [$/;"	v	language:PHP
actions	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $actions = $action->actions();$/;"	v	language:PHP
first	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $first = array_shift($actions);$/;"	v	language:PHP
second	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $second = array_shift($actions);$/;"	v	language:PHP
testReplaceClassReferences	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^    public function testReplaceClassReferences()$/;"	f	language:PHP
source	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $source = '<?php new \\stdClass();';$/;"	v	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $action = $this->handle('references', [$/;"	v	language:PHP
testMemberReturnNoneFound	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^    public function testMemberReturnNoneFound()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $action = $this->handle('references', [$/;"	v	language:PHP
std	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^            'source' => $std = '<?php $foo = new ' . __CLASS__ . '(); $foo->testMemberReturnNoneFound();',$/;"	v	language:PHP
testMemberReferences	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^    public function testMemberReferences()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $action = $this->handle('references', [$/;"	v	language:PHP
std	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^            'source' => $std = '<?php $foo = new ' . __CLASS__ . '(); $foo->testMemberReferences();',$/;"	v	language:PHP
actions	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $actions = $action->actions();$/;"	v	language:PHP
first	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $first = array_shift($actions);$/;"	v	language:PHP
second	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $second = array_shift($actions);$/;"	v	language:PHP
testReplaceMemberDemandReplacement	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^    public function testReplaceMemberDemandReplacement()$/;"	f	language:PHP
replacement	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $replacement = 'foobar';$/;"	v	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $action = $this->handle('references', [$/;"	v	language:PHP
foo	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^            'source' => '<?php $foo = new ' . __CLASS__ . '(); $foo->testMemberReferences();',$/;"	v	language:PHP
textInput	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $textInput = $action->inputs()[0];$/;"	v	language:PHP
testReplaceMember	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^    public function testReplaceMember()$/;"	f	language:PHP
replacement	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $replacement = 'foobar';$/;"	v	language:PHP
source	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $source = '<?php $foo = new ' . __CLASS__ . '(); $foo->testMemberReferences();';$/;"	v	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $action = $this->handle('references', [$/;"	v	language:PHP
first	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $first = $action->actions()[0];$/;"	v	language:PHP
second	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $second = $action->actions()[1];$/;"	v	language:PHP
third	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $third = $action->actions()[2];$/;"	v	language:PHP
testMemberReferencesWithRisky	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^    public function testMemberReferencesWithRisky()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $action = $this->handle('references', [$/;"	v	language:PHP
std	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^            'source' => $std = '<?php $foo = new ' . __CLASS__ . '(); $foo->testMemberReferences();',$/;"	v	language:PHP
actions	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $actions = $action->actions();$/;"	v	language:PHP
first	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^        $first = array_shift($actions);$/;"	v	language:PHP
exampleMemberRiskyResponse	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^    private function exampleMemberRiskyResponse()$/;"	f	language:PHP
exampleClassResponse	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassMover/Rpc/ReferencesHandlerTest.php	/^    private function exampleClassResponse()$/;"	f	language:PHP
FileInfoHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassToFile/Rpc/FileInfoHandlerTest.php	/^class FileInfoHandlerTest extends HandlerTestCase$/;"	c	language:PHP
fileInfo	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassToFile/Rpc/FileInfoHandlerTest.php	/^    private $fileInfo;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassToFile/Rpc/FileInfoHandlerTest.php	/^    public function setUp()$/;"	f	language:PHP
fileInfo	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassToFile/Rpc/FileInfoHandlerTest.php	/^        $this->fileInfo = $this->prophesize(FileInfo::class);$/;"	v	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassToFile/Rpc/FileInfoHandlerTest.php	/^    protected function createHandler(): Handler$/;"	f	language:PHP
testReturnsAResponseWithAFileInfo	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassToFile/Rpc/FileInfoHandlerTest.php	/^    public function testReturnsAResponseWithAFileInfo()$/;"	f	language:PHP
path	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassToFile/Rpc/FileInfoHandlerTest.php	/^        $path =  'src\/Controller\/BlogController.php';$/;"	v	language:PHP
result	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassToFile/Rpc/FileInfoHandlerTest.php	/^        $result = [$/;"	v	language:PHP
response	.config/nvim/plugged/phpactor/tests/Unit/Extension/ClassToFile/Rpc/FileInfoHandlerTest.php	/^        $response = $this->handle('file_info', ['path' => $path]);$/;"	v	language:PHP
ChangeVisiblityHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/CodeTransform/Rpc/ChangeVisiblityHandlerTest.php	/^class ChangeVisiblityHandlerTest extends HandlerTestCase$/;"	c	language:PHP
changeVisibility	.config/nvim/plugged/phpactor/tests/Unit/Extension/CodeTransform/Rpc/ChangeVisiblityHandlerTest.php	/^    private $changeVisibility;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/CodeTransform/Rpc/ChangeVisiblityHandlerTest.php	/^    public function setUp()$/;"	f	language:PHP
changeVisibility	.config/nvim/plugged/phpactor/tests/Unit/Extension/CodeTransform/Rpc/ChangeVisiblityHandlerTest.php	/^        $this->changeVisibility = $this->prophesize(ChangeVisiblity::class);$/;"	v	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/CodeTransform/Rpc/ChangeVisiblityHandlerTest.php	/^    protected function createHandler(): Handler$/;"	f	language:PHP
testChangeVisiblity	.config/nvim/plugged/phpactor/tests/Unit/Extension/CodeTransform/Rpc/ChangeVisiblityHandlerTest.php	/^    public function testChangeVisiblity()$/;"	f	language:PHP
expectedSource	.config/nvim/plugged/phpactor/tests/Unit/Extension/CodeTransform/Rpc/ChangeVisiblityHandlerTest.php	/^        $expectedSource = SourceCode::fromStringAndPath(self::EXAMPLE_SOURCE, self::EXAMPLE_PATH);$/;"	v	language:PHP
response	.config/nvim/plugged/phpactor/tests/Unit/Extension/CodeTransform/Rpc/ChangeVisiblityHandlerTest.php	/^        $response = $this->handle('change_visibility', [$/;"	v	language:PHP
CompletionHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/CompletionHandlerTest.php	/^class CompletionHandlerTest extends TestCase$/;"	c	language:PHP
manager	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/CompletionHandlerTest.php	/^    private $manager;$/;"	v	language:PHP
document	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/CompletionHandlerTest.php	/^    private $document;$/;"	v	language:PHP
position	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/CompletionHandlerTest.php	/^    private $position;$/;"	v	language:PHP
reflector	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/CompletionHandlerTest.php	/^    private $reflector;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/CompletionHandlerTest.php	/^    public function setUp()$/;"	f	language:PHP
manager	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/CompletionHandlerTest.php	/^        $this->manager = new Manager();$/;"	v	language:PHP
document	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/CompletionHandlerTest.php	/^        $this->document = new TextDocumentItem();$/;"	v	language:PHP
position	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/CompletionHandlerTest.php	/^        $this->position = new Position(1, 1);$/;"	v	language:PHP
reflector	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/CompletionHandlerTest.php	/^        $this->reflector = ReflectorBuilder::create()->build();$/;"	v	language:PHP
testHandleNoSuggestions	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/CompletionHandlerTest.php	/^    public function testHandleNoSuggestions()$/;"	f	language:PHP
handler	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/CompletionHandlerTest.php	/^        $handler = $this->create([]);$/;"	v	language:PHP
generator	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/CompletionHandlerTest.php	/^        $generator = $handler->__invoke($this->document, $this->position);$/;"	v	language:PHP
list	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/CompletionHandlerTest.php	/^        $list = $generator->current();$/;"	v	language:PHP
testHandleSuggestions	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/CompletionHandlerTest.php	/^    public function testHandleSuggestions()$/;"	f	language:PHP
handler	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/CompletionHandlerTest.php	/^        $handler = $this->create([$/;"	v	language:PHP
generator	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/CompletionHandlerTest.php	/^        $generator = $handler->__invoke($this->document, $this->position);$/;"	v	language:PHP
list	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/CompletionHandlerTest.php	/^        $list = $generator->current();$/;"	v	language:PHP
create	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/CompletionHandlerTest.php	/^    private function create(array $suggestions): Handler$/;"	f	language:PHP
suggestions	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/CompletionHandlerTest.php	/^            private $suggestions;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/CompletionHandlerTest.php	/^            public function __construct(array $suggestions)$/;"	f	language:PHP
suggestions	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/CompletionHandlerTest.php	/^                $this->suggestions = $suggestions;$/;"	v	language:PHP
complete	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/CompletionHandlerTest.php	/^            public function complete(string $source, int $offset): Generator$/;"	f	language:PHP
PhpactorToLspCompletionTypeTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/PhpactorToLspCompletionTypeTest.php	/^class PhpactorToLspCompletionTypeTest extends TestCase$/;"	c	language:PHP
testConverts	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/PhpactorToLspCompletionTypeTest.php	/^    public function testConverts()$/;"	f	language:PHP
reflection	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/LanguageServer/PhpactorToLspCompletionTypeTest.php	/^        $reflection = new ReflectionClass(Suggestion::class);$/;"	v	language:PHP
HoverHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/Rpc/HoverHandlerTest.php	/^class HoverHandlerTest extends HandlerTestCase$/;"	c	language:PHP
reflector	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/Rpc/HoverHandlerTest.php	/^    private $reflector;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/Rpc/HoverHandlerTest.php	/^    public function setUp()$/;"	f	language:PHP
reflector	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/Rpc/HoverHandlerTest.php	/^        $this->reflector = ReflectorBuilder::create()->enableContextualSourceLocation()->build();$/;"	v	language:PHP
formatter	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/Rpc/HoverHandlerTest.php	/^        $this->formatter = new ObjectFormatter([]);$/;"	v	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/Rpc/HoverHandlerTest.php	/^    protected function createHandler(): Handler$/;"	f	language:PHP
testHover	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/Rpc/HoverHandlerTest.php	/^    public function testHover(string $source, string $expectedMessage)$/;"	f	language:PHP
response	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/Rpc/HoverHandlerTest.php	/^        $response = $this->handle(HoverHandler::NAME, [$/;"	v	language:PHP
provideHover	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/Rpc/HoverHandlerTest.php	/^    public function provideHover()$/;"	f	language:PHP
Foobar	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/Rpc/HoverHandlerTest.php	/^            '<?php class Foobar { public function fo<>obar() { } }',$/;"	c	language:PHP
fo	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/Rpc/HoverHandlerTest.php	/^            '<?php class Foobar { public function fo<>obar() { } }',$/;"	f	language:PHP
Foobar	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/Rpc/HoverHandlerTest.php	/^            '<?php class Foobar { private $fo<>obar; }',$/;"	c	language:PHP
Foobar	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/Rpc/HoverHandlerTest.php	/^            '<?php class Foobar { const fo<>obar = 123; }',$/;"	c	language:PHP
foo	.config/nvim/plugged/phpactor/tests/Unit/Extension/Completion/Rpc/HoverHandlerTest.php	/^            '<?php <> $foo = "bar"',$/;"	v	language:PHP
ContextMenuHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/ContextMenu/Handler/ContextMenuHandlerTest.php	/^class ContextMenuHandlerTest extends HandlerTestCase$/;"	c	language:PHP
hello	.config/nvim/plugged/phpactor/tests/Unit/Extension/ContextMenu/Handler/ContextMenuHandlerTest.php	/^    const SOURCE = '<?php $hello = "world"; echo $hello;';$/;"	v	language:PHP
reflector	.config/nvim/plugged/phpactor/tests/Unit/Extension/ContextMenu/Handler/ContextMenuHandlerTest.php	/^    private $reflector;$/;"	v	language:PHP
container	.config/nvim/plugged/phpactor/tests/Unit/Extension/ContextMenu/Handler/ContextMenuHandlerTest.php	/^    private $container;$/;"	v	language:PHP
menu	.config/nvim/plugged/phpactor/tests/Unit/Extension/ContextMenu/Handler/ContextMenuHandlerTest.php	/^    private $menu = [];$/;"	v	language:PHP
menu	.config/nvim/plugged/phpactor/tests/Unit/Extension/ContextMenu/Handler/ContextMenuHandlerTest.php	/^    private $menu = [];$/;"	v	language:PHP
requestHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/ContextMenu/Handler/ContextMenuHandlerTest.php	/^    private $requestHandler;$/;"	v	language:PHP
classFileNormalizer	.config/nvim/plugged/phpactor/tests/Unit/Extension/ContextMenu/Handler/ContextMenuHandlerTest.php	/^    private $classFileNormalizer;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/ContextMenu/Handler/ContextMenuHandlerTest.php	/^    public function setUp()$/;"	f	language:PHP
reflector	.config/nvim/plugged/phpactor/tests/Unit/Extension/ContextMenu/Handler/ContextMenuHandlerTest.php	/^        $this->reflector = ReflectorBuilder::create()->addSource(SourceCode::fromPath(__FILE__))->build();$/;"	v	language:PHP
classFileNormalizer	.config/nvim/plugged/phpactor/tests/Unit/Extension/ContextMenu/Handler/ContextMenuHandlerTest.php	/^        $this->classFileNormalizer = $this->prophesize(ClassFileNormalizer::class);$/;"	v	language:PHP
container	.config/nvim/plugged/phpactor/tests/Unit/Extension/ContextMenu/Handler/ContextMenuHandlerTest.php	/^        $this->container = $this->prophesize(Container::class);$/;"	v	language:PHP
requestHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/ContextMenu/Handler/ContextMenuHandlerTest.php	/^        $this->requestHandler = $this->prophesize(RequestHandler::class);$/;"	v	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/ContextMenu/Handler/ContextMenuHandlerTest.php	/^    public function createHandler(): Handler$/;"	f	language:PHP
testNoActionsAvailable	.config/nvim/plugged/phpactor/tests/Unit/Extension/ContextMenu/Handler/ContextMenuHandlerTest.php	/^    public function testNoActionsAvailable()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/ContextMenu/Handler/ContextMenuHandlerTest.php	/^        $action = $this->handle(ContextMenuHandler::NAME, [$/;"	v	language:PHP
hello	.config/nvim/plugged/phpactor/tests/Unit/Extension/ContextMenu/Handler/ContextMenuHandlerTest.php	/^            'source' => '<?php $hello = "world"; echo $hello;',$/;"	v	language:PHP
testReturnMenu	.config/nvim/plugged/phpactor/tests/Unit/Extension/ContextMenu/Handler/ContextMenuHandlerTest.php	/^    public function testReturnMenu()$/;"	f	language:PHP
menu	.config/nvim/plugged/phpactor/tests/Unit/Extension/ContextMenu/Handler/ContextMenuHandlerTest.php	/^        $this->menu = [$/;"	v	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/ContextMenu/Handler/ContextMenuHandlerTest.php	/^        $action = $this->handle(ContextMenuHandler::NAME, [$/;"	v	language:PHP
hello	.config/nvim/plugged/phpactor/tests/Unit/Extension/ContextMenu/Handler/ContextMenuHandlerTest.php	/^            'source' => '<?php $hello = "world"; echo $hello;',$/;"	v	language:PHP
testReplaceTokens	.config/nvim/plugged/phpactor/tests/Unit/Extension/ContextMenu/Handler/ContextMenuHandlerTest.php	/^    public function testReplaceTokens()$/;"	f	language:PHP
menu	.config/nvim/plugged/phpactor/tests/Unit/Extension/ContextMenu/Handler/ContextMenuHandlerTest.php	/^        $this->menu = [$/;"	v	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/ContextMenu/Handler/ContextMenuHandlerTest.php	/^        $action = $this->handle(ContextMenuHandler::NAME, [$/;"	v	language:PHP
parameters	.config/nvim/plugged/phpactor/tests/Unit/Extension/ContextMenu/Handler/ContextMenuHandlerTest.php	/^        $parameters = $action->parameters();$/;"	v	language:PHP
StatusTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Application/StatusTest.php	/^class StatusTest extends TestCase$/;"	c	language:PHP
registry	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Application/StatusTest.php	/^    private $registry;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Application/StatusTest.php	/^    public function setUp()$/;"	f	language:PHP
registry	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Application/StatusTest.php	/^        $this->registry = $this->prophesize(FilesystemRegistry::class);$/;"	v	language:PHP
paths	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Application/StatusTest.php	/^        $this->paths = new PathCandidates([]);$/;"	v	language:PHP
status	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Application/StatusTest.php	/^        $this->status = new Status($this->registry->reveal(), $this->paths, '\/path\/to\/here');$/;"	v	language:PHP
testStatusNoComposerOrGit	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Application/StatusTest.php	/^    public function testStatusNoComposerOrGit()$/;"	f	language:PHP
diagnostics	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Application/StatusTest.php	/^        $diagnostics = $this->status->check();$/;"	v	language:PHP
testStatusComposerOrGit	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Application/StatusTest.php	/^    public function testStatusComposerOrGit()$/;"	f	language:PHP
diagnostics	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Application/StatusTest.php	/^        $diagnostics = $this->status->check();$/;"	v	language:PHP
DumperRegistryTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Dumper/DumperRegistryTest.php	/^class DumperRegistryTest extends TestCase$/;"	c	language:PHP
testNotFound	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Dumper/DumperRegistryTest.php	/^    public function testNotFound()$/;"	f	language:PHP
registry	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Dumper/DumperRegistryTest.php	/^        $registry = $this->create([$/;"	v	language:PHP
testGetDumper	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Dumper/DumperRegistryTest.php	/^    public function testGetDumper()$/;"	f	language:PHP
registry	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Dumper/DumperRegistryTest.php	/^        $registry = $this->create([$/;"	v	language:PHP
dumper	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Dumper/DumperRegistryTest.php	/^            'foobar' => $dumper = $this->prophesize(Dumper::class)->reveal(),$/;"	v	language:PHP
testDefault	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Dumper/DumperRegistryTest.php	/^    public function testDefault()$/;"	f	language:PHP
registry	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Dumper/DumperRegistryTest.php	/^        $registry = $this->create([$/;"	v	language:PHP
dumper	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Dumper/DumperRegistryTest.php	/^            'foobar' => $dumper = $this->prophesize(Dumper::class)->reveal(),$/;"	v	language:PHP
create	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Dumper/DumperRegistryTest.php	/^    private function create(array $dumpers, $default = 'default')$/;"	f	language:PHP
default	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Dumper/DumperRegistryTest.php	/^    private function create(array $dumpers, $default = 'default')$/;"	v	language:PHP
DumperTestCase	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Dumper/DumperTestCase.php	/^abstract class DumperTestCase extends TestCase$/;"	c	language:PHP
dump	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Dumper/DumperTestCase.php	/^    protected function dump(array $data)$/;"	f	language:PHP
output	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Dumper/DumperTestCase.php	/^        $output =  new BufferedOutput();$/;"	v	language:PHP
dumper	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Dumper/DumperTestCase.php	/^    abstract protected function dumper();$/;"	f	language:PHP
IndentedDumperTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Dumper/IndentedDumperTest.php	/^class IndentedDumperTest extends DumperTestCase$/;"	c	language:PHP
dumper	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Dumper/IndentedDumperTest.php	/^    protected function dumper()$/;"	f	language:PHP
testIndentedOutput	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Dumper/IndentedDumperTest.php	/^    public function testIndentedOutput()$/;"	f	language:PHP
output	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Dumper/IndentedDumperTest.php	/^        $output = $this->dump([$/;"	v	language:PHP
JsonDumperTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Dumper/JsonDumperTest.php	/^class JsonDumperTest extends DumperTestCase$/;"	c	language:PHP
dumper	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Dumper/JsonDumperTest.php	/^    protected function dumper()$/;"	f	language:PHP
testDumpsJson	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Dumper/JsonDumperTest.php	/^    public function testDumpsJson()$/;"	f	language:PHP
output	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Dumper/JsonDumperTest.php	/^        $output = $this->dump(['hello' => 'test']);$/;"	v	language:PHP
ChainPromptTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Prompt/ChainPromptTest.php	/^class ChainPromptTest extends TestCase$/;"	c	language:PHP
prompt1	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Prompt/ChainPromptTest.php	/^    private $prompt1;$/;"	v	language:PHP
prompt2	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Prompt/ChainPromptTest.php	/^    private $prompt2;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Prompt/ChainPromptTest.php	/^    public function setUp()$/;"	f	language:PHP
prompt1	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Prompt/ChainPromptTest.php	/^        $this->prompt1 = $this->prophesize(Prompt::class);$/;"	v	language:PHP
prompt2	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Prompt/ChainPromptTest.php	/^        $this->prompt2 = $this->prophesize(Prompt::class);$/;"	v	language:PHP
chainPrompt	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Prompt/ChainPromptTest.php	/^        $this->chainPrompt = new ChainPrompt([$/;"	v	language:PHP
testDelegateToSupporting	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Prompt/ChainPromptTest.php	/^    public function testDelegateToSupporting()$/;"	f	language:PHP
response	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Prompt/ChainPromptTest.php	/^        $response = $this->chainPrompt->prompt('Hello', 'World');$/;"	v	language:PHP
testPromptsNotSupported	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Console/Prompt/ChainPromptTest.php	/^    public function testPromptsNotSupported()$/;"	f	language:PHP
CacheClearHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Rpc/CacheClearHandlerTest.php	/^class CacheClearHandlerTest extends HandlerTestCase$/;"	c	language:PHP
clearCache	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Rpc/CacheClearHandlerTest.php	/^    private $clearCache;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Rpc/CacheClearHandlerTest.php	/^    public function setUp()$/;"	f	language:PHP
clearCache	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Rpc/CacheClearHandlerTest.php	/^        $this->clearCache = $this->prophesize(CacheClear::class);$/;"	v	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Rpc/CacheClearHandlerTest.php	/^    public function createHandler(): Handler$/;"	f	language:PHP
testClearCache	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Rpc/CacheClearHandlerTest.php	/^    public function testClearCache()$/;"	f	language:PHP
ConfigHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Rpc/ConfigHandlerTest.php	/^class ConfigHandlerTest extends HandlerTestCase$/;"	c	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Rpc/ConfigHandlerTest.php	/^    public function createHandler(): Handler$/;"	f	language:PHP
testStatus	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Rpc/ConfigHandlerTest.php	/^    public function testStatus()$/;"	f	language:PHP
response	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Rpc/ConfigHandlerTest.php	/^        $response = $this->handle('config', []);$/;"	v	language:PHP
StatusHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Rpc/StatusHandlerTest.php	/^class StatusHandlerTest extends HandlerTestCase$/;"	c	language:PHP
status	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Rpc/StatusHandlerTest.php	/^    private $status;$/;"	v	language:PHP
paths	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Rpc/StatusHandlerTest.php	/^    private $paths;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Rpc/StatusHandlerTest.php	/^    public function setUp()$/;"	f	language:PHP
status	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Rpc/StatusHandlerTest.php	/^        $this->status = $this->prophesize(Status::class);$/;"	v	language:PHP
paths	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Rpc/StatusHandlerTest.php	/^        $this->paths = $this->prophesize(PathCandidates::class);$/;"	v	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Rpc/StatusHandlerTest.php	/^    public function createHandler(): Handler$/;"	f	language:PHP
testStatus	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Rpc/StatusHandlerTest.php	/^    public function testStatus()$/;"	f	language:PHP
response	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/Rpc/StatusHandlerTest.php	/^        $response = $this->handle('status', []);$/;"	v	language:PHP
GotoDefinitionTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^class GotoDefinitionTest extends TestCase$/;"	c	language:PHP
reflector	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^    private $reflector;$/;"	v	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^    private $action;$/;"	v	language:PHP
reflectionClass	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^    private $reflectionClass;$/;"	v	language:PHP
reflectionMethodCollection	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^    private $reflectionMethodCollection;$/;"	v	language:PHP
reflectionMethod	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^    private $reflectionMethod;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^    public function setUp()$/;"	f	language:PHP
reflector	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $this->reflector = $this->prophesize(Reflector::class);$/;"	v	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $this->action = new GotoDefinition($this->reflector->reveal());$/;"	v	language:PHP
reflectionClass	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $this->reflectionClass = $this->prophesize(ReflectionClass::class);$/;"	v	language:PHP
reflectionFunction	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $this->reflectionFunction = $this->prophesize(ReflectionFunction::class);$/;"	v	language:PHP
reflectionMethod	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $this->reflectionMethod = $this->prophesize(ReflectionMethod::class);$/;"	v	language:PHP
reflectionMethodCollection	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $this->reflectionMethodCollection = $this->prophesize(ReflectionMethodCollection::class);$/;"	v	language:PHP
reflectionConstant	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $this->reflectionConstant = $this->prophesize(ReflectionConstant::class);$/;"	v	language:PHP
reflectionConstantCollection	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $this->reflectionConstantCollection = $this->prophesize(ReflectionConstantCollection::class);$/;"	v	language:PHP
reflectionProperty	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $this->reflectionProperty = $this->prophesize(ReflectionProperty::class);$/;"	v	language:PHP
reflectionPropertyCollection	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $this->reflectionPropertyCollection = $this->prophesize(ReflectionPropertyCollection::class);$/;"	v	language:PHP
testUnresolvableSymbol	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^    public function testUnresolvableSymbol()$/;"	f	language:PHP
info	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $info = SymbolContext::for(Symbol::unknown());$/;"	v	language:PHP
cannot	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^     * Method: It fails if the containing class cannot be determined.$/;"	c	language:PHP
testNoContainingClass	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^    public function testNoContainingClass()$/;"	f	language:PHP
for	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $this->expectExceptionMessage('Containing class for member "aaa" could not be determined');$/;"	c	language:PHP
info	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $info = SymbolContext::for($/;"	v	language:PHP
result	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $result = $this->action->gotoDefinition($info);$/;"	v	language:PHP
is	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^     * Method: It fails if the contianing class is not found.$/;"	c	language:PHP
testContainingClassNotFound	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^    public function testContainingClassNotFound()$/;"	f	language:PHP
info	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $info = SymbolContext::for($/;"	v	language:PHP
info	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $info = $info->withContainerType(Type::fromString('Foobar'));$/;"	v	language:PHP
result	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $result = $this->action->gotoDefinition($info);$/;"	v	language:PHP
has	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^     * Method: It fails if the class has no path associated with it.$/;"	c	language:PHP
testClassNoPath	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^    public function testClassNoPath()$/;"	f	language:PHP
info	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $info = SymbolContext::for($/;"	v	language:PHP
info	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $info = $info->withContainerType(Type::fromString('Foobar'));$/;"	v	language:PHP
result	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $result = $this->action->gotoDefinition($info);$/;"	v	language:PHP
testGotoDefinitionFunctionNoSourceCode	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^    public function testGotoDefinitionFunctionNoSourceCode()$/;"	f	language:PHP
info	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $info = SymbolContext::for($/;"	v	language:PHP
info	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $info = $info->withName(Name::fromString('Foobar'));$/;"	v	language:PHP
testGotoDefinitionFunction	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^    public function testGotoDefinitionFunction()$/;"	f	language:PHP
info	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $info = SymbolContext::for($/;"	v	language:PHP
info	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $info = $info->withName(Name::fromString('Foobar'));$/;"	v	language:PHP
result	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $result = $this->action->gotoDefinition($info);$/;"	v	language:PHP
does	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^     * Method: It fails if the containing class does not have the method.$/;"	c	language:PHP
testMethodNotFound	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^    public function testMethodNotFound()$/;"	f	language:PHP
info	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $info = SymbolContext::for($/;"	v	language:PHP
info	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $info = $info->withContainerType(Type::fromString('Foobar'));$/;"	v	language:PHP
result	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $result = $this->action->gotoDefinition($info);$/;"	v	language:PHP
testGotoDefinition	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^    public function testGotoDefinition()$/;"	f	language:PHP
testGotoDefinitionConstnat	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^    public function testGotoDefinitionConstnat()$/;"	f	language:PHP
testGotoDefinitionProperty	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^    public function testGotoDefinitionProperty()$/;"	f	language:PHP
is	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^     * Property: Fails if the class is an interface.$/;"	c	language:PHP
testGotoDefinitionPropertyIsInterface	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^    public function testGotoDefinitionPropertyIsInterface()$/;"	f	language:PHP
info	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $info = SymbolContext::for($/;"	v	language:PHP
info	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $info = $info->withContainerType(Type::fromString('Foobar'));$/;"	v	language:PHP
result	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $result = $this->action->gotoDefinition($info);$/;"	v	language:PHP
assertGotoDefinition	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^    private function assertGotoDefinition($symbolType)$/;"	f	language:PHP
info	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $info = SymbolContext::for($/;"	v	language:PHP
info	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $info = $info->withContainerType(Type::fromString('Foobar'));$/;"	v	language:PHP
result	.config/nvim/plugged/phpactor/tests/Unit/Extension/Core/GotoDefinition/GotoDefinitionTest.php	/^        $result = $this->action->gotoDefinition($info);$/;"	v	language:PHP
ClassInflectHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassInflectHandlerTest.php	/^class ClassInflectHandlerTest extends HandlerTestCase$/;"	c	language:PHP
classInflect	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassInflectHandlerTest.php	/^    private $classInflect;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassInflectHandlerTest.php	/^    public function setUp()$/;"	f	language:PHP
classInflect	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassInflectHandlerTest.php	/^        $this->classInflect = $this->prophesize(ClassInflect::class);$/;"	v	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassInflectHandlerTest.php	/^    public function createHandler(): Handler$/;"	f	language:PHP
testDemandNewPathAndVariant	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassInflectHandlerTest.php	/^    public function testDemandNewPathAndVariant()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassInflectHandlerTest.php	/^        $action = $this->handle('class_inflect', [$/;"	v	language:PHP
inputs	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassInflectHandlerTest.php	/^        $inputs = $action->inputs();$/;"	v	language:PHP
firstInput	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassInflectHandlerTest.php	/^        $firstInput = array_shift($inputs);$/;"	v	language:PHP
secondInput	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassInflectHandlerTest.php	/^        $secondInput = array_shift($inputs);$/;"	v	language:PHP
testFileExists	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassInflectHandlerTest.php	/^    public function testFileExists()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassInflectHandlerTest.php	/^        $action = $this->handle('class_inflect', [$/;"	v	language:PHP
inputs	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassInflectHandlerTest.php	/^        $inputs = $action->inputs();$/;"	v	language:PHP
firstInput	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassInflectHandlerTest.php	/^        $firstInput = reset($inputs);$/;"	v	language:PHP
testNoOverwrite	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassInflectHandlerTest.php	/^    public function testNoOverwrite()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassInflectHandlerTest.php	/^        $action = $this->handle('class_inflect', [$/;"	v	language:PHP
testExceptionOnGlob	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassInflectHandlerTest.php	/^    public function testExceptionOnGlob()$/;"	f	language:PHP
testExceptionOnInvalidNumberOfPathsReturned	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassInflectHandlerTest.php	/^    public function testExceptionOnInvalidNumberOfPathsReturned()$/;"	f	language:PHP
generator	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassInflectHandlerTest.php	/^        $this->expectExceptionMessage('Expected 1 path from class generator, got 2');$/;"	c	language:PHP
testGenerate	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassInflectHandlerTest.php	/^    public function testGenerate()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassInflectHandlerTest.php	/^        $action = $this->handle('class_inflect', [$/;"	v	language:PHP
ClassNewHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassNewHandlerTest.php	/^class ClassNewHandlerTest extends HandlerTestCase$/;"	c	language:PHP
classNew	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassNewHandlerTest.php	/^    private $classNew;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassNewHandlerTest.php	/^    public function setUp()$/;"	f	language:PHP
classNew	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassNewHandlerTest.php	/^        $this->classNew = $this->prophesize(ClassNew::class);$/;"	v	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassNewHandlerTest.php	/^    public function createHandler(): Handler$/;"	f	language:PHP
testDemandNewPathAndVariant	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassNewHandlerTest.php	/^    public function testDemandNewPathAndVariant()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassNewHandlerTest.php	/^        $action = $this->handle('class_new', [$/;"	v	language:PHP
inputs	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassNewHandlerTest.php	/^        $inputs = $action->inputs();$/;"	v	language:PHP
firstInput	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassNewHandlerTest.php	/^        $firstInput = array_shift($inputs);$/;"	v	language:PHP
secondInput	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassNewHandlerTest.php	/^        $secondInput = array_shift($inputs);$/;"	v	language:PHP
testFileExists	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassNewHandlerTest.php	/^    public function testFileExists()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassNewHandlerTest.php	/^        $action = $this->handle('class_new', [$/;"	v	language:PHP
inputs	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassNewHandlerTest.php	/^        $inputs = $action->inputs();$/;"	v	language:PHP
firstInput	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassNewHandlerTest.php	/^        $firstInput = reset($inputs);$/;"	v	language:PHP
testNoOverwrite	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassNewHandlerTest.php	/^    public function testNoOverwrite()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassNewHandlerTest.php	/^        $action = $this->handle('class_new', [$/;"	v	language:PHP
testGenerate	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassNewHandlerTest.php	/^    public function testGenerate()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ClassNewHandlerTest.php	/^        $action = $this->handle('class_new', [$/;"	v	language:PHP
ExtractConstantHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractConstantHandlerTest.php	/^class ExtractConstantHandlerTest extends HandlerTestCase$/;"	c	language:PHP
extractConstant	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractConstantHandlerTest.php	/^    private $extractConstant;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractConstantHandlerTest.php	/^    public function setUp()$/;"	f	language:PHP
extractConstant	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractConstantHandlerTest.php	/^        $this->extractConstant = $this->prophesize(ExtractConstant::class);$/;"	v	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractConstantHandlerTest.php	/^    public function createHandler(): Handler$/;"	f	language:PHP
testDemandConstantName	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractConstantHandlerTest.php	/^    public function testDemandConstantName()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractConstantHandlerTest.php	/^        $action = $this->handle('extract_constant', [$/;"	v	language:PHP
inputs	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractConstantHandlerTest.php	/^        $inputs = $action->inputs();$/;"	v	language:PHP
firstInput	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractConstantHandlerTest.php	/^        $firstInput = reset($inputs);$/;"	v	language:PHP
testExtractConstant	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractConstantHandlerTest.php	/^    public function testExtractConstant()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractConstantHandlerTest.php	/^        $action = $this->handle('extract_constant', [$/;"	v	language:PHP
ExtractExpressionHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractExpressionHandlerTest.php	/^class ExtractExpressionHandlerTest extends HandlerTestCase$/;"	c	language:PHP
extractExpression	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractExpressionHandlerTest.php	/^    private $extractExpression;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractExpressionHandlerTest.php	/^    public function setUp()$/;"	f	language:PHP
extractExpression	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractExpressionHandlerTest.php	/^        $this->extractExpression = $this->prophesize(ExtractExpression::class);$/;"	v	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractExpressionHandlerTest.php	/^    public function createHandler(): Handler$/;"	f	language:PHP
testDemandMethodName	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractExpressionHandlerTest.php	/^    public function testDemandMethodName()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractExpressionHandlerTest.php	/^        $action = $this->handle('extract_expression', [$/;"	v	language:PHP
inputs	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractExpressionHandlerTest.php	/^        $inputs = $action->inputs();$/;"	v	language:PHP
firstInput	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractExpressionHandlerTest.php	/^        $firstInput = reset($inputs);$/;"	v	language:PHP
testExtractExpression	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractExpressionHandlerTest.php	/^    public function testExtractExpression()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractExpressionHandlerTest.php	/^        $action = $this->handle('extract_expression', [$/;"	v	language:PHP
ExtractMethodHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractMethodHandlerTest.php	/^class ExtractMethodHandlerTest extends HandlerTestCase$/;"	c	language:PHP
extractMethod	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractMethodHandlerTest.php	/^    private $extractMethod;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractMethodHandlerTest.php	/^    public function setUp()$/;"	f	language:PHP
extractMethod	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractMethodHandlerTest.php	/^        $this->extractMethod = $this->prophesize(ExtractMethod::class);$/;"	v	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractMethodHandlerTest.php	/^    public function createHandler(): Handler$/;"	f	language:PHP
testDemandMethodName	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractMethodHandlerTest.php	/^    public function testDemandMethodName()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractMethodHandlerTest.php	/^        $action = $this->handle('extract_method', [$/;"	v	language:PHP
inputs	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractMethodHandlerTest.php	/^        $inputs = $action->inputs();$/;"	v	language:PHP
firstInput	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractMethodHandlerTest.php	/^        $firstInput = reset($inputs);$/;"	v	language:PHP
testExtractMethod	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractMethodHandlerTest.php	/^    public function testExtractMethod()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ExtractMethodHandlerTest.php	/^        $action = $this->handle('extract_method', [$/;"	v	language:PHP
GenerateAccessorHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/GenerateAccessorHandlerTest.php	/^class GenerateAccessorHandlerTest extends HandlerTestCase$/;"	c	language:PHP
generateAccessor	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/GenerateAccessorHandlerTest.php	/^    private $generateAccessor;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/GenerateAccessorHandlerTest.php	/^    public function setUp()$/;"	f	language:PHP
generateAccessor	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/GenerateAccessorHandlerTest.php	/^        $this->generateAccessor = $this->prophesize(GenerateAccessor::class);$/;"	v	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/GenerateAccessorHandlerTest.php	/^    public function createHandler(): Handler$/;"	f	language:PHP
testGenerateAccessor	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/GenerateAccessorHandlerTest.php	/^    public function testGenerateAccessor()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/GenerateAccessorHandlerTest.php	/^        $action = $this->handle(GenerateAccessorHandler::NAME, [$/;"	v	language:PHP
GenerateMethodHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/GenerateMethodHandlerTest.php	/^class GenerateMethodHandlerTest extends HandlerTestCase$/;"	c	language:PHP
generateMethod	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/GenerateMethodHandlerTest.php	/^    private $generateMethod;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/GenerateMethodHandlerTest.php	/^    public function setUp()$/;"	f	language:PHP
generateMethod	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/GenerateMethodHandlerTest.php	/^        $this->generateMethod = $this->prophesize(GenerateMethod::class);$/;"	v	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/GenerateMethodHandlerTest.php	/^    protected function createHandler(): Handler$/;"	f	language:PHP
testProvidesOriginalSourceFromDiskIfPathIsNotTheGivenPath	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/GenerateMethodHandlerTest.php	/^    public function testProvidesOriginalSourceFromDiskIfPathIsNotTheGivenPath()$/;"	f	language:PHP
handler	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/GenerateMethodHandlerTest.php	/^        $handler = $this->createHandler('generate_method');$/;"	v	language:PHP
source	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/GenerateMethodHandlerTest.php	/^        $source = SourceCode::fromStringAndPath(self::EXAMPLE_SOURCE, self::EXAMPLE_PATH);$/;"	v	language:PHP
transformedSource	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/GenerateMethodHandlerTest.php	/^        $transformedSource = SourceCode::fromStringAndPath(self::EXAMPLE_SOURCE, __FILE__);$/;"	v	language:PHP
response	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/GenerateMethodHandlerTest.php	/^        $response = $handler->handle([$/;"	v	language:PHP
testProvidesGivenSourceIfTransformedPathSameAsGivenPath	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/GenerateMethodHandlerTest.php	/^    public function testProvidesGivenSourceIfTransformedPathSameAsGivenPath()$/;"	f	language:PHP
handler	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/GenerateMethodHandlerTest.php	/^        $handler = $this->createHandler('generate_method');$/;"	v	language:PHP
source	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/GenerateMethodHandlerTest.php	/^        $source = SourceCode::fromStringAndPath(self::EXAMPLE_SOURCE, self::EXAMPLE_PATH);$/;"	v	language:PHP
transformedSource	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/GenerateMethodHandlerTest.php	/^        $transformedSource = SourceCode::fromStringAndPath(self::EXAMPLE_TRANSFORMED_SOURCE, self::EXAMPLE_PATH);$/;"	v	language:PHP
response	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/GenerateMethodHandlerTest.php	/^        $response = $handler->handle([$/;"	v	language:PHP
ImportClassHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ImportClassHandlerTest.php	/^class ImportClassHandlerTest extends HandlerTestCase$/;"	c	language:PHP
importClass	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ImportClassHandlerTest.php	/^    private $importClass;$/;"	v	language:PHP
classSearch	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ImportClassHandlerTest.php	/^    private $classSearch;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ImportClassHandlerTest.php	/^    public function setUp()$/;"	f	language:PHP
importClass	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ImportClassHandlerTest.php	/^        $this->importClass = $this->prophesize(ImportClass::class);$/;"	v	language:PHP
classSearch	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ImportClassHandlerTest.php	/^        $this->classSearch = $this->prophesize(ClassSearch::class);$/;"	v	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ImportClassHandlerTest.php	/^    protected function createHandler(): Handler$/;"	f	language:PHP
testReturnsSuggestionsIfMultipleTargetsFound	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ImportClassHandlerTest.php	/^    public function testReturnsSuggestionsIfMultipleTargetsFound()$/;"	f	language:PHP
response	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ImportClassHandlerTest.php	/^        $response = $this->handle('import_class', [$/;"	v	language:PHP
inputs	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ImportClassHandlerTest.php	/^        $inputs = $response->inputs();$/;"	v	language:PHP
input	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ImportClassHandlerTest.php	/^        $input = reset($inputs);$/;"	v	language:PHP
testShowsMessageIfNoClassesFound	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ImportClassHandlerTest.php	/^    public function testShowsMessageIfNoClassesFound()$/;"	f	language:PHP
response	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ImportClassHandlerTest.php	/^        $response = $this->handle('import_class', [$/;"	v	language:PHP
testImportsClassIfOnlyOneSuggestion	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ImportClassHandlerTest.php	/^    public function testImportsClassIfOnlyOneSuggestion()$/;"	f	language:PHP
transformed	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ImportClassHandlerTest.php	/^        $transformed = SourceCode::fromStringAndPath('hello', self::TEST_PATH);$/;"	v	language:PHP
response	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ImportClassHandlerTest.php	/^        $response = $this->handle('import_class', [$/;"	v	language:PHP
testAsksForAliasIfClassAlreadyUsed	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ImportClassHandlerTest.php	/^    public function testAsksForAliasIfClassAlreadyUsed()$/;"	f	language:PHP
response	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ImportClassHandlerTest.php	/^        $response = $this->handle('import_class', [$/;"	v	language:PHP
inputs	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ImportClassHandlerTest.php	/^        $inputs = $response->inputs();$/;"	v	language:PHP
input	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ImportClassHandlerTest.php	/^        $input = reset($inputs);$/;"	v	language:PHP
testUsesGivenAlias	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ImportClassHandlerTest.php	/^    public function testUsesGivenAlias()$/;"	f	language:PHP
transformed	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ImportClassHandlerTest.php	/^        $transformed = SourceCode::fromStringAndPath('hello', self::TEST_PATH);$/;"	v	language:PHP
response	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ImportClassHandlerTest.php	/^        $response = $this->handle('import_class', [$/;"	v	language:PHP
testShowsMessageIfSelectedClassIsAlreadyImported	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ImportClassHandlerTest.php	/^    public function testShowsMessageIfSelectedClassIsAlreadyImported()$/;"	f	language:PHP
response	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/ImportClassHandlerTest.php	/^        $response = $this->handle('import_class', [$/;"	v	language:PHP
OverrideMethodHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/OverrideMethodHandlerTest.php	/^class OverrideMethodHandlerTest extends HandlerTestCase$/;"	c	language:PHP
reflector	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/OverrideMethodHandlerTest.php	/^    private $reflector;$/;"	v	language:PHP
overrideMethod	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/OverrideMethodHandlerTest.php	/^    private $overrideMethod;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/OverrideMethodHandlerTest.php	/^    public function setUp()$/;"	f	language:PHP
ParentClass	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/OverrideMethodHandlerTest.php	/^        $this->reflector = ReflectorBuilder::create()->addSource('<?php class ParentClass { public function foobar() {} }')->build();$/;"	c	language:PHP
foobar	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/OverrideMethodHandlerTest.php	/^        $this->reflector = ReflectorBuilder::create()->addSource('<?php class ParentClass { public function foobar() {} }')->build();$/;"	f	language:PHP
reflector	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/OverrideMethodHandlerTest.php	/^        $this->reflector = ReflectorBuilder::create()->addSource('<?php class ParentClass { public function foobar() {} }')->build();$/;"	v	language:PHP
overrideMethod	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/OverrideMethodHandlerTest.php	/^        $this->overrideMethod = $this->prophesize(OverrideMethod::class);$/;"	v	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/OverrideMethodHandlerTest.php	/^    public function createHandler(): Handler$/;"	f	language:PHP
testSuggestsPossibleMethods	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/OverrideMethodHandlerTest.php	/^    public function testSuggestsPossibleMethods()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/OverrideMethodHandlerTest.php	/^        $action = $this->handle('override_method', [$/;"	v	language:PHP
ChildClass	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/OverrideMethodHandlerTest.php	/^class ChildClass extends ParentClass$/;"	c	language:PHP
input	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/OverrideMethodHandlerTest.php	/^        $input = $action->inputs();$/;"	v	language:PHP
input	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/OverrideMethodHandlerTest.php	/^        $input = reset($input);$/;"	v	language:PHP
choices	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/OverrideMethodHandlerTest.php	/^        $choices = $input->choices();$/;"	v	language:PHP
testOverrideMethod	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/OverrideMethodHandlerTest.php	/^    public function testOverrideMethod()$/;"	f	language:PHP
source	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/OverrideMethodHandlerTest.php	/^        $source = <<<'EOT'$/;"	v	language:PHP
ChildClass	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/OverrideMethodHandlerTest.php	/^class ChildClass extends ParentClass$/;"	c	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/OverrideMethodHandlerTest.php	/^        $action = $this->handle('override_method', [$/;"	v	language:PHP
RenameVariableHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/RenameVariableHandlerTest.php	/^class RenameVariableHandlerTest extends HandlerTestCase$/;"	c	language:PHP
renameVariable	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/RenameVariableHandlerTest.php	/^    private $renameVariable;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/RenameVariableHandlerTest.php	/^    public function setUp()$/;"	f	language:PHP
renameVariable	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/RenameVariableHandlerTest.php	/^        $this->renameVariable = $this->prophesize(RenameVariable::class);$/;"	v	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/RenameVariableHandlerTest.php	/^    public function createHandler(): Handler$/;"	f	language:PHP
testDemandVariableName	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/RenameVariableHandlerTest.php	/^    public function testDemandVariableName()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/RenameVariableHandlerTest.php	/^        $action = $this->handle(RenameVariableHandler::NAME, [$/;"	v	language:PHP
inputs	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/RenameVariableHandlerTest.php	/^        $inputs = $action->inputs();$/;"	v	language:PHP
firstInput	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/RenameVariableHandlerTest.php	/^        $firstInput = array_shift($inputs);$/;"	v	language:PHP
testDemandScope	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/RenameVariableHandlerTest.php	/^    public function testDemandScope()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/RenameVariableHandlerTest.php	/^        $action = $this->handle(RenameVariableHandler::NAME, [$/;"	v	language:PHP
inputs	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/RenameVariableHandlerTest.php	/^        $inputs = $action->inputs();$/;"	v	language:PHP
firstInput	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/RenameVariableHandlerTest.php	/^        $firstInput = reset($inputs);$/;"	v	language:PHP
testRenameVariable	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/RenameVariableHandlerTest.php	/^    public function testRenameVariable()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/RenameVariableHandlerTest.php	/^        $action = $this->handle(RenameVariableHandler::NAME, [$/;"	v	language:PHP
TransformHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/TransformHandlerTest.php	/^class TransformHandlerTest extends HandlerTestCase$/;"	c	language:PHP
transformer	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/TransformHandlerTest.php	/^    private $transformer;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/TransformHandlerTest.php	/^    public function setUp()$/;"	f	language:PHP
transformer	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/TransformHandlerTest.php	/^        $this->transformer = $this->prophesize(CodeTransform::class);$/;"	v	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/TransformHandlerTest.php	/^    public function createHandler(): Handler$/;"	f	language:PHP
testDemandTransformation	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/TransformHandlerTest.php	/^    public function testDemandTransformation()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/TransformHandlerTest.php	/^        $action = $this->handle('transform', [$/;"	v	language:PHP
inputs	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/TransformHandlerTest.php	/^        $inputs = $action->inputs();$/;"	v	language:PHP
firstInput	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/TransformHandlerTest.php	/^        $firstInput = reset($inputs);$/;"	v	language:PHP
testTransform	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/TransformHandlerTest.php	/^    public function testTransform()$/;"	f	language:PHP
transformer	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/TransformHandlerTest.php	/^        $transformer = $this->prophesize(Transformer::class);$/;"	v	language:PHP
source	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/TransformHandlerTest.php	/^        $source = SourceCode::fromStringAndPath(self::SOURCE, self::PATH);$/;"	v	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/CoreTransform/Rpc/TransformHandlerTest.php	/^        $action = $this->createHandler('transformer')->handle([$/;"	v	language:PHP
ChainNavigatorTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Navigator/ChainNavigatorTest.php	/^class ChainNavigatorTest extends TestCase$/;"	c	language:PHP
navigator1	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Navigator/ChainNavigatorTest.php	/^    private $navigator1;$/;"	v	language:PHP
navigator2	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Navigator/ChainNavigatorTest.php	/^    private $navigator2;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Navigator/ChainNavigatorTest.php	/^    public function setUp()$/;"	f	language:PHP
navigator1	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Navigator/ChainNavigatorTest.php	/^        $this->navigator1 = $this->prophesize(Navigator::class);$/;"	v	language:PHP
navigator2	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Navigator/ChainNavigatorTest.php	/^        $this->navigator2 = $this->prophesize(Navigator::class);$/;"	v	language:PHP
testReturnsEmptyArrayWhenNoNavigators	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Navigator/ChainNavigatorTest.php	/^    public function testReturnsEmptyArrayWhenNoNavigators()$/;"	f	language:PHP
navigator	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Navigator/ChainNavigatorTest.php	/^        $navigator = $this->create([]);$/;"	v	language:PHP
destinations	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Navigator/ChainNavigatorTest.php	/^        $destinations = $navigator->destinationsFor(self::TEST_PATH);$/;"	v	language:PHP
testMergesResultsOfTwoNavigators	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Navigator/ChainNavigatorTest.php	/^    public function testMergesResultsOfTwoNavigators()$/;"	f	language:PHP
navigator	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Navigator/ChainNavigatorTest.php	/^        $navigator = $this->create([$/;"	v	language:PHP
destinations	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Navigator/ChainNavigatorTest.php	/^        $destinations = $navigator->destinationsFor(self::TEST_PATH);$/;"	v	language:PHP
create	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Navigator/ChainNavigatorTest.php	/^    private function create(array $navigators): Navigator$/;"	f	language:PHP
PathFinderNavigatorTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Navigator/PathFinderNavigatorTest.php	/^class PathFinderNavigatorTest extends TestCase$/;"	c	language:PHP
pathFinder	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Navigator/PathFinderNavigatorTest.php	/^    private $pathFinder;$/;"	v	language:PHP
navigator	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Navigator/PathFinderNavigatorTest.php	/^    private $navigator;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Navigator/PathFinderNavigatorTest.php	/^    public function setUp()$/;"	f	language:PHP
pathFinder	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Navigator/PathFinderNavigatorTest.php	/^        $this->pathFinder = $this->prophesize(PathFinder::class);$/;"	v	language:PHP
navigator	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Navigator/PathFinderNavigatorTest.php	/^        $this->navigator = new PathFinderNavigator($this->pathFinder->reveal());$/;"	v	language:PHP
testDelegatesToPathFinder	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Navigator/PathFinderNavigatorTest.php	/^    public function testDelegatesToPathFinder()$/;"	f	language:PHP
destinations	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Navigator/PathFinderNavigatorTest.php	/^        $destinations = ['one' => 'two'];$/;"	v	language:PHP
result	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Navigator/PathFinderNavigatorTest.php	/^        $result = $this->navigator->destinationsFor(self::TEST_PATH);$/;"	v	language:PHP
NavigateHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Rpc/NavigateHandlerTest.php	/^class NavigateHandlerTest extends HandlerTestCase$/;"	c	language:PHP
navigator	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Rpc/NavigateHandlerTest.php	/^    private $navigator;$/;"	v	language:PHP
destinations	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Rpc/NavigateHandlerTest.php	/^    private $destinations;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Rpc/NavigateHandlerTest.php	/^    public function setUp()$/;"	f	language:PHP
navigator	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Rpc/NavigateHandlerTest.php	/^        $this->navigator = $this->prophesize(Navigator::class);$/;"	v	language:PHP
destinations	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Rpc/NavigateHandlerTest.php	/^        $this->destinations = [$/;"	v	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Rpc/NavigateHandlerTest.php	/^    public function createHandler(): Handler$/;"	f	language:PHP
testDestinations	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Rpc/NavigateHandlerTest.php	/^    public function testDestinations()$/;"	f	language:PHP
response	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Rpc/NavigateHandlerTest.php	/^        $response = $this->handle('navigate', [$/;"	v	language:PHP
inputs	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Rpc/NavigateHandlerTest.php	/^        $inputs = $response->inputs();$/;"	v	language:PHP
input	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Rpc/NavigateHandlerTest.php	/^        $input = reset($inputs);$/;"	v	language:PHP
testCanCreateConfirm	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Rpc/NavigateHandlerTest.php	/^    public function testCanCreateConfirm()$/;"	f	language:PHP
response	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Rpc/NavigateHandlerTest.php	/^        $response = $this->handle('navigate', [$/;"	v	language:PHP
inputs	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Rpc/NavigateHandlerTest.php	/^        $inputs = $response->inputs();$/;"	v	language:PHP
input	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Rpc/NavigateHandlerTest.php	/^        $input = reset($inputs);$/;"	v	language:PHP
testOpenFile	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Rpc/NavigateHandlerTest.php	/^    public function testOpenFile()$/;"	f	language:PHP
response	.config/nvim/plugged/phpactor/tests/Unit/Extension/Navigation/Rpc/NavigateHandlerTest.php	/^        $response = $this->handle('navigate', [$/;"	v	language:PHP
HandlerTestCase	.config/nvim/plugged/phpactor/tests/Unit/Extension/Rpc/HandlerTestCase.php	/^abstract class HandlerTestCase extends TestCase$/;"	c	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/Rpc/HandlerTestCase.php	/^    abstract protected function createHandler(): Handler;$/;"	f	language:PHP
handle	.config/nvim/plugged/phpactor/tests/Unit/Extension/Rpc/HandlerTestCase.php	/^    protected function handle(string $actionName, array $parameters): Response$/;"	f	language:PHP
registry	.config/nvim/plugged/phpactor/tests/Unit/Extension/Rpc/HandlerTestCase.php	/^        $registry = new ActiveHandlerRegistry([$/;"	v	language:PHP
requestHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/Rpc/HandlerTestCase.php	/^        $requestHandler = new RequestHandler($registry);$/;"	v	language:PHP
request	.config/nvim/plugged/phpactor/tests/Unit/Extension/Rpc/HandlerTestCase.php	/^        $request = Request::fromNameAndParameters($actionName, $parameters);$/;"	v	language:PHP
ClassSearchHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/SourceCodeFilesystem/Rpc/ClassSearchHandlerTest.php	/^class ClassSearchHandlerTest extends HandlerTestCase$/;"	c	language:PHP
classSearch	.config/nvim/plugged/phpactor/tests/Unit/Extension/SourceCodeFilesystem/Rpc/ClassSearchHandlerTest.php	/^    private $classSearch;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/SourceCodeFilesystem/Rpc/ClassSearchHandlerTest.php	/^    public function setUp()$/;"	f	language:PHP
classSearch	.config/nvim/plugged/phpactor/tests/Unit/Extension/SourceCodeFilesystem/Rpc/ClassSearchHandlerTest.php	/^        $this->classSearch = $this->prophesize(ClassSearch::class);$/;"	v	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/SourceCodeFilesystem/Rpc/ClassSearchHandlerTest.php	/^    public function createHandler(): Handler$/;"	f	language:PHP
testNoResults	.config/nvim/plugged/phpactor/tests/Unit/Extension/SourceCodeFilesystem/Rpc/ClassSearchHandlerTest.php	/^    public function testNoResults()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/SourceCodeFilesystem/Rpc/ClassSearchHandlerTest.php	/^        $action = $this->handle('class_search', [$/;"	v	language:PHP
testOneResult	.config/nvim/plugged/phpactor/tests/Unit/Extension/SourceCodeFilesystem/Rpc/ClassSearchHandlerTest.php	/^    public function testOneResult()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/SourceCodeFilesystem/Rpc/ClassSearchHandlerTest.php	/^        $action = $this->handle('class_search', [$/;"	v	language:PHP
testManyResult	.config/nvim/plugged/phpactor/tests/Unit/Extension/SourceCodeFilesystem/Rpc/ClassSearchHandlerTest.php	/^    public function testManyResult()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/SourceCodeFilesystem/Rpc/ClassSearchHandlerTest.php	/^        $action = $this->handle('class_search', [$/;"	v	language:PHP
OffsetInfoHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/WorseReflection/Rpc/OffsetInfoHandlerTest.php	/^class OffsetInfoHandlerTest extends HandlerTestCase$/;"	c	language:PHP
foo	.config/nvim/plugged/phpactor/tests/Unit/Extension/WorseReflection/Rpc/OffsetInfoHandlerTest.php	/^<?php $foo = 1234;$/;"	v	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/WorseReflection/Rpc/OffsetInfoHandlerTest.php	/^    public function createHandler(): Handler$/;"	f	language:PHP
testOffsetInfo	.config/nvim/plugged/phpactor/tests/Unit/Extension/WorseReflection/Rpc/OffsetInfoHandlerTest.php	/^    public function testOffsetInfo()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/WorseReflection/Rpc/OffsetInfoHandlerTest.php	/^        $action = $this->createHandler('offset_info')->handle([$/;"	v	language:PHP
GotoDefinitionHandlerTest	.config/nvim/plugged/phpactor/tests/Unit/Extension/WorseReflection/Rpc/GotoDefinitionHandlerTest.php	/^class GotoDefinitionHandlerTest extends HandlerTestCase$/;"	c	language:PHP
reflector	.config/nvim/plugged/phpactor/tests/Unit/Extension/WorseReflection/Rpc/GotoDefinitionHandlerTest.php	/^    private $reflector;$/;"	v	language:PHP
symbolContext	.config/nvim/plugged/phpactor/tests/Unit/Extension/WorseReflection/Rpc/GotoDefinitionHandlerTest.php	/^    private $symbolContext;$/;"	v	language:PHP
setUp	.config/nvim/plugged/phpactor/tests/Unit/Extension/WorseReflection/Rpc/GotoDefinitionHandlerTest.php	/^    public function setUp()$/;"	f	language:PHP
reflector	.config/nvim/plugged/phpactor/tests/Unit/Extension/WorseReflection/Rpc/GotoDefinitionHandlerTest.php	/^        $this->reflector = ReflectorBuilder::create()->addSource(SourceCode::fromPath(__FILE__))->build();$/;"	v	language:PHP
createHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/WorseReflection/Rpc/GotoDefinitionHandlerTest.php	/^    public function createHandler(): Handler$/;"	f	language:PHP
testHandler	.config/nvim/plugged/phpactor/tests/Unit/Extension/WorseReflection/Rpc/GotoDefinitionHandlerTest.php	/^    public function testHandler()$/;"	f	language:PHP
action	.config/nvim/plugged/phpactor/tests/Unit/Extension/WorseReflection/Rpc/GotoDefinitionHandlerTest.php	/^        $action = $this->handle('goto_definition', [$/;"	v	language:PHP
PhpactorTest	.config/nvim/plugged/phpactor/tests/Unit/PhpactorTest.php	/^class PhpactorTest extends TestCase$/;"	c	language:PHP
testIsFile	.config/nvim/plugged/phpactor/tests/Unit/PhpactorTest.php	/^    public function testIsFile(string $example, bool $isFile)$/;"	f	language:PHP
provideIsFile	.config/nvim/plugged/phpactor/tests/Unit/PhpactorTest.php	/^    public function provideIsFile()$/;"	f	language:PHP
dist_enabled_function_extensions	.config/nvim/plugged/phpcomplete.vim/bin/generate_builtin_dicts.php	/^$dist_enabled_function_extensions  = array($/;"	v	language:PHP
dist_enabled_class_extensions	.config/nvim/plugged/phpcomplete.vim/bin/generate_builtin_dicts.php	/^$dist_enabled_class_extensions = array($/;"	v	language:PHP
dist_enabled_interface_extensions	.config/nvim/plugged/phpcomplete.vim/bin/generate_builtin_dicts.php	/^$dist_enabled_interface_extensions = array($/;"	v	language:PHP
dist_enabled_constant_extensions	.config/nvim/plugged/phpcomplete.vim/bin/generate_builtin_dicts.php	/^$dist_enabled_constant_extensions  = array($/;"	v	language:PHP
main	.config/nvim/plugged/phpcomplete.vim/bin/generate_builtin_dicts.php	/^function main($argv){$/;"	f	language:PHP
extensions	.config/nvim/plugged/phpcomplete.vim/bin/generate_builtin_dicts.php	/^    $extensions = get_extension_names($argv[1]);$/;"	v	language:PHP
function_files	.config/nvim/plugged/phpcomplete.vim/bin/generate_builtin_dicts.php	/^    $function_files = glob("{$argv[1]}\/function.*.html");$/;"	v	language:PHP
functions	.config/nvim/plugged/phpcomplete.vim/bin/generate_builtin_dicts.php	/^    $functions = extract_function_signatures($function_files, $extensions);$/;"	v	language:PHP
extra_function_files	.config/nvim/plugged/phpcomplete.vim/bin/generate_builtin_dicts.php	/^    $extra_function_files = list_procedural_style_files("{$argv[1]}");$/;"	v	language:PHP
functions	.config/nvim/plugged/phpcomplete.vim/bin/generate_builtin_dicts.php	/^    $functions = extract_function_signatures($extra_function_files, $extensions, $functions);$/;"	v	language:PHP
class_files	.config/nvim/plugged/phpcomplete.vim/bin/generate_builtin_dicts.php	/^    $class_files = glob("{$argv[1]}\/class.*.html", GLOB_BRACE);$/;"	v	language:PHP
constant_files	.config/nvim/plugged/phpcomplete.vim/bin/generate_builtin_dicts.php	/^    $constant_files = glob("{$argv[1]}\/*.html");$/;"	v	language:PHP
constants	.config/nvim/plugged/phpcomplete.vim/bin/generate_builtin_dicts.php	/^    \/\/ some class constants like PDO::* are not defined in the class synopsis$/;"	c	language:PHP
meta_outfile	.config/nvim/plugged/phpcomplete.vim/bin/generate_builtin_dicts.php	/^    $meta_outfile = $argv[2].'\/misc\/available_extensions';$/;"	v	language:PHP
extensions	.config/nvim/plugged/phpcomplete.vim/bin/generate_builtin_dicts.php	/^    file_put_contents($meta_outfile, "Available function extensions:\\n");$/;"	f	language:PHP
outfile	.config/nvim/plugged/phpcomplete.vim/bin/generate_builtin_dicts.php	/^    $outfile = $argv[2].'\/misc\/builtin.vim';$/;"	v	language:PHP
dist_outfile	.config/nvim/plugged/phpcomplete.vim/bin/generate_builtin_dicts.php	/^    $dist_outfile = $argv[2].'\/misc\/dist_builtin.vim';$/;"	v	language:PHP
usage	.config/nvim/plugged/phpcomplete.vim/bin/generate_builtin_dicts.php	/^function usage($argv) {$/;"	f	language:PHP
extract_class_signatures	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^function extract_class_signatures($files, $extensions) {$/;"	f	language:PHP
class_signatures	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $class_signatures = array();$/;"	v	language:PHP
interface_signatures	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $interface_signatures = array();$/;"	v	language:PHP
doc	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^        $doc = new DOMDocument;$/;"	v	language:PHP
xpath	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^        $xpath = new DOMXpath($doc);$/;"	v	language:PHP
synopsis	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^            \/\/ no usual class synopsis found inside the file, just skip this class$/;"	c	language:PHP
fields	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^        $fields    = extract_class_fields($xpath, $classname, $file);$/;"	v	language:PHP
methods	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^        $methods   = extract_class_methods($xpath, $classname, $file);$/;"	v	language:PHP
extension_name	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^        $extension_name = get_extension_name($file, $extensions);$/;"	v	language:PHP
names	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^            \/\/ there are some duplicate class names in extensions, use only the first one$/;"	c	language:PHP
extract_class_fields	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^function extract_class_fields($xpath, $classname, $file) {$/;"	f	language:PHP
re	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $re = array($/;"	v	language:PHP
field_nodes	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $field_nodes = $xpath->query('\/\/div[@class="classsynopsis"]\/\/div[contains(@class, "fieldsynopsis")]');$/;"	v	language:PHP
property_node	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^        $property_node = $xpath->query('var[@class="varname"]\/\/var[@class="varname"]\/..', $field_node);$/;"	v	language:PHP
property_info	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^            $property_info = handle_class_property($xpath, $field_node, $file);$/;"	v	language:PHP
constant_node	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^        $constant_node = $xpath->query('*[@class="modifier" and text() = "const"]\/..', $field_node);$/;"	v	language:PHP
constant_info	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^            $constant_info = handle_class_const($xpath, $field_node, $file);$/;"	v	language:PHP
extract_class_methods	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^function extract_class_methods($xpath, $classname, $file) {$/;"	f	language:PHP
re	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $re = array($/;"	v	language:PHP
method_nodes	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $method_nodes = $xpath->query('\/\/div[@class="classsynopsis"]\/\/div[contains(@class, "constructorsynopsis") or contains(@class, "methodsynopsis")]');$/;"	v	language:PHP
method_info	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^        $method_info = handle_method_def($xpath, $classname, $method_node, $file);$/;"	v	language:PHP
handle_method_def	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^function handle_method_def($xpath, $classname, $node, $file) {$/;"	f	language:PHP
re	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $re = array($/;"	v	language:PHP
type	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $type = $xpath->query('*[@class="type"]', $node);$/;"	v	language:PHP
methodparams	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $methodparams = $xpath->query('*[@class="methodparam"]', $node);$/;"	v	language:PHP
name	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $name = $xpath->query('*[@class="methodname"]\/*[@class="methodname"]', $node);$/;"	v	language:PHP
name	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^        $name = $xpath->query('*[@class="methodname"]\/strong', $node);$/;"	v	language:PHP
name	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    \/\/ chop of class name from the inherited method names$/;"	c	language:PHP
name	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $name = preg_replace('\/^[\\w\\\\\\\\]+::\/', '', trim($name->item(0)->textContent));$/;"	v	language:PHP
name	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    if ($type->length === 0 && !($name == '__construct' || $name == '__destruct' || $name == '__wakeup' || $name == $classname)) {$/;"	v	language:PHP
modifiers	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $modifiers = $xpath->query('*[@class="modifier"]', $node);$/;"	v	language:PHP
params	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $params = array();$/;"	v	language:PHP
optional	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $optional = false;$/;"	v	language:PHP
optional	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^            $optional = true;$/;"	v	language:PHP
paramtype	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^        $paramtype = $xpath->query('*[@class="type"]', $param_node);$/;"	v	language:PHP
paramname	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^        $paramname = $xpath->query('*[contains(@class, "parameter")]', $param_node);$/;"	v	language:PHP
paramdefault	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^        $paramdefault = $xpath->query('*[@class="initializer"]', $param_node);$/;"	v	language:PHP
param	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^            $param = array($/;"	v	language:PHP
extract_class_name	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^function extract_class_name($xpath) {$/;"	f	language:PHP
is_interface	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $is_interface = false;$/;"	v	language:PHP
class	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $class = $xpath->query('\/\/div[@class="classsynopsis"]\/div[@class="classsynopsisinfo"]\/*[@class="ooclass"]\/*[@class="classname"]')->item(0);$/;"	v	language:PHP
classname	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $classname = trim($class->textContent);$/;"	v	language:PHP
title	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $title = $xpath->query('\/\/div[@class="classsynopsis"]\/preceding-sibling::h2[@class="title"]')->item(0);$/;"	v	language:PHP
is_interface	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^        $is_interface = true;$/;"	v	language:PHP
title2	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $title2 = $xpath->query('\/\/div[@class="reference"]\/h1[@class="title"]')->item(0);$/;"	v	language:PHP
is_interface	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^        $is_interface = true;$/;"	v	language:PHP
handle_class_property	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^function handle_class_property($xpath, $node, $file) {$/;"	f	language:PHP
re	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $re = array($/;"	v	language:PHP
type	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $type = $xpath->query('*[@class="type"]', $node)->item(0);$/;"	v	language:PHP
initializer	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $initializer = $xpath->query('*[@class="initializer"]', $node)->item(0);$/;"	v	language:PHP
modifiers	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $modifiers = $xpath->query('*[@class="modifier"]', $node);$/;"	v	language:PHP
name	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $name = $xpath->query('var[@class="varname"]', $node)->item(0);$/;"	v	language:PHP
handle_class_const	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^function handle_class_const($xpath, $node, $file) {$/;"	f	language:PHP
re	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $re = array($/;"	v	language:PHP
name	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $name = $xpath->query('var\/\/var[@class="varname"]', $node)->item(0);$/;"	v	language:PHP
initializer	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $initializer = $xpath->query('*[@class="initializer"]', $node)->item(0);$/;"	v	language:PHP
write_class_signatures_to_vim_hash	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^function write_class_signatures_to_vim_hash($signatures, $outpath, $keyname, $enabled_extensions = null, $prettyprint = true) {$/;"	f	language:PHP
enabled_extensions	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^function write_class_signatures_to_vim_hash($signatures, $outpath, $keyname, $enabled_extensions = null, $prettyprint = true) {$/;"	v	language:PHP
fd	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    $fd = fopen($outpath, 'a');$/;"	v	language:PHP
enabled_extensions	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^        $enabled_extensions = array_flip($enabled_extensions);$/;"	v	language:PHP
extension_name	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^    foreach ($signatures as $extension_name => $classes) {$/;"	v	language:PHP
classname	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^        foreach ($classes as $classname => $class_info) {$/;"	v	language:PHP
constant	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^                foreach ($class_info['constants'] as $constant => $constant_info) {$/;"	v	language:PHP
property	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^                foreach ($class_info['properties'] as $property => $property_info) {$/;"	v	language:PHP
property	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^                foreach ($class_info['static_properties'] as $property => $property_info) {$/;"	v	language:PHP
methodname	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^                foreach ($class_info['methods'] as $methodname => $method_info) {$/;"	v	language:PHP
methodname	.config/nvim/plugged/phpcomplete.vim/bin/generator/classes.php	/^                foreach ($class_info['static_methods'] as $methodname => $method_info) {$/;"	v	language:PHP
extract_constant_names	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^function extract_constant_names($files, $extensions) {$/;"	f	language:PHP
constants	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^    $constants = array();$/;"	v	language:PHP
class_constants	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^    $class_constants = array();$/;"	v	language:PHP
doc	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^        $doc = new DOMDocument;$/;"	v	language:PHP
xpath	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^        $xpath = new DOMXpath($doc);$/;"	v	language:PHP
nodes	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^        $nodes = $xpath->query('\/\/strong\/code[translate(text(), "abcdefghijklmnopqrstuvwxyz", "ABCDEFGHIJKLMNOPQRSTUVWXYZ") = text()]');$/;"	v	language:PHP
constants	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^            \/\/ regexp lifted from http:\/\/php.net\/manual\/en\/language.constants.php added ":" so we can pick up class constants$/;"	c	language:PHP
constant	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^                $constant = trim($node->textContent);$/;"	v	language:PHP
extension_name	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^                $extension_name = get_extension_name($file, $extensions);$/;"	v	language:PHP
inject_class_constants	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^function inject_class_constants(&$class_groups, $class_constant_groups, $generate_warnings = true) {$/;"	f	language:PHP
generate_warnings	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^function inject_class_constants(&$class_groups, $class_constant_groups, $generate_warnings = true) {$/;"	v	language:PHP
classnames	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^    $classnames = array();$/;"	v	language:PHP
extension	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^    foreach ($class_groups as $extension => $classes) {$/;"	v	language:PHP
classnames	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^        $classnames = array_merge($classnames, array_combine(array_map('strtolower', array_keys($classes)), array_keys($classes)));$/;"	v	language:PHP
const_extension	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^    foreach ($class_constant_groups as $const_extension => $class_constants) {$/;"	v	language:PHP
constant	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^        foreach ($class_constants as $constant => $__not_used) {$/;"	v	language:PHP
lowercase_classname	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^            $lowercase_classname = strtolower($classname);$/;"	v	language:PHP
constant	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^                    fwrite(STDERR, "\\nNOTICE: can't place class constant: '{$constant}', no such class found: '{$classname} ({$lowercase_classname})'");$/;"	c	language:PHP
classname	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^            $classname = $classnames[$lowercase_classname];$/;"	v	language:PHP
class_extension	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^            foreach ($class_groups as $class_extension => $classes) {$/;"	v	language:PHP
constant	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^                fwrite(STDERR, "\\nNOTICE: can't place class constant: '{$constant}', no such class found: '{$classname}' 2");$/;"	c	language:PHP
write_constant_names_to_vim_hash	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^function write_constant_names_to_vim_hash($constant_groups, $outpath, $keyname, $enabled_extensions = null, $prettyprint = true) {$/;"	f	language:PHP
enabled_extensions	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^function write_constant_names_to_vim_hash($constant_groups, $outpath, $keyname, $enabled_extensions = null, $prettyprint = true) {$/;"	v	language:PHP
fd	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^    $fd = fopen($outpath, 'a');$/;"	v	language:PHP
enabled_extensions	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^        $enabled_extensions = array_flip($enabled_extensions);$/;"	v	language:PHP
extension_name	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^    foreach ($constant_groups as $extension_name => $constants) {$/;"	v	language:PHP
constant	.config/nvim/plugged/phpcomplete.vim/bin/generator/constants.php	/^        foreach ($constants as $constant => $__not_used) {$/;"	v	language:PHP
extract_function_signatures	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^function extract_function_signatures($files, $extensions, $signatures = array()) {$/;"	f	language:PHP
signatures	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^function extract_function_signatures($files, $extensions, $signatures = array()) {$/;"	v	language:PHP
extension_name	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^        $extension_name = get_extension_name($file, $extensions);$/;"	v	language:PHP
doc	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^        $doc = new DOMDocument;$/;"	v	language:PHP
xpath	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^        $xpath = new DOMXpath($doc);$/;"	v	language:PHP
nodes	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^        $nodes = $xpath->query('\/\/div[contains(@class, "methodsynopsis")]');$/;"	v	language:PHP
is	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^            $nodes = $xpath->query('\/\/div[contains(@class, "description")]\/p[@class="simpara"][contains(text(), "This function is an alias of:")]');$/;"	f	language:PHP
nodes	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^            $nodes = $xpath->query('\/\/div[contains(@class, "description")]\/p[@class="simpara"][contains(text(), "This function is an alias of:")]');$/;"	v	language:PHP
definition	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^                fwrite(STDERR, "WARNING: Only class-like function definition found in ".$file."\\n");$/;"	f	language:PHP
name	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^            \/\/ more than one signature for a single function name$/;"	f	language:PHP
list_procedural_style_files	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^function list_procedural_style_files($dir) {$/;"	f	language:PHP
files	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^    $files = array();$/;"	v	language:PHP
dir	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^    $dir = rtrim($dir, '\/');$/;"	v	language:PHP
dh	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^    $dh  = opendir($dir);$/;"	v	language:PHP
doc	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^    $doc = new DOMDocument();$/;"	v	language:PHP
xpath	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^            $xpath = new DOMXPath($doc);$/;"	v	language:PHP
nodes	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^            $nodes = $xpath->query('\/\/p[contains(@class, "para") and contains(translate(text(), "P", "p"), "procedural style")]');$/;"	v	language:PHP
handle_func_def	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^function handle_func_def($xpath, $nodes, $file) {$/;"	f	language:PHP
type	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^    $type = $xpath->query('span[@class="type"]', $nodes);$/;"	v	language:PHP
methodname	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^    $methodname = $xpath->query('*[@class="methodname"]\/*', $nodes);$/;"	v	language:PHP
methodparams	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^    $methodparams = $xpath->query('*[@class="methodparam"]', $nodes);$/;"	v	language:PHP
return_type	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^        $return_type = 'void';$/;"	v	language:PHP
return_type	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^        $return_type = trim($type->item(0)->textContent);$/;"	v	language:PHP
params	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^    $params = array();$/;"	v	language:PHP
optional	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^    $optional = false;$/;"	v	language:PHP
optional	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^            $optional = true;$/;"	v	language:PHP
paramtype	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^        $paramtype = $xpath->query('*[@class="type"]', $param);$/;"	v	language:PHP
paramname	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^        $paramname = $xpath->query('*[contains(@class, "parameter")]', $param);$/;"	v	language:PHP
paramdefault	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^        $paramdefault = $xpath->query('*[@class="initializer"]', $param);$/;"	v	language:PHP
p	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^            $p = array($/;"	v	language:PHP
full_signature	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^    $full_signature = preg_replace('\/\\s+\/', ' ', trim(str_replace(array("\\n", "\\t", "\\r"), "", $nodes->textContent)));$/;"	v	language:PHP
handle_func_alias	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^function handle_func_alias($xpath, $nodes, $file) {$/;"	f	language:PHP
methodname	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^    $methodname = $xpath->query('\/\/h1[@class="refname"]');$/;"	v	language:PHP
refname	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^    $refname = $xpath->query('\/\/*[contains(@class, "description")]\/p[@class="simpara"]\/*[@class="methodname" or @class="function"]');$/;"	v	language:PHP
name	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^    $name = trim(str_replace("\\n", '', $methodname->item(0)->textContent));$/;"	v	language:PHP
aliased_name	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^    $aliased_name = trim(str_replace("\\n", '', $refname->item(0)->textContent));$/;"	v	language:PHP
full_signature	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^    $full_signature = "$name — Alias of $aliased_name";$/;"	v	language:PHP
write_function_signatures_to_vim_hash	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^function write_function_signatures_to_vim_hash($signatures, $outpath, $keyname, $enabled_extensions = null, $prettyprint = true) {$/;"	f	language:PHP
enabled_extensions	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^function write_function_signatures_to_vim_hash($signatures, $outpath, $keyname, $enabled_extensions = null, $prettyprint = true) {$/;"	v	language:PHP
fd	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^    $fd = fopen($outpath, 'a');$/;"	v	language:PHP
enabled_extensions	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^        $enabled_extensions = array_flip($enabled_extensions);$/;"	v	language:PHP
extension_name	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^    foreach ($signatures as $extension_name => $functions) {$/;"	v	language:PHP
functions	.config/nvim/plugged/phpcomplete.vim/bin/generator/functions.php	/^        $functions = array_index_by_col($functions, 'name', false);$/;"	v	language:PHP
format_method_signature	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^function format_method_signature($signature) {$/;"	f	language:PHP
optional_depth	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^    $optional_depth = 0;$/;"	v	language:PHP
istr	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^    $istr = '';$/;"	v	language:PHP
i	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^    foreach ($signature['params'] as $i => $param) {$/;"	v	language:PHP
get_extension_names	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^function get_extension_names($docs_dir) {$/;"	f	language:PHP
re	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^    $re = array();$/;"	v	language:PHP
doc	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^    $doc = new DOMDocument('1.0', 'utf-8');$/;"	v	language:PHP
xpath	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^    $xpath = new DOMXPath($doc);$/;"	v	language:PHP
links_nodes	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^    $links_nodes = $xpath->query('\/\/ul[@class="itemizedlist"]\/\/a[@class="xref"]');$/;"	v	language:PHP
doc	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^    $doc = new DOMDocument('1.0', 'utf-8');$/;"	v	language:PHP
xpath	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^    $xpath = new DOMXPath($doc);$/;"	v	language:PHP
link_nodes	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^    $link_nodes = $xpath->query('\/\/ul[@class="chunklist chunklist_set chunklist_children"]\/li\/a');$/;"	v	language:PHP
doc	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^        $doc = new DOMDocument('1.0', 'utf-8');$/;"	v	language:PHP
xpath	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^        $xpath = new DOMXPath($doc);$/;"	v	language:PHP
category_nodes	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^        $category_nodes = $xpath->query('\/\/ul[@class="chunklist chunklist_book"]\/li');$/;"	v	language:PHP
category_name_node	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^            $category_name_node = $xpath->query('a', $category_node)->item(0);$/;"	v	language:PHP
category_name	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^            $category_name = trim($category_name_node->textContent);$/;"	v	language:PHP
link_nodes	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^            $link_nodes = $xpath->query('ul[@class="chunklist chunklist_book chunklist_children"]\/li\/a', $category_node);$/;"	v	language:PHP
get_extension_name	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^function get_extension_name($file, $extensions) {$/;"	f	language:PHP
doc_dir	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^    $doc_dir = dirname($file);$/;"	v	language:PHP
current_file	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^    $current_file = basename($file);$/;"	v	language:PHP
files_checked	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^    $files_checked = array();$/;"	v	language:PHP
doc	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^        $doc = new DOMDocument;$/;"	v	language:PHP
xpath	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^        $xpath = new DOMXPath($doc);$/;"	v	language:PHP
up_link	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^        $up_link = $xpath->query('\/\/div[@class="up"]\/a');$/;"	v	language:PHP
up_href	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^        $up_href = $up_link->item(0)->getAttribute('href');$/;"	v	language:PHP
current_file	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^        $current_file = $up_href;$/;"	v	language:PHP
array_index_by_col	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^function array_index_by_col($arr, $col, $overwrite_duplicate = true) {$/;"	f	language:PHP
overwrite_duplicate	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^function array_index_by_col($arr, $col, $overwrite_duplicate = true) {$/;"	v	language:PHP
tmp	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^    $tmp = array();$/;"	v	language:PHP
vimstring_escape	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^function vimstring_escape($str) {$/;"	f	language:PHP
filenameize	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^function filenameize($str) {$/;"	f	language:PHP
clean	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^	$clean = preg_replace('\/[^a-zA-Z0-9\\\/_|+ -]\/', '', $str);$/;"	v	language:PHP
clean	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^	$clean = strtolower(trim($clean, '_'));$/;"	v	language:PHP
clean	.config/nvim/plugged/phpcomplete.vim/bin/generator/tools.php	/^	$clean = preg_replace('\/[\\\/_|+ -]+\/', '_', $clean);$/;"	v	language:PHP
FooClass	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteClassName/foo.class.php	/^class FooClass {$/;"	c	language:PHP
BarClass	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteClassName/foo.class.php	/^class BarClass {$/;"	c	language:PHP
BarInterface	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteClassName/foo.class.php	/^interface BarInterface {$/;"	i	language:PHP
NameSpacedFoo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteClassName/namespaced.foo.php	/^class NameSpacedFoo {$/;"	c	language:PHP
NameSpacedFooInterface	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteClassName/namespaced.foo.php	/^interface NameSpacedFooInterface {$/;"	i	language:PHP
SubNameSpaced	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteClassName/subnamespace.php	/^class SubNameSpaced {$/;"	c	language:PHP
SubNameSpacedInterface	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteClassName/subnamespace.php	/^interface SubNameSpacedInterface {$/;"	i	language:PHP
TagClass	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteClassName/tagclass.php	/^class TagClass {$/;"	c	language:PHP
lowercasetagclass	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteClassName/tagclass.php	/^class lowercasetagclass {$/;"	c	language:PHP
FINDME_FOO	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteGeneral/constants.php	/^define('FINDME_FOO', 42);$/;"	d	language:PHP
DONT_FIND_ME	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteGeneral/constants.php	/^define('DONT_FIND_ME', 6 * 7);$/;"	d	language:PHP
CommonFoo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteGeneral/functions.php	/^class CommonFoo {$/;"	c	language:PHP
common_public_method	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteGeneral/functions.php	/^    public function common_public_method($foo) { }$/;"	f	language:PHP
common_private_method	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteGeneral/functions.php	/^    private function common_private_method($foo) { }$/;"	f	language:PHP
common_protected_method	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteGeneral/functions.php	/^    protected function common_protected_method($foo) { }$/;"	f	language:PHP
common_public_static_method	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteGeneral/functions.php	/^    public static function common_public_static_method($foo) { }$/;"	f	language:PHP
common_static_public_method	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteGeneral/functions.php	/^    static public function common_static_public_method($foo) { }$/;"	f	language:PHP
common_private_static_method	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteGeneral/functions.php	/^    private static function common_private_static_method($foo) { }$/;"	f	language:PHP
common_protected_static_method	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteGeneral/functions.php	/^    protected static function common_protected_static_method($foo) { }$/;"	f	language:PHP
CommonTrait	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteGeneral/functions.php	/^trait CommonTrait {}$/;"	t	language:PHP
common_plain_old_function	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteGeneral/functions.php	/^function common_plain_old_function(){}$/;"	f	language:PHP
common_plain_old_function_with_arguments	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteGeneral/functions.php	/^function common_plain_old_function_with_arguments($a, $b=''){}$/;"	f	language:PHP
b	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteGeneral/functions.php	/^function common_plain_old_function_with_arguments($a, $b=''){}$/;"	v	language:PHP
ZAP	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteGeneral/namespaced_constants.php	/^define('ZAP', 42);$/;"	d	language:PHP
ZAPSUB	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteGeneral/namespaced_constants.php	/^define('ZAPSUB', 6 * 7);$/;"	d	language:PHP
ZAPSUBSUB	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteGeneral/namespaced_constants.php	/^define('ZAPSUBSUB', 2 * 3 * 7);$/;"	d	language:PHP
Foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteGeneral/namespaced_foo.php	/^class Foo {$/;"	c	language:PHP
bar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteGeneral/namespaced_foo.php	/^function bar(){}$/;"	f	language:PHP
FooSub	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteGeneral/namespaced_foo.php	/^class FooSub {$/;"	c	language:PHP
barsub	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteGeneral/namespaced_foo.php	/^function barsub(){}$/;"	f	language:PHP
FooSubSub	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteGeneral/namespaced_foo.php	/^class FooSubSub {$/;"	c	language:PHP
barsubsub	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteGeneral/namespaced_foo.php	/^function barsubsub(){}$/;"	f	language:PHP
FooMethodsClass	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUnknownClass/foo_methods.class.php	/^class FooMethodsClass {$/;"	c	language:PHP
method1	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUnknownClass/foo_methods.class.php	/^    function method1($foo) {$/;"	f	language:PHP
method2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUnknownClass/foo_methods.class.php	/^    public function method2($foo) {$/;"	f	language:PHP
method3	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUnknownClass/foo_methods.class.php	/^    public static function method3($foo) {$/;"	f	language:PHP
method4	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUnknownClass/foo_methods.class.php	/^    static public function method4($foo) {$/;"	f	language:PHP
method5	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUnknownClass/foo_methods.class.php	/^    private function method5($foo) {$/;"	f	language:PHP
method6	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUnknownClass/foo_methods.class.php	/^    protected function method6($foo) {$/;"	f	language:PHP
FooPropertiesClass	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUnknownClass/foo_properties.class.php	/^class FooPropertiesClass {$/;"	c	language:PHP
property1	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUnknownClass/foo_properties.class.php	/^    var $property1 = 'foo';$/;"	v	language:PHP
property1	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUnknownClass/foo_properties.class.php	/^    var $property1 = 'foo';$/;"	v	language:PHP
property2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUnknownClass/foo_properties.class.php	/^    public $property2 = 'bar';$/;"	v	language:PHP
property2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUnknownClass/foo_properties.class.php	/^    public $property2 = 'bar';$/;"	v	language:PHP
static_property	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUnknownClass/foo_properties.class.php	/^    public static $static_property = 'bar';$/;"	v	language:PHP
static_property	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUnknownClass/foo_properties.class.php	/^    public static $static_property = 'bar';$/;"	v	language:PHP
Foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/commented_foo.class.php	/^class Foo {$/;"	c	language:PHP
commented_property	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/commented_foo.class.php	/^    public $commented_property;$/;"	v	language:PHP
commented_method	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/commented_foo.class.php	/^    public function commented_method($foo, $bar, $baz = '') {$/;"	f	language:PHP
baz	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/commented_foo.class.php	/^    public function commented_method($foo, $bar, $baz = '') {$/;"	v	language:PHP
UserClass	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_extended.class.php	/^class UserClass {$/;"	c	language:PHP
public_property1	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_extended.class.php	/^    var $public_property1;$/;"	v	language:PHP
public_property2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_extended.class.php	/^    public $public_property2;$/;"	v	language:PHP
protected_property	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_extended.class.php	/^    protected $protected_property;$/;"	v	language:PHP
private_property	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_extended.class.php	/^    private $private_property;$/;"	v	language:PHP
public_static_property	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_extended.class.php	/^    public static $public_static_property;$/;"	v	language:PHP
protected_static_property	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_extended.class.php	/^    protected static $protected_static_property;$/;"	v	language:PHP
private_static_property	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_extended.class.php	/^    private static $private_static_property;$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_extended.class.php	/^    public function __construct() {$/;"	f	language:PHP
public_method	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_extended.class.php	/^    public function public_method($foo) {$/;"	f	language:PHP
public_method_with_amp	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_extended.class.php	/^    public function &public_method_with_amp($foo)$/;"	f	language:PHP
public_final_method	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_extended.class.php	/^    public final function public_final_method($foo, $anotherfoo = '')$/;"	f	language:PHP
anotherfoo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_extended.class.php	/^    public final function public_final_method($foo, $anotherfoo = '')$/;"	v	language:PHP
private_method	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_extended.class.php	/^    private function private_method($foo) {$/;"	f	language:PHP
final_private_method	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_extended.class.php	/^    final private function final_private_method($foo = null)$/;"	f	language:PHP
protected_method	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_extended.class.php	/^    protected function protected_method($foo) {$/;"	f	language:PHP
public_static_method	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_extended.class.php	/^    public static function public_static_method($foo) {$/;"	f	language:PHP
static_public_method	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_extended.class.php	/^    static public function static_public_method($foo) {$/;"	f	language:PHP
public_final_static_method	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_extended.class.php	/^    public final static function public_final_static_method( $foo, $anotherfoo = array() )$/;"	f	language:PHP
anotherfoo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_extended.class.php	/^    public final static function public_final_static_method( $foo, $anotherfoo = array() )$/;"	v	language:PHP
final_static_public_method	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_extended.class.php	/^    final static public function final_static_public_method()$/;"	f	language:PHP
private_static_method	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_extended.class.php	/^    private static function private_static_method($foo) {$/;"	f	language:PHP
protected_static_method	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_extended.class.php	/^    protected static function protected_static_method($foo) {$/;"	f	language:PHP
static_final_protected_method	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_extended.class.php	/^    static final protected function static_final_protected_method()$/;"	f	language:PHP
naked_public_method	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_extended.class.php	/^    function naked_public_method(){$/;"	f	language:PHP
Foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_interface_implemented.php	/^class Foo implements FooAble {$/;"	c	language:PHP
FooAble	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_interface_implemented.php	/^interface FooAble {$/;"	i	language:PHP
bar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteUserClass/user_interface_implemented.php	/^	public function bar($baz = 42);$/;"	f	language:PHP
find_me	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteVariable/local_variables.php	/^$find_me = "var";$/;"	v	language:PHP
find_me2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteVariable/local_variables.php	/^$find_me2 = time();$/;"	v	language:PHP
find_me3	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteVariable/local_variables.php	/^$find_me3 = new DateTime;$/;"	v	language:PHP
find_me4	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteVariable/local_variables.php	/^$find_me4 = new BarClass;$/;"	v	language:PHP
dont_find_me	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/CompleteVariable/local_variables.php	/^$dont_find_me = 42;$/;"	v	language:PHP
Foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/DocBlock/foo.class.php	/^class Foo {$/;"	c	language:PHP
foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/DocBlock/foo.class.php	/^    public $foo;$/;"	v	language:PHP
bar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/DocBlock/foo.class.php	/^    public $bar;$/;"	v	language:PHP
foo2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/DocBlock/foo.class.php	/^    var $foo2 = '';$/;"	v	language:PHP
foo2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/DocBlock/foo.class.php	/^    var $foo2 = '';$/;"	v	language:PHP
nocomment	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/DocBlock/foo.class.php	/^    public $nocomment;$/;"	v	language:PHP
nocomment2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/DocBlock/foo.class.php	/^    public static $nocomment2;$/;"	v	language:PHP
commentedfoo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/DocBlock/foo.class.php	/^    public function commentedfoo($foo, $bar, $baz = '') {$/;"	f	language:PHP
baz	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/DocBlock/foo.class.php	/^    public function commentedfoo($foo, $bar, $baz = '') {$/;"	v	language:PHP
not_commented	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/DocBlock/foo.class.php	/^    public function not_commented() {$/;"	f	language:PHP
minimally_commented	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/DocBlock/foo.class.php	/^    public function minimally_commented() {$/;"	f	language:PHP
onliner	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/DocBlock/foo.class.php	/^    public $onliner;$/;"	v	language:PHP
DocBlockedFoo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/docblocked_foo.php	/^class DocBlockedFoo {$/;"	c	language:PHP
BarClass	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/extends/bar.class.php	/^class BarClass { }$/;"	c	language:PHP
FooClass	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/extends/foo_extends_bar.class.php	/^class FooClass extends BarClass { }$/;"	c	language:PHP
BarClass2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/extends_extends/bar2_extends_baz.class.php	/^class BarClass2 extends BazClass { }$/;"	c	language:PHP
BazClass	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/extends_extends/baz.class.php	/^class BazClass { }$/;"	c	language:PHP
FooClass2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/extends_extends/foo2_extends_bar2.class.php	/^class FooClass2 extends BarClass2 { }$/;"	c	language:PHP
FooClass	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/foo.class.php	/^class FooClass {$/;"	c	language:PHP
bar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/foo.class.php	/^    public function bar( $baz = 'foo') {$/;"	f	language:PHP
baz	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/foo.class.php	/^    public function bar( $baz = 'foo') {$/;"	v	language:PHP
FooInterface	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/foo.interface.php	/^interface FooInterface {$/;"	i	language:PHP
FooTrait	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/foo.trait.php	/^trait FooTrait {$/;"	t	language:PHP
prop	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/foo.trait.php	/^	public $prop = 'baz';$/;"	v	language:PHP
prop	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/foo.trait.php	/^	public $prop = 'baz';$/;"	v	language:PHP
Foo2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/foo2.class.php	/^class Foo2 {$/;"	c	language:PHP
bar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/foo2.class.php	/^	public function bar() {$/;"	f	language:PHP
a	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/foo2.class.php	/^		$a = '}';$/;"	v	language:PHP
b	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/foo2.class.php	/^		$b = "}";$/;"	v	language:PHP
Foo3	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/foo3.class.php	/^class Foo3 {$/;"	c	language:PHP
bar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/foo3.class.php	/^	public function bar() {$/;"	f	language:PHP
FooClassNotThisOne	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/foo_whitespace.class.php	/^class FooClassNotThisOne {$/;"	c	language:PHP
FooClass	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/foo_whitespace.class.php	/^class FooClass$/;"	c	language:PHP
bar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/foo_whitespace.class.php	/^    public function bar( $baz = 'foo')$/;"	f	language:PHP
baz	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/foo_whitespace.class.php	/^    public function bar( $baz = 'foo')$/;"	v	language:PHP
foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/foo_with_extra_content.class.php	/^function foo() {$/;"	f	language:PHP
FooClass	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/foo_with_extra_content.class.php	/^class FooClass {$/;"	c	language:PHP
bar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/foo_with_extra_content.class.php	/^    public function bar( $baz = 'foo') {$/;"	f	language:PHP
baz	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/foo_with_extra_content.class.php	/^    public function bar( $baz = 'foo') {$/;"	v	language:PHP
bar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/foo_with_extra_content.class.php	/^function bar() {$/;"	f	language:PHP
X	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/implements.php	/^class X implements Foo {$/;"	c	language:PHP
Y	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/implements.php	/^class Y implements Foo, Foo2 {$/;"	c	language:PHP
NamespacedFoo2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/import/ns1_foo2.php	/^class NamespacedFoo2 extends NamespacedFoo {}$/;"	c	language:PHP
NamespacedFoo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/import/ns2_foo.php	/^class NamespacedFoo {}$/;"	c	language:PHP
Foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/interfaces.php	/^interface Foo {$/;"	i	language:PHP
Foo2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/interfaces.php	/^interface Foo2 {$/;"	i	language:PHP
FooFoo2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/interfaces.php	/^interface FooFoo2 extends Foo, Foo2 {$/;"	i	language:PHP
NamespacedFoo2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/ns1_foo2.php	/^class NamespacedFoo2 extends \\NS2\\NamespacedFoo {}$/;"	c	language:PHP
NamespacedFoo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/ns2_foo.php	/^class NamespacedFoo {}$/;"	c	language:PHP
Foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/same_classname/foo.class.php	/^class Foo extends \\NS1\\Foo {$/;"	c	language:PHP
bar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/same_classname/foo.class.php	/^    public function bar()$/;"	f	language:PHP
Foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/same_classname/ns1_foo.class.php	/^class Foo { }$/;"	c	language:PHP
FooTrait	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/same_file_class.php	/^trait FooTrait { }$/;"	t	language:PHP
SomeTraitedClass	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/same_file_class.php	/^class SomeTraitedClass {$/;"	c	language:PHP
ExtendsNonExistsing	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassContents/same_file_class.php	/^class ExtendsNonExistsing extends NoSuchClass {$/;"	c	language:PHP
Foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassLocation/foo.class.php	/^class Foo {$/;"	c	language:PHP
bar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassLocation/foo.class.php	/^    public function bar() {$/;"	f	language:PHP
Foo2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassLocation/foo.class.php	/^ final class Foo2 {$/;"	c	language:PHP
bar2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassLocation/foo.class.php	/^    function bar2() {$/;"	f	language:PHP
Foo3	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassLocation/foo.class.php	/^class Foo3{$/;"	c	language:PHP
bar2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassLocation/foo.class.php	/^    function bar2() {$/;"	f	language:PHP
Foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/arrays.php	/^class Foo {$/;"	c	language:PHP
findme	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/arrays.php	/^    public function findme($a) {$/;"	f	language:PHP
fooarray	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/arrays.php	/^    public $fooarray;$/;"	v	language:PHP
foo2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/arrays.php	/^$foo2 = new Foo;$/;"	v	language:PHP
foo3	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/arrays.php	/^$foo3 = new Foo;$/;"	v	language:PHP
foo4	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/arrays.php	/^$foo4 = $foo2->fooarray[42]->findme();$/;"	v	language:PHP
i	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/arrays.php	/^foreach ($foo6 as $i => $f) {$/;"	v	language:PHP
i	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/arrays.php	/^foreach ($foo7[0]->fooarray as $i => $f) {$/;"	v	language:PHP
i	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/arrays.php	/^foreach ($foo7[0]->fooarray[42]->findme() as $i => $f) {$/;"	v	language:PHP
xml	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/builtin_function.php	/^$xml = simplexml_load_string('<'.'?xml version="1.0" encoding="utf-8" ?'.'><root><\/root>');$/;"	v	language:PHP
d	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/builtin_static_return_type.php	/^$d = DateTime::createFromFormat();$/;"	v	language:PHP
d	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/builtin_static_return_type.php	/^$d = DT::createFromFormat();$/;"	v	language:PHP
Bar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^class Bar {$/;"	c	language:PHP
foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^    var $foo;$/;"	v	language:PHP
return_foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^    public function return_foo() {$/;"	f	language:PHP
Foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^class Foo {$/;"	c	language:PHP
bar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^    public $bar;$/;"	v	language:PHP
bar2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^    private $bar2;$/;"	v	language:PHP
bar3	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^    protected $bar3;$/;"	v	language:PHP
static_bar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^    protected static $static_bar;$/;"	v	language:PHP
static_bar2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^    static public $static_bar2;$/;"	v	language:PHP
return_bar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^    public function return_bar() {$/;"	f	language:PHP
foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^$foo = new Foo;$/;"	v	language:PHP
fun	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^function fun(Foo $foo) {$/;"	f	language:PHP
doc	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^$doc = new DOMDocument;$/;"	v	language:PHP
d	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^$d = new DateTime;$/;"	v	language:PHP
tz	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^$tz = DateTime::createFromFormat()->getTimezone();$/;"	v	language:PHP
foobar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^$foobar = Foo::$static_bar2->return_foo();$/;"	v	language:PHP
foo2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^$foo2 = new Foo;$/;"	v	language:PHP
bar2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^$bar2 = $foo2->return_bar();$/;"	v	language:PHP
foo3	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^$foo3 = new Foo;$/;"	v	language:PHP
bar3	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^$bar3 = $foo3->return_bar();$/;"	v	language:PHP
SimilarNames	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^class SimilarNames {$/;"	c	language:PHP
return_self	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^	public function return_self() {$/;"	f	language:PHP
return_	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^	public function return_() {$/;"	f	language:PHP
foo3	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^$foo3 = new SimilarNames;$/;"	v	language:PHP
CommentedFoo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^class CommentedFoo {$/;"	c	language:PHP
commentedFoo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/call_chains.php	/^$commentedFoo = new CommentedFoo;$/;"	v	language:PHP
c	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/clone.php	/^$c = new DateTime;$/;"	v	language:PHP
d	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/clone.php	/^$d = clone $c;$/;"	v	language:PHP
dt	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/completion_in_function_insides.php	/^function dt() {$/;"	f	language:PHP
baz	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/completion_in_function_insides.php	/^function baz() {$/;"	f	language:PHP
d	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/completion_in_function_insides.php	/^	$d = dt();$/;"	v	language:PHP
Foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/completion_in_function_insides.php	/^class Foo {$/;"	c	language:PHP
makeDateTime	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/completion_in_function_insides.php	/^    public function makeDateTime() {$/;"	f	language:PHP
d	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/completion_in_function_insides.php	/^		$d = dt();$/;"	v	language:PHP
__construct	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/completion_in_function_insides.php	/^    public function __construct() {$/;"	f	language:PHP
d	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/completion_in_function_insides.php	/^        $d = $this->makeDateTime();$/;"	v	language:PHP
FooClass	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo.class.php	/^class FooClass {$/;"	c	language:PHP
bar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo.class.php	/^    public function bar() {$/;"	f	language:PHP
FooAbstract	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_abstract.class.php	/^abstract class FooAbstract {$/;"	c	language:PHP
foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_abstract.class.php	/^    public function foo() {$/;"	f	language:PHP
definition	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_abstract_with_whitespace.class.php	/^ * testcase for when the class definition is not on the start of the line$/;"	c	language:PHP
FooAbstract	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_abstract_with_whitespace.class.php	/^    ABSTRACT	class	FooAbstract$/;"	c	language:PHP
foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_abstract_with_whitespace.class.php	/^        public function foo() {$/;"	f	language:PHP
foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_equals_new_foo.php	/^$foo = new FooClass;$/;"	v	language:PHP
foo2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_equals_new_foo.php	/^$foo2 = new RenamedFoo;$/;"	v	language:PHP
foo3	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_equals_new_foo.php	/^$foo3 = new \\NS2\\Foo;$/;"	v	language:PHP
Level1	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_inheritance_level1.php	/^class Level1 extends Level2 {$/;"	c	language:PHP
level1Method	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_inheritance_level1.php	/^	protected function level1Method() {$/;"	f	language:PHP
doSometing	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_inheritance_level1.php	/^	public function doSometing() {$/;"	f	language:PHP
Level2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_inheritance_level2.php	/^class Level2 extends Level3 {$/;"	c	language:PHP
level2Method_protected	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_inheritance_level2.php	/^	protected function level2Method_protected() {$/;"	f	language:PHP
level2Method_public	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_inheritance_level2.php	/^	public function level2Method_public() {$/;"	f	language:PHP
Level3	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_inheritance_level3.php	/^class Level3 {$/;"	c	language:PHP
level3Method_protected	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_inheritance_level3.php	/^	protected function level3Method_protected() {$/;"	f	language:PHP
level3Method_public	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_inheritance_level3.php	/^	public function level3Method_public() {$/;"	f	language:PHP
getLevel31Instance	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_inheritance_level3.php	/^	public function getLevel31Instance() {$/;"	f	language:PHP
getAnother31Instance	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_inheritance_level3.php	/^	public function getAnother31Instance() {$/;"	f	language:PHP
Model	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/multi_hoops.php	/^class Model {$/;"	c	language:PHP
getResult	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/multi_hoops.php	/^	public function getResult() {$/;"	f	language:PHP
someModel	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/multi_hoops.php	/^$someModel = new Model();$/;"	v	language:PHP
results	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/multi_hoops.php	/^$results = $someModel->getResult(1);$/;"	v	language:PHP
foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/multi_hoops.php	/^    $foo = $result->$/;"	v	language:PHP
Level31	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_inheritance_level31.php	/^class Level31 {$/;"	c	language:PHP
level31Method	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_inheritance_level31.php	/^	public function level31Method() {$/;"	f	language:PHP
Thing	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_method_chains.php	/^class Thing {$/;"	c	language:PHP
publicThing	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_method_chains.php	/^	public $publicThing;$/;"	v	language:PHP
protectedThing	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_method_chains.php	/^	protected $protectedThing;$/;"	v	language:PHP
privateThing	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_method_chains.php	/^	private $privateThing;$/;"	v	language:PHP
getActualThing	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_method_chains.php	/^	function getActualThing(){$/;"	f	language:PHP
Something	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_method_chains.php	/^class Something {$/;"	c	language:PHP
publicSomeThing	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_method_chains.php	/^	public $publicSomeThing;$/;"	v	language:PHP
protectedSomeThing	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_method_chains.php	/^	protected $protectedSomeThing;$/;"	v	language:PHP
privateSomeThing	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_method_chains.php	/^	private $privateSomeThing;$/;"	v	language:PHP
currentThing	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_method_chains.php	/^	public $currentThing;$/;"	v	language:PHP
getThing	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_method_chains.php	/^	function getThing() {$/;"	f	language:PHP
FooExtension	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_method_chains.php	/^class FooExtension extends Foo {$/;"	c	language:PHP
bar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_method_chains.php	/^	function bar() {$/;"	f	language:PHP
Foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_method_chains.php	/^class Foo {$/;"	c	language:PHP
getSomething	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_method_chains.php	/^	function getSomething() {$/;"	f	language:PHP
getThing	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_method_chains.php	/^	function getThing() {$/;"	f	language:PHP
barThis	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_method_chains.php	/^	function barThis() {$/;"	f	language:PHP
completeThisGetSomething	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_method_chains.php	/^	function completeThisGetSomething() {$/;"	f	language:PHP
completeThis	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_method_chains.php	/^	function completeThis() {$/;"	f	language:PHP
Bar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_new_oneline_chain.php	/^class Bar {$/;"	c	language:PHP
return_foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_new_oneline_chain.php	/^    public function return_foo() {$/;"	f	language:PHP
Foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_new_oneline_chain.php	/^class Foo {$/;"	c	language:PHP
return_bar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_new_oneline_chain.php	/^    public function return_bar() {$/;"	f	language:PHP
FooClass	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_outside.class.php	/^class FooClass {$/;"	c	language:PHP
keyword	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_with_whitespace.class.php	/^ * testcase for when the class keyword is not on the start of the line$/;"	c	language:PHP
bar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/foo_with_whitespace.class.php	/^        public function bar() {$/;"	f	language:PHP
foo1	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/function_docblock.php	/^function foo1($bar1) {$/;"	f	language:PHP
foo2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/function_docblock.php	/^function foo2($bar1, $bar2, $bar3) {$/;"	f	language:PHP
foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/function_docblock.php	/^$foo = function($bar3, \\Some\\Class $foo) {$/;"	v	language:PHP
baz3	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/function_docblock.php	/^function baz3($/;"	f	language:PHP
FooClass	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/function_return_type.php	/^class FooClass {$/;"	c	language:PHP
findme	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/function_return_type.php	/^    public function findme() {$/;"	f	language:PHP
make_a_foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/function_return_type.php	/^function make_a_foo(){$/;"	f	language:PHP
make_a_renamed_foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/function_return_type.php	/^function make_a_renamed_foo(){$/;"	f	language:PHP
foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/function_return_type.php	/^$foo = make_a_foo();$/;"	v	language:PHP
foo2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/function_return_type.php	/^$foo2 = make_a_renamed_foo();$/;"	v	language:PHP
foo3	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/function_return_type.php	/^$foo3 = no_ns_make_a_foo();$/;"	v	language:PHP
Model	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/multi_hoops_extra_whitespace.php	/^class Model {$/;"	c	language:PHP
getResult	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/multi_hoops_extra_whitespace.php	/^   public function getResult() {$/;"	f	language:PHP
someModel	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/multi_hoops_extra_whitespace.php	/^$someModel = new Model();$/;"	v	language:PHP
results	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/multi_hoops_extra_whitespace.php	/^$results = $someModel->getResult($/;"	v	language:PHP
foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/multi_hoops_extra_whitespace.php	/^    $foo = $result->hoge;$/;"	v	language:PHP
foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/multi_hoops_extra_whitespace.php	/^    $foo = $result->$/;"	v	language:PHP
no_ns_make_a_foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/non_namespaced_function.php	/^function no_ns_make_a_foo() {$/;"	f	language:PHP
Foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/parent.php	/^class Foo extends FooBase {$/;"	c	language:PHP
bar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/parent.php	/^    public function bar() {$/;"	f	language:PHP
Bar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/return_typehinted_functions.php	/^class Bar {$/;"	c	language:PHP
findMe	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/return_typehinted_functions.php	/^	public function findMe() { }$/;"	f	language:PHP
Bar2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/return_typehinted_functions.php	/^class Bar2 {$/;"	c	language:PHP
findMe	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/return_typehinted_functions.php	/^	public function findMe() { }$/;"	f	language:PHP
FooReturnBars	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/return_typehinted_functions.php	/^class FooReturnBars {$/;"	c	language:PHP
returnBar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/return_typehinted_functions.php	/^	public function returnBar($a, $b = 'foo') : Bar {$/;"	f	language:PHP
b	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/return_typehinted_functions.php	/^	public function returnBar($a, $b = 'foo') : Bar {$/;"	v	language:PHP
returnBar2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/return_typehinted_functions.php	/^	public function returnBar2($a, $b = 'foo') : Bar2$/;"	f	language:PHP
b	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/return_typehinted_functions.php	/^	public function returnBar2($a, $b = 'foo') : Bar2$/;"	v	language:PHP
returnFoo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/return_typehinted_functions.php	/^function returnFoo() : FooReturnBars {$/;"	f	language:PHP
f	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/return_typehinted_functions.php	/^$f = returnFoo();$/;"	v	language:PHP
Baz2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/self_return_type.php	/^class Baz2 {$/;"	c	language:PHP
return_self	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/self_return_type.php	/^	public function return_self() {$/;"	f	language:PHP
return_static	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/self_return_type.php	/^	public function return_static() {$/;"	f	language:PHP
return_this	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/self_return_type.php	/^	public function return_this() {$/;"	f	language:PHP
b2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/self_return_type.php	/^$b2 = new Baz2;$/;"	v	language:PHP
Baz3	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/self_return_type_array.php	/^class Baz3 {$/;"	c	language:PHP
return_self_array	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/self_return_type_array.php	/^	public function return_self_array() {$/;"	f	language:PHP
return_static_array	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/self_return_type_array.php	/^	public function return_static_array() {$/;"	f	language:PHP
return_this_array	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/self_return_type_array.php	/^	public function return_this_array() {$/;"	f	language:PHP
b3	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/self_return_type_array.php	/^$b3 = new Baz3;$/;"	v	language:PHP
selfs	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/self_return_type_array.php	/^$selfs = $b3->return_self_array();$/;"	v	language:PHP
thises	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/self_return_type_array.php	/^$thises = $b3->return_this_array();$/;"	v	language:PHP
statics	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/self_return_type_array.php	/^$statics = $b3->return_static_array();$/;"	v	language:PHP
foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/singleton_getinstance.php	/^$foo = FooClass::getInstance();$/;"	v	language:PHP
foo2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/singleton_getinstance.php	/^$foo2 = RenamedFoo::getInstance();$/;"	v	language:PHP
foo3	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/singleton_getinstance.php	/^$foo3 = \\NS2\\Foo::getInstance();$/;"	v	language:PHP
Page	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/static_docblock_namespaced.php	/^class Page {$/;"	c	language:PHP
getPage	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/static_docblock_namespaced.php	/^    public static function getPage(){$/;"	f	language:PHP
getPage2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/static_docblock_namespaced.php	/^    public static function getPage2(){$/;"	f	language:PHP
getRenamedPage	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/static_docblock_namespaced.php	/^    public static function getRenamedPage(){$/;"	f	language:PHP
getRenamedPage2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/static_docblock_namespaced.php	/^    public static function getRenamedPage2(){$/;"	f	language:PHP
p	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/static_docblock_namespaced.php	/^$p = Page::getPage();$/;"	v	language:PHP
p	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/static_docblock_namespaced.php	/^$p = \\Foo\\Page::getPage();$/;"	v	language:PHP
p	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/static_docblock_namespaced.php	/^$p = P::getPage();$/;"	v	language:PHP
p	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/static_docblock_namespaced.php	/^$p = RenamedFoo\\Page::getPage();$/;"	v	language:PHP
p	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/static_docblock_namespaced.php	/^$p = Page::getPage2();$/;"	v	language:PHP
p	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/static_docblock_namespaced.php	/^$p = Page::getRenamedPage();$/;"	v	language:PHP
p	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/static_docblock_namespaced.php	/^$p = Page::getRenamedPage2();$/;"	v	language:PHP
p	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/static_docblock_namespaced_imported.php	/^$p = Page::getPage();$/;"	v	language:PHP
User	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/static_docblock_return.php	/^class User {$/;"	c	language:PHP
getUser	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/static_docblock_return.php	/^    public static function getUser(){ }$/;"	f	language:PHP
find_me	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/static_docblock_return.php	/^    public function find_me() { }$/;"	f	language:PHP
u	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/static_docblock_return.php	/^$u = User::getUser();$/;"	v	language:PHP
Foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/stuff_with_the_word_class_in_them.php	/^class Foo extends DateTime {$/;"	c	language:PHP
bar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/stuff_with_the_word_class_in_them.php	/^	public function bar() {$/;"	f	language:PHP
var	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/stuff_with_the_word_class_in_them.php	/^		$var = 'Anything with a$/;"	v	language:PHP
will	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/stuff_with_the_word_class_in_them.php	/^			class will loop to the infinite';$/;"	c	language:PHP
verylongvariablethatcausesnextlinetowrap	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/stuff_with_the_word_class_in_them.php	/^		$verylongvariablethatcausesnextlinetowrap =$/;"	v	language:PHP
BazClass	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/typehinted_functions.php	/^class BazClass$/;"	c	language:PHP
bazFunction	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/typehinted_functions.php	/^    function bazFunction(FooClass9 $bar)$/;"	f	language:PHP
quxFunction	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/typehinted_functions.php	/^    public static function quxFunction(FooClass10 $baz)$/;"	f	language:PHP
baz2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/typehinted_functions.php	/^function baz2(RenamedFoo $bar) {$/;"	f	language:PHP
mysli	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/typehinted_functions.php	/^	$mysli = $foo;$/;"	v	language:PHP
foo_conflicting_sources	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/var_comment_mark.php	/^$foo_conflicting_sources = Baz::getInstance();$/;"	v	language:PHP
foo2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/var_comment_mark.php	/^$foo2 = unknown();$/;"	v	language:PHP
baz	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/var_comment_mark.php	/^function baz() {$/;"	f	language:PHP
foo3	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetClassName/var_comment_mark.php	/^	$foo3 = $unknown_assignment['foo3'];$/;"	v	language:PHP
foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentFunctionBoundaries/test.php	/^function foo() {$/;"	f	language:PHP
foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentFunctionBoundaries/test.php	/^	$foo = 42;$/;"	v	language:PHP
but	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentFunctionBoundaries/test.php	/^$baz = new FooBar(); \/\/ line after a function but not inside one$/;"	f	language:PHP
baz	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentFunctionBoundaries/test.php	/^$baz = new FooBar(); \/\/ line after a function but not inside one$/;"	v	language:PHP
FooBar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentFunctionBoundaries/test.php	/^class FooBar {$/;"	c	language:PHP
fun	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentFunctionBoundaries/test.php	/^	public static function fun()$/;"	f	language:PHP
baz	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentFunctionBoundaries/test.php	/^		$baz = 42; \/\/ line inside a method$/;"	v	language:PHP
comments_and_strings	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentFunctionBoundaries/test.php	/^function comments_and_strings() {$/;"	f	language:PHP
a	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentFunctionBoundaries/test.php	/^	$a = '{'."{";$/;"	v	language:PHP
baz3	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentFunctionBoundaries/test.php	/^	$baz3 = 42; \/\/ search here$/;"	v	language:PHP
unfinished	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentFunctionBoundaries/test.php	/^function unfinished() {$/;"	f	language:PHP
baz2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentFunctionBoundaries/test.php	/^	$baz2 = 42; \/\/ search here$/;"	v	language:PHP
a	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentInstruction/instructions.php	/^$a = new$/;"	v	language:PHP
Foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentInstruction/instructions.php	/^class Foo {$/;"	c	language:PHP
bar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentInstruction/instructions.php	/^    public function bar()$/;"	f	language:PHP
foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentInstruction/instructions.php	/^$foo = $bar->baz($f, $bar2-> \/\/ cursor before the comment$/;"	v	language:PHP
foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentInstruction/instructions.php	/^$foo = $bar->baz($foo = call(), (new foo)->  \/\/ cursor before the comment$/;"	v	language:PHP
foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentInstruction/instructions.php	/^$foo = $foo ? $bar : $baz-> \/\/cursor here$/;"	v	language:PHP
Foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentInstruction/instructions.php	/^class Foo extends Bar implements ArrayAccess, It$/;"	c	language:PHP
testFunc	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentNameSpace/code_blocks.php	/^$testFunc = function () {$/;"	v	language:PHP
test	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentNameSpace/code_blocks.php	/^		$test = new SomeChildNS\\SomeClass();$/;"	v	language:PHP
import	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentNameSpace/imports.php	/^use ArrayAccess; \/\/ simple bilt in class import$/;"	c	language:PHP
Foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentNameSpace/single_namespace.php	/^class Foo {$/;"	c	language:PHP
some	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentNameSpace/single_namespace.php	/^$some = method_calls();$/;"	v	language:PHP
Foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentNameSpace/single_namespace2.php	/^class Foo {$/;"	c	language:PHP
some	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentNameSpace/single_namespace2.php	/^$some = method_calls();$/;"	v	language:PHP
Foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentNameSpace/single_namespace_uppercase.php	/^class Foo {$/;"	c	language:PHP
some	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentNameSpace/single_namespace_uppercase.php	/^$some = method_calls();$/;"	v	language:PHP
SomeTrait	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentNameSpace/traits.php	/^trait SomeTrait {$/;"	t	language:PHP
Foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentNameSpace/traits.php	/^class Foo {$/;"	c	language:PHP
BaseFoo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentSymbolWithContext/base_foo.php	/^class BaseFoo {$/;"	c	language:PHP
inherited	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentSymbolWithContext/base_foo.php	/^	public function inherited() {$/;"	f	language:PHP
ChildFoo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentSymbolWithContext/child_foo.php	/^class ChildFoo extends BaseFoo {$/;"	c	language:PHP
f	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentSymbolWithContext/child_foo.php	/^$f = new ChildFoo;$/;"	v	language:PHP
Foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentSymbolWithContext/foo.php	/^class Foo {$/;"	c	language:PHP
baz	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentSymbolWithContext/foo.php	/^	public function baz() {$/;"	f	language:PHP
get_foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentSymbolWithContext/foo.php	/^function get_foo() {$/;"	f	language:PHP
f2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentSymbolWithContext/foo.php	/^$f2 = new \\NS2\\Foo2;$/;"	v	language:PHP
Foo3	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentSymbolWithContext/foo_references.php	/^class Foo3 {$/;"	c	language:PHP
return_foo_ref_method	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentSymbolWithContext/foo_references.php	/^	public function &return_foo_ref_method() {$/;"	f	language:PHP
return_foo_ref	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentSymbolWithContext/foo_references.php	/^function &return_foo_ref(){$/;"	f	language:PHP
Foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentSymbolWithContext/namespaced_foo.php	/^class Foo {$/;"	c	language:PHP
baz	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentSymbolWithContext/namespaced_foo.php	/^	public function baz() {$/;"	f	language:PHP
get_foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentSymbolWithContext/namespaced_foo.php	/^function get_foo() {$/;"	f	language:PHP
f2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentSymbolWithContext/namespaced_foo.php	/^$f2 = new \\NS2\\Foo2;$/;"	v	language:PHP
f3	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentSymbolWithContext/namespaced_foo.php	/^$f3 = new RenamedFoo2;$/;"	v	language:PHP
Foo2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentSymbolWithContext/namespaced_foo2.php	/^class Foo2 {$/;"	c	language:PHP
returnBaz2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentSymbolWithContext/namespaced_foo2.php	/^	public function returnBaz2() {$/;"	f	language:PHP
Baz2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentSymbolWithContext/namespaced_foo2.php	/^class Baz2 {$/;"	c	language:PHP
returnFoo2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetCurrentSymbolWithContext/namespaced_foo2.php	/^	public function returnFoo2() {$/;"	f	language:PHP
foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetFunctionLocation/foo.function.php	/^function foo(){$/;"	f	language:PHP
FOO2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetFunctionLocation/foo.function.php	/^function FOO2 ()$/;"	f	language:PHP
Foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/common/namespaced_foo.php	/^class Foo {$/;"	c	language:PHP
bar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/common/namespaced_foo.php	/^function bar(){}$/;"	f	language:PHP
FooInterface	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/common/namespaced_foo.php	/^interface FooInterface {$/;"	i	language:PHP
FooSub	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/common/namespaced_foo.php	/^class FooSub {$/;"	c	language:PHP
barsub	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/common/namespaced_foo.php	/^function barsub(){$/;"	f	language:PHP
FooSubSub	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/common/namespaced_foo.php	/^class FooSubSub {$/;"	c	language:PHP
barsubsub	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/common/namespaced_foo.php	/^function barsubsub(){$/;"	f	language:PHP
Foo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetFunctionReturnTypeHint/functions.php	/^class Foo$/;"	c	language:PHP
returnBar	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetFunctionReturnTypeHint/functions.php	/^	public function returnBar($a, $b = 'foo') : Bar {$/;"	f	language:PHP
b	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetFunctionReturnTypeHint/functions.php	/^	public function returnBar($a, $b = 'foo') : Bar {$/;"	v	language:PHP
returnBar2	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetFunctionReturnTypeHint/functions.php	/^	public function returnBar2($a, $b = 'foo') : Bar2$/;"	f	language:PHP
b	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetFunctionReturnTypeHint/functions.php	/^	public function returnBar2($a, $b = 'foo') : Bar2$/;"	v	language:PHP
returnFoo	.config/nvim/plugged/phpcomplete.vim/tests/fixtures/GetFunctionReturnTypeHint/functions.php	/^function returnFoo() : Foo {$/;"	f	language:PHP
FeatureContext	.config/nvim/plugged/vim-test/spec/fixtures/behat/features/bootstrap/FeatureContext.php	/^class FeatureContext extends Context {$/;"	c	language:PHP
I	.config/nvim/plugged/vim-test/spec/fixtures/codeception/tests/functional/NormalCept.php	/^$I = new FunctionalTester($scenario);$/;"	v	language:PHP
NormalCest	.config/nvim/plugged/vim-test/spec/fixtures/codeception/tests/functional/NormalCest.php	/^class NormalCest$/;"	c	language:PHP
_before	.config/nvim/plugged/vim-test/spec/fixtures/codeception/tests/functional/NormalCest.php	/^    public function _before(FunctionalTester $I)$/;"	f	language:PHP
_after	.config/nvim/plugged/vim-test/spec/fixtures/codeception/tests/functional/NormalCest.php	/^    public function _after(FunctionalTester $I)$/;"	f	language:PHP
tryToTest	.config/nvim/plugged/vim-test/spec/fixtures/codeception/tests/functional/NormalCest.php	/^    public function tryToTest(FunctionalTester $I)$/;"	f	language:PHP
tryToTestSomethingElse	.config/nvim/plugged/vim-test/spec/fixtures/codeception/tests/functional/NormalCest.php	/^    public function tryToTestSomethingElse(FunctionalTester $I)$/;"	f	language:PHP
NormalTest	.config/nvim/plugged/vim-test/spec/fixtures/codeception/tests/functional/NormalTest.php	/^class NormalTest extends \\Codeception\\Test\\Unit$/;"	c	language:PHP
tester	.config/nvim/plugged/vim-test/spec/fixtures/codeception/tests/functional/NormalTest.php	/^    protected $tester;$/;"	v	language:PHP
_before	.config/nvim/plugged/vim-test/spec/fixtures/codeception/tests/functional/NormalTest.php	/^    protected function _before()$/;"	f	language:PHP
_after	.config/nvim/plugged/vim-test/spec/fixtures/codeception/tests/functional/NormalTest.php	/^    protected function _after()$/;"	f	language:PHP
testMe	.config/nvim/plugged/vim-test/spec/fixtures/codeception/tests/functional/NormalTest.php	/^    public function testMe()$/;"	f	language:PHP
testSomethingElse	.config/nvim/plugged/vim-test/spec/fixtures/codeception/tests/functional/NormalTest.php	/^    public function testSomethingElse()$/;"	f	language:PHP
BrowserTest	.config/nvim/plugged/vim-test/spec/fixtures/dusk/BrowserTest.php	/^class BrowserTest extends PHPUnit_Framework_TestCase$/;"	c	language:PHP
testShouldAddTwoNumbers	.config/nvim/plugged/vim-test/spec/fixtures/dusk/BrowserTest.php	/^    public function testShouldAddTwoNumbers()$/;"	f	language:PHP
testShouldSubtractTwoNumbers	.config/nvim/plugged/vim-test/spec/fixtures/dusk/BrowserTest.php	/^    public function testShouldSubtractTwoNumbers()$/;"	f	language:PHP
additionProvider	.config/nvim/plugged/vim-test/spec/fixtures/dusk/BrowserTest.php	/^    public function additionProvider()$/;"	f	language:PHP
testShouldAddToExpectedValue	.config/nvim/plugged/vim-test/spec/fixtures/dusk/BrowserTest.php	/^    public function testShouldAddToExpectedValue($a, $b, $expected)$/;"	f	language:PHP
aTestMarkedWithTestAnnotation	.config/nvim/plugged/vim-test/spec/fixtures/dusk/BrowserTest.php	/^    public function aTestMarkedWithTestAnnotation()$/;"	f	language:PHP
aTestMarkedWithTestAnnotationAndCrazyDocblock	.config/nvim/plugged/vim-test/spec/fixtures/dusk/BrowserTest.php	/^    public function aTestMarkedWithTestAnnotationAndCrazyDocblock()$/;"	f	language:PHP
arrayObject	.config/nvim/plugged/vim-test/spec/fixtures/peridot/arrayobject.spec.php	/^        $this->arrayObject = new ArrayObject(['one', 'two', 'three']);$/;"	v	language:PHP
count	.config/nvim/plugged/vim-test/spec/fixtures/peridot/arrayobject.spec.php	/^            $count = $this->arrayObject->count();$/;"	v	language:PHP
NormalSpec	.config/nvim/plugged/vim-test/spec/fixtures/phpspec/NormalSpec.php	/^class NormalSpec extends ObjectBehavior$/;"	c	language:PHP
it_is_initializable	.config/nvim/plugged/vim-test/spec/fixtures/phpspec/NormalSpec.php	/^    function it_is_initializable()$/;"	f	language:PHP
NormalTest	.config/nvim/plugged/vim-test/spec/fixtures/phpunit/NormalTest.php	/^class NormalTest extends PHPUnit_Framework_TestCase$/;"	c	language:PHP
testShouldAddTwoNumbers	.config/nvim/plugged/vim-test/spec/fixtures/phpunit/NormalTest.php	/^    public function testShouldAddTwoNumbers()$/;"	f	language:PHP
testShouldSubtractTwoNumbers	.config/nvim/plugged/vim-test/spec/fixtures/phpunit/NormalTest.php	/^    public function testShouldSubtractTwoNumbers()$/;"	f	language:PHP
additionProvider	.config/nvim/plugged/vim-test/spec/fixtures/phpunit/NormalTest.php	/^    public function additionProvider()$/;"	f	language:PHP
testShouldAddToExpectedValue	.config/nvim/plugged/vim-test/spec/fixtures/phpunit/NormalTest.php	/^    public function testShouldAddToExpectedValue($a, $b, $expected)$/;"	f	language:PHP
aTestMarkedWithTestAnnotation	.config/nvim/plugged/vim-test/spec/fixtures/phpunit/NormalTest.php	/^    public function aTestMarkedWithTestAnnotation()$/;"	f	language:PHP
aTestMarkedWithTestAnnotationAndCrazyDocblock	.config/nvim/plugged/vim-test/spec/fixtures/phpunit/NormalTest.php	/^    public function aTestMarkedWithTestAnnotationAndCrazyDocblock()$/;"	f	language:PHP
html	.config/nvim/plugged/gundo.vim/site/style.less	/^html {$/;"	t	language:css
html, body	.config/nvim/plugged/gundo.vim/site/style.less	/^html, body {$/;"	t	language:css
wrap	.config/nvim/plugged/gundo.vim/site/style.less	/^    .wrap {$/;"	c	language:css
h1, h2, h3, h4, h5, h6	.config/nvim/plugged/gundo.vim/site/style.less	/^    h1, h2, h3, h4, h5, h6 {$/;"	t	language:css
a	.config/nvim/plugged/gundo.vim/site/style.less	/^    a {$/;"	t	language:css
p, pre	.config/nvim/plugged/gundo.vim/site/style.less	/^    p, pre {$/;"	t	language:css
code	.config/nvim/plugged/gundo.vim/site/style.less	/^    code {$/;"	t	language:css
pre	.config/nvim/plugged/gundo.vim/site/style.less	/^    pre {$/;"	t	language:css
img	.config/nvim/plugged/gundo.vim/site/style.less	/^    img {$/;"	t	language:css
repos	.config/nvim/plugged/gundo.vim/site/style.less	/^#repos {$/;"	i	language:css
header	.config/nvim/plugged/gundo.vim/site/style.less	/^header {$/;"	t	language:css
h1	.config/nvim/plugged/gundo.vim/site/style.less	/^    h1 {$/;"	t	language:css
h2	.config/nvim/plugged/gundo.vim/site/style.less	/^    h2 {$/;"	t	language:css
section	.config/nvim/plugged/gundo.vim/site/style.less	/^section {$/;"	t	language:css
h1	.config/nvim/plugged/gundo.vim/site/style.less	/^    h1 {$/;"	t	language:css
h2	.config/nvim/plugged/gundo.vim/site/style.less	/^    h2 {$/;"	t	language:css
ul	.config/nvim/plugged/gundo.vim/site/style.less	/^        ul {$/;"	t	language:css
footer	.config/nvim/plugged/gundo.vim/site/style.less	/^footer {$/;"	t	language:css
Bar	.config/nvim/plugged/vim-php-namespace/tests/test-basic-1.fixtures/a.php	/^class Bar {$/;"	c	language:PHP
Bar	.config/nvim/plugged/vim-php-namespace/tests/test-basic-10.fixtures/a.php	/^class Bar {$/;"	c	language:PHP
Bar	.config/nvim/plugged/vim-php-namespace/tests/test-basic-11.fixtures/a.php	/^class Bar {$/;"	c	language:PHP
Bar	.config/nvim/plugged/vim-php-namespace/tests/test-basic-12.fixtures/a.php	/^abstract class Bar {$/;"	c	language:PHP
Bar	.config/nvim/plugged/vim-php-namespace/tests/test-basic-13.fixtures/a.php	/^final class Bar {$/;"	c	language:PHP
Bar	.config/nvim/plugged/vim-php-namespace/tests/test-basic-14.fixtures/a.php	/^class Bar {$/;"	c	language:PHP
Bar	.config/nvim/plugged/vim-php-namespace/tests/test-basic-15.fixtures/a.php	/^class Bar {$/;"	c	language:PHP
Bar	.config/nvim/plugged/vim-php-namespace/tests/test-basic-16.fixtures/a.php	/^class Bar {$/;"	c	language:PHP
Bar	.config/nvim/plugged/vim-php-namespace/tests/test-basic-2.fixtures/a.php	/^class Bar {$/;"	c	language:PHP
Bar	.config/nvim/plugged/vim-php-namespace/tests/test-basic-3.fixtures/a.php	/^class Bar {$/;"	c	language:PHP
Bar	.config/nvim/plugged/vim-php-namespace/tests/test-basic-4.fixtures/a.php	/^class Bar {$/;"	c	language:PHP
Bar	.config/nvim/plugged/vim-php-namespace/tests/test-basic-5.fixtures/a.php	/^class Bar {$/;"	c	language:PHP
Bar	.config/nvim/plugged/vim-php-namespace/tests/test-basic-6.fixtures/a.php	/^class Bar {$/;"	c	language:PHP
Bar	.config/nvim/plugged/vim-php-namespace/tests/test-basic-7.fixtures/a.php	/^interface Bar {$/;"	i	language:PHP
BarBaz	.config/nvim/plugged/vim-php-namespace/tests/test-basic-8.fixtures/a.php	/^class BarBaz {$/;"	c	language:PHP
Def	.config/nvim/plugged/vim-php-namespace/tests/test-basic-9.fixtures/a.php	/^    class Def {$/;"	c	language:PHP
Bar	.config/nvim/plugged/vim-php-namespace/tests/test-basic-9.fixtures/a.php	/^    class Bar {$/;"	c	language:PHP
Foo	.config/nvim/plugged/vim-php-namespace/tests/test-class-without-ns.fixtures/a.php	/^class Foo {$/;"	c	language:PHP
Bar	.config/nvim/plugged/vim-php-namespace/tests/test-classname-constant.fixtures/a.php	/^class Bar {$/;"	c	language:PHP
Bar	.config/nvim/plugged/vim-php-namespace/tests/test-comment-class.fixtures/a.php	/^\/*final*\/ class Bar {$/;"	c	language:PHP
bar	.config/nvim/plugged/vim-php-namespace/tests/test-function-1.fixtures/a.php	/^function bar() {$/;"	f	language:PHP
bar	.config/nvim/plugged/vim-php-namespace/tests/test-function-2.fixtures/a.php	/^function bar() {$/;"	f	language:PHP
bar	.config/nvim/plugged/vim-php-namespace/tests/test-function-3.fixtures/a.php	/^function bar() {$/;"	f	language:PHP
Bar	.config/nvim/plugged/vim-php-namespace/tests/test-inline-php-ns.fixtures/a.php	/^class Bar {$/;"	c	language:PHP
Bar	.config/nvim/plugged/vim-php-namespace/tests/test-sort-after-insert.fixtures/a.php	/^class Bar {$/;"	c	language:PHP
Bar	.config/nvim/plugged/vim-php-namespace/tests/test-traits-1.fixtures/a.php	/^trait Bar {$/;"	t	language:PHP
Base_Controller	.config/nvim/plugged/vim-php-namespace/tests/test-underscore.fixtures/a.php	/^class Base_Controller {$/;"	c	language:PHP
main	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#main p {$/;"	i	language:scss
redbox	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  .redbox {$/;"	c	language:scss
main	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#main {$/;"	i	language:scss
main	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#main {$/;"	i	language:scss
div	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  p, div {$/;"	t	language:scss
p	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  p, div {$/;"	t	language:scss
a	.config/nvim/plugged/scss-syntax.vim/example.scss	/^    a { font-weight: bold; }$/;"	t	language:scss
pre	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  pre { font-size: 3em; }$/;"	t	language:scss
a	.config/nvim/plugged/scss-syntax.vim/example.scss	/^a {$/;"	t	language:scss
main	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#main {$/;"	i	language:scss
main	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#main {$/;"	i	language:scss
a	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  a {$/;"	t	language:scss
main	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#main {$/;"	i	language:scss
main	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#main {$/;"	i	language:scss
funky	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.funky {$/;"	c	language:scss
funky	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.funky {$/;"	c	language:scss
body	.config/nvim/plugged/scss-syntax.vim/example.scss	/^body { color: black; }$/;"	t	language:scss
a	.config/nvim/plugged/scss-syntax.vim/example.scss	/^a { color: green; }$/;"	t	language:scss
version	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$version: "1.2.3";$/;"	v	language:scss
width	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$width: 5em;$/;"	v	language:scss
main	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#main {$/;"	i	language:scss
main	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#main {$/;"	i	language:scss
main	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#main {$/;"	i	language:scss
main	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#main {$/;"	i	language:scss
width	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  $width: 5em !global;$/;"	v	language:scss
sidebar	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#sidebar {$/;"	i	language:scss
sidebar	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#sidebar {$/;"	i	language:scss
firefox-message	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@mixin firefox-message($selector) {$/;"	m	language:scss
map	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$map: (key1: value1, key2: value2, key3: value3);$/;"	v	language:scss
p	.config/nvim/plugged/scss-syntax.vim/example.scss	/^p {$/;"	t	language:scss
width	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  $width: 1000px;$/;"	v	language:scss
p	.config/nvim/plugged/scss-syntax.vim/example.scss	/^p {$/;"	t	language:scss
font-size	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  $font-size: 12px;$/;"	v	language:scss
line-height	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  $line-height: 30px;$/;"	v	language:scss
p	.config/nvim/plugged/scss-syntax.vim/example.scss	/^p {$/;"	t	language:scss
p	.config/nvim/plugged/scss-syntax.vim/example.scss	/^p {$/;"	t	language:scss
p	.config/nvim/plugged/scss-syntax.vim/example.scss	/^p {$/;"	t	language:scss
0	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  color: rgba(255, 0, 0, 0.75) + rgba(0, 255, 0, 0.75);$/;"	t	language:scss
translucent-red	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$translucent-red: rgba(255, 0, 0, 0.5);$/;"	v	language:scss
0	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$translucent-red: rgba(255, 0, 0, 0.5);$/;"	t	language:scss
p	.config/nvim/plugged/scss-syntax.vim/example.scss	/^p {$/;"	t	language:scss
p	.config/nvim/plugged/scss-syntax.vim/example.scss	/^p {$/;"	t	language:scss
p	.config/nvim/plugged/scss-syntax.vim/example.scss	/^p {$/;"	t	language:scss
value	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$value: null;$/;"	v	language:scss
p	.config/nvim/plugged/scss-syntax.vim/example.scss	/^p {$/;"	t	language:scss
p	.config/nvim/plugged/scss-syntax.vim/example.scss	/^p {$/;"	t	language:scss
p	.config/nvim/plugged/scss-syntax.vim/example.scss	/^p {$/;"	t	language:scss
name	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$name: foo;$/;"	v	language:scss
attr	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$attr: border;$/;"	v	language:scss
p	.config/nvim/plugged/scss-syntax.vim/example.scss	/^p {$/;"	t	language:scss
font-size	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  $font-size: 12px;$/;"	v	language:scss
line-height	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  $line-height: 30px;$/;"	v	language:scss
selector	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  $selector: &;$/;"	v	language:scss
does-parent-exist	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@mixin does-parent-exist {$/;"	m	language:scss
a	.config/nvim/plugged/scss-syntax.vim/example.scss	/^    a {$/;"	t	language:scss
content	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$content: "First content";$/;"	v	language:scss
content	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$content: "Second content?" !default;$/;"	v	language:scss
new_content	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$new_content: "First time reference" !default;$/;"	v	language:scss
main	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#main {$/;"	i	language:scss
main	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#main {$/;"	i	language:scss
content	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$content: null;$/;"	v	language:scss
content	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$content: "Non-null content" !default;$/;"	v	language:scss
main	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#main {$/;"	i	language:scss
main	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#main {$/;"	i	language:scss
family	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$family: unquote("Droid+Sans");$/;"	v	language:scss
example	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.example {$/;"	c	language:scss
main	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#main {$/;"	i	language:scss
main	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#main {$/;"	i	language:scss
sidebar	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.sidebar {$/;"	c	language:scss
landscape	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  @media screen and (orientation: landscape) {$/;"	t	language:scss
sidebar	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  .sidebar {$/;"	c	language:scss
landscape	.config/nvim/plugged/scss-syntax.vim/example.scss	/^    @media (orientation: landscape) {$/;"	t	language:scss
media	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$media: screen;$/;"	v	language:scss
feature	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$feature: -webkit-min-device-pixel-ratio;$/;"	v	language:scss
value	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$value: 1.5;$/;"	v	language:scss
sidebar	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  .sidebar {$/;"	c	language:scss
error	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.error {$/;"	c	language:scss
seriousError	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.seriousError {$/;"	c	language:scss
error	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.error {$/;"	c	language:scss
seriousError	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.seriousError {$/;"	c	language:scss
hoverlink	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.hoverlink {$/;"	c	language:scss
hoverlink	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.hoverlink {$/;"	c	language:scss
error	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.error {$/;"	c	language:scss
attention	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.attention {$/;"	c	language:scss
seriousError	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.seriousError {$/;"	c	language:scss
error	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.error {$/;"	c	language:scss
seriousError	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.seriousError {$/;"	c	language:scss
criticalError	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.criticalError {$/;"	c	language:scss
fake-links	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#fake-links .link {$/;"	i	language:scss
a	.config/nvim/plugged/scss-syntax.vim/example.scss	/^a {$/;"	t	language:scss
admin	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#admin .tabbar a {$/;"	i	language:scss
demo	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#demo .overview .fakelink {$/;"	i	language:scss
admin	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#admin .tabbar a {$/;"	i	language:scss
admin	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#admin .overview .fakelink {$/;"	i	language:scss
context	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#context a%extreme {$/;"	i	language:scss
notice	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.notice {$/;"	c	language:scss
important	.config/nvim/plugged/scss-syntax.vim/example.scss	/^a.important {$/;"	c	language:scss
error	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  .error {$/;"	c	language:scss
seriousError	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  .seriousError {$/;"	c	language:scss
parent	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.parent {$/;"	c	language:scss
parent	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.parent {$/;"	c	language:scss
child1	.config/nvim/plugged/scss-syntax.vim/example.scss	/^    .child1 {}$/;"	c	language:scss
child2	.config/nvim/plugged/scss-syntax.vim/example.scss	/^    .child2 {}$/;"	c	language:scss
step-child	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  .step-child {}$/;"	c	language:scss
page	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  .page {$/;"	c	language:scss
media	.config/nvim/plugged/scss-syntax.vim/example.scss	/^    @at-root (without: media) {$/;"	t	language:scss
adjust-location	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@mixin adjust-location($x, $y) {$/;"	m	language:scss
x	.config/nvim/plugged/scss-syntax.vim/example.scss	/^    $x: 1px * $x;$/;"	v	language:scss
y	.config/nvim/plugged/scss-syntax.vim/example.scss	/^    $y: 1px * $y;$/;"	v	language:scss
adjust-location	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@mixin adjust-location($x, $y) {$/;"	m	language:scss
p	.config/nvim/plugged/scss-syntax.vim/example.scss	/^p {$/;"	t	language:scss
type	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$type: monster;$/;"	v	language:scss
p	.config/nvim/plugged/scss-syntax.vim/example.scss	/^p {$/;"	t	language:scss
salamander	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@each $animal in puma, sea-slug, egret, salamander {$/;"	t	language:scss
default	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@each $animal, $color, $cursor in (puma, black, default),$/;"	t	language:scss
black	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@each $animal, $color, $cursor in (puma, black, default),$/;"	t	language:scss
pointer	.config/nvim/plugged/scss-syntax.vim/example.scss	/^                                  (sea-slug, blue, pointer),$/;"	t	language:scss
blue	.config/nvim/plugged/scss-syntax.vim/example.scss	/^                                  (sea-slug, blue, pointer),$/;"	t	language:scss
move	.config/nvim/plugged/scss-syntax.vim/example.scss	/^                                  (egret, white, move) {$/;"	t	language:scss
white	.config/nvim/plugged/scss-syntax.vim/example.scss	/^                                  (egret, white, move) {$/;"	t	language:scss
i	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$i: 6;$/;"	v	language:scss
i	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  $i: $1 - 2;$/;"	v	language:scss
large-text	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@mixin large-text {$/;"	m	language:scss
clearfix	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@mixin clearfix {$/;"	m	language:scss
page-title	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.page-title {$/;"	c	language:scss
silly-links	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@mixin silly-links {$/;"	m	language:scss
a	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  a {$/;"	t	language:scss
compound	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@mixin compound {$/;"	m	language:scss
highlighted-background	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@mixin highlighted-background { background-color: #fc0; }$/;"	m	language:scss
header-text	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@mixin header-text { font-size: 20px; }$/;"	m	language:scss
sexy-border	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@mixin sexy-border($color, $width) {$/;"	m	language:scss
p	.config/nvim/plugged/scss-syntax.vim/example.scss	/^p { @include sexy-border(blue, 1in); }$/;"	t	language:scss
sexy-border	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@mixin sexy-border($color, $width: 1in) {$/;"	m	language:scss
1in	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@mixin sexy-border($color, $width: 1in) {$/;"	t	language:scss
p	.config/nvim/plugged/scss-syntax.vim/example.scss	/^p { @include sexy-border(blue); }$/;"	t	language:scss
h1	.config/nvim/plugged/scss-syntax.vim/example.scss	/^h1 { @include sexy-border(blue, 2in); }$/;"	t	language:scss
p	.config/nvim/plugged/scss-syntax.vim/example.scss	/^p { @include sexy-border($color: blue); }$/;"	t	language:scss
h1	.config/nvim/plugged/scss-syntax.vim/example.scss	/^h1 { @include sexy-border($color: blue, $width: 2in); }$/;"	t	language:scss
box-shadows	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@mixin box-shadows($shadows...) {$/;"	m	language:scss
shadows	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.shadows {$/;"	c	language:scss
666	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  @include box-shadow(0px 4px 5px #666, 2px 6px 10px #999);$/;"	i	language:scss
colors	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@mixin colors($text, $background, $border) {$/;"	m	language:scss
values	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$values: #ff0000, #00ff00, #0000ff;$/;"	v	language:scss
00ff00	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$values: #ff0000, #00ff00, #0000ff;$/;"	i	language:scss
primary	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.primary {$/;"	c	language:scss
value-map	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$value-map: (text: #00ff00, background: #0000ff, border: #ff0000);$/;"	v	language:scss
0000ff	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$value-map: (text: #00ff00, background: #0000ff, border: #ff0000);$/;"	i	language:scss
secondary	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.secondary {$/;"	c	language:scss
wrapped-stylish-mixin	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@mixin wrapped-stylish-mixin($args...) {$/;"	m	language:scss
stylish	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.stylish {$/;"	c	language:scss
00ff00	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  @include wrapped-stylish-mixin(#00ff00, $width: 100px);$/;"	i	language:scss
apply-to-ie6-only	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@mixin apply-to-ie6-only {$/;"	m	language:scss
logo	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  #logo {$/;"	i	language:scss
logo	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  #logo {$/;"	i	language:scss
color	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$color: white;$/;"	v	language:scss
colors	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@mixin colors($color: blue) {$/;"	m	language:scss
blue	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@mixin colors($color: blue) {$/;"	t	language:scss
colors	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.colors {$/;"	c	language:scss
sidebar	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#sidebar {$/;"	i	language:scss
sidebar	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#sidebar {$/;"	i	language:scss
sidebar-width	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  $sidebar-width: 300px;$/;"	v	language:scss
grid-width	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$grid-width: 40px;$/;"	v	language:scss
gutter-width	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$gutter-width: 10px;$/;"	v	language:scss
grid-width	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@function grid-width($n) {$/;"	f	language:scss
sidebar	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#sidebar { width: grid-width(5); }$/;"	i	language:scss
sidebar	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#sidebar { width: grid-width(5); }$/;"	i	language:scss
sidebar	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#sidebar { width: grid-width($n: 5); }$/;"	i	language:scss
sidebar	.config/nvim/plugged/scss-syntax.vim/example.scss	/^#sidebar { width: grid-width($n: 5); }$/;"	i	language:scss
foo	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.foo {$/;"	c	language:scss
input	.config/nvim/plugged/scss-syntax.vim/example.scss	/^input {$/;"	t	language:scss
a	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$a: $b + $c; \/\/ issue #4: variables should be displayed with the same color$/;"	v	language:scss
23	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@include text-shadow; \/\/ issue #23, @include content block$/;"	i	language:scss
app-header	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.app-header { \/\/ issue #31, functions with hyphens not properly highlighted$/;"	c	language:scss
31	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.app-header { \/\/ issue #31, functions with hyphens not properly highlighted$/;"	i	language:scss
20	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.breadcrumb:before { \/\/ issue #20, string escaping rendering incorrectly for "\\\\"$/;"	i	language:scss
14	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@import "icons\/*.png"; \/\/ issue #14, don't treat "\/*" as the start of a comment$/;"	i	language:scss
foo	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.foo { \/\/ issue #5, lines without {} colored incorrectly$/;"	c	language:scss
5	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.foo { \/\/ issue #5, lines without {} colored incorrectly$/;"	i	language:scss
funky	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.funky { \/\/ comments after nested properties should be recognized$/;"	c	language:scss
container	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.container { \/\/ issue #33, multiline comments are not recognized as comments$/;"	c	language:scss
33	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.container { \/\/ issue #33, multiline comments are not recognized as comments$/;"	i	language:scss
button	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.button { \/\/ issue #34, functions as params should be recognized as functions$/;"	c	language:scss
34	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.button { \/\/ issue #34, functions as params should be recognized as functions$/;"	i	language:scss
bottom	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  background-image: -webkit-linear-gradient(top, bottom, from(#933), to(#944));$/;"	t	language:scss
class	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.class { \/\/ issue #35 a) media block is not recognized$/;"	c	language:scss
a	.config/nvim/plugged/scss-syntax.vim/example.scss	/^    a {$/;"	t	language:scss
class	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.class { \/\/ issue #35 b) @extend & @include are not recognized inside media block$/;"	c	language:scss
a	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  a {$/;"	t	language:scss
foo	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.foo { \/\/ issue #35 d) the two &:nth-child are not highlighted in the same way$/;"	c	language:scss
gradient	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.gradient { \/\/ issue #36, params are not consistently highlighted$/;"	c	language:scss
36	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.gradient { \/\/ issue #36, params are not consistently highlighted$/;"	i	language:scss
444444	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  background-image: -webkit-linear-gradient(top, #444444, #999999);$/;"	i	language:scss
button	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.button { \/\/ issue #37, only "border" is highlighted in Vim 7.3$/;"	c	language:scss
37	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.button { \/\/ issue #37, only "border" is highlighted in Vim 7.3$/;"	i	language:scss
ding	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.ding { \/\/ issue #40, properties without space after them are not highlighted$/;"	c	language:scss
40	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.ding { \/\/ issue #40, properties without space after them are not highlighted$/;"	i	language:scss
rich	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.rich {$/;"	c	language:scss
a	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  $a: ('a', 'b');$/;"	v	language:scss
generate-fontfaces	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@mixin generate-fontfaces($ffs-info) {  \/\/ issue #47 b) "@font-face" is not highlighted$/;"	m	language:scss
a	.config/nvim/plugged/scss-syntax.vim/example.scss	/^    $a: ('a', 'b');$/;"	v	language:scss
grid-width	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@function grid-width($n) {  \/\/ issue #48: various elements are not highlighted inside @function (plus this comment is not recognized as comment)$/;"	f	language:scss
a	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  $a: ('a', 'b');$/;"	v	language:scss
grid-width	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@function grid-width($n) {  \/\/ issue #49: @return and @debug are not highlighted if nested$/;"	f	language:scss
setup-animation	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@mixin setup-animation($name: null, $count: null, $duration: null, $delay: null,$/;"	m	language:scss
function	.config/nvim/plugged/scss-syntax.vim/example.scss	/^                       $function: null,$/;"	v	language:scss
direction	.config/nvim/plugged/scss-syntax.vim/example.scss	/^                       $direction: null, $fill: null, $visibility: null) {$/;"	v	language:scss
null	.config/nvim/plugged/scss-syntax.vim/example.scss	/^                       $direction: null, $fill: null, $visibility: null) {$/;"	t	language:scss
count	.config/nvim/plugged/scss-syntax.vim/example.scss	/^                         $count:  animation-value($part, "count", null));$/;"	v	language:scss
animation-value	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@function animation-value($n) {$/;"	f	language:scss
filter	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@mixin filter($filter-type, $filter-amount) {$/;"	m	language:scss
x	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$x: fnA(fnB("b"), "a");$/;"	v	language:scss
x	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$x: fnA(fnB('b'), 'a');$/;"	v	language:scss
keyframe-info	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$keyframe-info: map-merge($keyframe-info, ($/;"	v	language:scss
keyframe-info	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$keyframe-info: map-merge($keyframe-info, ('offset-x': $x, 'offset-y': $y));$/;"	v	language:scss
m	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$m: ($/;"	v	language:scss
a	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$a: true;$/;"	v	language:scss
b	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$b: false;$/;"	v	language:scss
c	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$c: (key1: true, key2: false, key3: null);$/;"	v	language:scss
html	.config/nvim/plugged/scss-syntax.vim/example.scss	/^html {$/;"	t	language:scss
apply-page-contacts	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@mixin apply-page-contacts($ns, $colors) {$/;"	m	language:scss
padding-horiz	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  $padding-horiz: 0.4rem;$/;"	v	language:scss
breakpoints	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$breakpoints: ($/;"	v	language:scss
list	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$list: "1",  \/* comment not highlighted *\/$/;"	v	language:scss
a	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$a: ($/;"	v	language:scss
_setup-panel-title	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@mixin _setup-panel-title( \/\/ comment$/;"	m	language:scss
colors	.config/nvim/plugged/scss-syntax.vim/example.scss	/^  $colors$/;"	v	language:scss
m	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@mixin m() {$/;"	m	language:scss
65	.config/nvim/plugged/scss-syntax.vim/example.scss	/^\/\/ issue #65, cssBoxProp & cssDimensionProp are not recognized as mixin params$/;"	i	language:scss
container	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.container {$/;"	c	language:scss
m	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$m: (key: fn());$/;"	v	language:scss
m	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$m: fn((key: value));$/;"	v	language:scss
m	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$m: (key: "string");$/;"	v	language:scss
m	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$m: (key: "string with spaces");$/;"	v	language:scss
fn	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@function fn($a, $b, $c, $d) {$/;"	f	language:scss
a	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$a: oo;$/;"	v	language:scss
b	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$b: fn(f#{$a});$/;"	v	language:scss
a	.config/nvim/plugged/scss-syntax.vim/example.scss	/^a {$/;"	t	language:scss
class	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.class {$/;"	c	language:scss
a	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$a: fn_with_underscores();$/;"	v	language:scss
stringConcatCompassStyle	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@function stringConcatCompassStyle($start,$last) {$/;"	f	language:scss
stringConcatCompassStyle	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@function stringConcatCompassStyle($start,$last)$/;"	f	language:scss
fn	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@function fn($x) {$/;"	f	language:scss
foo	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.foo {$/;"	c	language:scss
true	.config/nvim/plugged/scss-syntax.vim/example.scss	/^    @include myMixin(20, null, true, false);$/;"	t	language:scss
scope	.config/nvim/plugged/scss-syntax.vim/example.scss	/^$scope: 2;$/;"	v	language:scss
foo	.config/nvim/plugged/scss-syntax.vim/example.scss	/^.foo {$/;"	c	language:scss
test	.config/nvim/plugged/scss-syntax.vim/example.scss	/^@function test ($a, $b: $a\/2) {$/;"	f	language:scss
a	.config/nvim/plugged/scss-syntax.vim/example.scss	/^a { color: red }$/;"	t	language:scss
a	.config/nvim/plugged/scss-syntax.vim/example.scss	/^a { color: red;}$/;"	t	language:scss
div	.config/nvim/plugged/scss-syntax.vim/example.scss	/^div {$/;"	t	language:scss
div	.config/nvim/plugged/scss-syntax.vim/example.scss	/^div {$/;"	t	language:scss
div	.config/nvim/plugged/scss-syntax.vim/example.scss	/^div {$/;"	t	language:scss
foo	.config/nvim/plugged/pdv/tests/test001_attributes.php	/^    protected $foo;$/;"	v	language:PHP
bar	.config/nvim/plugged/pdv/tests/test001_attributes.php	/^    public $bar = array( 1, 2, 3 );$/;"	v	language:PHP
bar	.config/nvim/plugged/pdv/tests/test001_attributes.php	/^    public $bar = array( 1, 2, 3 );$/;"	v	language:PHP
lala	.config/nvim/plugged/pdv/tests/test001_attributes.php	/^    public static $lala = 23;$/;"	v	language:PHP
lala	.config/nvim/plugged/pdv/tests/test001_attributes.php	/^    public static $lala = 23;$/;"	v	language:PHP
TestClass	.config/nvim/plugged/pdv/tests/test002_functions.php	/^abstract class TestClass$/;"	c	language:PHP
simplesFunc	.config/nvim/plugged/pdv/tests/test002_functions.php	/^    public function simplesFunc () {$/;"	f	language:PHP
whiteSpaceNoParamsFunc	.config/nvim/plugged/pdv/tests/test002_functions.php	/^    public function whiteSpaceNoParamsFunc(  )$/;"	f	language:PHP
simpleParamFunc	.config/nvim/plugged/pdv/tests/test002_functions.php	/^public function simpleParamFunc( $parameter )$/;"	f	language:PHP
paramFuncIntDefault	.config/nvim/plugged/pdv/tests/test002_functions.php	/^    public function paramFuncIntDefault( $parameter = 23 ) {$/;"	f	language:PHP
parameter	.config/nvim/plugged/pdv/tests/test002_functions.php	/^    public function paramFuncIntDefault( $parameter = 23 ) {$/;"	v	language:PHP
multiParamsFuncFloatDefault	.config/nvim/plugged/pdv/tests/test002_functions.php	/^  public function multiParamsFuncFloatDefault( $someParam = 42.5, $anotherParam )$/;"	f	language:PHP
someParam	.config/nvim/plugged/pdv/tests/test002_functions.php	/^  public function multiParamsFuncFloatDefault( $someParam = 42.5, $anotherParam )$/;"	v	language:PHP
typeHintParamsFunc	.config/nvim/plugged/pdv/tests/test002_functions.php	/^public function typeHintParamsFunc(array $foo, SomeClass $bar) {$/;"	f	language:PHP
complexDefaultFunc	.config/nvim/plugged/pdv/tests/test002_functions.php	/^    public function complexDefaultFunc( array $foo = array( 1, 2, 3 ) ) {$/;"	f	language:PHP
foo	.config/nvim/plugged/pdv/tests/test002_functions.php	/^    public function complexDefaultFunc( array $foo = array( 1, 2, 3 ) ) {$/;"	v	language:PHP
multiLineParamListFunc	.config/nvim/plugged/pdv/tests/test002_functions.php	/^    public function multiLineParamListFunc($/;"	f	language:PHP
firstParam	.config/nvim/plugged/pdv/tests/test002_functions.php	/^        FirstParam $firstParam = null,$/;"	v	language:PHP
thirdParam	.config/nvim/plugged/pdv/tests/test002_functions.php	/^        $thirdParam = array( "foo", array( "bar" ) ),$/;"	v	language:PHP
fourthParam	.config/nvim/plugged/pdv/tests/test002_functions.php	/^        $fourthParam = 42.23$/;"	v	language:PHP
protectedFunc	.config/nvim/plugged/pdv/tests/test002_functions.php	/^    protected function protectedFunc( $foo = null, array $bar )$/;"	f	language:PHP
foo	.config/nvim/plugged/pdv/tests/test002_functions.php	/^    protected function protectedFunc( $foo = null, array $bar )$/;"	v	language:PHP
privateStaticFunc	.config/nvim/plugged/pdv/tests/test002_functions.php	/^    private static function privateStaticFunc( SomeClass $foo = null )$/;"	f	language:PHP
foo	.config/nvim/plugged/pdv/tests/test002_functions.php	/^    private static function privateStaticFunc( SomeClass $foo = null )$/;"	v	language:PHP
abstractPublicFunc	.config/nvim/plugged/pdv/tests/test002_functions.php	/^    abstract public function abstractPublicFunc();$/;"	f	language:PHP
protectedAbstractFunc	.config/nvim/plugged/pdv/tests/test002_functions.php	/^    protected abstract function protectedAbstractFunc($foo="bar");$/;"	f	language:PHP
SimplestClass	.config/nvim/plugged/pdv/tests/test003_classes.php	/^class SimplestClass {$/;"	c	language:PHP
DerivedClass	.config/nvim/plugged/pdv/tests/test003_classes.php	/^class DerivedClass extends BaseClass$/;"	c	language:PHP
ImplementingClass	.config/nvim/plugged/pdv/tests/test003_classes.php	/^class ImplementingClass implements InterfaceA, InterfaceB$/;"	c	language:PHP
AbstractClass	.config/nvim/plugged/pdv/tests/test003_classes.php	/^    abstract class AbstractClass {$/;"	c	language:PHP
FinalClass	.config/nvim/plugged/pdv/tests/test003_classes.php	/^final class FinalClass$/;"	c	language:PHP
AllTogether	.config/nvim/plugged/pdv/tests/test003_classes.php	/^abstract class AllTogether extends ABaseClass implements InterfaceA {$/;"	c	language:PHP
FancyFormat	.config/nvim/plugged/pdv/tests/test003_classes.php	/^  class             FancyFormat      extends FancyWhitespace            {$/;"	c	language:PHP
foo	.config/nvim/plugged/pdv/tests/test004_attributes_snipmate.php	/^    protected $foo;$/;"	v	language:PHP
bar	.config/nvim/plugged/pdv/tests/test004_attributes_snipmate.php	/^    public $bar = array( 1, 2, 3 );$/;"	v	language:PHP
bar	.config/nvim/plugged/pdv/tests/test004_attributes_snipmate.php	/^    public $bar = array( 1, 2, 3 );$/;"	v	language:PHP
lala	.config/nvim/plugged/pdv/tests/test004_attributes_snipmate.php	/^    public static $lala = 23;$/;"	v	language:PHP
lala	.config/nvim/plugged/pdv/tests/test004_attributes_snipmate.php	/^    public static $lala = 23;$/;"	v	language:PHP
TestClass	.config/nvim/plugged/pdv/tests/test005_functions_snipmate.php	/^abstract class TestClass$/;"	c	language:PHP
simplesFunc	.config/nvim/plugged/pdv/tests/test005_functions_snipmate.php	/^    public function simplesFunc () {$/;"	f	language:PHP
whiteSpaceNoParamsFunc	.config/nvim/plugged/pdv/tests/test005_functions_snipmate.php	/^    public function whiteSpaceNoParamsFunc(  )$/;"	f	language:PHP
simpleParamFunc	.config/nvim/plugged/pdv/tests/test005_functions_snipmate.php	/^public function simpleParamFunc( $parameter )$/;"	f	language:PHP
paramFuncIntDefault	.config/nvim/plugged/pdv/tests/test005_functions_snipmate.php	/^    public function paramFuncIntDefault( $parameter = 23 ) {$/;"	f	language:PHP
parameter	.config/nvim/plugged/pdv/tests/test005_functions_snipmate.php	/^    public function paramFuncIntDefault( $parameter = 23 ) {$/;"	v	language:PHP
multiParamsFuncFloatDefault	.config/nvim/plugged/pdv/tests/test005_functions_snipmate.php	/^  public function multiParamsFuncFloatDefault( $someParam = 42.5, $anotherParam )$/;"	f	language:PHP
someParam	.config/nvim/plugged/pdv/tests/test005_functions_snipmate.php	/^  public function multiParamsFuncFloatDefault( $someParam = 42.5, $anotherParam )$/;"	v	language:PHP
typeHintParamsFunc	.config/nvim/plugged/pdv/tests/test005_functions_snipmate.php	/^public function typeHintParamsFunc(array $foo, SomeClass $bar) {$/;"	f	language:PHP
complexDefaultFunc	.config/nvim/plugged/pdv/tests/test005_functions_snipmate.php	/^    public function complexDefaultFunc( array $foo = array( 1, 2, 3 ) ) {$/;"	f	language:PHP
foo	.config/nvim/plugged/pdv/tests/test005_functions_snipmate.php	/^    public function complexDefaultFunc( array $foo = array( 1, 2, 3 ) ) {$/;"	v	language:PHP
multiLineParamListFunc	.config/nvim/plugged/pdv/tests/test005_functions_snipmate.php	/^    public function multiLineParamListFunc($/;"	f	language:PHP
firstParam	.config/nvim/plugged/pdv/tests/test005_functions_snipmate.php	/^        FirstParam $firstParam = null,$/;"	v	language:PHP
thirdParam	.config/nvim/plugged/pdv/tests/test005_functions_snipmate.php	/^        $thirdParam = array( "foo", array( "bar" ) ),$/;"	v	language:PHP
fourthParam	.config/nvim/plugged/pdv/tests/test005_functions_snipmate.php	/^        $fourthParam = 42.23$/;"	v	language:PHP
protectedFunc	.config/nvim/plugged/pdv/tests/test005_functions_snipmate.php	/^    protected function protectedFunc( $foo = null, array $bar )$/;"	f	language:PHP
foo	.config/nvim/plugged/pdv/tests/test005_functions_snipmate.php	/^    protected function protectedFunc( $foo = null, array $bar )$/;"	v	language:PHP
privateStaticFunc	.config/nvim/plugged/pdv/tests/test005_functions_snipmate.php	/^    private static function privateStaticFunc( SomeClass $foo = null )$/;"	f	language:PHP
foo	.config/nvim/plugged/pdv/tests/test005_functions_snipmate.php	/^    private static function privateStaticFunc( SomeClass $foo = null )$/;"	v	language:PHP
abstractPublicFunc	.config/nvim/plugged/pdv/tests/test005_functions_snipmate.php	/^    abstract public function abstractPublicFunc();$/;"	f	language:PHP
protectedAbstractFunc	.config/nvim/plugged/pdv/tests/test005_functions_snipmate.php	/^    protected abstract function protectedAbstractFunc($foo="bar");$/;"	f	language:PHP
SimplestInterface	.config/nvim/plugged/pdv/tests/test006_interfaces.php	/^interface SimplestInterface {$/;"	i	language:PHP
DerivedInterface	.config/nvim/plugged/pdv/tests/test006_interfaces.php	/^interface DerivedInterface extends BaseInterface$/;"	i	language:PHP
DoublyDerivedInterface	.config/nvim/plugged/pdv/tests/test006_interfaces.php	/^interface DoublyDerivedInterface extends BaseInterface1, BaseInterface2$/;"	i	language:PHP
IndentedInterface	.config/nvim/plugged/pdv/tests/test006_interfaces.php	/^	interface IndentedInterface {$/;"	i	language:PHP
SpaceIndentedInterface	.config/nvim/plugged/pdv/tests/test006_interfaces.php	/^  interface SpaceIndentedInterface {$/;"	i	language:PHP
SpacedInterface	.config/nvim/plugged/pdv/tests/test006_interfaces.php	/^  interface     SpacedInterface		extends    BaseInterface1   , 	BaseInterface2$/;"	i	language:PHP
Test	.config/nvim/plugged/pdv/tests/test007_traits.php	/^trait Test1 {$/;"	t	language:PHP
Test	.config/nvim/plugged/pdv/tests/test007_traits.php	/^	trait Test2$/;"	t	language:PHP
Test	.config/nvim/plugged/pdv/tests/test007_traits.php	/^  trait Test3 {$/;"	t	language:PHP
Bar	.config/nvim/plugged/pdv/tests/test008_consts.php	/^class Bar {$/;"	c	language:PHP
Aaa	.config/nvim/plugged/vim-php-cs-fixer/tests/fixtures/misc/class_definition,no_trailing_whitespace.php	/^class Aaa implements$/;"	c	language:PHP
a	.config/nvim/plugged/vim-php-cs-fixer/tests/fixtures/misc/no_closing_tag,full_opening_tag.php	/^$a = 1;$/;"	v	language:PHP
first	.config/nvim/plugged/vim-php-cs-fixer/tests/fixtures/misc/phpdoc_to_comment,phpdoc_var_without_name.php	/^$first = true;\/\/ needed because by default first docblock is never fixed.$/;"	v	language:PHP
loader	.config/nvim/plugged/vim-php-cs-fixer/tests/fixtures/misc/phpdoc_to_comment,phpdoc_var_without_name.php	/^$loader = require_once __DIR__.'\/..\/app\/autoload.php';$/;"	v	language:PHP
Foo	.config/nvim/plugged/vim-php-cs-fixer/tests/fixtures/misc/phpdocs.test.php	/^class Foo {$/;"	c	language:PHP
bar	.config/nvim/plugged/vim-php-cs-fixer/tests/fixtures/misc/phpdocs.test.php	/^    public $bar;$/;"	v	language:PHP
baz	.config/nvim/plugged/vim-php-cs-fixer/tests/fixtures/misc/phpdocs.test.php	/^    public $baz;$/;"	v	language:PHP
Hoge	.config/nvim/plugged/vim-php-cs-fixer/tests/fixtures/misc/phpdocs.test.php	/^    public function Hoge ($fo, $bar, array $baz, $qux) {}$/;"	f	language:PHP
Test	.config/nvim/plugged/vim-php-cs-fixer/tests/fixtures/misc/simplified_null_return,no_useless_return,no_whitespace_in_blank_line,blank_line_before_return,no_extra_consecutive_blank_lines.php	/^class Test {$/;"	c	language:PHP
a	.config/nvim/plugged/vim-php-cs-fixer/tests/fixtures/misc/simplified_null_return,no_useless_return,no_whitespace_in_blank_line,blank_line_before_return,no_extra_consecutive_blank_lines.php	/^    private static function a($a) {$/;"	f	language:PHP
b	.config/nvim/plugged/vim-php-cs-fixer/tests/fixtures/misc/simplified_null_return,no_useless_return,no_whitespace_in_blank_line,blank_line_before_return,no_extra_consecutive_blank_lines.php	/^    private static function b($a) {$/;"	f	language:PHP
Aaa	.config/nvim/plugged/vim-php-cs-fixer/tests/results/misc/class_definition,no_trailing_whitespace.php	/^class Aaa implements$/;"	c	language:PHP
a	.config/nvim/plugged/vim-php-cs-fixer/tests/results/misc/no_closing_tag,full_opening_tag.php	/^$a = 1;$/;"	v	language:PHP
first	.config/nvim/plugged/vim-php-cs-fixer/tests/results/misc/phpdoc_to_comment,phpdoc_var_without_name.php	/^$first = true;\/\/ needed because by default first docblock is never fixed.$/;"	v	language:PHP
loader	.config/nvim/plugged/vim-php-cs-fixer/tests/results/misc/phpdoc_to_comment,phpdoc_var_without_name.php	/^$loader = require_once __DIR__.'\/..\/app\/autoload.php';$/;"	v	language:PHP
Foo	.config/nvim/plugged/vim-php-cs-fixer/tests/results/misc/phpdocs.test.php	/^class Foo$/;"	c	language:PHP
bar	.config/nvim/plugged/vim-php-cs-fixer/tests/results/misc/phpdocs.test.php	/^    public $bar;$/;"	v	language:PHP
baz	.config/nvim/plugged/vim-php-cs-fixer/tests/results/misc/phpdocs.test.php	/^    public $baz;$/;"	v	language:PHP
Hoge	.config/nvim/plugged/vim-php-cs-fixer/tests/results/misc/phpdocs.test.php	/^    public function Hoge($fo, $bar, array $baz, $qux)$/;"	f	language:PHP
Test	.config/nvim/plugged/vim-php-cs-fixer/tests/results/misc/simplified_null_return,no_useless_return,no_whitespace_in_blank_line,blank_line_before_return,no_extra_consecutive_blank_lines.php	/^class Test$/;"	c	language:PHP
a	.config/nvim/plugged/vim-php-cs-fixer/tests/results/misc/simplified_null_return,no_useless_return,no_whitespace_in_blank_line,blank_line_before_return,no_extra_consecutive_blank_lines.php	/^    private static function a($a)$/;"	f	language:PHP
b	.config/nvim/plugged/vim-php-cs-fixer/tests/results/misc/simplified_null_return,no_useless_return,no_whitespace_in_blank_line,blank_line_before_return,no_extra_consecutive_blank_lines.php	/^    private static function b($a)$/;"	f	language:PHP
blocks	.config/nvim/plugged/php.vim/scripts/update-vim-syntax.php	/^$blocks = array($/;"	v	language:PHP
configuration	.config/nvim/plugged/php.vim/scripts/update-vim-syntax.php	/^$configuration = parse_ini_file($/;"	v	language:PHP
process_sections	.config/nvim/plugged/php.vim/scripts/update-vim-syntax.php	/^    \/* $process_sections = *\/ true$/;"	v	language:PHP
extensions	.config/nvim/plugged/php.vim/scripts/update-vim-syntax.php	/^$extensions = array();$/;"	v	language:PHP
extensionName	.config/nvim/plugged/php.vim/scripts/update-vim-syntax.php	/^foreach ($configuration['extensions'] as $extensionName => $isEnabled) {$/;"	v	language:PHP
reflect	.config/nvim/plugged/php.vim/scripts/update-vim-syntax.php	/^        $reflect = new ReflectionExtension($extensionName);$/;"	v	language:PHP
options	.config/nvim/plugged/php.vim/scripts/update-vim-syntax.php	/^        $options = array($/;"	v	language:PHP
glue	.config/nvim/plugged/php.vim/scripts/update-vim-syntax.php	/^        \/* $glue = *\/ '", "',$/;"	v	language:PHP
ifExtensionEnabled	.config/nvim/plugged/php.vim/scripts/update-vim-syntax.php	/^$ifExtensionEnabled = function ($extensionName) {$/;"	v	language:PHP
glue	.config/nvim/plugged/php.vim/scripts/update-vim-syntax.php	/^        implode(\/* $glue = *\/ ' ', $extension['constants'])$/;"	v	language:PHP
glue	.config/nvim/plugged/php.vim/scripts/update-vim-syntax.php	/^            implode(\/* $glue = *\/ ' ', $extension['functions'])$/;"	v	language:PHP
glue	.config/nvim/plugged/php.vim/scripts/update-vim-syntax.php	/^            implode(\/* $glue = *\/ ' ', $extension['classes'])$/;"	v	language:PHP
template	.config/nvim/plugged/php.vim/scripts/update-vim-syntax.php	/^$template = file_get_contents('\/var\/php\/syntax\/php.vim');$/;"	v	language:PHP
template	.config/nvim/plugged/php.vim/scripts/update-vim-syntax.php	/^$template = preg_replace($/;"	v	language:PHP
glue	.config/nvim/plugged/php.vim/scripts/update-vim-syntax.php	/^            \/* $glue = *\/ '|',$/;"	v	language:PHP
blockName	.config/nvim/plugged/php.vim/scripts/update-vim-syntax.php	/^foreach ($blocks as $blockName => $blockLines) {$/;"	v	language:PHP
template	.config/nvim/plugged/php.vim/scripts/update-vim-syntax.php	/^    $template = str_ireplace($/;"	v	language:PHP
template	.config/nvim/plugged/php.vim/scripts/update-vim-syntax.php	/^$template = preg_replace_callback($/;"	v	language:PHP
copy	.config/nvim/plugged/php.vim/scripts/update-vim-syntax.php	/^        $copy = preg_quote($groups['copy'], \/* $delimiter = *\/ '\/');$/;"	v	language:PHP
processors	.config/nvim/plugged/php.vim/scripts/update-vim-syntax.php	/^        $processors = array_filter(array_map('trim', preg_split('{[;, ]+}', $groups['processors'])));$/;"	v	language:PHP
script	.config/nvim/plugged/php.vim/scripts/update-vim-syntax.php	/^        $script = $captures['script'];$/;"	v	language:PHP
script	.config/nvim/plugged/php.vim/scripts/update-vim-syntax.php	/^                $script = preg_replace('{\\\\\\\\@\\d+}', '\\@', $script);$/;"	v	language:PHP
ClassNameExVisitor	.vim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^class ClassNameExVisitor extends NodeVisitorAbstract$/;"	c	language:PHP
namespace	.vim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^    public $namespace;$/;"	v	language:PHP
imports	.vim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^    public $imports = [];$/;"	v	language:PHP
imports	.vim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^    public $imports = [];$/;"	v	language:PHP
name	.vim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^    public $name;$/;"	v	language:PHP
start_line	.vim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^    public $start_line;$/;"	v	language:PHP
end_line	.vim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^    public $end_line;$/;"	v	language:PHP
enterNode	.vim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^    public function enterNode(Node $node)$/;"	f	language:PHP
namespace	.vim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^            $this->namespace = (string)$node->name;$/;"	v	language:PHP
prefix	.vim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^            $prefix = (string)$node->prefix;$/;"	v	language:PHP
alias	.vim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^                $alias = $use->alias;$/;"	v	language:PHP
name	.vim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^                    $name = $prefix."\\\\".(string)$use->name;$/;"	v	language:PHP
alias	.vim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^                $alias = $use->alias;$/;"	v	language:PHP
alias	.vim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^                    $alias = end($use->name->parts);$/;"	v	language:PHP
name	.vim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^            $this->name = $node->name;$/;"	v	language:PHP
start_line	.vim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^            $this->start_line = $node->getLine();$/;"	v	language:PHP
end_line	.vim/plugged/phpcd.vim/php/ClassNameExVisitor.php	/^            $this->end_line = $node->getAttribute('endLine');$/;"	v	language:PHP
ClassNameVisitor	.vim/plugged/phpcd.vim/php/ClassNameVisitor.php	/^class ClassNameVisitor extends NodeVisitorAbstract$/;"	c	language:PHP
name	.vim/plugged/phpcd.vim/php/ClassNameVisitor.php	/^    public $name;$/;"	v	language:PHP
leaveNode	.vim/plugged/phpcd.vim/php/ClassNameVisitor.php	/^    public function leaveNode(Node $node)$/;"	f	language:PHP
class	.vim/plugged/phpcd.vim/php/ClassNameVisitor.php	/^            $this->class = (string)$node->namespacedName;$/;"	v	language:PHP
Factory	.vim/plugged/phpcd.vim/php/Matcher/Factory.php	/^class Factory$/;"	c	language:PHP
make	.vim/plugged/phpcd.vim/php/Matcher/Factory.php	/^    public static function make(string $name)$/;"	f	language:PHP
FuzzyMatcher	.vim/plugged/phpcd.vim/php/Matcher/FuzzyMatcher.php	/^class FuzzyMatcher implements Matcher$/;"	c	language:PHP
match	.vim/plugged/phpcd.vim/php/Matcher/FuzzyMatcher.php	/^    public function match($pattern, $subject)$/;"	f	language:PHP
chars	.vim/plugged/phpcd.vim/php/Matcher/FuzzyMatcher.php	/^        $chars = str_split($pattern);$/;"	v	language:PHP
parts	.vim/plugged/phpcd.vim/php/Matcher/FuzzyMatcher.php	/^        $parts = ['\/.*'];$/;"	v	language:PHP
pattern	.vim/plugged/phpcd.vim/php/Matcher/FuzzyMatcher.php	/^        $pattern = implode($parts);$/;"	v	language:PHP
Matcher	.vim/plugged/phpcd.vim/php/Matcher/Matcher.php	/^interface Matcher$/;"	i	language:PHP
match	.vim/plugged/phpcd.vim/php/Matcher/Matcher.php	/^    function match($pattern, $target);$/;"	f	language:PHP
PrefixMatcher	.vim/plugged/phpcd.vim/php/Matcher/PrefixMatcher.php	/^class PrefixMatcher implements Matcher$/;"	c	language:PHP
match	.vim/plugged/phpcd.vim/php/Matcher/PrefixMatcher.php	/^    public function match($pattern, $target)$/;"	f	language:PHP
PHPCD	.vim/plugged/phpcd.vim/php/PHPCD.php	/^class PHPCD implements RpcHandler$/;"	c	language:PHP
disable_modifier	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private $disable_modifier;$/;"	v	language:PHP
matcher	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private $matcher;$/;"	v	language:PHP
logger	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private $logger;$/;"	v	language:PHP
server	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private $server;$/;"	v	language:PHP
root	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private $root;$/;"	v	language:PHP
modifier_symbols	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private $modifier_symbols = [$/;"	v	language:PHP
modifier_symbols	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private $modifier_symbols = [$/;"	v	language:PHP
primitive_types	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private $primitive_types = [$/;"	v	language:PHP
primitive_types	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private $primitive_types = [$/;"	v	language:PHP
__construct	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    public function __construct($root, Logger $logger, $disable_modifier = 0)$/;"	f	language:PHP
disable_modifier	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    public function __construct($root, Logger $logger, $disable_modifier = 0)$/;"	v	language:PHP
logger	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $this->logger = $logger;$/;"	v	language:PHP
root	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $this->root = $root;$/;"	v	language:PHP
disable_modifier	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $this->disable_modifier = $disable_modifier;$/;"	v	language:PHP
matcher	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $this->matcher = Matcher\\Factory::make('prefix');$/;"	v	language:PHP
setServer	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    public function setServer(RpcServer $server)$/;"	f	language:PHP
server	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $this->server = $server;$/;"	v	language:PHP
setMatchType	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    public function setMatchType($type)$/;"	f	language:PHP
matcher	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $this->matcher = Matcher\\Factory::make($type);$/;"	v	language:PHP
translateStaticMode	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function translateStaticMode($mode)$/;"	f	language:PHP
map	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $map = [$/;"	v	language:PHP
info	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    public function info($class_name, $pattern, $static_mode, $public_only, $path)$/;"	f	language:PHP
static_mode	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $static_mode = $this->translateStaticMode($static_mode);$/;"	v	language:PHP
method	.vim/plugged/phpcd.vim/php/PHPCD.php	/^     * Fetch function or class method's source file path$/;"	c	language:PHP
or	.vim/plugged/phpcd.vim/php/PHPCD.php	/^     * Fetch function or class method's source file path$/;"	f	language:PHP
name	.vim/plugged/phpcd.vim/php/PHPCD.php	/^     * @param string $class_name class name$/;"	c	language:PHP
name	.vim/plugged/phpcd.vim/php/PHPCD.php	/^     * @param string $method_name method or function name$/;"	f	language:PHP
location	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    public function location($class_name, $method_name, $path)$/;"	f	language:PHP
reflection	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $reflection = $this->reflectClass($class_name, $path);$/;"	v	language:PHP
reflection	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                    $reflection = $reflection->getMethod($method_name);$/;"	v	language:PHP
line	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                    $line = $this->getPropertyDefLine($reflection, $method_name);$/;"	v	language:PHP
reflection	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $reflection = $this->reflectFunction($method_name, $path);$/;"	v	language:PHP
getPropertyDefLine	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getPropertyDefLine($classReflection, $property)$/;"	f	language:PHP
class	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $class = new \\SplFileObject($classReflection->getFileName());$/;"	v	language:PHP
pattern	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $pattern = '\/(private|protected|public|var)\\s\\$' . $property . '\/x';$/;"	v	language:PHP
line	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        foreach ($class as $line => $content) {$/;"	v	language:PHP
getConstPath	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getConstPath($const_name, $reflection)$/;"	f	language:PHP
origin	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $origin = $path = $reflection->getFileName();$/;"	v	language:PHP
origin_reflection	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $origin_reflection = $reflection;$/;"	v	language:PHP
path	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $path = $reflection->getFileName();$/;"	v	language:PHP
interfaces	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $interfaces = $origin_reflection->getInterfaces();$/;"	v	language:PHP
path	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                    $path = $interface->getFileName();$/;"	v	language:PHP
method	.vim/plugged/phpcd.vim/php/PHPCD.php	/^     * Fetch function, class method or class attribute's docblock$/;"	c	language:PHP
set	.vim/plugged/phpcd.vim/php/PHPCD.php	/^     * @param string $class_name for function set this args to empty$/;"	f	language:PHP
doc	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function doc($class_name, $name, $is_method = true, $path = null)$/;"	f	language:PHP
is_method	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function doc($class_name, $name, $is_method = true, $path = null)$/;"	v	language:PHP
docFunction	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function docFunction($name, $path)$/;"	f	language:PHP
nsuse	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $nsuse = $this->nsuse($path);$/;"	v	language:PHP
_name	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $_name = $nsuse['alias'][$name];$/;"	v	language:PHP
_name	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $_name = $nsuse['namespace'].'\\\\'.$name;$/;"	v	language:PHP
name	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $name = $_name;$/;"	v	language:PHP
reflection	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $reflection = $this->reflectFunction($name, $path);$/;"	v	language:PHP
doc	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $doc = $reflection->getDocComment();$/;"	v	language:PHP
path	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $path = $reflection->getFileName();$/;"	v	language:PHP
docClass	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function docClass($class_name, $name, $is_method, $path)$/;"	f	language:PHP
reflection_class	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $reflection_class = $this->reflectClass($class_name, $path);$/;"	v	language:PHP
reflection	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $reflection = null;$/;"	v	language:PHP
reflection	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $reflection = $reflection_class->getMethod($name);$/;"	v	language:PHP
methods	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $methods = $this->getPseudoMethods($reflection_class, $name);$/;"	v	language:PHP
method	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $method = $methods[$name];$/;"	v	language:PHP
reflection	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $reflection = $reflection_class->getProperty($name);$/;"	v	language:PHP
properties	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $properties = $this->getPseudoProperties($reflection_class, $name);$/;"	v	language:PHP
property	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $property = $properties[$name];$/;"	v	language:PHP
doc	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $doc = $reflection->getDocComment();$/;"	v	language:PHP
reflection	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $reflection = $this->getReflectionFromInheritDoc($reflection_class, $name);$/;"	v	language:PHP
doc	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $doc = $reflection->getDocComment();$/;"	v	language:PHP
path	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $path = $reflection_class->getFileName();$/;"	v	language:PHP
path	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $path = $reflection->getDeclaringClass()->getFileName();$/;"	v	language:PHP
getReflectionFromInheritDoc	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getReflectionFromInheritDoc($reflection_class, $method_name)$/;"	f	language:PHP
interfaces	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $interfaces = $reflection_class->getInterfaces();$/;"	v	language:PHP
reflection_method	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $reflection_method = $reflection_class->getMethod($method_name);$/;"	v	language:PHP
parent_class	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $parent_class = $reflection_class->getParentClass();$/;"	v	language:PHP
reflection_method	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $reflection_method = $parent_class->getMethod($method_name);$/;"	v	language:PHP
doc	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $doc = $reflection_method->getDocComment();$/;"	v	language:PHP
reflection_method	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $reflection_method = $this->getReflectionFromInheritDoc($parent_class, $method_name);$/;"	v	language:PHP
nsuse	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    public function nsuse($path)$/;"	f	language:PHP
s	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $s = Parser::getClassNameEx($path);$/;"	v	language:PHP
trim	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private static function trim($str)$/;"	f	language:PHP
method	.vim/plugged/phpcd.vim/php/PHPCD.php	/^     * Fetch the function or class method return value's type$/;"	c	language:PHP
or	.vim/plugged/phpcd.vim/php/PHPCD.php	/^     * Fetch the function or class method return value's type$/;"	f	language:PHP
functype	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    public function functype($class_name, $name, $path)$/;"	f	language:PHP
method	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $method = $class_name ? "$class_name::$name" : $name;$/;"	v	language:PHP
method	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $method = trim($method, '\\\\');$/;"	v	language:PHP
method_return	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $method_return = require __DIR__.'\/method_return.php';$/;"	v	language:PHP
type	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $type = $this->typeByReturnType($class_name, $name, $path);$/;"	v	language:PHP
method	.vim/plugged/phpcd.vim/php/PHPCD.php	/^     * Fetch the function or class method parameter type by type hint or docblock$/;"	c	language:PHP
or	.vim/plugged/phpcd.vim/php/PHPCD.php	/^     * Fetch the function or class method parameter type by type hint or docblock$/;"	f	language:PHP
argtype	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    public function argtype($class_name, $func_name, $name, $path)$/;"	f	language:PHP
name	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $name = substr($name, 1);$/;"	v	language:PHP
type	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $type = $this->argTypeByHint($class_name, $func_name, $name, $path);$/;"	v	language:PHP
argTypeByHint	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function argTypeByHint($class_name, $func_name, $name, $path)$/;"	f	language:PHP
reflection	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $reflection = $this->reflectClass($class_name, $path);$/;"	v	language:PHP
reflection	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $reflection = $reflection->getMethod($func_name);$/;"	v	language:PHP
reflection	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $reflection = $this->reflectFunction($func_name, $path);$/;"	v	language:PHP
argTypeByDoc	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function argTypeByDoc($path, $doc, $name)$/;"	f	language:PHP
has_doc	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $has_doc = preg_match('\/@param\\s+(\\S+)\\s+\\$'.$name.'\/m', $doc, $matches);$/;"	v	language:PHP
attribute	.vim/plugged/phpcd.vim/php/PHPCD.php	/^     * Fetch class attribute's type by @var annotation$/;"	c	language:PHP
proptype	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    public function proptype($class_name, $name, $path)$/;"	f	language:PHP
types	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $types = $this->typeByDoc($path, $doc);$/;"	v	language:PHP
types	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $types = $this->proptypeByMethod($class_name, $name, '__construct', $path);$/;"	v	language:PHP
setter	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $setter = 'set'.ucfirst($name);$/;"	v	language:PHP
types	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $types = $this->proptypeByMethod($class_name, $name, $setter, $path);$/;"	v	language:PHP
proptypeByMethod	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function proptypeByMethod($class_name, $name, $method, $path)$/;"	f	language:PHP
reflection	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $reflection = $this->reflectClass($class_name, $path);$/;"	v	language:PHP
constructor	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $constructor = $reflection->getMethod($method);$/;"	v	language:PHP
path	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $path = $constructor->getFileName();$/;"	v	language:PHP
start_line	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $start_line = $constructor->getStartLine();$/;"	v	language:PHP
end_line	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $end_line = $constructor->getEndLine();$/;"	v	language:PHP
lines	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $lines = file($path);$/;"	v	language:PHP
body_lines	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $body_lines = array_slice($lines, $start_line, $end_line - $start_line);$/;"	v	language:PHP
foo	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                if ($matches[2][0] == 'n') { \/\/ $this->foo = new Foo;$/;"	v	language:PHP
types	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                    $types = [$matches[3]];$/;"	v	language:PHP
value_name	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $value_name = $matches[3];$/;"	v	language:PHP
value_type	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                        $value_type = (string) $parameter->getType();$/;"	v	language:PHP
typeByReturnType	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function typeByReturnType($class_name, $name, $path)$/;"	f	language:PHP
reflection	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $reflection = $this->reflectClass($class_name, $path);$/;"	v	language:PHP
reflection	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $reflection = $reflection->getMethod($name);$/;"	v	language:PHP
reflection	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $reflection = $this->reflectFunction($name, $path);$/;"	v	language:PHP
type	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $type = (string) $reflection->getReturnType();$/;"	v	language:PHP
type	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $type = $class_name;$/;"	v	language:PHP
typeByDoc	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function typeByDoc($path, $doc)$/;"	f	language:PHP
has_doc	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $has_doc = preg_match('\/@(return|var)\\s+(\\S+)\/m', $doc, $matches);$/;"	v	language:PHP
fixRelativeType	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function fixRelativeType($path, $names)$/;"	f	language:PHP
nsuse	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $nsuse = null;$/;"	v	language:PHP
types	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $types = [];$/;"	v	language:PHP
nsuse	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $nsuse = $this->nsuse($path);$/;"	v	language:PHP
type	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $type = $nsuse['namespace'] . '\\\\' . $nsuse['class'];$/;"	v	language:PHP
parts	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $parts = explode('\\\\', $type);$/;"	v	language:PHP
alias	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $alias = array_shift($parts);$/;"	v	language:PHP
type	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                    $type = $nsuse['imports'][$alias];$/;"	v	language:PHP
type	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                        $type = $type . '\\\\' . join('\\\\', $parts);$/;"	v	language:PHP
type	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                    $type = $nsuse['namespace'] . '\\\\' . $type;$/;"	v	language:PHP
type	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                    $type = '\\\\' . $type;$/;"	v	language:PHP
arrayUnique	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private static function arrayUnique($array)$/;"	f	language:PHP
_	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $_ = [];$/;"	v	language:PHP
reflectFunction	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function reflectFunction($name, $path)$/;"	f	language:PHP
nsuse	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $nsuse = $this->nsuse($path);$/;"	v	language:PHP
_name	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $_name = $nsuse['alias'][$name];$/;"	v	language:PHP
name	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $name = $_name;$/;"	v	language:PHP
_name	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $_name = $nsuse['namespace'].'\\\\'.$name;$/;"	v	language:PHP
name	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $name = $_name;$/;"	v	language:PHP
reflection	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $reflection = new \\ReflectionFunction($name);$/;"	v	language:PHP
ast_locator	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $ast_locator = (new BetterReflection())->astLocator();$/;"	v	language:PHP
source_locator	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $source_locator = new SingleFileSourceLocator($path, $ast_locator);$/;"	v	language:PHP
class_reflector	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $class_reflector = new ClassReflector($source_locator);$/;"	v	language:PHP
reflector	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $reflector = new FunctionReflector($source_locator, $class_reflector);$/;"	v	language:PHP
reflection	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $reflection = $reflector->reflect($name);$/;"	v	language:PHP
reflectClass	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function reflectClass($class_name, $path)$/;"	f	language:PHP
reflection	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $reflection = new \\ReflectionClass($class_name);$/;"	v	language:PHP
ast_locator	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $ast_locator = (new BetterReflection())->astLocator();$/;"	v	language:PHP
source_locator	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $source_locator = new SingleFileSourceLocator($path, $ast_locator);$/;"	v	language:PHP
internal_locator	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $internal_locator = new PhpInternalSourceLocator($ast_locator);$/;"	v	language:PHP
autoload_locator	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $autoload_locator = new AutoloadSourceLocator($ast_locator);$/;"	v	language:PHP
locator	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $locator = new AggregateSourceLocator([$source_locator, $autoload_locator, $internal_locator]);$/;"	v	language:PHP
reflector	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $reflector = new ClassReflector($locator);$/;"	v	language:PHP
reflection	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $reflection = $reflector->reflect($class_name);$/;"	v	language:PHP
classInfo	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function classInfo($class_name, $pattern, $is_static, $public_only, $path)$/;"	f	language:PHP
items	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $items = [];$/;"	v	language:PHP
reflection	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $reflection = $this->reflectClass($class_name, $path);$/;"	v	language:PHP
name	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                foreach ($this->getAvailableConstants($reflection, $pattern) as $name => $value) {$/;"	v	language:PHP
value	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                            $value = '[...]';$/;"	v	language:PHP
methods	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $methods = $this->getAvailableMethods($reflection, $is_static, $public_only, $pattern);$/;"	v	language:PHP
properties	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $properties = $this->getAvailableProperties($reflection, $is_static, $public_only, $pattern);$/;"	v	language:PHP
pseudo_methods	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $pseudo_methods = $this->getPseudoMethods($reflection, $pattern);$/;"	v	language:PHP
name	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            foreach ($pseudo_methods as $name => $info) {$/;"	v	language:PHP
abbr	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                    $abbr = sprintf("%s(%s)", $name,  $info['params']);$/;"	v	language:PHP
abbr	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                    $abbr = sprintf("%3s %s(%s)", '+', $name, $info['params']);$/;"	v	language:PHP
pseudo_properties	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $pseudo_properties = $this->getPseudoProperties($reflection, $pattern);$/;"	v	language:PHP
name	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            foreach ($pseudo_properties as $name => $info) {$/;"	v	language:PHP
functionOrConstantInfo	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function functionOrConstantInfo($pattern)$/;"	f	language:PHP
items	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $items = [];$/;"	v	language:PHP
funcs	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $funcs = get_defined_functions();$/;"	v	language:PHP
info	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $info = $this->getFunctionInfo($func, $pattern);$/;"	v	language:PHP
info	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $info = $this->getFunctionInfo($func, $pattern);$/;"	v	language:PHP
getConstantsInfo	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getConstantsInfo($pattern)$/;"	f	language:PHP
items	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $items = [];$/;"	v	language:PHP
name	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        foreach (get_defined_constants() as $name => $value) {$/;"	v	language:PHP
value	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $value = '[...]';$/;"	v	language:PHP
name	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                'abbr' => "@ $name = $value",$/;"	v	language:PHP
classes	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    public function classes($pattern)$/;"	f	language:PHP
items	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $items = [];$/;"	v	language:PHP
reflection	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $reflection = new \\ReflectionClass($name);$/;"	v	language:PHP
item	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $item = [$/;"	v	language:PHP
getFunctionInfo	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getFunctionInfo($name, $pattern)$/;"	f	language:PHP
reflection	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $reflection = new \\ReflectionFunction($name);$/;"	v	language:PHP
params	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $params = array_map(function ($param) {$/;"	v	language:PHP
getPropertyInfo	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getPropertyInfo($property)$/;"	f	language:PHP
name	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $name = $property->getName();$/;"	v	language:PHP
modifier	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $modifier = $this->getModifiers($property);$/;"	v	language:PHP
name	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $name = '$'.$name;$/;"	v	language:PHP
formatParamInfo	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function formatParamInfo($param)$/;"	f	language:PHP
hintedClass	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $hintedClass = $param->getClass();$/;"	v	language:PHP
paramString	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $paramString = '';$/;"	v	language:PHP
default	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $default = $param->getDefaultValueConstantName();$/;"	v	language:PHP
default	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $default = $param->getDefaultValue();$/;"	v	language:PHP
default	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $default = json_encode($default);$/;"	v	language:PHP
getExtraMethodInfo	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getExtraMethodInfo($method)$/;"	f	language:PHP
name	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $name = $method->getName();$/;"	v	language:PHP
declaringClass	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $declaringClass = $method->getDeclaringClass()->getName();$/;"	v	language:PHP
visibility	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $visibility  = $method->isPrivate()   ? 'private'$/;"	v	language:PHP
accessMode	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $accessMode = $method->isStatic() ? "::" : "->";$/;"	v	language:PHP
paramsInfo	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $paramsInfo = [];$/;"	v	language:PHP
returnType	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $returnType = '';$/;"	v	language:PHP
returnType	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $returnType = " : " . (string)$method->getReturnType();$/;"	v	language:PHP
docblock	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $docblock = $this->clearDoc($method->getDocComment());$/;"	v	language:PHP
getMethodInfo	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getMethodInfo($method)$/;"	f	language:PHP
name	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $name = $method->getName();$/;"	v	language:PHP
params	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $params = array_map(function ($param) {$/;"	v	language:PHP
modifier	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $modifier = $this->getModifiers($method);$/;"	v	language:PHP
abbr	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $abbr = sprintf("%3s %s(%s)", $modifier, $name, join(', ', $params));$/;"	v	language:PHP
abbr	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $abbr = sprintf("%s(%s)", $name, join(', ', $params));$/;"	v	language:PHP
getModifiers	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getModifiers($reflection)$/;"	f	language:PHP
signs	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $signs = '';$/;"	v	language:PHP
modifiers	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $modifiers = $reflection->getModifiers();$/;"	v	language:PHP
symbols	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $symbols = $this->modifier_symbols;$/;"	v	language:PHP
number	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        foreach ($symbols as $number => $sign) {$/;"	v	language:PHP
clearDoc	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function clearDoc($doc)$/;"	f	language:PHP
doc	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $doc = preg_replace('\/[ \\t]*\\* ?\/m','', $doc);$/;"	v	language:PHP
psr4ns	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    public function psr4ns($path)$/;"	f	language:PHP
dir	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $dir = dirname($path);$/;"	v	language:PHP
composer_path	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $composer_path = $this->root . '\/composer.json';$/;"	v	language:PHP
composer	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $composer = json_decode(file_get_contents($composer_path), true);$/;"	v	language:PHP
list	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $list = (array) $composer['autoload']['psr-4'];$/;"	v	language:PHP
list	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $list = [];$/;"	v	language:PHP
dev_list	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $dev_list = (array) $composer['autoload-dev']['psr-4'];$/;"	v	language:PHP
dev_list	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $dev_list = [];$/;"	v	language:PHP
namespace	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        foreach ($dev_list as $namespace => $paths) {$/;"	v	language:PHP
namespaces	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $namespaces = [];$/;"	v	language:PHP
namespace	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        foreach ($list as $namespace => $paths) {$/;"	v	language:PHP
path	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $path = realpath($this->root.'\/'.$path);$/;"	v	language:PHP
sub_path	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                    $sub_path = str_replace($path, '', $dir);$/;"	v	language:PHP
sub_path	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                    $sub_path = str_replace('\/', '\\\\', $sub_path);$/;"	v	language:PHP
sub_namespace	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                    $sub_namespace = trim($sub_path, '\\\\');$/;"	v	language:PHP
sub_namespace	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                        $sub_namespace = '\\\\' . $sub_namespace;$/;"	v	language:PHP
keyword	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    public function keyword($pattern)$/;"	f	language:PHP
keywords	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $keywords = require __DIR__.'\/keyword.php';$/;"	v	language:PHP
items	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $items = [];$/;"	v	language:PHP
classmap	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    public function classmap($pattern)$/;"	f	language:PHP
use_fqdn	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $use_fqdn = isset($pattern[0]) && $pattern[0] === "\\\\";$/;"	v	language:PHP
pattern	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $pattern = trim($pattern, "\\\\");$/;"	v	language:PHP
classmap_file	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $classmap_file = $this->root.'\/vendor\/composer\/autoload_classmap.php';$/;"	v	language:PHP
defined	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $defined = array_merge(get_declared_traits(),$/;"	v	language:PHP
_classmap	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $_classmap = require $classmap_file;$/;"	v	language:PHP
defined	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $defined = array_merge($defined, array_keys($_classmap));$/;"	v	language:PHP
classmap	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $classmap = [];$/;"	v	language:PHP
name	.vim/plugged/phpcd.vim/php/PHPCD.php	/^                $name = "\\\\".$name;$/;"	v	language:PHP
getAvailableConstants	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getAvailableConstants($reflection, $pattern)$/;"	f	language:PHP
constants	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $constants = $reflection->getConstants();$/;"	v	language:PHP
name	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        foreach ($constants as $name => $value) {$/;"	v	language:PHP
getAvailableMethods	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getAvailableMethods($reflection, $static, $public_only, $pattern)$/;"	f	language:PHP
methods	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $methods = $reflection->getMethods();$/;"	v	language:PHP
key	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        foreach ($methods as $key => $method) {$/;"	v	language:PHP
getAvailableProperties	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getAvailableProperties($reflection, $static, $public_only, $pattern)$/;"	f	language:PHP
properties	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $properties = $reflection->getProperties();$/;"	v	language:PHP
key	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        foreach ($properties as $key => $property) {$/;"	v	language:PHP
getPseudoProperties	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getPseudoProperties($reflection, $pattern)$/;"	f	language:PHP
properties	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $properties = [];$/;"	v	language:PHP
file_name	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        foreach ($this->getAllClassDocComments($reflection) as $file_name => $doc) {$/;"	v	language:PHP
has_doc	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $has_doc = preg_match_all('\/@property(|-read|-write)\\s+(?<types>\\S+)\\s+\\$?(?<names>[a-zA-Z0-9_$]+)\/mi', $doc, $matches);$/;"	v	language:PHP
idx	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            foreach ($matches['names'] as $idx => $name) {$/;"	v	language:PHP
getPseudoMethods	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getPseudoMethods($reflection, $pattern)$/;"	f	language:PHP
methods	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $methods = [];$/;"	v	language:PHP
file_name	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        foreach ($this->getAllClassDocComments($reflection) as $file_name => $doc) {$/;"	v	language:PHP
has_doc	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $has_doc = preg_match_all('\/@method\\s+(?<statics>static)?\\s*(?<types>\\S+)\\s+(?<names>[a-zA-Z0-9_$]+)\\((?<params>.*)\\)\/mi', $doc, $matches);$/;"	v	language:PHP
idx	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            foreach ($matches['names'] as $idx => $name) {$/;"	v	language:PHP
getAllClassDocComments	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function getAllClassDocComments($reflection)$/;"	f	language:PHP
doc	.vim/plugged/phpcd.vim/php/PHPCD.php	/^        $doc = [];$/;"	v	language:PHP
file_name	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $file_name = $reflection->getFileName();$/;"	v	language:PHP
reflection	.vim/plugged/phpcd.vim/php/PHPCD.php	/^            $reflection = $reflection->getParentClass();$/;"	v	language:PHP
filter	.vim/plugged/phpcd.vim/php/PHPCD.php	/^    private function filter($reflection, $element, $static, $public_only, $pattern)$/;"	f	language:PHP
PHPID	.vim/plugged/phpcd.vim/php/PHPID.php	/^class PHPID implements RpcHandler$/;"	c	language:PHP
server	.vim/plugged/phpcd.vim/php/PHPID.php	/^    private $server;$/;"	v	language:PHP
logger	.vim/plugged/phpcd.vim/php/PHPID.php	/^    private $logger;$/;"	v	language:PHP
root	.vim/plugged/phpcd.vim/php/PHPID.php	/^    private $root;$/;"	v	language:PHP
__construct	.vim/plugged/phpcd.vim/php/PHPID.php	/^    public function __construct($root, Logger $logger)$/;"	f	language:PHP
root	.vim/plugged/phpcd.vim/php/PHPID.php	/^        $this->root = $root;$/;"	v	language:PHP
logger	.vim/plugged/phpcd.vim/php/PHPID.php	/^        $this->logger = $logger;$/;"	v	language:PHP
setServer	.vim/plugged/phpcd.vim/php/PHPID.php	/^    public function setServer(RpcServer $server)$/;"	f	language:PHP
server	.vim/plugged/phpcd.vim/php/PHPID.php	/^        $this->server = $server;$/;"	v	language:PHP
update	.vim/plugged/phpcd.vim/php/PHPID.php	/^    public function update($class_name)$/;"	f	language:PHP
_update	.vim/plugged/phpcd.vim/php/PHPID.php	/^    private function _update($class_name, $parents, $interfaces)$/;"	f	language:PHP
or	.vim/plugged/phpcd.vim/php/PHPID.php	/^     * @param string $name name of interface or abstract class$/;"	i	language:PHP
name	.vim/plugged/phpcd.vim/php/PHPID.php	/^     *   'full class name 1',$/;"	c	language:PHP
name	.vim/plugged/phpcd.vim/php/PHPID.php	/^     *   'full class name 2',$/;"	c	language:PHP
ls	.vim/plugged/phpcd.vim/php/PHPID.php	/^    public function ls($name, $is_abstract_class = false)$/;"	f	language:PHP
is_abstract_class	.vim/plugged/phpcd.vim/php/PHPID.php	/^    public function ls($name, $is_abstract_class = false)$/;"	v	language:PHP
base_path	.vim/plugged/phpcd.vim/php/PHPID.php	/^        $base_path = $is_abstract_class ? $this->getIntefacesDir()$/;"	v	language:PHP
path	.vim/plugged/phpcd.vim/php/PHPID.php	/^        $path = $base_path . '\/' . $this->getIndexFileName($name);$/;"	v	language:PHP
list	.vim/plugged/phpcd.vim/php/PHPID.php	/^        $list = json_decode(file_get_contents($path));$/;"	v	language:PHP
and	.vim/plugged/phpcd.vim/php/PHPID.php	/^     * Fetch and save class's interface and parent info$/;"	i	language:PHP
index	.vim/plugged/phpcd.vim/php/PHPID.php	/^    public function index()$/;"	f	language:PHP
files	.vim/plugged/phpcd.vim/php/PHPID.php	/^        $files = $this->searchPhpFileList($this->root);$/;"	v	language:PHP
count	.vim/plugged/phpcd.vim/php/PHPID.php	/^        $count = count($files);$/;"	v	language:PHP
last	.vim/plugged/phpcd.vim/php/PHPID.php	/^        $last = 0;$/;"	v	language:PHP
name	.vim/plugged/phpcd.vim/php/PHPID.php	/^             $name = Parser::getClassName($files[$i]);$/;"	v	language:PHP
interfaces	.vim/plugged/phpcd.vim/php/PHPID.php	/^                 $interfaces = class_implements($name) ?: [];$/;"	v	language:PHP
parents	.vim/plugged/phpcd.vim/php/PHPID.php	/^                 $parents = class_parents($name) ?: [];$/;"	v	language:PHP
percent	.vim/plugged/phpcd.vim/php/PHPID.php	/^             $percent = number_format(($i + 1) \/ $count * 100);$/;"	v	language:PHP
last	.vim/plugged/phpcd.vim/php/PHPID.php	/^                 $last = $percent;$/;"	v	language:PHP
searchPhpFileList	.vim/plugged/phpcd.vim/php/PHPID.php	/^    public static function searchPhpFileList($folder)$/;"	f	language:PHP
iterator	.vim/plugged/phpcd.vim/php/PHPID.php	/^        $iterator = new \\RecursiveDirectoryIterator($folder);$/;"	v	language:PHP
iterator	.vim/plugged/phpcd.vim/php/PHPID.php	/^        $iterator = new \\RecursiveIteratorIterator($iterator);$/;"	v	language:PHP
iterator	.vim/plugged/phpcd.vim/php/PHPID.php	/^        $iterator = new \\RegexIterator($iterator, '\/\\.php$\/i', \\RegexIterator::MATCH);$/;"	v	language:PHP
files	.vim/plugged/phpcd.vim/php/PHPID.php	/^        $files = [];$/;"	v	language:PHP
getIndexDir	.vim/plugged/phpcd.vim/php/PHPID.php	/^    private function getIndexDir()$/;"	f	language:PHP
getIntefacesDir	.vim/plugged/phpcd.vim/php/PHPID.php	/^    private function getIntefacesDir()$/;"	f	language:PHP
getExtendsDir	.vim/plugged/phpcd.vim/php/PHPID.php	/^    private function getExtendsDir()$/;"	f	language:PHP
initIndexDir	.vim/plugged/phpcd.vim/php/PHPID.php	/^    private function initIndexDir()$/;"	f	language:PHP
extends_dir	.vim/plugged/phpcd.vim/php/PHPID.php	/^        $extends_dir = $this->getExtendsDir();$/;"	v	language:PHP
interfaces_dir	.vim/plugged/phpcd.vim/php/PHPID.php	/^        $interfaces_dir = $this->getIntefacesDir();$/;"	v	language:PHP
updateParentIndex	.vim/plugged/phpcd.vim/php/PHPID.php	/^    private function updateParentIndex($parent, $child)$/;"	f	language:PHP
index_file	.vim/plugged/phpcd.vim/php/PHPID.php	/^        $index_file = $this->getExtendsDir() . '\/' . $this->getIndexFileName($parent);$/;"	v	language:PHP
updateInterfaceIndex	.vim/plugged/phpcd.vim/php/PHPID.php	/^    private function updateInterfaceIndex($interface, $implementation)$/;"	f	language:PHP
index_file	.vim/plugged/phpcd.vim/php/PHPID.php	/^        $index_file = $this->getIntefacesDir() . '\/' . $this->getIndexFileName($interface);$/;"	v	language:PHP
saveChild	.vim/plugged/phpcd.vim/php/PHPID.php	/^    private function saveChild($index_file, $child)$/;"	f	language:PHP
index_directory	.vim/plugged/phpcd.vim/php/PHPID.php	/^        $index_directory = dirname($index_file);$/;"	v	language:PHP
childs	.vim/plugged/phpcd.vim/php/PHPID.php	/^            $childs = json_decode(file_get_contents($index_file));$/;"	v	language:PHP
childs	.vim/plugged/phpcd.vim/php/PHPID.php	/^            $childs = [];$/;"	v	language:PHP
childs	.vim/plugged/phpcd.vim/php/PHPID.php	/^        $childs = array_unique($childs);$/;"	v	language:PHP
getIndexFileName	.vim/plugged/phpcd.vim/php/PHPID.php	/^    private function getIndexFileName($name)$/;"	f	language:PHP
getClassInfo	.vim/plugged/phpcd.vim/php/PHPID.php	/^    private function getClassInfo($name) {$/;"	f	language:PHP
reflection	.vim/plugged/phpcd.vim/php/PHPID.php	/^            $reflection = new \\ReflectionClass($name);$/;"	v	language:PHP
parent	.vim/plugged/phpcd.vim/php/PHPID.php	/^            $parent = $reflection->getParentClass();$/;"	v	language:PHP
parent	.vim/plugged/phpcd.vim/php/PHPID.php	/^                $parent = $parent->getName();$/;"	v	language:PHP
interfaces	.vim/plugged/phpcd.vim/php/PHPID.php	/^            $interfaces = array_keys($reflection->getInterfaces());$/;"	v	language:PHP
Parser	.vim/plugged/phpcd.vim/php/Parser.php	/^class Parser$/;"	c	language:PHP
getClassName	.vim/plugged/phpcd.vim/php/Parser.php	/^    public static function getClassName($path)$/;"	f	language:PHP
visitor	.vim/plugged/phpcd.vim/php/Parser.php	/^        $visitor = new ClassNameVisitor;$/;"	v	language:PHP
getClassNameEx	.vim/plugged/phpcd.vim/php/Parser.php	/^    public static function getClassNameEx($path)$/;"	f	language:PHP
visitor	.vim/plugged/phpcd.vim/php/Parser.php	/^        $visitor = new ClassNameExVisitor;$/;"	v	language:PHP
visit	.vim/plugged/phpcd.vim/php/Parser.php	/^    private static function visit($path, $visitor)$/;"	f	language:PHP
parser	.vim/plugged/phpcd.vim/php/Parser.php	/^        $parser = (new \\PhpParser\\ParserFactory)->create(\\PhpParser\\ParserFactory::PREFER_PHP7);$/;"	v	language:PHP
traverser	.vim/plugged/phpcd.vim/php/Parser.php	/^        $traverser = new \\PhpParser\\NodeTraverser;$/;"	v	language:PHP
stmts	.vim/plugged/phpcd.vim/php/Parser.php	/^            $stmts = $parser->parse(file_get_contents($path));$/;"	v	language:PHP
stmts	.vim/plugged/phpcd.vim/php/Parser.php	/^            $stmts = $traverser->traverse($stmts);$/;"	v	language:PHP
root	.vim/plugged/phpcd.vim/php/main.php	/^$root   = $argv[1];$/;"	v	language:PHP
messenger	.vim/plugged/phpcd.vim/php/main.php	/^$messenger = $argv[2];$/;"	v	language:PHP
autoload_file	.vim/plugged/phpcd.vim/php/main.php	/^$autoload_file = $argv[3];$/;"	v	language:PHP
disable_modifier	.vim/plugged/phpcd.vim/php/main.php	/^$disable_modifier = $argv[4];$/;"	v	language:PHP
log_path	.vim/plugged/phpcd.vim/php/main.php	/^$log_path = getenv('HOME') . '\/.phpcd.log';$/;"	v	language:PHP
logger	.vim/plugged/phpcd.vim/php/main.php	/^$logger = new Logger('PHPCD');$/;"	v	language:PHP
messenger	.vim/plugged/phpcd.vim/php/main.php	/^    $messenger = new JsonMessenger(new StdIo());$/;"	v	language:PHP
messenger	.vim/plugged/phpcd.vim/php/main.php	/^    $messenger = new MsgpackMessenger(new StdIo());$/;"	v	language:PHP
server	.vim/plugged/phpcd.vim/php/main.php	/^$server = new ForkServer($messenger, new PHPCD\\PHPCD($root, $logger, $disable_modifier));$/;"	v	language:PHP
Alpha	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/A/Alpha.php	/^class Alpha$/;"	c	language:PHP
staticVar	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/A/Alpha.php	/^    public static $staticVar;$/;"	v	language:PHP
pubvar	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/A/Alpha.php	/^    public $pubvar;$/;"	v	language:PHP
privateKey	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/A/Alpha.php	/^    private $privateKey;$/;"	v	language:PHP
setPrivateKey	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/A/Alpha.php	/^    public function setPrivateKey($privateKey)$/;"	f	language:PHP
privateKey	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/A/Alpha.php	/^        $this->privateKey = $privateKey;$/;"	v	language:PHP
ExpectClassConstantOnly	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/B/C/ExpectClassConstantOnly.php	/^class ExpectClassConstantOnly$/;"	c	language:PHP
xxx	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/B/C/ExpectClassConstantOnly.php	/^    public function xxx()$/;"	f	language:PHP
ExpectLocate	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/B/C/ExpectLocate.php	/^class ExpectLocate$/;"	c	language:PHP
xxx	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/B/C/ExpectLocate.php	/^    public function xxx()$/;"	f	language:PHP
a	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/B/C/ExpectLocate.php	/^        $a = new Same();$/;"	v	language:PHP
b	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/B/C/ExpectLocate.php	/^        $b = new BSame();$/;"	v	language:PHP
ExpectPublicVariable	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/B/C/ExpectPublicVariable.php	/^class ExpectPublicVariable$/;"	c	language:PHP
x	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/B/C/ExpectPublicVariable.php	/^    public function x()$/;"	f	language:PHP
alpha	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/B/C/ExpectPublicVariable.php	/^        $alpha = new \\PHPCD\\A\\Alpha;$/;"	v	language:PHP
class_name	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/B/C/ExpectPublicVariable.php	/^\/\/ classInfo $class_name == parent$/;"	v	language:PHP
Same	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/SameName/A/Same.php	/^class Same extends SuperSame$/;"	c	language:PHP
instance	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/SameName/A/Same.php	/^    protected static $instance;$/;"	v	language:PHP
pa	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/SameName/A/Same.php	/^    public $pa;$/;"	v	language:PHP
mm	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/SameName/A/Same.php	/^    function mm()$/;"	f	language:PHP
na	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/SameName/A/Same.php	/^    function na()$/;"	f	language:PHP
SuperSame	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/SameName/A/SuperSame.php	/^abstract class SuperSame$/;"	c	language:PHP
getInstance	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/SameName/A/SuperSame.php	/^    public static function getInstance()$/;"	f	language:PHP
mm	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/SameName/A/SuperSame.php	/^    abstract function mm();$/;"	f	language:PHP
Same	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/SameName/B/Same.php	/^class Same$/;"	c	language:PHP
pa	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/SameName/B/Same.php	/^    public $pa;$/;"	v	language:PHP
na	.vim/plugged/phpcd.vim/tests/fixtures/PHPCD/SameName/B/Same.php	/^    function na()$/;"	f	language:PHP
align-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.align-3 {$/;"	c	language:css
animations-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.animations-1 {$/;"	c	language:css
backgrounds-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.backgrounds-3 {$/;"	c	language:css
backgrounds-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.backgrounds-4 {$/;"	c	language:css
box-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.box-3 {$/;"	c	language:css
break-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.break-3 {$/;"	c	language:css
break-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.break-4 {$/;"	c	language:css
cascade-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.cascade-3 {$/;"	c	language:css
cascade-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.cascade-4 {$/;"	c	language:css
color-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.color-3 {$/;"	c	language:css
color-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.color-4 {$/;"	c	language:css
compositing-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.compositing-1 {$/;"	c	language:css
conditional-3	.vim/plugged/vim-css3-syntax/test/test.css	/^  .conditional-3 {$/;"	c	language:css
contain-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.contain-1 {$/;"	c	language:css
content-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.content-3 {$/;"	c	language:css
cssom-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.cssom-1 {$/;"	c	language:css
cssom-view-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.cssom-view-1 {$/;"	c	language:css
device-adapt-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.device-adapt-1 {$/;"	c	language:css
display-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.display-3 {$/;"	c	language:css
easing-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.easing-1 {$/;"	c	language:css
exclusions-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.exclusions-3 {$/;"	c	language:css
fill-stroke-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.fill-stroke-3 {$/;"	c	language:css
filter-effects-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.filter-effects-1 {$/;"	c	language:css
flexbox-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.flexbox-1 {$/;"	c	language:css
font-loading-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.font-loading-3 {$/;"	c	language:css
fonts-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.fonts-3 {$/;"	c	language:css
fonts-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.fonts-4 {$/;"	c	language:css
gcpm-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.gcpm-3::footnote-call,$/;"	c	language:css
gcpm-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.gcpm-3::footnote-marker {$/;"	c	language:css
geometry-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.geometry-1 {$/;"	c	language:css
grid-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.grid-1 {$/;"	c	language:css
grid-2	.vim/plugged/vim-css3-syntax/test/test.css	/^.grid-2 {$/;"	c	language:css
html5	.vim/plugged/vim-css3-syntax/test/test.css	/^.html5,$/;"	c	language:css
template	.vim/plugged/vim-css3-syntax/test/test.css	/^template {$/;"	t	language:css
images-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.images-3 {$/;"	c	language:css
images-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.images-4 {$/;"	c	language:css
inline-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.inline-3 {$/;"	c	language:css
layout-api-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.layout-api-1 {$/;"	c	language:css
line-grid-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.line-grid-1 {$/;"	c	language:css
lists-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.lists-3::marker {$/;"	c	language:css
logical-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.logical-1 {$/;"	c	language:css
masking-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.masking-1,$/;"	c	language:css
mask	.vim/plugged/vim-css3-syntax/test/test.css	/^mask {$/;"	t	language:css
motion-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.motion-1 {$/;"	c	language:css
multicol-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.multicol-1 {$/;"	c	language:css
namespace-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.namespace-3 {$/;"	c	language:css
overflow-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.overflow-3 {$/;"	c	language:css
overflow-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.overflow-4::nth-fragment(1) {$/;"	c	language:css
page-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.page-3 {$/;"	c	language:css
page-floats-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.page-floats-3 {$/;"	c	language:css
paint-api-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.paint-api-1 {$/;"	c	language:css
pointerevents	.vim/plugged/vim-css3-syntax/test/test.css	/^.pointerevents {$/;"	c	language:css
position-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.position-3 {$/;"	c	language:css
properties-values-api-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.properties-values-api-1 {$/;"	c	language:css
pseudo-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.pseudo-4::inactive-selection,$/;"	c	language:css
pseudo-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.pseudo-4::spelling-error,$/;"	c	language:css
pseudo-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.pseudo-4::grammer-error {$/;"	c	language:css
regions-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.regions-1:region {$/;"	c	language:css
rhythm-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.rhythm-1 {$/;"	c	language:css
round-display-1	.vim/plugged/vim-css3-syntax/test/test.css	/^  .round-display-1 {$/;"	c	language:css
ruby-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.ruby-1 {$/;"	c	language:css
scoping-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.scoping-1:scope-context div,$/;"	c	language:css
scoping-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.scoping-1:host,$/;"	c	language:css
scoping-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.scoping-1:host(.foo),$/;"	c	language:css
scoping-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.scoping-1:host-context,$/;"	c	language:css
scoping-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.scoping-1::shadow,$/;"	c	language:css
scoping-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.scoping-1::content,$/;"	c	language:css
scoping-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.scoping-1 \/deep\/ span {$/;"	c	language:css
div	.vim/plugged/vim-css3-syntax/test/test.css	/^  div {$/;"	t	language:css
scroll-snap-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.scroll-snap-1 {$/;"	c	language:css
selectors-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-3:enabled,$/;"	c	language:css
selectors-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-3:indeterminate,$/;"	c	language:css
selectors-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-3:nth-child(2n+1),$/;"	c	language:css
selectors-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-3:nth-last-child(-n+2),$/;"	c	language:css
selectors-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-3:nth-of-type(2n+1),$/;"	c	language:css
selectors-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-3:nth-last-of-type(n+2),$/;"	c	language:css
selectors-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-3:not([DISABLED]) {$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4 | h1,$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:scope,$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:current,$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:past,$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:future,$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:default,$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:valid,$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:required,$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:optional,$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:blank,$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:any-link,$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:local-link,$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:read-only,$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:read-write,$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:placeholder-shown,$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:in-range,$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:out-of-range,$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:user-invalid,$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:is(:hover, :focus),$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:dir(ltr),$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:local-link(0),$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:current(p, li, dt, dd),$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:nth-col(2n+1),$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:nth-last-col(-n+2),$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:target-within,$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:focus-within,$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:focus-visible,$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:playing,$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:paused,$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:has(> img),$/;"	c	language:css
selectors-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-4:where(:not(:hover)) {$/;"	c	language:css
selectors-nonelement-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.selectors-nonelement-1::attr(title) {$/;"	c	language:css
shadow-parts	.vim/plugged/vim-css3-syntax/test/test.css	/^.shadow-parts::part(textspan) {$/;"	c	language:css
shapes-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.shapes-1 {$/;"	c	language:css
sizing-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.sizing-3 {$/;"	c	language:css
style-attr	.vim/plugged/vim-css3-syntax/test/test.css	/^.style-attr {$/;"	c	language:css
svg2	.vim/plugged/vim-css3-syntax/test/test.css	/^.svg2,$/;"	c	language:css
view	.vim/plugged/vim-css3-syntax/test/test.css	/^view {$/;"	t	language:css
syntax-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.syntax-3 {$/;"	c	language:css
tables-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.tables-3 {$/;"	c	language:css
text-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.text-3 {$/;"	c	language:css
text-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.text-4 {$/;"	c	language:css
text-decor-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.text-decor-3 {$/;"	c	language:css
text-decor-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.text-decor-4 {$/;"	c	language:css
timing-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.timing-1 {$/;"	c	language:css
transforms-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.transforms-1 {$/;"	c	language:css
transitions-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.transitions-1 {$/;"	c	language:css
typed-om-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.typed-om-1 {$/;"	c	language:css
ui-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.ui-3 {$/;"	c	language:css
ui-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.ui-4 {$/;"	c	language:css
values-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.values-3 {$/;"	c	language:css
values-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.values-4 {$/;"	c	language:css
variables-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.variables-1 {$/;"	c	language:css
web-animations-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.web-animations-1 {$/;"	c	language:css
webvtt1	.vim/plugged/vim-css3-syntax/test/test.css	/^.webvtt1::cue,$/;"	c	language:css
webvtt1	.vim/plugged/vim-css3-syntax/test/test.css	/^.webvtt1::cue-region,$/;"	c	language:css
webvtt1	.vim/plugged/vim-css3-syntax/test/test.css	/^.webvtt1::cue(#cue1),$/;"	c	language:css
webvtt1	.vim/plugged/vim-css3-syntax/test/test.css	/^.webvtt1::cue-region(#scroll), {$/;"	c	language:css
will-change-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.will-change-1 {$/;"	c	language:css
worklets-1	.vim/plugged/vim-css3-syntax/test/test.css	/^.worklets-1 {$/;"	c	language:css
writing-modes-3	.vim/plugged/vim-css3-syntax/test/test.css	/^.writing-modes-3 {$/;"	c	language:css
writing-modes-4	.vim/plugged/vim-css3-syntax/test/test.css	/^.writing-modes-4 {$/;"	c	language:css
section, article, aside, hgroup, header, footer, nav, figure	.vim/plugged/emmet-vim/docs/static/css/style-sites.css	/^section, article, aside, hgroup, header, footer, nav, figure { display: block; }$/;"	t	language:css
body	.vim/plugged/emmet-vim/docs/static/css/style-sites.css	/^body {$/;"	t	language:css
section	.vim/plugged/emmet-vim/docs/static/css/style-sites.css	/^section {$/;"	t	language:css
article	.vim/plugged/emmet-vim/docs/static/css/style-sites.css	/^article {$/;"	t	language:css
img	.vim/plugged/emmet-vim/docs/static/css/style-sites.css	/^img {$/;"	t	language:css
content	.vim/plugged/emmet-vim/docs/static/css/style-sites.css	/^#content {$/;"	i	language:css
h1	.vim/plugged/emmet-vim/docs/static/css/style-sites.css	/^h1 {$/;"	t	language:css
subtitle	.vim/plugged/emmet-vim/docs/static/css/style-sites.css	/^.subtitle {$/;"	c	language:css
maintitle	.vim/plugged/emmet-vim/docs/static/css/style-sites.css	/^.maintitle {$/;"	c	language:css
blocked-content	.vim/plugged/emmet-vim/docs/static/css/style-sites.css	/^.blocked-content {$/;"	c	language:css
li a, h3 a	.vim/plugged/emmet-vim/docs/static/css/style-sites.css	/^li a, h3 a {$/;"	t	language:css
tty	.vim/plugged/emmet-vim/docs/static/css/style-sites.css	/^#tty {$/;"	i	language:css
collection	.vim/plugged/vim-blade/test.blade.php	/^    $collection = collect([$/;"	v	language:PHP
environment	.vim/plugged/vim-blade/test.blade.php	/^    $environment = isset($env) ? $env : 'testing';$/;"	v	language:PHP
autoloadFile	.vim/plugged/phpactor/bin/phpactor	/^        $autoloadFile = $file;$/;"	v	language:PHP
minVersion	.vim/plugged/phpactor/bin/phpactor	/^$minVersion = '7.0.0';$/;"	v	language:PHP
application	.vim/plugged/phpactor/bin/phpactor	/^$application = new Application(realpath(dirname($autoloadFile)));$/;"	v	language:PHP
output	.vim/plugged/phpactor/bin/phpactor	/^$output = new ConsoleOutput();$/;"	v	language:PHP
tomorrow-comment	.vim/plugged/phpactor/doc/template/css/highlight.tomorrow-night.css	/^.tomorrow-comment, pre .comment, pre .title {$/;"	c	language:css
tomorrow-red	.vim/plugged/phpactor/doc/template/css/highlight.tomorrow-night.css	/^.tomorrow-red, pre .variable, pre .attribute, pre .tag, pre .regexp, pre .ruby .constant, pre .xml .tag .title, pre .xml .pi, pre .xml .doctype, pre .html .doctype, pre .css .id, pre .css .class, pre .css .pseudo {$/;"	c	language:css
tomorrow-orange	.vim/plugged/phpactor/doc/template/css/highlight.tomorrow-night.css	/^.tomorrow-orange, pre .number, pre .preprocessor, pre .built_in, pre .literal, pre .params, pre .constant {$/;"	c	language:css
tomorrow-yellow	.vim/plugged/phpactor/doc/template/css/highlight.tomorrow-night.css	/^.tomorrow-yellow, pre .class, pre .ruby .class .title, pre .css .rules .attribute {$/;"	c	language:css
tomorrow-green	.vim/plugged/phpactor/doc/template/css/highlight.tomorrow-night.css	/^.tomorrow-green, pre .string, pre .value, pre .inheritance, pre .header, pre .ruby .symbol, pre .xml .cdata {$/;"	c	language:css
tomorrow-aqua	.vim/plugged/phpactor/doc/template/css/highlight.tomorrow-night.css	/^.tomorrow-aqua, pre .css .hexcolor {$/;"	c	language:css
tomorrow-blue	.vim/plugged/phpactor/doc/template/css/highlight.tomorrow-night.css	/^.tomorrow-blue, pre .function, pre .python .decorator, pre .python .title, pre .ruby .function .title, pre .ruby .title .keyword, pre .perl .sub, pre .javascript .title, pre .coffeescript .title {$/;"	c	language:css
tomorrow-purple	.vim/plugged/phpactor/doc/template/css/highlight.tomorrow-night.css	/^.tomorrow-purple, pre .keyword, pre .javascript .function {$/;"	c	language:css
pre code	.vim/plugged/phpactor/doc/template/css/highlight.tomorrow-night.css	/^pre code {$/;"	t	language:css
body	.vim/plugged/phpactor/doc/template/css/main.css	/^body {$/;"	t	language:css
main	.vim/plugged/phpactor/doc/template/css/main.css	/^main {$/;"	t	language:css
section	.vim/plugged/phpactor/doc/template/css/main.css	/^section {$/;"	t	language:css
h1, h2, h3, h4	.vim/plugged/phpactor/doc/template/css/main.css	/^h1, h2, h3, h4 {$/;"	t	language:css
h2	.vim/plugged/phpactor/doc/template/css/main.css	/^h2 {$/;"	t	language:css
h3	.vim/plugged/phpactor/doc/template/css/main.css	/^h3 {$/;"	t	language:css
li	.vim/plugged/phpactor/doc/template/css/main.css	/^li {$/;"	t	language:css
img	.vim/plugged/phpactor/doc/template/css/main.css	/^img {$/;"	t	language:css
logo	.vim/plugged/phpactor/doc/template/css/main.css	/^.logo {$/;"	c	language:css
navbar	.vim/plugged/phpactor/doc/template/css/main.css	/^.navbar .navbar-brand {$/;"	c	language:css
navbar	.vim/plugged/phpactor/doc/template/css/main.css	/^.navbar a.navbar-brand:hover {$/;"	c	language:css
navbar	.vim/plugged/phpactor/doc/template/css/main.css	/^.navbar .navbar-brand small {$/;"	c	language:css
sidebar	.vim/plugged/phpactor/doc/template/css/main.css	/^    #sidebar {$/;"	i	language:css
body	.vim/plugged/phpactor/doc/template/css/main.css	/^    body {$/;"	t	language:css
pre	.vim/plugged/phpactor/doc/template/css/main.css	/^    pre {$/;"	t	language:css
page-header	.vim/plugged/phpactor/doc/template/css/main.css	/^.page-header {$/;"	c	language:css
sidebar	.vim/plugged/phpactor/doc/template/css/main.css	/^#sidebar .github-star {$/;"	i	language:css
sidebar	.vim/plugged/phpactor/doc/template/css/main.css	/^#sidebar .text-muted {$/;"	i	language:css
pre	.vim/plugged/phpactor/doc/template/css/main.css	/^pre {$/;"	t	language:css
pre code	.vim/plugged/phpactor/doc/template/css/main.css	/^pre code {$/;"	t	language:css
code	.vim/plugged/phpactor/doc/template/css/main.css	/^code {$/;"	t	language:css
Application	.vim/plugged/phpactor/lib/Application.php	/^class Application extends SymfonyApplication$/;"	c	language:PHP
container	.vim/plugged/phpactor/lib/Application.php	/^    private $container;$/;"	v	language:PHP
vendorDir	.vim/plugged/phpactor/lib/Application.php	/^    private $vendorDir;$/;"	v	language:PHP
__construct	.vim/plugged/phpactor/lib/Application.php	/^    public function __construct(string $vendorDir)$/;"	f	language:PHP
vendorDir	.vim/plugged/phpactor/lib/Application.php	/^        $this->vendorDir = $vendorDir;$/;"	v	language:PHP
doRun	.vim/plugged/phpactor/lib/Application.php	/^    public function doRun(InputInterface $input, OutputInterface $output)$/;"	f	language:PHP
formatter	.vim/plugged/phpactor/lib/Application.php	/^        $formatter = $output->getFormatter();$/;"	v	language:PHP
getDefaultInputDefinition	.vim/plugged/phpactor/lib/Application.php	/^    protected function getDefaultInputDefinition()$/;"	f	language:PHP
definition	.vim/plugged/phpactor/lib/Application.php	/^        $definition = parent::getDefaultInputDefinition();$/;"	v	language:PHP
handleException	.vim/plugged/phpactor/lib/Application.php	/^    private function handleException(OutputInterface $output, string $dumper, \\Exception $e)$/;"	f	language:PHP
errors	.vim/plugged/phpactor/lib/Application.php	/^        $errors = [$/;"	v	language:PHP
serializeException	.vim/plugged/phpactor/lib/Application.php	/^    private function serializeException(\\Exception $e)$/;"	f	language:PHP
initialize	.vim/plugged/phpactor/lib/Application.php	/^    private function initialize(InputInterface $input)$/;"	f	language:PHP
container	.vim/plugged/phpactor/lib/Application.php	/^        $this->container = Phpactor::boot($input, $this->vendorDir);$/;"	v	language:PHP
ClassCopy	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^class ClassCopy$/;"	c	language:PHP
classFileNormalizer	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^    private $classFileNormalizer;$/;"	v	language:PHP
classMover	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^    private $classMover;$/;"	v	language:PHP
filesystem	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^    private $filesystem;$/;"	v	language:PHP
__construct	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^    public function __construct($/;"	f	language:PHP
classFileNormalizer	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^        $this->classFileNormalizer = $classFileNormalizer;$/;"	v	language:PHP
classMover	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^        $this->classMover = $classMover;$/;"	v	language:PHP
filesystem	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^        $this->filesystem = $filesystem;$/;"	v	language:PHP
name	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^     * Move - guess if moving by class name or file.$/;"	c	language:PHP
copy	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^    public function copy(ClassCopyLogger $logger, string $src, string $dest)$/;"	f	language:PHP
srcPath	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^        $srcPath = $this->classFileNormalizer->normalizeToFile($src);$/;"	v	language:PHP
destPath	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^        $destPath = $this->classFileNormalizer->normalizeToFile($dest);$/;"	v	language:PHP
copyClass	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^    public function copyClass(ClassCopyLogger $logger, string $srcName, string $destName)$/;"	f	language:PHP
copyFile	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^    public function copyFile(ClassCopyLogger $logger, string $srcPath, string $destPath)$/;"	f	language:PHP
srcPath	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^        $srcPath = Phpactor::normalizePath($srcPath);$/;"	v	language:PHP
globDest	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^            $globDest = $destPath;$/;"	v	language:PHP
globDest	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^                $globDest = Path::join($destPath, Path::getFilename($globPath));$/;"	v	language:PHP
doCopyFile	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^    private function doCopyFile(ClassCopyLogger $logger, string $srcPath, string $destPath)$/;"	f	language:PHP
destPath	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^        $destPath = Phpactor::normalizePath($destPath);$/;"	v	language:PHP
srcPath	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^        $srcPath = $this->filesystem->createPath($srcPath);$/;"	v	language:PHP
destPath	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^        $destPath = $this->filesystem->createPath($destPath);$/;"	v	language:PHP
report	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^        $report = $this->filesystem->copy($srcPath, $destPath);$/;"	v	language:PHP
updateReferences	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^    private function updateReferences(ClassCopyLogger $logger, CopyReport $copyReport)$/;"	f	language:PHP
destPath	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^            $destPath = $copyReport->destFiles()->current();$/;"	v	language:PHP
srcClassName	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^            $srcClassName = $this->classFileNormalizer->fileToClass($srcPath->path());$/;"	v	language:PHP
destClassName	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^            $destClassName = $this->classFileNormalizer->fileToClass($destPath->path());$/;"	v	language:PHP
references	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^            $references = $this->classMover->findReferences($this->filesystem->getContents($srcPath), $srcClassName);$/;"	v	language:PHP
source	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassCopy.php	/^            $source = $this->classMover->replaceReferences($/;"	v	language:PHP
ClassMemberReferences	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^class ClassMemberReferences$/;"	c	language:PHP
filesystemRegistry	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    private $filesystemRegistry;$/;"	v	language:PHP
memberFinder	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    private $memberFinder;$/;"	v	language:PHP
classFileNormalizer	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    private $classFileNormalizer;$/;"	v	language:PHP
reflector	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    private $reflector;$/;"	v	language:PHP
memberReplacer	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    private $memberReplacer;$/;"	v	language:PHP
__construct	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    public function __construct($/;"	f	language:PHP
classFileNormalizer	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $this->classFileNormalizer = $classFileNormalizer;$/;"	v	language:PHP
filesystemRegistry	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $this->filesystemRegistry = $filesystemRegistry;$/;"	v	language:PHP
memberFinder	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $this->memberFinder = $memberFinder;$/;"	v	language:PHP
reflector	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $this->reflector = $reflector;$/;"	v	language:PHP
memberReplacer	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $this->memberReplacer = $memberReplacer;$/;"	v	language:PHP
findOrReplaceReferences	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    public function findOrReplaceReferences($/;"	f	language:PHP
class	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        string $class = null,$/;"	v	language:PHP
memberName	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        string $memberName = null,$/;"	v	language:PHP
memberType	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        string $memberType = null,$/;"	v	language:PHP
replace	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        string $replace = null,$/;"	v	language:PHP
dryRun	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        bool $dryRun = false$/;"	v	language:PHP
className	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $className = $class ? $this->classFileNormalizer->normalizeToClass($class) : null;$/;"	v	language:PHP
reflection	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $reflection = $className ? $this->reflector->reflectClassLike($className) : null;$/;"	v	language:PHP
filesystem	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $filesystem = $this->filesystemRegistry->get($scope);$/;"	v	language:PHP
filePaths	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $filePaths = (new FileFinder())->filesFor($filesystem, $reflection, $memberName);$/;"	v	language:PHP
results	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $results = [];$/;"	v	language:PHP
references	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^            $references = $this->referencesInFile($filesystem, $filePath, $className, $memberName, $memberType, $replace, $dryRun);$/;"	v	language:PHP
replaceInSource	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    public function replaceInSource($/;"	f	language:PHP
className	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $className = $class ? $this->classFileNormalizer->normalizeToClass($class) : null;$/;"	v	language:PHP
query	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $query = $this->createQuery($className, $memberName, $memberType);$/;"	v	language:PHP
referenceList	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $referenceList = $this->memberFinder->findMembers($/;"	v	language:PHP
referencesInFile	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    private function referencesInFile($/;"	f	language:PHP
className	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        string $className = null,$/;"	v	language:PHP
memberName	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        string $memberName = null,$/;"	v	language:PHP
memberType	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        string $memberType = null,$/;"	v	language:PHP
replace	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        string $replace = null,$/;"	v	language:PHP
dryRun	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        bool $dryRun = false$/;"	v	language:PHP
code	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $code = $filesystem->getContents($filePath);$/;"	v	language:PHP
query	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $query = $this->createQuery($className, $memberName, $memberType);$/;"	v	language:PHP
referenceList	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $referenceList = $this->memberFinder->findMembers($/;"	v	language:PHP
confidentList	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $confidentList = $referenceList->withClasses();$/;"	v	language:PHP
riskyList	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $riskyList = $referenceList->withoutClasses();$/;"	v	language:PHP
result	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $result = [$/;"	v	language:PHP
updatedSource	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^            $updatedSource = $this->replaceReferencesInCode($code, $confidentList, $replace);$/;"	v	language:PHP
query	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^            $query = $this->createQuery($className, $replace, $memberType);$/;"	v	language:PHP
replacedReferences	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^            $replacedReferences = $this->memberFinder->findMembers($/;"	v	language:PHP
serializeReferenceList	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    private function serializeReferenceList(string $code, MemberReferences $referenceList)$/;"	f	language:PHP
references	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $references = [];$/;"	v	language:PHP
ref	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^            $ref = $this->serializeReference($code, $reference);$/;"	v	language:PHP
serializeReference	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    private function serializeReference(string $code, MemberReference $reference)$/;"	f	language:PHP
line	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    private function line(string $code, int $offset)$/;"	f	language:PHP
lines	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $lines = explode(PHP_EOL, $code);$/;"	v	language:PHP
number	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $number = 0;$/;"	v	language:PHP
startPosition	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $startPosition = 0;$/;"	v	language:PHP
number	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        foreach ($lines as $number => $line) {$/;"	v	language:PHP
number	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^            $number = $number + 1;$/;"	v	language:PHP
endPosition	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^            $endPosition = $startPosition + strlen($line) + 1;$/;"	v	language:PHP
col	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^                $col = $offset - $startPosition;$/;"	v	language:PHP
startPosition	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^            $startPosition = $endPosition;$/;"	v	language:PHP
replaceReferencesInCode	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    private function replaceReferencesInCode(string $code, MemberReferences $list, string $replace): SourceCode$/;"	f	language:PHP
code	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $code = SourceCode::fromString($code);$/;"	v	language:PHP
createQuery	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    private function createQuery(string $className = null, string $memberName = null, $memberType = null)$/;"	f	language:PHP
className	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^    private function createQuery(string $className = null, string $memberName = null, $memberType = null)$/;"	v	language:PHP
query	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^        $query = ClassMemberQuery::create();$/;"	v	language:PHP
query	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^            $query = $query->withClass($className);$/;"	v	language:PHP
query	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^            $query = $query->withMember($memberName);$/;"	v	language:PHP
query	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMemberReferences.php	/^            $query = $query->withType($memberType);$/;"	v	language:PHP
ClassMover	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^class ClassMover$/;"	c	language:PHP
classFileNormalizer	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^    private $classFileNormalizer;$/;"	v	language:PHP
classMover	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^    private $classMover;$/;"	v	language:PHP
filesystemRegistry	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^    private $filesystemRegistry;$/;"	v	language:PHP
__construct	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^    public function __construct($/;"	f	language:PHP
classFileNormalizer	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        $this->classFileNormalizer = $classFileNormalizer;$/;"	v	language:PHP
filesystemRegistry	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        $this->filesystemRegistry = $filesystemRegistry;$/;"	v	language:PHP
classMover	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        $this->classMover = $classMover;$/;"	v	language:PHP
name	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^     * Move - guess if moving by class name or file.$/;"	c	language:PHP
move	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^    public function move(ClassMoverLogger $logger, string $filesystemName, string $src, string $dest)$/;"	f	language:PHP
srcPath	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        $srcPath = $this->classFileNormalizer->normalizeToFile($src);$/;"	v	language:PHP
destPath	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        $destPath = $this->classFileNormalizer->normalizeToFile($dest);$/;"	v	language:PHP
moveClass	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^    public function moveClass(ClassMoverLogger $logger, string $filesystemName, string $srcName, string $destName)$/;"	f	language:PHP
moveFile	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^    public function moveFile(ClassMoverLogger $logger, string $filesystemName, string $srcPath, string $destPath)$/;"	f	language:PHP
srcPath	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        $srcPath = Phpactor::normalizePath($srcPath);$/;"	v	language:PHP
globSrc	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        foreach (FilesystemHelper::globSourceDestination($srcPath, $destPath) as $globSrc => $globDest) {$/;"	v	language:PHP
doMoveFile	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^    private function doMoveFile(ClassMoverLogger $logger, string $filesystemName, string $srcPath, string $destPath)$/;"	f	language:PHP
filesystem	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        $filesystem = $this->filesystemRegistry->get($filesystemName);$/;"	v	language:PHP
destPath	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        $destPath = Phpactor::normalizePath($destPath);$/;"	v	language:PHP
srcPath	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        $srcPath = $filesystem->createPath($srcPath);$/;"	v	language:PHP
destPath	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        $destPath = $filesystem->createPath($destPath);$/;"	v	language:PHP
files	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        $files = [[$srcPath, $destPath]];$/;"	v	language:PHP
files	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^            $files = $this->directoryMap($filesystem, $srcPath, $destPath);$/;"	v	language:PHP
directoryMap	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^    private function directoryMap(Filesystem $filesystem, FilePath $srcPath, FilePath $destPath)$/;"	f	language:PHP
files	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^        $files = [];$/;"	v	language:PHP
suffix	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^            $suffix = substr($file->path(), strlen($srcPath->path()));$/;"	v	language:PHP
replaceThoseReferences	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^    private function replaceThoseReferences(ClassMoverLogger $logger, Filesystem $filesystem, array $files)$/;"	f	language:PHP
srcPath	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^            $srcPath = $filesystem->createPath($srcPath);$/;"	v	language:PHP
destPath	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^            $destPath = $filesystem->createPath($destPath);$/;"	v	language:PHP
srcClassName	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^            $srcClassName = $this->classFileNormalizer->fileToClass($srcPath->path());$/;"	v	language:PHP
destClassName	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^            $destClassName = $this->classFileNormalizer->fileToClass($destPath->path());$/;"	v	language:PHP
replaceReferences	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^    private function replaceReferences(ClassMoverLogger $logger, Filesystem $filesystem, string $srcName, string $destName)$/;"	f	language:PHP
references	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^            $references = $this->classMover->findReferences($filesystem->getContents($filePath), $srcName);$/;"	v	language:PHP
source	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassMover.php	/^            $source = $this->classMover->replaceReferences($/;"	v	language:PHP
ClassReferences	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^class ClassReferences$/;"	c	language:PHP
filesystemRegistry	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    private $filesystemRegistry;$/;"	v	language:PHP
refFinder	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    private $refFinder;$/;"	v	language:PHP
classFileNormalizerasd	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    private $classFileNormalizerasd;$/;"	v	language:PHP
refReplacer	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    private $refReplacer;$/;"	v	language:PHP
__construct	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    public function __construct($/;"	f	language:PHP
classFileNormalizerasd	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $this->classFileNormalizerasd = $classFileNormalizer;$/;"	v	language:PHP
filesystemRegistry	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $this->filesystemRegistry = $filesystemRegistry;$/;"	v	language:PHP
refFinder	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $this->refFinder = $refFinder;$/;"	v	language:PHP
refReplacer	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $this->refReplacer = $refReplacer;$/;"	v	language:PHP
replaceReferences	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    public function replaceReferences(string $filesystemName, string $class, string $replace, bool $dryRun)$/;"	f	language:PHP
findReferences	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    public function findReferences(string $filesystemName, string $class)$/;"	f	language:PHP
findOrReplaceReferences	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    public function findOrReplaceReferences(string $filesystemName, string $class, string $replace = null, bool $dryRun = false)$/;"	f	language:PHP
replace	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    public function findOrReplaceReferences(string $filesystemName, string $class, string $replace = null, bool $dryRun = false)$/;"	v	language:PHP
classPath	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $classPath = $this->classFileNormalizerasd->normalizeToFile($class);$/;"	v	language:PHP
classPath	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $classPath = Phpactor::normalizePath($classPath);$/;"	v	language:PHP
className	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $className = $this->classFileNormalizerasd->normalizeToClass($class);$/;"	v	language:PHP
filesystem	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $filesystem = $this->filesystemRegistry->get($filesystemName);$/;"	v	language:PHP
results	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $results = [];$/;"	v	language:PHP
references	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^            $references = $this->fileReferences($filesystem, $filePath, $className, $replace, $dryRun);$/;"	v	language:PHP
replaceInSource	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    public function replaceInSource(string $source, $className, $replace): string$/;"	f	language:PHP
referenceList	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $referenceList = $this->refFinder$/;"	v	language:PHP
updatedSource	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $updatedSource = $this->replaceReferencesInCode($source, $referenceList, $className, $replace);$/;"	v	language:PHP
fileReferences	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    private function fileReferences(Filesystem $filesystem, $filePath, $className, $replace = null, $dryRun = false)$/;"	f	language:PHP
replace	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    private function fileReferences(Filesystem $filesystem, $filePath, $className, $replace = null, $dryRun = false)$/;"	v	language:PHP
code	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $code = $filesystem->getContents($filePath);$/;"	v	language:PHP
referenceList	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $referenceList = $this->refFinder$/;"	v	language:PHP
result	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $result = [$/;"	v	language:PHP
updatedSource	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $updatedSource = null;$/;"	v	language:PHP
updatedSource	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^            $updatedSource = $this->replaceReferencesInCode($code, $referenceList, $className, $replace);$/;"	v	language:PHP
newReferenceList	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^            $newReferenceList = $this->refFinder$/;"	v	language:PHP
serializeReferenceList	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    private function serializeReferenceList(string $code, NamespacedClassReferences $referenceList)$/;"	f	language:PHP
references	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $references = [];$/;"	v	language:PHP
ref	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^            $ref = $this->serializeReference($code, $reference);$/;"	v	language:PHP
serializeReference	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    private function serializeReference(string $code, ClassReference $reference)$/;"	f	language:PHP
line	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    private function line(string $code, int $offset)$/;"	f	language:PHP
lines	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $lines = explode(PHP_EOL, $code);$/;"	v	language:PHP
number	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $number = 0;$/;"	v	language:PHP
startPosition	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $startPosition = 0;$/;"	v	language:PHP
number	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        foreach ($lines as $number => $line) {$/;"	v	language:PHP
number	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^            $number = $number + 1;$/;"	v	language:PHP
endPosition	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^            $endPosition = $startPosition + strlen($line) + 1;$/;"	v	language:PHP
col	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^                $col = $offset - $startPosition;$/;"	v	language:PHP
startPosition	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^            $startPosition = $endPosition;$/;"	v	language:PHP
replaceReferencesInCode	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^    private function replaceReferencesInCode(string $code, NamespacedClassReferences $list, string $class, string $replace): SourceCode$/;"	f	language:PHP
class	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $class = FullyQualifiedName::fromString($class);$/;"	v	language:PHP
replace	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $replace = FullyQualifiedName::fromString($replace);$/;"	v	language:PHP
code	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/ClassReferences.php	/^        $code = SourceCode::fromString($code);$/;"	v	language:PHP
FileFinder	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^class FileFinder$/;"	c	language:PHP
filesFor	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^    public function filesFor(Filesystem $filesystem, ReflectionClassLike $reflection = null, string $memberName = null): FileList$/;"	f	language:PHP
reflection	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^    public function filesFor(Filesystem $filesystem, ReflectionClassLike $reflection = null, string $memberName = null): FileList$/;"	v	language:PHP
members	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^        $members = $reflection->members();$/;"	v	language:PHP
publicMembers	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^        $publicMembers = $members->byName($memberName)->byVisibilities([$/;"	v	language:PHP
private	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^        $private = false;$/;"	v	language:PHP
private	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^                $private = true;$/;"	v	language:PHP
pathsFromReflectionClass	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^    private function pathsFromReflectionClass(ReflectionClass $reflection, bool $private)$/;"	f	language:PHP
path	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^        $path = $reflection->sourceCode()->path();$/;"	v	language:PHP
filePaths	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^        $filePaths = [ $path ];$/;"	v	language:PHP
filePaths	.vim/plugged/phpactor/lib/Extension/ClassMover/Application/Finder/FileFinder.php	/^        $fileP