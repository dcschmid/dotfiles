!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/usr/home/daniel/dotfiles/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
#all	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^    describe '#all' do$/;"	d
$	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
$	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	c	class:OR
$	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:$0
$$	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
$0	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
$4	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
$5	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
$6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
$8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
$A	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
$D	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
$Ee	vim/.vim/plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
$G	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
$J	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
$K	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
$L	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
$M	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
$NODE_CLIENT_LOG_FILE	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^    let $NODE_CLIENT_LOG_FILE = s:logfile$/;"	v
$NODE_CLIENT_LOG_LEVEL	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^  let $NODE_CLIENT_LOG_LEVEL = 'debug'$/;"	v
$O	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
$P	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	v
$T	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
$V	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
$X	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
$Y	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
$Z	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
$a	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
$ae	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
$b	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
$c	vim/.vim/plugged/coc.nvim/build/index.js	/^`),o=i.line==r.start.line?i.character-r.start.character:i.character,a=A$(s,i.line-r.start.line,o/;"	f
$d	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
$e	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
$g	vim/.vim/plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	v
$i	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
$ie	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
$j	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
$me	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
$mid	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	p	class:e.toJSON.t
$n	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
$r	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
$ref	vim/.vim/plugged/coc.nvim/data/schema.json	/^              "$ref": "#\/definitions\/languageServerCommand"$/;"	s	object:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf.1
$ref	vim/.vim/plugged/coc.nvim/data/schema.json	/^              "$ref": "#\/definitions\/languageServerModule"$/;"	s	object:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf.0
$ref	vim/.vim/plugged/coc.nvim/data/schema.json	/^              "$ref": "#\/definitions\/languageServerSocket"$/;"	s	object:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf.2
$ref	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/float" }],$/;"	s	object:properties.diagnostic.floatConfig.allOf.0
$ref	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/float" }],$/;"	s	object:properties.hover.floatConfig.allOf.0
$ref	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/float" }],$/;"	s	object:properties.signature.floatConfig.allOf.0
$ref	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/float" }],$/;"	s	object:properties.suggest.floatConfig.allOf.0
$ref	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	s	object:definitions.languageServerCommand.allOf.0
$ref	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	s	object:definitions.languageServerModule.allOf.0
$ref	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	s	object:definitions.languageServerSocket.allOf.0
$schema	vim/.vim/plugged/coc.nvim/data/schema.json	/^  "$schema": "http:\/\/json-schema.org\/draft-07\/schema#",$/;"	s
$se	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
$u	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
$w	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
$y	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
%	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
**Q**  Pressing <kbd>i</kbd> after selecting words with <kbd>C-n</kbd> makes the plugin hang, why?	vim/.vim/plugged/vim-multiple-cursors/README.md	/^#### **Q**  Pressing <kbd>i<\/kbd> after selecting words with <kbd>C-n<\/kbd> makes the plugin h/;"	t	section:vim-multiple-cursors""FAQ
**Q** <kbd>ALT</kbd>+<kbd>n</kbd> doesn't seem to work in VIM but works in gVIM, why?	vim/.vim/plugged/vim-multiple-cursors/README.md	/^#### **Q** <kbd>ALT<\/kbd>+<kbd>n<\/kbd> doesn't seem to work in VIM but works in gVIM, why?$/;"	t	section:vim-multiple-cursors""FAQ
**Q** <kbd>CTRL</kbd>+<kbd>n</kbd> doesn't seem to work in gVIM?	vim/.vim/plugged/vim-multiple-cursors/README.md	/^#### **Q** <kbd>CTRL<\/kbd>+<kbd>n<\/kbd> doesn't seem to work in gVIM?$/;"	t	section:vim-multiple-cursors""FAQ
**Q** How can I select `n` keywords with several keystrokes? `200<C-n>` does not work.	vim/.vim/plugged/vim-multiple-cursors/README.md	/^#### **Q** How can I select `n` keywords with several keystrokes? `200<C-n>` does not work.$/;"	t	subsection:vim-multiple-cursors""FAQ""**Q** deoplete insert giberrish, how to fix this?
**Q** deoplete insert giberrish, how to fix this?	vim/.vim/plugged/vim-multiple-cursors/README.md	/^### **Q** deoplete insert giberrish, how to fix this?$/;"	S	section:vim-multiple-cursors""FAQ
**Q** is it also working on Mac?	vim/.vim/plugged/vim-multiple-cursors/README.md	/^#### **Q** is it also working on Mac?$/;"	t	subsection:vim-multiple-cursors""FAQ""**Q** deoplete insert giberrish, how to fix this?
**`g:translator_default_engines`**	vim/.vim/plugged/vim-translator/README.md	/^#### **`g:translator_default_engines`**$/;"	t	section:vim-translator""Configuration
**`g:translator_history_enable`**	vim/.vim/plugged/vim-translator/README.md	/^#### **`g:translator_history_enable`**$/;"	t	section:vim-translator""Configuration
**`g:translator_proxy_url`**	vim/.vim/plugged/vim-translator/README.md	/^#### **`g:translator_proxy_url`**$/;"	t	section:vim-translator""Configuration
**`g:translator_source_lang`**	vim/.vim/plugged/vim-translator/README.md	/^#### **`g:translator_source_lang`**$/;"	t	section:vim-translator""Configuration
**`g:translator_target_lang`**	vim/.vim/plugged/vim-translator/README.md	/^#### **`g:translator_target_lang`**$/;"	t	section:vim-translator""Configuration
**`g:translator_window_borderchars`**	vim/.vim/plugged/vim-translator/README.md	/^#### **`g:translator_window_borderchars`**$/;"	t	section:vim-translator""Configuration
**`g:translator_window_max_height`**	vim/.vim/plugged/vim-translator/README.md	/^#### **`g:translator_window_max_height`**$/;"	t	section:vim-translator""Configuration
**`g:translator_window_max_width`**	vim/.vim/plugged/vim-translator/README.md	/^#### **`g:translator_window_max_width`**$/;"	t	section:vim-translator""Configuration
**`g:translator_window_type`**	vim/.vim/plugged/vim-translator/README.md	/^#### **`g:translator_window_type`**$/;"	t	section:vim-translator""Configuration
**❗ This plugin is deprecated, use [vim-visual-multi](https://github.com/mg979/vim-visual-multi) instead ❗**	vim/.vim/plugged/vim-multiple-cursors/README.md	/^# **❗ This plugin is deprecated, use [vim-visual-multi](https:\/\/github.com\/mg979\/vim-visua/;"	c
*::color1	vim/.vim/plugged/vim-css-color/tests/example.css	/^*::color1 { -x-: #359 }$/;"	s
*::color2	vim/.vim/plugged/vim-css-color/tests/example.css	/^*::color2 { -x-: #335599 }$/;"	s
*::color3	vim/.vim/plugged/vim-css-color/tests/example.css	/^*::color3 { -x-: rgba(144, 0, 0, .5) }$/;"	s
*::color4	vim/.vim/plugged/vim-css-color/tests/example.css	/^*::color4 { -x-: hsl(0, 100%, 50%) }$/;"	s
*Backward incompatible changes*	vim/.vim/plugged/fzf/CHANGELOG.md	/^### *Backward incompatible changes*$/;"	S	section:CHANGELOG""0.9.4
-	.config/nvim_copy/init.vim	/^nmap - :Explore<cr>$/;"	m
-	vim/.vimrc	/^nmap - :Explore<cr>$/;"	m
.	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  nnoremap          <buffer> <expr> .  <sid>dot()$/;"	m
.	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^  nnoremap <buffer> <expr> . <SID>dot()$/;"	m
.bundle/vader.vim	vim/.vim/plugged/vim-graphql/Makefile	/^.bundle\/vader.vim:$/;"	t
.bundle/vim-javascript	vim/.vim/plugged/vim-graphql/Makefile	/^.bundle\/vim-javascript:$/;"	t
.bundle/vim-vimhelplint	vim/.vim/plugged/vim-graphql/Makefile	/^.bundle\/vim-vimhelplint:$/;"	t
0	.config/nvim_copy/coc-settings.json	/^    "Autoconfiguration"$/;"	s	array:cSpell.userWords
0	.config/nvim_copy/coc-settings.json	/^    "dotfile"$/;"	s	array:cSpell.words
0	.config/nvim_copy/coc-settings.json	/^    "javascript",$/;"	s	array:coc.preferences.formatOnSaveFiletypes
0	.config/nvim_copy/coc-settings.json	/^  "eslint.probe": ["javascript", "javascriptreact", "typescript", "typescriptreact", "html", "vu/;"	s	array:eslint.probe
0	vim/.vim/coc-settings.json	/^    "Autoconfiguration"$/;"	s	array:cSpell.userWords
0	vim/.vim/coc-settings.json	/^    "dotfile"$/;"	s	array:cSpell.words
0	vim/.vim/coc-settings.json	/^    "javascript",$/;"	s	array:coc.preferences.formatOnSaveFiletypes
0	vim/.vim/coc-settings.json	/^  "eslint.probe": ["javascript", "javascriptreact", "typescript", "typescriptreact", "html", "vu/;"	s	array:eslint.probe
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^            "edit",$/;"	s	array:properties.coc.preferences.jumpCommand.anyOf.0.enum
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^            {$/;"	o	array:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "enum": ["info", "warn", "error", "never"]$/;"	s	array:definitions.languageServerBase.properties.revealOutputChannelOn.enum
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "enum": ["ipc", "stdio", "socket", "pipe"]$/;"	s	array:definitions.languageServerModule.properties.transport.enum
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "enum": ["off", "messages", "verbose"],$/;"	s	array:definitions.languageServerBase.properties.trace.server.enum
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "%#CocListMode#-- %{get(b:list_status, \\"mode\\", \\"\\")} --%*",$/;"	s	array:properties.list.statusLineSegments.default
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "enum": ["", "quickfix", "refactor", "source"]$/;"	s	array:properties.outline.codeActionKinds.items.enum
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^        {$/;"	o	array:properties.coc.preferences.jumpCommand.anyOf
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/float" }],$/;"	o	array:properties.diagnostic.floatConfig.allOf
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/float" }],$/;"	o	array:properties.hover.floatConfig.allOf
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/float" }],$/;"	o	array:properties.signature.floatConfig.allOf
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/float" }],$/;"	o	array:properties.suggest.floatConfig.allOf
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	o	array:definitions.languageServerCommand.allOf
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	o	array:definitions.languageServerModule.allOf
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	o	array:definitions.languageServerSocket.allOf
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": [" ", "(", "<", "{", "[", "\\r", "\\n"]$/;"	s	array:properties.suggest.invalidInsertCharacters.default
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": ["", "quickfix", "refactor"],$/;"	s	array:properties.outline.codeActionKinds.default
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": [".git", ".hg", ".projections.json"],$/;"	s	array:properties.coc.preferences.rootPatterns.default
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": [".ts", ".js"],$/;"	s	array:properties.coc.source.file.trimSameExts.default
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": ["\/", "\\\\"],$/;"	s	array:properties.coc.source.file.triggerCharacters.default
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": ["markdown", "log", "txt", "help"],$/;"	s	array:properties.workspace.ignoredFiletypes.default
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["abbr", "menu", "preview"]$/;"	s	array:properties.suggest.detailField.enum
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "jump", "never"]$/;"	s	array:properties.diagnostic.enableMessage.enum
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "trigger", "none"]$/;"	s	array:properties.suggest.autoTrigger.enum
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["daily", "weekly", "never"]$/;"	s	array:properties.coc.preferences.extensionUpdateCheck.enum
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["echo", "float"]$/;"	s	array:properties.diagnostic.messageTarget.enum
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["float", "echo"]$/;"	s	array:properties.signature.target.enum
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["full", "short", "filename", "hidden"],$/;"	s	array:properties.list.source.diagnostics.pathFormat.enum
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["hint", "information", "warning", "error"]$/;"	s	array:properties.diagnostic.level.enum
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["length", "alphabetical", "none"]$/;"	s	array:properties.suggest.defaultSortMethod.enum
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["more", "warning", "error"]$/;"	s	array:properties.coc.preferences.messageLevel.enum
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["position", "name", "category"]$/;"	s	array:properties.outline.sortBy.enum
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["preview", "echo", "float"]$/;"	s	array:properties.hover.target.enum
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["quickfix", "location", "none"]$/;"	s	array:properties.coc.preferences.listOfWorkspaceEdit.enum
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "required": ["command", "filetypes"],$/;"	s	array:definitions.languageServerCommand.required
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "required": ["module", "filetypes"],$/;"	s	array:definitions.languageServerModule.required
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "required": ["port", "filetypes"],$/;"	s	array:definitions.languageServerSocket.required
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": ["array", "null"],$/;"	s	array:properties.list.statusLineSegments.type
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": ["null", "string"],$/;"	s	array:properties.http.proxyAuthorization.type
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": ["string", "null"],$/;"	s	array:properties.dialog.floatBorderHighlight.type
0	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": ["string", "null"],$/;"	s	array:properties.dialog.floatHighlight.type
0	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        { "fg": "#d2d4de", "bg": "#161821" },$/;"	o	array:cycle
0	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^    "icons": [ "awesome-fonts" ],$/;"	s	array:icons
0.10.0	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.10.0$/;"	s	chapter:CHANGELOG
0.10.1	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.10.1$/;"	s	chapter:CHANGELOG
0.10.2	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.10.2$/;"	s	chapter:CHANGELOG
0.10.3	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.10.3$/;"	s	chapter:CHANGELOG
0.10.4	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.10.4$/;"	s	chapter:CHANGELOG
0.10.5	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.10.5$/;"	s	chapter:CHANGELOG
0.10.6	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.10.6$/;"	s	chapter:CHANGELOG
0.10.7	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.10.7$/;"	s	chapter:CHANGELOG
0.10.8	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.10.8$/;"	s	chapter:CHANGELOG
0.10.9	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.10.9$/;"	s	chapter:CHANGELOG
0.11.0	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.11.0$/;"	s	chapter:CHANGELOG
0.11.1	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.11.1$/;"	s	chapter:CHANGELOG
0.11.2	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.11.2$/;"	s	chapter:CHANGELOG
0.11.3	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.11.3$/;"	s	chapter:CHANGELOG
0.11.4	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.11.4$/;"	s	chapter:CHANGELOG
0.12.0	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.12.0$/;"	s	chapter:CHANGELOG
0.12.1	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.12.1$/;"	s	chapter:CHANGELOG
0.12.2	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.12.2$/;"	s	chapter:CHANGELOG
0.13.0	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.13.0$/;"	s	chapter:CHANGELOG
0.13.1	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.13.1$/;"	s	chapter:CHANGELOG
0.13.2	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.13.2$/;"	s	chapter:CHANGELOG
0.13.3	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.13.3$/;"	s	chapter:CHANGELOG
0.13.4	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.13.4$/;"	s	chapter:CHANGELOG
0.13.5	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.13.5$/;"	s	chapter:CHANGELOG
0.15.0	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.15.0$/;"	s	chapter:CHANGELOG
0.15.1	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.15.1$/;"	s	chapter:CHANGELOG
0.15.2	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.15.2$/;"	s	chapter:CHANGELOG
0.15.3	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.15.3$/;"	s	chapter:CHANGELOG
0.15.4	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.15.4$/;"	s	chapter:CHANGELOG
0.15.5	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.15.5$/;"	s	chapter:CHANGELOG
0.15.6	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.15.6$/;"	s	chapter:CHANGELOG
0.15.7	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.15.7$/;"	s	chapter:CHANGELOG
0.15.8	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.15.8$/;"	s	chapter:CHANGELOG
0.15.9	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.15.9$/;"	s	chapter:CHANGELOG
0.16.0	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.16.0$/;"	s	chapter:CHANGELOG
0.16.1	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.16.1$/;"	s	chapter:CHANGELOG
0.16.10	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.16.10$/;"	s	chapter:CHANGELOG
0.16.11	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.16.11$/;"	s	chapter:CHANGELOG
0.16.2	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.16.2$/;"	s	chapter:CHANGELOG
0.16.3	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.16.3$/;"	s	chapter:CHANGELOG
0.16.4	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.16.4$/;"	s	chapter:CHANGELOG
0.16.5	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.16.5$/;"	s	chapter:CHANGELOG
0.16.6	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.16.6$/;"	s	chapter:CHANGELOG
0.16.7	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.16.7$/;"	s	chapter:CHANGELOG
0.16.8	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.16.8$/;"	s	chapter:CHANGELOG
0.16.9	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.16.9$/;"	s	chapter:CHANGELOG
0.17.0	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.17.0$/;"	s	chapter:CHANGELOG
0.17.0-2	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.17.0-2$/;"	s	chapter:CHANGELOG
0.17.1	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.17.1$/;"	s	chapter:CHANGELOG
0.17.3	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.17.3$/;"	s	chapter:CHANGELOG
0.17.4	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.17.4$/;"	s	chapter:CHANGELOG
0.17.5	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.17.5$/;"	s	chapter:CHANGELOG
0.18.0	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.18.0$/;"	s	chapter:CHANGELOG
0.19.0	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.19.0$/;"	s	chapter:CHANGELOG
0.20.0	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.20.0$/;"	s	chapter:CHANGELOG
0.21.1	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.21.1$/;"	s	chapter:CHANGELOG
0.22.0	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.22.0$/;"	s	chapter:CHANGELOG
0.23.0	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.23.0$/;"	s	chapter:CHANGELOG
0.23.1	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.23.1$/;"	s	chapter:CHANGELOG
0.24.0	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.24.0$/;"	s	chapter:CHANGELOG
0.24.1	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.24.1$/;"	s	chapter:CHANGELOG
0.24.2	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.24.2$/;"	s	chapter:CHANGELOG
0.24.3	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.24.3$/;"	s	chapter:CHANGELOG
0.24.4	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.24.4$/;"	s	chapter:CHANGELOG
0.25.0	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.25.0$/;"	s	chapter:CHANGELOG
0.25.1	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.25.1$/;"	s	chapter:CHANGELOG
0.26.0	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.26.0$/;"	s	chapter:CHANGELOG
0.27.0	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.27.0$/;"	s	chapter:CHANGELOG
0.27.1	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.27.1$/;"	s	chapter:CHANGELOG
0.27.2	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.27.2$/;"	s	chapter:CHANGELOG
0.27.3	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.27.3$/;"	s	chapter:CHANGELOG
0.28.0	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.28.0$/;"	s	chapter:CHANGELOG
0.9.10	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.9.10$/;"	s	chapter:CHANGELOG
0.9.11	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.9.11$/;"	s	chapter:CHANGELOG
0.9.12	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.9.12$/;"	s	chapter:CHANGELOG
0.9.13	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.9.13$/;"	s	chapter:CHANGELOG
0.9.3	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.9.3$/;"	s	chapter:CHANGELOG
0.9.4	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.9.4$/;"	s	chapter:CHANGELOG
0.9.5	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.9.5$/;"	s	chapter:CHANGELOG
0.9.6	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.9.6$/;"	s	chapter:CHANGELOG
0.9.7	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.9.7$/;"	s	chapter:CHANGELOG
0.9.8	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.9.8$/;"	s	chapter:CHANGELOG
0.9.9	vim/.vim/plugged/fzf/CHANGELOG.md	/^0.9.9$/;"	s	chapter:CHANGELOG
1	.config/nvim_copy/coc-settings.json	/^    "javascriptreact",$/;"	s	array:coc.preferences.formatOnSaveFiletypes
1	.config/nvim_copy/coc-settings.json	/^  "eslint.probe": ["javascript", "javascriptreact", "typescript", "typescriptreact", "html", "vu/;"	s	array:eslint.probe
1	vim/.vim/coc-settings.json	/^    "javascriptreact",$/;"	s	array:coc.preferences.formatOnSaveFiletypes
1	vim/.vim/coc-settings.json	/^  "eslint.probe": ["javascript", "javascriptreact", "typescript", "typescriptreact", "html", "vu/;"	s	array:eslint.probe
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^            "split",$/;"	s	array:properties.coc.preferences.jumpCommand.anyOf.0.enum
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^            {$/;"	o	array:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "enum": ["info", "warn", "error", "never"]$/;"	s	array:definitions.languageServerBase.properties.revealOutputChannelOn.enum
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "enum": ["ipc", "stdio", "socket", "pipe"]$/;"	s	array:definitions.languageServerModule.properties.transport.enum
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "enum": ["off", "messages", "verbose"],$/;"	s	array:definitions.languageServerBase.properties.trace.server.enum
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "%{get(b:list_status, \\"loading\\", \\"\\")}",$/;"	s	array:properties.list.statusLineSegments.default
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "enum": ["", "quickfix", "refactor", "source"]$/;"	s	array:properties.outline.codeActionKinds.items.enum
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^        { "type": "string", "minimum": 1 }$/;"	o	array:properties.coc.preferences.jumpCommand.anyOf
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": [" ", "(", "<", "{", "[", "\\r", "\\n"]$/;"	s	array:properties.suggest.invalidInsertCharacters.default
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": ["", "quickfix", "refactor"],$/;"	s	array:properties.outline.codeActionKinds.default
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": [".git", ".hg", ".projections.json"],$/;"	s	array:properties.coc.preferences.rootPatterns.default
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": [".ts", ".js"],$/;"	s	array:properties.coc.source.file.trimSameExts.default
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": ["\/", "\\\\"],$/;"	s	array:properties.coc.source.file.triggerCharacters.default
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": ["markdown", "log", "txt", "help"],$/;"	s	array:properties.workspace.ignoredFiletypes.default
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["abbr", "menu", "preview"]$/;"	s	array:properties.suggest.detailField.enum
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "jump", "never"]$/;"	s	array:properties.diagnostic.enableMessage.enum
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "trigger", "none"]$/;"	s	array:properties.suggest.autoTrigger.enum
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["daily", "weekly", "never"]$/;"	s	array:properties.coc.preferences.extensionUpdateCheck.enum
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["echo", "float"]$/;"	s	array:properties.diagnostic.messageTarget.enum
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["float", "echo"]$/;"	s	array:properties.signature.target.enum
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["full", "short", "filename", "hidden"],$/;"	s	array:properties.list.source.diagnostics.pathFormat.enum
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["hint", "information", "warning", "error"]$/;"	s	array:properties.diagnostic.level.enum
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["length", "alphabetical", "none"]$/;"	s	array:properties.suggest.defaultSortMethod.enum
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["more", "warning", "error"]$/;"	s	array:properties.coc.preferences.messageLevel.enum
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["position", "name", "category"]$/;"	s	array:properties.outline.sortBy.enum
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["preview", "echo", "float"]$/;"	s	array:properties.hover.target.enum
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["quickfix", "location", "none"]$/;"	s	array:properties.coc.preferences.listOfWorkspaceEdit.enum
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "required": ["command", "filetypes"],$/;"	s	array:definitions.languageServerCommand.required
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "required": ["module", "filetypes"],$/;"	s	array:definitions.languageServerModule.required
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "required": ["port", "filetypes"],$/;"	s	array:definitions.languageServerSocket.required
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": ["array", "null"],$/;"	s	array:properties.list.statusLineSegments.type
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": ["null", "string"],$/;"	s	array:properties.http.proxyAuthorization.type
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": ["string", "null"],$/;"	s	array:properties.dialog.floatBorderHighlight.type
1	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": ["string", "null"],$/;"	s	array:properties.dialog.floatHighlight.type
1	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        { "fg": "#d2d4de", "bg": "#262939" },$/;"	o	array:cycle
1. Update the list of processes by pressing CTRL-R	vim/.vim/plugged/fzf/README.md	/^#### 1. Update the list of processes by pressing CTRL-R$/;"	t	subsection:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics""Reloading the candidate list
1.0 (04/13/2013)	vim/.vim/plugged/vim-multiple-cursors/CHANGELOG.md	/^## 1.0 (04\/13\/2013)$/;"	s
1.1 (04/14/2013)	vim/.vim/plugged/vim-multiple-cursors/CHANGELOG.md	/^## 1.1 (04\/14\/2013)$/;"	s
1.10 (04/17/2013)	vim/.vim/plugged/vim-multiple-cursors/CHANGELOG.md	/^## 1.10 (04\/17\/2013)$/;"	s
1.11 (04/18/2013)	vim/.vim/plugged/vim-multiple-cursors/CHANGELOG.md	/^## 1.11 (04\/18\/2013)$/;"	s
1.12 (04/19/2013)	vim/.vim/plugged/vim-multiple-cursors/CHANGELOG.md	/^## 1.12 (04\/19\/2013)$/;"	s
1.13 (04/22/2013)	vim/.vim/plugged/vim-multiple-cursors/CHANGELOG.md	/^## 1.13 (04\/22\/2013)$/;"	s
1.14 (04/22/2013)	vim/.vim/plugged/vim-multiple-cursors/CHANGELOG.md	/^## 1.14 (04\/22\/2013)$/;"	s
1.15 (04/22/2013)	vim/.vim/plugged/vim-multiple-cursors/CHANGELOG.md	/^## 1.15 (04\/22\/2013)$/;"	s
1.16 (04/23/2013)	vim/.vim/plugged/vim-multiple-cursors/CHANGELOG.md	/^## 1.16 (04\/23\/2013)$/;"	s
1.2 (04/14/2013)	vim/.vim/plugged/vim-multiple-cursors/CHANGELOG.md	/^## 1.2 (04\/14\/2013)$/;"	s
1.3 (04/14/2013)	vim/.vim/plugged/vim-multiple-cursors/CHANGELOG.md	/^## 1.3 (04\/14\/2013)$/;"	s
1.4 (04/14/2013)	vim/.vim/plugged/vim-multiple-cursors/CHANGELOG.md	/^## 1.4 (04\/14\/2013)$/;"	s
1.5 (04/15/2013)	vim/.vim/plugged/vim-multiple-cursors/CHANGELOG.md	/^## 1.5 (04\/15\/2013)$/;"	s
1.6 (04/15/2013)	vim/.vim/plugged/vim-multiple-cursors/CHANGELOG.md	/^## 1.6 (04\/15\/2013)$/;"	s
1.7 (04/15/2013)	vim/.vim/plugged/vim-multiple-cursors/CHANGELOG.md	/^## 1.7 (04\/15\/2013)$/;"	s
1.8 (04/16/2013)	vim/.vim/plugged/vim-multiple-cursors/CHANGELOG.md	/^## 1.8 (04\/16\/2013)$/;"	s
1.9 (04/17/2013)	vim/.vim/plugged/vim-multiple-cursors/CHANGELOG.md	/^## 1.9 (04\/17\/2013)$/;"	s
16color (`background=dark`)	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### 16color (`background=dark`)$/;"	S	chapter:Available Colorschemes
16color (`background=light`)	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### 16color (`background=light`)$/;"	S	chapter:Available Colorschemes
2	.config/nvim_copy/coc-settings.json	/^    "typescript",$/;"	s	array:coc.preferences.formatOnSaveFiletypes
2	.config/nvim_copy/coc-settings.json	/^  "eslint.probe": ["javascript", "javascriptreact", "typescript", "typescriptreact", "html", "vu/;"	s	array:eslint.probe
2	vim/.vim/coc-settings.json	/^    "typescript",$/;"	s	array:coc.preferences.formatOnSaveFiletypes
2	vim/.vim/coc-settings.json	/^  "eslint.probe": ["javascript", "javascriptreact", "typescript", "typescriptreact", "html", "vu/;"	s	array:eslint.probe
2	vim/.vim/plugged/coc.nvim/data/schema.json	/^            "vsplit",$/;"	s	array:properties.coc.preferences.jumpCommand.anyOf.0.enum
2	vim/.vim/plugged/coc.nvim/data/schema.json	/^            {$/;"	o	array:properties.languageserver.patternProperties.^[_a-zA-Z]+$.oneOf
2	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "enum": ["info", "warn", "error", "never"]$/;"	s	array:definitions.languageServerBase.properties.revealOutputChannelOn.enum
2	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "enum": ["ipc", "stdio", "socket", "pipe"]$/;"	s	array:definitions.languageServerModule.properties.transport.enum
2	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "enum": ["off", "messages", "verbose"],$/;"	s	array:definitions.languageServerBase.properties.trace.server.enum
2	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "%{get(b:list_status, \\"args\\", \\"\\")}",$/;"	s	array:properties.list.statusLineSegments.default
2	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "enum": ["", "quickfix", "refactor", "source"]$/;"	s	array:properties.outline.codeActionKinds.items.enum
2	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": [" ", "(", "<", "{", "[", "\\r", "\\n"]$/;"	s	array:properties.suggest.invalidInsertCharacters.default
2	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": ["", "quickfix", "refactor"],$/;"	s	array:properties.outline.codeActionKinds.default
2	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": [".git", ".hg", ".projections.json"],$/;"	s	array:properties.coc.preferences.rootPatterns.default
2	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": ["markdown", "log", "txt", "help"],$/;"	s	array:properties.workspace.ignoredFiletypes.default
2	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["abbr", "menu", "preview"]$/;"	s	array:properties.suggest.detailField.enum
2	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "jump", "never"]$/;"	s	array:properties.diagnostic.enableMessage.enum
2	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "trigger", "none"]$/;"	s	array:properties.suggest.autoTrigger.enum
2	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["daily", "weekly", "never"]$/;"	s	array:properties.coc.preferences.extensionUpdateCheck.enum
2	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["full", "short", "filename", "hidden"],$/;"	s	array:properties.list.source.diagnostics.pathFormat.enum
2	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["hint", "information", "warning", "error"]$/;"	s	array:properties.diagnostic.level.enum
2	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["length", "alphabetical", "none"]$/;"	s	array:properties.suggest.defaultSortMethod.enum
2	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["more", "warning", "error"]$/;"	s	array:properties.coc.preferences.messageLevel.enum
2	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["position", "name", "category"]$/;"	s	array:properties.outline.sortBy.enum
2	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["preview", "echo", "float"]$/;"	s	array:properties.hover.target.enum
2	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["quickfix", "location", "none"]$/;"	s	array:properties.coc.preferences.listOfWorkspaceEdit.enum
2	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        { "fg": "#d2d4de", "bg": "#353a50" },$/;"	o	array:cycle
2. Switch between sources by pressing CTRL-D or CTRL-F	vim/.vim/plugged/fzf/README.md	/^#### 2. Switch between sources by pressing CTRL-D or CTRL-F$/;"	t	subsection:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics""Reloading the candidate list
2.0 (04/24/2013)	vim/.vim/plugged/vim-multiple-cursors/CHANGELOG.md	/^## 2.0 (04\/24\/2013)$/;"	s
2.1 (04/26/2013)	vim/.vim/plugged/vim-multiple-cursors/CHANGELOG.md	/^## 2.1 (04\/26\/2013)$/;"	s
2.2 (06/10/2013)	vim/.vim/plugged/vim-multiple-cursors/CHANGELOG.md	/^## 2.2 (06\/10\/2013)$/;"	s
2018-07-12	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-07-12$/;"	c
2018-07-13	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-07-13$/;"	c
2018-07-14	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-07-14$/;"	c
2018-07-15	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-07-15$/;"	c
2018-07-16	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-07-16$/;"	c
2018-07-17	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-07-17$/;"	c
2018-07-19	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-07-19$/;"	c
2018-07-20	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-07-20$/;"	c
2018-07-21	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-07-21$/;"	c
2018-07-23	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-07-23$/;"	c
2018-07-24	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-07-24$/;"	c
2018-07-27	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-07-27$/;"	c
2018-07-28	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-07-28$/;"	c
2018-07-29	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-07-29$/;"	c
2018-07-30	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-07-30$/;"	c
2018-07-31	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-07-31$/;"	c
2018-08-02	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-08-02$/;"	c
2018-08-03	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-08-03$/;"	c
2018-08-04	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-08-04$/;"	c
2018-08-05	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-08-05$/;"	c
2018-08-07	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-08-07$/;"	c
2018-08-08	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-08-08$/;"	c
2018-08-09	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-08-09$/;"	c
2018-08-10	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-08-10$/;"	c
2018-08-11	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-08-11$/;"	c
2018-08-12	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-08-12$/;"	c
2018-08-14	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-08-14$/;"	c
2018-08-15	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-08-15$/;"	c
2018-08-16	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-08-16$/;"	c
2018-08-17	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-08-17$/;"	c
2018-08-21	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-08-21$/;"	c
2018-08-23	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-08-23$/;"	c
2018-08-30	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-08-30$/;"	c
2018-09-07	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-09-07$/;"	c
2018-09-10	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-09-10$/;"	c
2018-09-15	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-09-15$/;"	c
2018-09-20	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-09-20$/;"	c
2018-09-24	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-09-24$/;"	c
2018-09-27	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-09-27$/;"	c
2018-09-28	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-09-28$/;"	c
2018-09-30	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-09-30$/;"	c
2018-10-01	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-10-01$/;"	c
2018-10-05	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-10-05$/;"	c
2018-10-14	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-10-14$/;"	c
2018-10-18	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-10-18$/;"	c
2018-10-21	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-10-21$/;"	c
2018-10-25	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-10-25$/;"	c
2018-10-29	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-10-29$/;"	c
2018-11-02	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-11-02$/;"	c
2018-11-07	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-11-07$/;"	c
2018-11-13	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-11-13$/;"	c
2018-11-19	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-11-19$/;"	c
2018-11-24	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-11-24$/;"	c
2018-11-28	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-11-28$/;"	c
2018-12-05	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-12-05$/;"	c
2018-12-06	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-12-06$/;"	c
2018-12-08	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-12-08$/;"	c
2018-12-12	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-12-12$/;"	c
2018-12-17	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-12-17$/;"	c
2018-12-20	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-12-20$/;"	c
2018-12-27	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-12-27$/;"	c
2018-12-31	vim/.vim/plugged/coc.nvim/history.md	/^# 2018-12-31$/;"	c
2019-01-01	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-01-01$/;"	c
2019-01-03	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-01-03$/;"	c
2019-01-09	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-01-09$/;"	c
2019-01-24	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-01-24$/;"	c
2019-01-28	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-01-28$/;"	c
2019-02-02	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-02-02$/;"	c
2019-02-04	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-02-04$/;"	c
2019-02-11	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-02-11$/;"	c
2019-02-12	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-02-12$/;"	c
2019-02-17	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-02-17$/;"	c
2019-02-22	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-02-22$/;"	c
2019-02-25	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-02-25$/;"	c
2019-03-03	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-03-03$/;"	c
2019-03-11	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-03-11$/;"	c
2019-03-16	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-03-16$/;"	c
2019-03-19	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-03-19$/;"	c
2019-03-24	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-03-24$/;"	c
2019-03-28	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-03-28$/;"	c
2019-03-31	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-03-31$/;"	c
2019-04-09	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-04-09$/;"	c
2019-04-27	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-04-27$/;"	c
2019-05-07	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-05-07$/;"	c
2019-05-30	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-05-30$/;"	c
2019-06-09	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-06-09$/;"	c
2019-06-12	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-06-12$/;"	c
2019-06-15	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-06-15$/;"	c
2019-07-01	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-07-01$/;"	c
2019-07-11 0.0.73	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-07-11 0.0.73$/;"	c
2019-08-18 0.0.74	vim/.vim/plugged/coc.nvim/history.md	/^# 2019-08-18 0.0.74$/;"	c
3	.config/nvim_copy/coc-settings.json	/^    "typescriptreact"$/;"	s	array:coc.preferences.formatOnSaveFiletypes
3	.config/nvim_copy/coc-settings.json	/^  "eslint.probe": ["javascript", "javascriptreact", "typescript", "typescriptreact", "html", "vu/;"	s	array:eslint.probe
3	vim/.vim/coc-settings.json	/^    "typescriptreact"$/;"	s	array:coc.preferences.formatOnSaveFiletypes
3	vim/.vim/coc-settings.json	/^  "eslint.probe": ["javascript", "javascriptreact", "typescript", "typescriptreact", "html", "vu/;"	s	array:eslint.probe
3	vim/.vim/plugged/coc.nvim/data/schema.json	/^            "tabe",$/;"	s	array:properties.coc.preferences.jumpCommand.anyOf.0.enum
3	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "enum": ["info", "warn", "error", "never"]$/;"	s	array:definitions.languageServerBase.properties.revealOutputChannelOn.enum
3	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "enum": ["ipc", "stdio", "socket", "pipe"]$/;"	s	array:definitions.languageServerModule.properties.transport.enum
3	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "(%L\/%{get(b:list_status, \\"total\\", \\"\\")})",$/;"	s	array:properties.list.statusLineSegments.default
3	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "enum": ["", "quickfix", "refactor", "source"]$/;"	s	array:properties.outline.codeActionKinds.items.enum
3	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": [" ", "(", "<", "{", "[", "\\r", "\\n"]$/;"	s	array:properties.suggest.invalidInsertCharacters.default
3	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": ["markdown", "log", "txt", "help"],$/;"	s	array:properties.workspace.ignoredFiletypes.default
3	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["full", "short", "filename", "hidden"],$/;"	s	array:properties.list.source.diagnostics.pathFormat.enum
3	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["hint", "information", "warning", "error"]$/;"	s	array:properties.diagnostic.level.enum
3	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        { "fg": "#d2d4de", "bg": "#454b68" },$/;"	o	array:cycle
3-space indentation	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^3-space indentation$/;"	S	section:Space-based indentation
3. Interactive ripgrep integration	vim/.vim/plugged/fzf/README.md	/^#### 3. Interactive ripgrep integration$/;"	t	subsection:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics""Reloading the candidate list
4	.config/nvim_copy/coc-settings.json	/^  "eslint.probe": ["javascript", "javascriptreact", "typescript", "typescriptreact", "html", "vu/;"	s	array:eslint.probe
4	vim/.vim/coc-settings.json	/^  "eslint.probe": ["javascript", "javascriptreact", "typescript", "typescriptreact", "html", "vu/;"	s	array:eslint.probe
4	vim/.vim/plugged/coc.nvim/data/schema.json	/^            "drop",$/;"	s	array:properties.coc.preferences.jumpCommand.anyOf.0.enum
4	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "%=",$/;"	s	array:properties.list.statusLineSegments.default
4	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": [" ", "(", "<", "{", "[", "\\r", "\\n"]$/;"	s	array:properties.suggest.invalidInsertCharacters.default
4	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        { "fg": "#d2d4de", "bg": "#353a50" },$/;"	o	array:cycle
4-space indentation with tab width of 8	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^4-space indentation with tab width of 8$/;"	S	section:Space-based indentation
5	.config/nvim_copy/coc-settings.json	/^  "eslint.probe": ["javascript", "javascriptreact", "typescript", "typescriptreact", "html", "vu/;"	s	array:eslint.probe
5	vim/.vim/coc-settings.json	/^  "eslint.probe": ["javascript", "javascriptreact", "typescript", "typescriptreact", "html", "vu/;"	s	array:eslint.probe
5	vim/.vim/plugged/coc.nvim/data/schema.json	/^            "tab drop",$/;"	s	array:properties.coc.preferences.jumpCommand.anyOf.0.enum
5	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "%#CocListPath# %{get(b:list_status, \\"cwd\\", \\"\\")} %l\/%L%*"$/;"	s	array:properties.list.statusLineSegments.default
5	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": [" ", "(", "<", "{", "[", "\\r", "\\n"]$/;"	s	array:properties.suggest.invalidInsertCharacters.default
5	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        { "fg": "#d2d4de", "bg": "#262939" },$/;"	o	array:cycle
6	.config/nvim_copy/coc-settings.json	/^  "eslint.probe": ["javascript", "javascriptreact", "typescript", "typescriptreact", "html", "vu/;"	s	array:eslint.probe
6	vim/.vim/coc-settings.json	/^  "eslint.probe": ["javascript", "javascriptreact", "typescript", "typescriptreact", "html", "vu/;"	s	array:eslint.probe
6	vim/.vim/plugged/coc.nvim/data/schema.json	/^            "pedit"$/;"	s	array:properties.coc.preferences.jumpCommand.anyOf.0.enum
6	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": [" ", "(", "<", "{", "[", "\\r", "\\n"]$/;"	s	array:properties.suggest.invalidInsertCharacters.default
6	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        { "fg": "#d2d4de", "bg": "#1e212d" }$/;"	o	array:cycle
:F {pattern} {file-mask} [params]	vim/.vim/plugged/far.vim/README.md	/^#### :F {pattern} {file-mask} [params]$/;"	t	subsection:far.vim - Find And Replace Vim plugin""Usage""Searching with Command
:Far {pattern} {replace-with} {file-mask} [params]	vim/.vim/plugged/far.vim/README.md	/^#### :Far {pattern} {replace-with} {file-mask} [params]$/;"	t	subsection:far.vim - Find And Replace Vim plugin""Usage""Searching with Command
:Fardo [params]	vim/.vim/plugged/far.vim/README.md	/^#### :Fardo [params]$/;"	t	subsection:far.vim - Find And Replace Vim plugin""Usage""Commands in the searching result window
:Farf [params]	vim/.vim/plugged/far.vim/README.md	/^#### :Farf [params]$/;"	t	subsection:far.vim - Find And Replace Vim plugin""Usage""Searching Interatively
:Farr [params]	vim/.vim/plugged/far.vim/README.md	/^#### :Farr [params]$/;"	t	subsection:far.vim - Find And Replace Vim plugin""Usage""Searching Interatively
:Farundo [params]	vim/.vim/plugged/far.vim/README.md	/^#### :Farundo [params]$/;"	t	subsection:far.vim - Find And Replace Vim plugin""Usage""Commands in the searching result window
:Refar [params]	vim/.vim/plugged/far.vim/README.md	/^#### :Refar [params]$/;"	t	subsection:far.vim - Find And Replace Vim plugin""Usage""Commands in the searching result window
;	.config/nvim_copy/init.vim	/^nnoremap ; :Buffers<CR>$/;"	m
;	vim/.vimrc	/^nnoremap ; :Buffers<CR>$/;"	m
<A-space>	.config/nvim_copy/init.vim	/^nmap <A-space> ?$/;"	m
<A-space>	vim/.vimrc	/^nmap <A-space> ?$/;"	m
<BS>	vim/.vim/plugged/coc.nvim/autoload/coc/snippet.vim	/^  snoremap <silent> <BS> <c-g>c$/;"	m
<C-H>	.config/nvim_copy/init.vim	/^nmap <C-H> <C-W><C-H>$/;"	m
<C-H>	vim/.vimrc	/^nmap <C-H> <C-W><C-H>$/;"	m
<C-J>	.config/nvim_copy/init.vim	/^nmap <C-J> <C-W><C-J>$/;"	m
<C-J>	vim/.vimrc	/^nmap <C-J> <C-W><C-J>$/;"	m
<C-K>	.config/nvim_copy/init.vim	/^nmap <C-K> <C-W><C-K>$/;"	m
<C-K>	vim/.vimrc	/^nmap <C-K> <C-W><C-K>$/;"	m
<C-L>	.config/nvim_copy/init.vim	/^nmap <C-L> <C-W><C-L>$/;"	m
<C-L>	vim/.vimrc	/^nmap <C-L> <C-W><C-L>$/;"	m
<C-N>	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^  nnoremap <buffer> <silent> <C-N>  :<C-U>call <SID>traverse_groups('j')<CR>$/;"	m
<C-P>	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^  nnoremap <buffer> <silent> <C-P>  :<C-U>call <SID>traverse_groups('k')<CR>$/;"	m
<C-a>	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^    inoremap <buffer> <C-a> <Home>$/;"	m
<C-c>	.config/nvim_copy/init.vim	/^inoremap <C-c> <ESC>$/;"	m
<C-c>	vim/.vimrc	/^inoremap <C-c> <ESC>$/;"	m
<C-e>	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^    inoremap <buffer><expr><C-e> pumvisible() ? "\\<C-e>" : "\\<End>"$/;"	m
<C-f>	.config/nvim_copy/init.vim	/^nnoremap <C-f> :Rg<Space>$/;"	m
<C-f>	vim/.vimrc	/^nnoremap <C-f> :Rg<Space>$/;"	m
<C-h>	.config/nvim_copy/init.vim	/^nnoremap <C-h> <C-w>h $/;"	m
<C-h>	vim/.vimrc	/^nnoremap <C-h> <C-w>h $/;"	m
<C-l>	.config/nvim_copy/init.vim	/^nnoremap <C-l> <C-w>l$/;"	m
<C-l>	vim/.vimrc	/^nnoremap <C-l> <C-w>l$/;"	m
<C-n>	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  nmap              <buffer> <C-n> ]]o$/;"	m
<C-n>	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  xmap              <buffer> <C-n> ]]ogv$/;"	m
<C-p>	.config/nvim_copy/init.vim	/^nnoremap <C-p> :GFilesCwd<cr>$/;"	m
<C-p>	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  nmap              <buffer> <C-p> [[o$/;"	m
<C-p>	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  xmap              <buffer> <C-p> [[ogv$/;"	m
<C-p>	vim/.vimrc	/^nnoremap <C-p> :GFilesCwd<cr>$/;"	m
<CR>	vim/.vim/plugged/vim-LanguageTool/autoload/languagetool.vim	/^    map <silent> <buffer> <CR> :call <sid>JumpToCurrentError()<CR>$/;"	m
<DEL>	vim/.vim/plugged/coc.nvim/autoload/coc/snippet.vim	/^  snoremap <silent> <DEL> <c-g>c$/;"	m
<Down>	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^  nnoremap <buffer> <silent> <Down> :<C-U>call <SID>traverse_branches('j')<CR>$/;"	m
<Esc>	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^        nnoremap <buffer> <silent> <Esc> :<C-U>call gitgutter#hunk#close_hunk_preview_window()<C/;"	m
<Esc>	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^    nnoremap <buffer> <silent> <Esc> :<C-U>wincmd p<Bar>pclose<CR>$/;"	m
<Leader><space>	.config/nvim_copy/init.vim	/^nmap <Leader><space> :nohlsearch<cr>$/;"	m
<Leader><space>	vim/.vimrc	/^nmap <Leader><space> :nohlsearch<cr>$/;"	m
<Leader>S	.config/nvim_copy/init.vim	/^nnoremap <silent> <Leader>S :<C-u>CocList outline<cr>$/;"	m
<Leader>S	vim/.vimrc	/^nnoremap <silent> <Leader>S :<C-u>CocList outline<cr>$/;"	m
<Leader>cc	.config/nvim_copy/init.vim	/^nnoremap <silent> <Leader>cc :<C-u>CocList commands<cr>$/;"	m
<Leader>cc	vim/.vimrc	/^nnoremap <silent> <Leader>cc :<C-u>CocList commands<cr>$/;"	m
<Leader>cd	.config/nvim_copy/init.vim	/^nnoremap <silent> <Leader>cd :<C-u>CocList diagnostics<cr>$/;"	m
<Leader>cd	vim/.vimrc	/^nnoremap <silent> <Leader>cd :<C-u>CocList diagnostics<cr>$/;"	m
<Leader>ce	.config/nvim_copy/init.vim	/^nnoremap <silent> <Leader>ce :<C-u>CocList extensions<cr>$/;"	m
<Leader>ce	vim/.vimrc	/^nnoremap <silent> <Leader>ce :<C-u>CocList extensions<cr>$/;"	m
<Leader>cj	.config/nvim_copy/init.vim	/^nnoremap <silent> <Leader>cj :<C-u>CocNext<CR>$/;"	m
<Leader>cj	vim/.vimrc	/^nnoremap <silent> <Leader>cj :<C-u>CocNext<CR>$/;"	m
<Leader>ck	.config/nvim_copy/init.vim	/^nnoremap <silent> <Leader>ck :<C-u>CocPrev<CR>$/;"	m
<Leader>ck	vim/.vimrc	/^nnoremap <silent> <Leader>ck :<C-u>CocPrev<CR>$/;"	m
<Leader>cl	.config/nvim_copy/init.vim	/^nnoremap <silent> <Leader>cl :<C-u>CocListResume<CR>$/;"	m
<Leader>cl	vim/.vimrc	/^nnoremap <silent> <Leader>cl :<C-u>CocListResume<CR>$/;"	m
<Leader>dn	.config/nvim_copy/init.vim	/^nmap <silent> <Leader>dn <Plug>(coc-diagnostic-next)$/;"	m
<Leader>dn	vim/.vimrc	/^nmap <silent> <Leader>dn <Plug>(coc-diagnostic-next)$/;"	m
<Leader>dp	.config/nvim_copy/init.vim	/^nmap <silent> <Leader>dp <Plug>(coc-diagnostic-prev)$/;"	m
<Leader>dp	vim/.vimrc	/^nmap <silent> <Leader>dp <Plug>(coc-diagnostic-prev)$/;"	m
<Leader>el	.config/nvim_copy/init.vim	/^nmap <Leader>el :tabedit ~\/.config\/nvim\/lightline.vim<cr>$/;"	m
<Leader>el	vim/.vimrc	/^nmap <Leader>el :tabedit ~\/.vim\/lightline.vim<cr>$/;"	m
<Leader>epl	.config/nvim_copy/init.vim	/^nmap <Leader>epl :tabedit ~\/.config\/nvim\/plugins.vim<cr>$/;"	m
<Leader>epl	vim/.vimrc	/^nmap <Leader>epl :tabedit ~\/.vim\/plugins.vim<cr>$/;"	m
<Leader>es	vim/.vimrc	/^nmap <Leader>es :e ~\/.vim\/snippets\/$/;"	m
<Leader>ev	.config/nvim_copy/init.vim	/^nmap <Leader>ev :tabedit ~\/.config\/nvim\/init.vim<cr>$/;"	m
<Leader>ev	vim/.vimrc	/^nmap <Leader>ev :tabedit ~\/.vimrc<cr>$/;"	m
<Leader>f	.config/nvim_copy/init.vim	/^nnoremap <Leader>f :Rg <C-R><C-W><cr>$/;"	m
<Leader>f	.config/nvim_copy/init.vim	/^vnoremap <Leader>f :Rg <C-R><cr>$/;"	m
<Leader>f	vim/.vimrc	/^nnoremap <Leader>f :Rg <C-R><C-W><cr>$/;"	m
<Leader>f	vim/.vimrc	/^vnoremap <Leader>f :Rg <C-R><cr>$/;"	m
<Leader>gb	.config/nvim_copy/init.vim	/^nnoremap <Leader>gb :.GBrowse<CR>$/;"	m
<Leader>gb	.config/nvim_copy/init.vim	/^vnoremap <Leader>gb :GBrowse<CR>$/;"	m
<Leader>gb	vim/.vimrc	/^nnoremap <Leader>gb :.GBrowse<CR>$/;"	m
<Leader>gb	vim/.vimrc	/^vnoremap <Leader>gb :GBrowse<CR>$/;"	m
<Leader>gl	.config/nvim_copy/init.vim	/^nnoremap <Leader>gl :Gblame<CR>$/;"	m
<Leader>gl	vim/.vimrc	/^nnoremap <Leader>gl :Gblame<CR>$/;"	m
<Leader>hp	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^    nmap <buffer> <Leader>hp <Plug>(GitGutterPreviewHunk)$/;"	m
<Leader>hs	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^    nmap <buffer> <Leader>hs <Plug>(GitGutterStageHunk)$/;"	m
<Leader>hs	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^    xmap <buffer> <Leader>hs <Plug>(GitGutterStageHunk)$/;"	m
<Leader>hu	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^    nmap <buffer> <Leader>hu <Plug>(GitGutterUndoHunk)$/;"	m
<Leader>l	.config/nvim_copy/init.vim	/^nmap <Leader>l :LanguageToolCheck$/;"	m
<Leader>l	.config/nvim_copy/init.vim	/^vmap <Leader>l :LanguageToolCheck$/;"	m
<Leader>l	vim/.vimrc	/^nmap <Leader>l :LanguageToolCheck$/;"	m
<Leader>l	vim/.vimrc	/^vmap <Leader>l :LanguageToolCheck$/;"	m
<Leader>r	.config/nvim_copy/init.vim	/^nmap <silent> <Leader>r <Plug>TranslateR$/;"	m
<Leader>r	.config/nvim_copy/init.vim	/^vmap <silent> <Leader>r <Plug>TranslateRV$/;"	m
<Leader>r	vim/.vimrc	/^nmap <silent> <Leader>r <Plug>TranslateR$/;"	m
<Leader>r	vim/.vimrc	/^vmap <silent> <Leader>r <Plug>TranslateRV$/;"	m
<Leader>s	.config/nvim_copy/init.vim	/^nnoremap <silent> <Leader>s :<C-u>CocList -I symbols<cr>$/;"	m
<Leader>s	vim/.vimrc	/^nnoremap <silent> <Leader>s :<C-u>CocList -I symbols<cr>$/;"	m
<Leader>v	.config/nvim_copy/init.vim	/^nnoremap <silent> <Leader>v :vsplit<CR>$/;"	m
<Leader>v	vim/.vimrc	/^nnoremap <silent> <Leader>v :vsplit<CR>$/;"	m
<Leader>x	.config/nvim_copy/init.vim	/^nmap <silent> <Leader>x <Plug>TranslateX$/;"	m
<Leader>x	vim/.vimrc	/^nmap <silent> <Leader>x <Plug>TranslateX$/;"	m
<LeftRelease>	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^      nnoremap <buffer><silent> <LeftRelease> :call coc#float#nvim_float_click()<CR>$/;"	m
<Plug>(-fzf-complete-finish)	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^inoremap <silent> <Plug>(-fzf-complete-finish) <c-o>l$/;"	m
<Plug>(-fzf-complete-finish)	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <silent> <Plug>(-fzf-complete-finish) a$/;"	m
<Plug>(-fzf-complete-trigger)	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^inoremap <silent> <Plug>(-fzf-complete-trigger) <c-o>:call <sid>complete_trigger()<cr>$/;"	m
<Plug>(GitGutterNextHunk)	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>(GitGutterNextHunk) &diff ? ']c' : ":\\<C-U>execute v:count1 . 'G/;"	m
<Plug>(GitGutterPrevHunk)	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>(GitGutterPrevHunk) &diff ? '[c' : ":\\<C-U>execute v:count1 . 'G/;"	m
<Plug>(GitGutterPreviewHunk)	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>(GitGutterPreviewHunk) :GitGutterPreviewHunk<CR>$/;"	m
<Plug>(GitGutterStageHunk)	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>(GitGutterStageHunk)   :GitGutterStageHunk<CR>$/;"	m
<Plug>(GitGutterStageHunk)	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^xnoremap <silent> <Plug>(GitGutterStageHunk)   :GitGutterStageHunk<CR>$/;"	m
<Plug>(GitGutterTextObjectInnerPending)	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^onoremap <silent> <Plug>(GitGutterTextObjectInnerPending) :<C-U>call gitgutter#hunk#text_object(/;"	m
<Plug>(GitGutterTextObjectInnerVisual)	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^xnoremap <silent> <Plug>(GitGutterTextObjectInnerVisual)  :<C-U>call gitgutter#hunk#text_object(/;"	m
<Plug>(GitGutterTextObjectOuterPending)	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^onoremap <silent> <Plug>(GitGutterTextObjectOuterPending) :<C-U>call gitgutter#hunk#text_object(/;"	m
<Plug>(GitGutterTextObjectOuterVisual)	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^xnoremap <silent> <Plug>(GitGutterTextObjectOuterVisual)  :<C-U>call gitgutter#hunk#text_object(/;"	m
<Plug>(GitGutterUndoHunk)	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>(GitGutterUndoHunk)    :GitGutterUndoHunk<CR>$/;"	m
<Plug>(coc-classobj-a)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^onoremap <silent> <Plug>(coc-classobj-a)       :<C-U>call CocAction('selectSymbolRange', v:false/;"	m
<Plug>(coc-classobj-a)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-classobj-a)       :<C-U>call CocAction('selectSymbolRange', v:false/;"	m
<Plug>(coc-classobj-i)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^onoremap <silent> <Plug>(coc-classobj-i)       :<C-U>call CocAction('selectSymbolRange', v:true,/;"	m
<Plug>(coc-classobj-i)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-classobj-i)       :<C-U>call CocAction('selectSymbolRange', v:true,/;"	m
<Plug>(coc-codeaction)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction)            :<C-u>call       CocActionAsync('codeAction',        /;"	m
<Plug>(coc-codeaction-cursor)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction-cursor)     :<C-u>call       CocActionAsync('codeAction',        /;"	m
<Plug>(coc-codeaction-line)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction-line)       :<C-u>call       CocActionAsync('codeAction',        /;"	m
<Plug>(coc-codeaction-selected)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction-selected)   :<C-u>set        operatorfunc=<SID>CodeActionFromSele/;"	m
<Plug>(coc-codeaction-selected)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-codeaction-selected)   :<C-u>call       CocActionAsync('codeAction'/;"	m
<Plug>(coc-codelens-action)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codelens-action)       :<C-u>call       CocActionAsync('codeLensAction')<CR>$/;"	m
<Plug>(coc-command-repeat)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-command-repeat)        :<C-u>call       CocAction('repeatCommand')</;"	m
<Plug>(coc-cursors-operator)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-cursors-operator) :<C-u>set operatorfunc=<SID>CursorRangeFromSelect/;"	m
<Plug>(coc-cursors-position)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-cursors-position) :<C-u>call CocAction('cursorsSelect', bufnr('%'),/;"	m
<Plug>(coc-cursors-range)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-cursors-range)    :<C-u>call CocAction('cursorsSelect', bufnr('%'),/;"	m
<Plug>(coc-cursors-word)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-cursors-word)     :<C-u>call CocAction('cursorsSelect', bufnr('%'),/;"	m
<Plug>(coc-declaration)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-declaration)           :<C-u>call       CocActionAsync('jumpDeclara/;"	m
<Plug>(coc-definition)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-definition)            :<C-u>call       CocActionAsync('jumpDefinit/;"	m
<Plug>(coc-diagnostic-info)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-diagnostic-info)       :<C-u>call       CocActionAsync('diagnosticI/;"	m
<Plug>(coc-diagnostic-next)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-diagnostic-next)       :<C-u>call       CocActionAsync('diagnosticN/;"	m
<Plug>(coc-diagnostic-next-error)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-diagnostic-next-error) :<C-u>call       CocActionAsync('diagnosticN/;"	m
<Plug>(coc-diagnostic-prev)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-diagnostic-prev)       :<C-u>call       CocActionAsync('diagnosticP/;"	m
<Plug>(coc-diagnostic-prev-error)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-diagnostic-prev-error) :<C-u>call       CocActionAsync('diagnosticP/;"	m
<Plug>(coc-fix-current)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-fix-current)           :<C-u>call       CocActionAsync('doQuickfix'/;"	m
<Plug>(coc-float-hide)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-float-hide)            :<C-u>call       coc#float#close_all()<CR>$/;"	m
<Plug>(coc-float-jump)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-float-jump)            :<c-u>call       coc#float#jump()<cr>$/;"	m
<Plug>(coc-format)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-format)                :<C-u>call       CocActionAsync('format')<CR/;"	m
<Plug>(coc-format-selected)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-format-selected)       :<C-u>set        operatorfunc=<SID>FormatFro/;"	m
<Plug>(coc-format-selected)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-format-selected)       :<C-u>call       CocActionAsync('formatSelec/;"	m
<Plug>(coc-funcobj-a)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^onoremap <silent> <Plug>(coc-funcobj-a)        :<C-U>call CocAction('selectSymbolRange', v:false/;"	m
<Plug>(coc-funcobj-a)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-funcobj-a)        :<C-U>call CocAction('selectSymbolRange', v:false/;"	m
<Plug>(coc-funcobj-i)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^onoremap <silent> <Plug>(coc-funcobj-i)        :<C-U>call CocAction('selectSymbolRange', v:true,/;"	m
<Plug>(coc-funcobj-i)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-funcobj-i)        :<C-U>call CocAction('selectSymbolRange', v:true,/;"	m
<Plug>(coc-implementation)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-implementation)        :<C-u>call       CocActionAsync('jumpImpleme/;"	m
<Plug>(coc-openlink)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-openlink)              :<C-u>call       CocActionAsync('openLink')</;"	m
<Plug>(coc-range-select)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-range-select)          :<C-u>call       CocActionAsync('rangeSelect',     ''/;"	m
<Plug>(coc-range-select)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-range-select)          :<C-u>call       CocActionAsync('rangeSelect/;"	m
<Plug>(coc-range-select-backward)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-range-select-backward) :<C-u>call       CocActionAsync('rangeSelect/;"	m
<Plug>(coc-refactor)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-refactor)              :<C-u>call       CocActionAsync('refactor')</;"	m
<Plug>(coc-references)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-references)            :<C-u>call       CocActionAsync('jumpReferen/;"	m
<Plug>(coc-references-used)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-references-used)       :<C-u>call       CocActionAsync('jumpUsed')</;"	m
<Plug>(coc-rename)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-rename)                :<C-u>call       CocActionAsync('rename')<CR/;"	m
<Plug>(coc-type-definition)	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-type-definition)       :<C-u>call       CocActionAsync('jumpTypeDef/;"	m
<Plug>(fzf-insert)	vim/.vim/plugged/fzf/plugin/fzf.vim	/^nnoremap <silent> <Plug>(fzf-insert) i$/;"	m
<Plug>(fzf-normal)	vim/.vim/plugged/fzf/plugin/fzf.vim	/^nnoremap <silent> <Plug>(fzf-normal) <Nop>$/;"	m
<Plug>(golden_ratio_resize)	vim/.vim/plugged/golden-ratio/plugin/golden_ratio.vim	/^inoremap <Plug>(golden_ratio_resize) <Esc>:call <SID>resize_to_golden_ratio()<CR>a$/;"	m
<Plug>(golden_ratio_resize)	vim/.vim/plugged/golden-ratio/plugin/golden_ratio.vim	/^nnoremap <Plug>(golden_ratio_resize) :<C-u>call <SID>resize_to_golden_ratio()<CR>$/;"	m
<Plug>(golden_ratio_toggle)	vim/.vim/plugged/golden-ratio/plugin/golden_ratio.vim	/^inoremap <Plug>(golden_ratio_toggle) <Esc>:call <SID>toggle_global_golden_ratio()<CR>a$/;"	m
<Plug>(golden_ratio_toggle)	vim/.vim/plugged/golden-ratio/plugin/golden_ratio.vim	/^nnoremap <Plug>(golden_ratio_toggle) :<C-u>call <SID>toggle_global_golden_ratio()<CR>$/;"	m
<Plug>(multiple-cursors-apply)	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(multiple-cursors-apply) <C-o>:call <SID>apply_user_input_next('i')<CR>$/;"	m
<Plug>(multiple-cursors-apply)	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-apply) :call <SID>apply_user_input_next('n')<CR>$/;"	m
<Plug>(multiple-cursors-apply)	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^xnoremap <silent> <Plug>(multiple-cursors-apply) :<C-u>call <SID>apply_user_input_next('v')<CR>$/;"	m
<Plug>(multiple-cursors-detect)	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(multiple-cursors-detect) <C-o>:call <SID>detect_bad_input()<CR>$/;"	m
<Plug>(multiple-cursors-detect)	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-detect) :call <SID>detect_bad_input()<CR>$/;"	m
<Plug>(multiple-cursors-detect)	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^xnoremap <silent> <Plug>(multiple-cursors-detect) :<C-u>call <SID>detect_bad_input()<CR>$/;"	m
<Plug>(multiple-cursors-input)	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(multiple-cursors-input) <C-o>:call <SID>process_user_input()<CR>$/;"	m
<Plug>(multiple-cursors-input)	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-input) :call <SID>process_user_input()<CR>$/;"	m
<Plug>(multiple-cursors-input)	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^xnoremap <silent> <Plug>(multiple-cursors-input) :<C-u>call <SID>process_user_input()<CR>$/;"	m
<Plug>(multiple-cursors-new)	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-new) :<C-u>call multiple_cursors#new('v', 0)<CR>$/;"	m
<Plug>(multiple-cursors-new-word)	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-new-word) :<C-u>call multiple_cursors#new('v', 1)<CR>$/;"	m
<Plug>(multiple-cursors-prev)	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-prev) :<C-u>call multiple_cursors#prev()<CR>$/;"	m
<Plug>(multiple-cursors-skip)	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-skip) :<C-u>call multiple_cursors#skip()<CR>$/;"	m
<Plug>(multiple-cursors-wait)	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(multiple-cursors-wait) <C-o>:call <SID>wait_for_user_input('')<CR>$/;"	m
<Plug>(multiple-cursors-wait)	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-wait) :call <SID>wait_for_user_input('')<CR>$/;"	m
<Plug>(multiple-cursors-wait)	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^xnoremap <silent> <Plug>(multiple-cursors-wait) :<C-u>call <SID>wait_for_user_input('')<CR>$/;"	m
<Plug>ChangeCommentary	vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>ChangeCommentary c:<C-U>call <SID>textobject(1)<CR>$/;"	m
<Plug>CocRefresh	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^inoremap <silent>                          <Plug>CocRefresh <C-r>=coc#_complete()<CR>$/;"	m
<Plug>Commentary	vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^nnoremap <expr>   <Plug>Commentary     <SID>go()$/;"	m
<Plug>Commentary	vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^onoremap <silent> <Plug>Commentary        :<C-U>call <SID>textobject(get(v:, 'operator', '') ==#/;"	m
<Plug>Commentary	vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^xnoremap <expr>   <Plug>Commentary     <SID>go()$/;"	m
<Plug>CommentaryLine	vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^nnoremap <expr>   <Plug>CommentaryLine <SID>go() . '_'$/;"	m
<Plug>CommentaryUndo	vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^nmap <silent> <Plug>CommentaryUndo :echoerr "Change your <Plug>CommentaryUndo map to <Plug>Comme/;"	m
<Plug>GitGutterNextHunk	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterNextHunk   &diff ? ']c' : ":\\<C-U>call gitgutter#utilit/;"	m
<Plug>GitGutterPrevHunk	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterPrevHunk   &diff ? '[c' : ":\\<C-U>call gitgutter#utilit/;"	m
<Plug>GitGutterPreviewHunk	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterPreviewHunk   :call gitgutter#utility#warn('Please change your /;"	m
<Plug>GitGutterStageHunk	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterStageHunk     :call gitgutter#utility#warn('Please change your /;"	m
<Plug>GitGutterStageHunk	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^xnoremap <silent> <Plug>GitGutterStageHunk     :call gitgutter#utility#warn('Please change your /;"	m
<Plug>GitGutterUndoHunk	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterUndoHunk      :call gitgutter#utility#warn('Please change your /;"	m
<Plug>Translate	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^nnoremap <silent> <Plug>Translate   :Translate<CR>$/;"	m
<Plug>TranslateR	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^nnoremap <silent> <Plug>TranslateR  viw:<C-u>TranslateR<CR>$/;"	m
<Plug>TranslateRV	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^vnoremap <silent> <Plug>TranslateRV :TranslateR<CR>$/;"	m
<Plug>TranslateV	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^vnoremap <silent> <Plug>TranslateV  :Translate<CR>$/;"	m
<Plug>TranslateW	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^nnoremap <silent> <Plug>TranslateW  :TranslateW<CR>$/;"	m
<Plug>TranslateWV	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^vnoremap <silent> <Plug>TranslateWV :TranslateW<CR>$/;"	m
<Plug>TranslateX	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^nnoremap <silent> <Plug>TranslateX  :TranslateX<CR>$/;"	m
<SID>:	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^nnoremap <SID>: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<Up>	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^  nnoremap <buffer> <silent> <Up>   :<C-U>call <SID>traverse_branches('k')<CR>$/;"	m
<c-h>	vim/.vim/plugged/coc.nvim/autoload/coc/snippet.vim	/^  snoremap <silent> <c-h> <c-g>c$/;"	m
<c-r>	vim/.vim/plugged/coc.nvim/autoload/coc/snippet.vim	/^  snoremap <c-r> <c-g>"_c<c-r>$/;"	m
<c-space>	.config/nvim_copy/init.vim	/^inoremap <silent><expr> <c-space> coc#refresh()$/;"	m
<c-space>	vim/.vimrc	/^inoremap <silent><expr> <c-space> coc#refresh()$/;"	m
<cr>	.config/nvim_copy/init.vim	/^inoremap <expr> <cr> pumvisible() ? "\\<C-y>" : "\\<C-g>u\\<CR>"$/;"	m
<cr>	vim/.vim/autoload/plug.vim	/^      nmap <buffer> <cr> <plug>(plug-preview)$/;"	m
<cr>	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <silent> <buffer> <cr> :call <sid>open(0)<cr>$/;"	m
<cr>	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  xnoremap <silent> <buffer> <cr> :<c-u>call <sid>open(1)<cr>$/;"	m
<cr>	vim/.vimrc	/^inoremap <expr> <cr> pumvisible() ? "\\<C-y>" : "\\<C-g>u\\<CR>"$/;"	m
<esc>	vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^  nnoremap <silent><nowait><buffer> <esc> <C-w>c$/;"	m
<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)	vim/.vim/plugged/fzf/README.md	/^<img src="https:\/\/raw.githubusercontent.com\/junegunn\/i\/master\/fzf.png" height="170" alt="f/;"	c
<leader>Q	.config/nvim_copy/init.vim	/^nmap <leader>Q  <Plug>(coc-fix-current)$/;"	m
<leader>Q	vim/.vimrc	/^nmap <leader>Q  <Plug>(coc-fix-current)$/;"	m
<leader>a	.config/nvim_copy/init.vim	/^nmap <leader>a <Plug>(coc-codeaction-selected)$/;"	m
<leader>a	.config/nvim_copy/init.vim	/^vmap <leader>a <Plug>(coc-codeaction-selected)$/;"	m
<leader>a	vim/.vimrc	/^nmap <leader>a <Plug>(coc-codeaction-selected)$/;"	m
<leader>a	vim/.vimrc	/^vmap <leader>a <Plug>(coc-codeaction-selected)$/;"	m
<leader>ac	.config/nvim_copy/init.vim	/^nmap <leader>ac <Plug>(coc-codeaction)$/;"	m
<leader>ac	vim/.vimrc	/^nmap <leader>ac <Plug>(coc-codeaction)$/;"	m
<leader>ba	.config/nvim_copy/init.vim	/^nmap <leader>ba :bufdo$/;"	m
<leader>ba	vim/.vimrc	/^nmap <leader>ba :bufdo$/;"	m
<leader>cd	.config/nvim_copy/init.vim	/^nmap <leader>cd :Rooter<cr>$/;"	m
<leader>cd	vim/.vimrc	/^nmap <leader>cd :Rooter<cr>$/;"	m
<leader>f	.config/nvim_copy/init.vim	/^nmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>f	.config/nvim_copy/init.vim	/^xmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>f	vim/.vimrc	/^nmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>f	vim/.vimrc	/^xmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>gL	.config/nvim_copy/init.vim	/^nnoremap <silent> <leader>gL :Commits<CR>$/;"	m
<leader>gL	vim/.vimrc	/^nnoremap <silent> <leader>gL :Commits<CR>$/;"	m
<leader>gc	.config/nvim_copy/init.vim	/^nnoremap <leader>gc :Gcommit<CR>$/;"	m
<leader>gc	vim/.vimrc	/^nnoremap <leader>gc :Gcommit<CR>$/;"	m
<leader>gl	.config/nvim_copy/init.vim	/^nnoremap <silent> <leader>gl :Commits<CR>$/;"	m
<leader>gl	vim/.vimrc	/^nnoremap <silent> <leader>gl :Commits<CR>$/;"	m
<leader>gp	.config/nvim_copy/init.vim	/^nnoremap <leader>gp :Gpush<CR>$/;"	m
<leader>gp	vim/.vimrc	/^nnoremap <leader>gp :Gpush<CR>$/;"	m
<leader>gs	.config/nvim_copy/init.vim	/^nnoremap <leader>gs :Gstatus<CR>$/;"	m
<leader>gs	vim/.vimrc	/^nnoremap <leader>gs :Gstatus<CR>$/;"	m
<leader>gv	.config/nvim_copy/init.vim	/^nnoremap <leader>gv :GV<CR>$/;"	m
<leader>gv	vim/.vimrc	/^nnoremap <leader>gv :GV<CR>$/;"	m
<leader>gvf	.config/nvim_copy/init.vim	/^nnoremap <leader>gvf :GV!<CR>$/;"	m
<leader>gvf	vim/.vimrc	/^nnoremap <leader>gvf :GV!<CR>$/;"	m
<leader>hh	.config/nvim_copy/init.vim	/^nnoremap <silent> <leader>hh :Helptags<CR>$/;"	m
<leader>hh	vim/.vimrc	/^nnoremap <silent> <leader>hh :Helptags<CR>$/;"	m
<leader>nt	.config/nvim_copy/init.vim	/^nmap <leader>nt :tabnew<cr>$/;"	m
<leader>nt	vim/.vimrc	/^nmap <leader>nt :tabnew<cr>$/;"	m
<leader>rn	.config/nvim_copy/init.vim	/^nmap <leader>rn <Plug>(coc-rename)$/;"	m
<leader>rn	vim/.vimrc	/^nmap <leader>rn <Plug>(coc-rename)$/;"	m
<leader>t	.config/nvim_copy/init.vim	/^nnoremap <leader>t :Tags<CR>$/;"	m
<leader>t	vim/.vimrc	/^nnoremap <leader>t :Tags<CR>$/;"	m
<leader>tc	.config/nvim_copy/init.vim	/^nmap <leader>tc :tabclose<cr>$/;"	m
<leader>tc	vim/.vimrc	/^nmap <leader>tc :tabclose<cr>$/;"	m
<leader>te	.config/nvim_copy/init.vim	/^nmap <leader>te :tabedit <c-r>=expand("%:p:h")<cr>\/$/;"	m
<leader>te	vim/.vimrc	/^nmap <leader>te :tabedit <c-r>=expand("%:p:h")<cr>\/$/;"	m
<leader>tl	.config/nvim_copy/init.vim	/^nmap <leader>tl :exe "tabn ".g:lasttab<cr>$/;"	m
<leader>tl	vim/.vimrc	/^nmap <leader>tl :exe "tabn ".g:lasttab<cr>$/;"	m
<leader>tm	.config/nvim_copy/init.vim	/^nmap <leader>tm :tabmove$/;"	m
<leader>tm	vim/.vimrc	/^nmap <leader>tm :tabmove$/;"	m
<leader>tn	.config/nvim_copy/init.vim	/^nmap <leader>tn :tabnext<cr>$/;"	m
<leader>tn	vim/.vimrc	/^nmap <leader>tn :tabnext<cr>$/;"	m
<leader>to	.config/nvim_copy/init.vim	/^nmap <leader>to :tabonly<cr>$/;"	m
<leader>to	vim/.vimrc	/^nmap <leader>to :tabonly<cr>$/;"	m
<leader>tp	.config/nvim_copy/init.vim	/^nmap <leader>tp :tabprevious<cr>$/;"	m
<leader>tp	vim/.vimrc	/^nmap <leader>tp :tabprevious<cr>$/;"	m
<leader>w	.config/nvim_copy/init.vim	/^nmap <leader>w :w!<cr>$/;"	m
<leader>w	vim/.vimrc	/^nmap <leader>w :w!<cr>$/;"	m
<plug>(-fzf-/)	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-\/) \/$/;"	m
<plug>(-fzf-:)	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-:) :$/;"	m
<plug>(-fzf-vim-do)	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-vim-do) :execute g:__fzf_command<cr>$/;"	m
<plug>(fzf-complete-buffer-line)	vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-buffer-line) fzf#vim#complete#buffer_line()$/;"	m
<plug>(fzf-complete-file)	vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path("find . -path '*\/\\.*' -/;"	m
<plug>(fzf-complete-file)	vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path('dir \/s\/b\/a:-d')$/;"	m
<plug>(fzf-complete-file-ag)	vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-file-ag)     fzf#vim#complete#path('ag -l -g ""')$/;"	m
<plug>(fzf-complete-line)	vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-line)        fzf#vim#complete#line()$/;"	m
<plug>(fzf-complete-path)	vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path("find . -path '*\/\\.*' -/;"	m
<plug>(fzf-complete-path)	vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path('dir \/s\/b')$/;"	m
<plug>(fzf-complete-word)	vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-word)        fzf#vim#complete#word()$/;"	m
<plug>(fzf-maps-i)	vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <silent> <plug>(fzf-maps-i) <c-o>:call fzf#vim#maps('i', 0)<cr>$/;"	m
<plug>(fzf-maps-n)	vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^nnoremap <silent> <plug>(fzf-maps-n) :<c-u>call fzf#vim#maps('n', 0)<cr>$/;"	m
<plug>(fzf-maps-o)	vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^onoremap <silent> <plug>(fzf-maps-o) <c-c>:<c-u>call fzf#vim#maps('o', 0)<cr>$/;"	m
<plug>(fzf-maps-x)	vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^xnoremap <silent> <plug>(fzf-maps-x) :<c-u>call fzf#vim#maps('x', 0)<cr>$/;"	m
<plug>(plug-preview)	vim/.vim/autoload/plug.vim	/^    nnoremap <silent> <buffer> <plug>(plug-preview) :silent! call <SID>preview_commit()<cr>$/;"	m
<space>	.config/nvim_copy/init.vim	/^nmap <space> \/$/;"	m
<space>	vim/.vimrc	/^nmap <space> \/$/;"	m
?	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^    nnoremap <buffer> <silent> ? :<C-U>call <SID>Quickhelp()<CR>$/;"	m
?	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^  nnoremap <buffer> <silent> ? :Twiggy<CR>$/;"	m
@babel/code-frame	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/code-frame": "^7.0.0",$/;"	s	object:dependencies.eslint.requires
@babel/code-frame	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/code-frame": "^7.0.0",$/;"	s	object:dependencies.jest-message-util.requires
@babel/code-frame	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/code-frame": "^7.0.0",$/;"	s	object:dependencies.parse-json.requires
@babel/code-frame	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/code-frame": "^7.12.13",$/;"	s	object:dependencies.@babel/core.requires
@babel/code-frame	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/code-frame": "^7.12.13",$/;"	s	object:dependencies.@babel/template.requires
@babel/code-frame	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/code-frame": "^7.12.13",$/;"	s	object:dependencies.@babel/traverse.requires
@babel/code-frame	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/code-frame": {$/;"	o	object:dependencies
@babel/compat-data	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/compat-data": "^7.14.4",$/;"	s	object:dependencies.@babel/helper-compilation-targets.requires
@babel/compat-data	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/compat-data": {$/;"	o	object:dependencies
@babel/core	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/core": "^7.1.0",$/;"	s	object:dependencies.@jest/transform.requires
@babel/core	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/core": "^7.1.0",$/;"	s	object:dependencies.jest-config.requires
@babel/core	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/core": "^7.7.5",$/;"	s	object:dependencies.istanbul-lib-instrument.requires
@babel/core	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/core": {$/;"	o	object:dependencies
@babel/generator	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/generator": "^7.14.2",$/;"	s	object:dependencies.@babel/traverse.requires
@babel/generator	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/generator": "^7.14.3",$/;"	s	object:dependencies.@babel/core.requires
@babel/generator	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/generator": {$/;"	o	object:dependencies
@babel/helper-compilation-targets	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-compilation-targets": "^7.13.16",$/;"	s	object:dependencies.@babel/core.requires
@babel/helper-compilation-targets	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-compilation-targets": {$/;"	o	object:dependencies
@babel/helper-function-name	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-function-name": "^7.14.2",$/;"	s	object:dependencies.@babel/traverse.requires
@babel/helper-function-name	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-function-name": {$/;"	o	object:dependencies
@babel/helper-get-function-arity	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-get-function-arity": "^7.12.13",$/;"	s	object:dependencies.@babel/helper-function-name.requires
@babel/helper-get-function-arity	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-get-function-arity": {$/;"	o	object:dependencies
@babel/helper-member-expression-to-functions	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-member-expression-to-functions": "^7.13.12",$/;"	s	object:dependencies.@babel/helper-replace-supers.requires
@babel/helper-member-expression-to-functions	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-member-expression-to-functions": {$/;"	o	object:dependencies
@babel/helper-module-imports	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-module-imports": "^7.13.12",$/;"	s	object:dependencies.@babel/helper-module-transforms.requires
@babel/helper-module-imports	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-module-imports": {$/;"	o	object:dependencies
@babel/helper-module-transforms	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-module-transforms": "^7.14.2",$/;"	s	object:dependencies.@babel/core.requires
@babel/helper-module-transforms	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-module-transforms": {$/;"	o	object:dependencies
@babel/helper-optimise-call-expression	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-optimise-call-expression": "^7.12.13",$/;"	s	object:dependencies.@babel/helper-replace-supers.requires
@babel/helper-optimise-call-expression	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-optimise-call-expression": {$/;"	o	object:dependencies
@babel/helper-plugin-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.0.0",$/;"	s	object:dependencies.babel-plugin-istanbul.requires
@babel/helper-plugin-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.10.4"$/;"	s	object:dependencies.@babel/plugin-syntax-import-meta.requires
@babel/helper-plugin-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.10.4"$/;"	s	object:dependencies.@babel/plugin-syntax-logical-assignment-operators.requires
@babel/helper-plugin-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.10.4"$/;"	s	object:dependencies.@babel/plugin-syntax-numeric-separator.requires
@babel/helper-plugin-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.12.13"$/;"	s	object:dependencies.@babel/plugin-syntax-class-properties.requires
@babel/helper-plugin-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.12.13"$/;"	s	object:dependencies.@babel/plugin-syntax-top-level-await.requires
@babel/helper-plugin-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.8.0"$/;"	s	object:dependencies.@babel/plugin-syntax-async-generators.requires
@babel/helper-plugin-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.8.0"$/;"	s	object:dependencies.@babel/plugin-syntax-bigint.requires
@babel/helper-plugin-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.8.0"$/;"	s	object:dependencies.@babel/plugin-syntax-json-strings.requires
@babel/helper-plugin-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.8.0"$/;"	s	object:dependencies.@babel/plugin-syntax-nullish-coalescing-operator.requires
@babel/helper-plugin-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.8.0"$/;"	s	object:dependencies.@babel/plugin-syntax-object-rest-spread.requires
@babel/helper-plugin-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.8.0"$/;"	s	object:dependencies.@babel/plugin-syntax-optional-catch-binding.requires
@babel/helper-plugin-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-plugin-utils": "^7.8.0"$/;"	s	object:dependencies.@babel/plugin-syntax-optional-chaining.requires
@babel/helper-plugin-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-plugin-utils": {$/;"	o	object:dependencies
@babel/helper-replace-supers	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-replace-supers": "^7.13.12",$/;"	s	object:dependencies.@babel/helper-module-transforms.requires
@babel/helper-replace-supers	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-replace-supers": {$/;"	o	object:dependencies
@babel/helper-simple-access	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-simple-access": "^7.13.12",$/;"	s	object:dependencies.@babel/helper-module-transforms.requires
@babel/helper-simple-access	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-simple-access": {$/;"	o	object:dependencies
@babel/helper-split-export-declaration	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-split-export-declaration": "^7.12.13",$/;"	s	object:dependencies.@babel/helper-module-transforms.requires
@babel/helper-split-export-declaration	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-split-export-declaration": "^7.12.13",$/;"	s	object:dependencies.@babel/traverse.requires
@babel/helper-split-export-declaration	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-split-export-declaration": {$/;"	o	object:dependencies
@babel/helper-validator-identifier	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-validator-identifier": "^7.14.0",$/;"	s	object:dependencies.@babel/helper-module-transforms.requires
@babel/helper-validator-identifier	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-validator-identifier": "^7.14.0",$/;"	s	object:dependencies.@babel/highlight.requires
@babel/helper-validator-identifier	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-validator-identifier": "^7.14.0",$/;"	s	object:dependencies.@babel/types.requires
@babel/helper-validator-identifier	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-validator-identifier": {$/;"	o	object:dependencies
@babel/helper-validator-option	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helper-validator-option": "^7.12.17",$/;"	s	object:dependencies.@babel/helper-compilation-targets.requires
@babel/helper-validator-option	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/helper-validator-option": {$/;"	o	object:dependencies
@babel/helpers	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/helpers": "^7.14.0",$/;"	s	object:dependencies.@babel/core.requires
@babel/helpers	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/helpers": {$/;"	o	object:dependencies
@babel/highlight	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/highlight": "^7.12.13"$/;"	s	object:dependencies.@babel/code-frame.requires
@babel/highlight	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/highlight": {$/;"	o	object:dependencies
@babel/parser	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/parser": "^7.1.0",$/;"	s	object:dependencies.@types/babel__core.requires
@babel/parser	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/parser": "^7.1.0",$/;"	s	object:dependencies.@types/babel__template.requires
@babel/parser	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/parser": "^7.12.13",$/;"	s	object:dependencies.@babel/template.requires
@babel/parser	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/parser": "^7.14.2",$/;"	s	object:dependencies.@babel/traverse.requires
@babel/parser	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/parser": "^7.14.3",$/;"	s	object:dependencies.@babel/core.requires
@babel/parser	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/parser": {$/;"	o	object:dependencies
@babel/plugin-syntax-async-generators	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/plugin-syntax-async-generators": "^7.8.4",$/;"	s	object:dependencies.babel-preset-current-node-syntax.requires
@babel/plugin-syntax-async-generators	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/plugin-syntax-async-generators": {$/;"	o	object:dependencies
@babel/plugin-syntax-bigint	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/plugin-syntax-bigint": "^7.8.3",$/;"	s	object:dependencies.babel-preset-current-node-syntax.requires
@babel/plugin-syntax-bigint	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/plugin-syntax-bigint": {$/;"	o	object:dependencies
@babel/plugin-syntax-class-properties	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/plugin-syntax-class-properties": "^7.8.3",$/;"	s	object:dependencies.babel-preset-current-node-syntax.requires
@babel/plugin-syntax-class-properties	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/plugin-syntax-class-properties": {$/;"	o	object:dependencies
@babel/plugin-syntax-import-meta	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/plugin-syntax-import-meta": "^7.8.3",$/;"	s	object:dependencies.babel-preset-current-node-syntax.requires
@babel/plugin-syntax-import-meta	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/plugin-syntax-import-meta": {$/;"	o	object:dependencies
@babel/plugin-syntax-json-strings	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/plugin-syntax-json-strings": "^7.8.3",$/;"	s	object:dependencies.babel-preset-current-node-syntax.requires
@babel/plugin-syntax-json-strings	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/plugin-syntax-json-strings": {$/;"	o	object:dependencies
@babel/plugin-syntax-logical-assignment-operators	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/plugin-syntax-logical-assignment-operators": "^7.8.3",$/;"	s	object:dependencies.babel-preset-current-node-syntax.requires
@babel/plugin-syntax-logical-assignment-operators	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/plugin-syntax-logical-assignment-operators": {$/;"	o	object:dependencies
@babel/plugin-syntax-nullish-coalescing-operator	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/plugin-syntax-nullish-coalescing-operator": "^7.8.3",$/;"	s	object:dependencies.babel-preset-current-node-syntax.requires
@babel/plugin-syntax-nullish-coalescing-operator	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/plugin-syntax-nullish-coalescing-operator": {$/;"	o	object:dependencies
@babel/plugin-syntax-numeric-separator	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/plugin-syntax-numeric-separator": "^7.8.3",$/;"	s	object:dependencies.babel-preset-current-node-syntax.requires
@babel/plugin-syntax-numeric-separator	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/plugin-syntax-numeric-separator": {$/;"	o	object:dependencies
@babel/plugin-syntax-object-rest-spread	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/plugin-syntax-object-rest-spread": "^7.8.3",$/;"	s	object:dependencies.babel-preset-current-node-syntax.requires
@babel/plugin-syntax-object-rest-spread	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/plugin-syntax-object-rest-spread": {$/;"	o	object:dependencies
@babel/plugin-syntax-optional-catch-binding	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/plugin-syntax-optional-catch-binding": "^7.8.3",$/;"	s	object:dependencies.babel-preset-current-node-syntax.requires
@babel/plugin-syntax-optional-catch-binding	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/plugin-syntax-optional-catch-binding": {$/;"	o	object:dependencies
@babel/plugin-syntax-optional-chaining	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/plugin-syntax-optional-chaining": "^7.8.3",$/;"	s	object:dependencies.babel-preset-current-node-syntax.requires
@babel/plugin-syntax-optional-chaining	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/plugin-syntax-optional-chaining": {$/;"	o	object:dependencies
@babel/plugin-syntax-top-level-await	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/plugin-syntax-top-level-await": "^7.8.3"$/;"	s	object:dependencies.babel-preset-current-node-syntax.requires
@babel/plugin-syntax-top-level-await	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/plugin-syntax-top-level-await": {$/;"	o	object:dependencies
@babel/template	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/template": "^7.12.13",$/;"	s	object:dependencies.@babel/core.requires
@babel/template	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/template": "^7.12.13",$/;"	s	object:dependencies.@babel/helper-function-name.requires
@babel/template	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/template": "^7.12.13",$/;"	s	object:dependencies.@babel/helper-module-transforms.requires
@babel/template	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/template": "^7.12.13",$/;"	s	object:dependencies.@babel/helpers.requires
@babel/template	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/template": "^7.3.3",$/;"	s	object:dependencies.babel-plugin-jest-hoist.requires
@babel/template	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/template": {$/;"	o	object:dependencies
@babel/traverse	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/traverse": "^7.1.0",$/;"	s	object:dependencies.jest-jasmine2.requires
@babel/traverse	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/traverse": "^7.14.0",$/;"	s	object:dependencies.@babel/helpers.requires
@babel/traverse	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/traverse": "^7.14.2",$/;"	s	object:dependencies.@babel/core.requires
@babel/traverse	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/traverse": "^7.14.2",$/;"	s	object:dependencies.@babel/helper-module-transforms.requires
@babel/traverse	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/traverse": "^7.14.2",$/;"	s	object:dependencies.@babel/helper-replace-supers.requires
@babel/traverse	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/traverse": {$/;"	o	object:dependencies
@babel/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.0.0"$/;"	s	object:dependencies.@types/babel__generator.requires
@babel/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.0.0"$/;"	s	object:dependencies.@types/babel__template.requires
@babel/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.0.0",$/;"	s	object:dependencies.@types/babel__core.requires
@babel/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.0.0",$/;"	s	object:dependencies.jest-snapshot.requires
@babel/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.12.13"$/;"	s	object:dependencies.@babel/helper-get-function-arity.requires
@babel/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.12.13"$/;"	s	object:dependencies.@babel/helper-optimise-call-expression.requires
@babel/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.12.13"$/;"	s	object:dependencies.@babel/helper-split-export-declaration.requires
@babel/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.12.13"$/;"	s	object:dependencies.@babel/template.requires
@babel/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.13.12"$/;"	s	object:dependencies.@babel/helper-member-expression-to-functions.requires
@babel/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.13.12"$/;"	s	object:dependencies.@babel/helper-module-imports.requires
@babel/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.13.12"$/;"	s	object:dependencies.@babel/helper-simple-access.requires
@babel/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.14.0"$/;"	s	object:dependencies.@babel/helpers.requires
@babel/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.14.2"$/;"	s	object:dependencies.@babel/helper-function-name.requires
@babel/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.14.2"$/;"	s	object:dependencies.@babel/helper-module-transforms.requires
@babel/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.14.2",$/;"	s	object:dependencies.@babel/core.requires
@babel/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.14.2",$/;"	s	object:dependencies.@babel/generator.requires
@babel/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.14.2",$/;"	s	object:dependencies.@babel/traverse.requires
@babel/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.14.4"$/;"	s	object:dependencies.@babel/helper-replace-supers.requires
@babel/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.3.0"$/;"	s	object:dependencies.@types/babel__traverse.requires
@babel/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@babel\/types": "^7.3.3",$/;"	s	object:dependencies.babel-plugin-jest-hoist.requires
@babel/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@babel\/types": {$/;"	o	object:dependencies
@bcoe/v8-coverage	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@bcoe\/v8-coverage": "^0.2.3",$/;"	s	object:dependencies.@jest/reporters.requires
@bcoe/v8-coverage	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@bcoe\/v8-coverage": {$/;"	o	object:dependencies
@chemzqm/neovim	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@chemzqm\/neovim": {$/;"	o	object:dependencies
@cnakazawa/watch	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@cnakazawa\/watch": "^1.0.3",$/;"	s	object:dependencies.sane.requires
@cnakazawa/watch	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@cnakazawa\/watch": {$/;"	o	object:dependencies
@eslint/eslintrc	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@eslint\/eslintrc": "^0.2.2",$/;"	s	object:dependencies.eslint.requires
@eslint/eslintrc	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@eslint\/eslintrc": {$/;"	o	object:dependencies
@istanbuljs/load-nyc-config	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@istanbuljs\/load-nyc-config": "^1.0.0",$/;"	s	object:dependencies.babel-plugin-istanbul.requires
@istanbuljs/load-nyc-config	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@istanbuljs\/load-nyc-config": {$/;"	o	object:dependencies
@istanbuljs/schema	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@istanbuljs\/schema": "^0.1.2",$/;"	s	object:dependencies.babel-plugin-istanbul.requires
@istanbuljs/schema	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@istanbuljs\/schema": "^0.1.2",$/;"	s	object:dependencies.istanbul-lib-instrument.requires
@istanbuljs/schema	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@istanbuljs\/schema": "^0.1.2",$/;"	s	object:dependencies.test-exclude.requires
@istanbuljs/schema	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@istanbuljs\/schema": {$/;"	o	object:dependencies
@jest/console	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/console": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
@jest/console	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/console": "^26.6.2",$/;"	s	object:dependencies.@jest/reporters.requires
@jest/console	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/console": "^26.6.2",$/;"	s	object:dependencies.@jest/test-result.requires
@jest/console	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/console": "^26.6.2",$/;"	s	object:dependencies.jest-runner.requires
@jest/console	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/console": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
@jest/console	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@jest\/console": {$/;"	o	object:dependencies
@jest/core	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "@jest\/core": "^26.6.3",$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
@jest/core	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/core": "^26.6.3",$/;"	s	object:dependencies.jest.requires
@jest/core	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@jest\/core": {$/;"	o	object:dependencies
@jest/environment	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/environment": "^26.6.2",$/;"	s	object:dependencies.@jest/globals.requires
@jest/environment	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/environment": "^26.6.2",$/;"	s	object:dependencies.jest-environment-jsdom.requires
@jest/environment	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/environment": "^26.6.2",$/;"	s	object:dependencies.jest-environment-node.requires
@jest/environment	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/environment": "^26.6.2",$/;"	s	object:dependencies.jest-jasmine2.requires
@jest/environment	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/environment": "^26.6.2",$/;"	s	object:dependencies.jest-runner.requires
@jest/environment	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/environment": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
@jest/environment	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@jest\/environment": {$/;"	o	object:dependencies
@jest/fake-timers	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/fake-timers": "^26.6.2",$/;"	s	object:dependencies.@jest/environment.requires
@jest/fake-timers	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/fake-timers": "^26.6.2",$/;"	s	object:dependencies.jest-environment-jsdom.requires
@jest/fake-timers	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/fake-timers": "^26.6.2",$/;"	s	object:dependencies.jest-environment-node.requires
@jest/fake-timers	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/fake-timers": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
@jest/fake-timers	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@jest\/fake-timers": {$/;"	o	object:dependencies
@jest/globals	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/globals": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
@jest/globals	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@jest\/globals": {$/;"	o	object:dependencies
@jest/reporters	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/reporters": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
@jest/reporters	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@jest\/reporters": {$/;"	o	object:dependencies
@jest/source-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/source-map": "^26.6.2",$/;"	s	object:dependencies.jest-jasmine2.requires
@jest/source-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/source-map": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
@jest/source-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@jest\/source-map": {$/;"	o	object:dependencies
@jest/test-result	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "@jest\/test-result": "^26.6.2",$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
@jest/test-result	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/test-result": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
@jest/test-result	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/test-result": "^26.6.2",$/;"	s	object:dependencies.@jest/reporters.requires
@jest/test-result	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/test-result": "^26.6.2",$/;"	s	object:dependencies.@jest/test-sequencer.requires
@jest/test-result	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/test-result": "^26.6.2",$/;"	s	object:dependencies.jest-jasmine2.requires
@jest/test-result	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/test-result": "^26.6.2",$/;"	s	object:dependencies.jest-runner.requires
@jest/test-result	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/test-result": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
@jest/test-result	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/test-result": "^26.6.2",$/;"	s	object:dependencies.jest-watcher.requires
@jest/test-result	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@jest\/test-result": {$/;"	o	object:dependencies
@jest/test-sequencer	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/test-sequencer": "^26.6.3",$/;"	s	object:dependencies.jest-config.requires
@jest/test-sequencer	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@jest\/test-sequencer": {$/;"	o	object:dependencies
@jest/transform	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/transform": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
@jest/transform	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/transform": "^26.6.2",$/;"	s	object:dependencies.@jest/reporters.requires
@jest/transform	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/transform": "^26.6.2",$/;"	s	object:dependencies.babel-jest.requires
@jest/transform	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/transform": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
@jest/transform	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@jest\/transform": {$/;"	o	object:dependencies
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.@jest/console.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.@jest/environment.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.@jest/fake-timers.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.@jest/globals.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.@jest/reporters.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.@jest/test-result.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.@jest/transform.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.babel-jest.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.expect.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-changed-files.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-config.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-each.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-environment-jsdom.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-environment-node.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-haste-map.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-jasmine2.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-message-util.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-mock.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-resolve-dependencies.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-resolve.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-runner.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-snapshot.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-util.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-validate.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.jest-watcher.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@jest\/types": "^26.6.2",$/;"	s	object:dependencies.pretty-format.requires
@jest/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@jest\/types": {$/;"	o	object:dependencies
@nodelib/fs.scandir	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@nodelib\/fs.scandir": "2.1.5",$/;"	s	object:dependencies.@nodelib/fs.walk.requires
@nodelib/fs.scandir	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@nodelib\/fs.scandir": {$/;"	o	object:dependencies
@nodelib/fs.stat	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@nodelib\/fs.stat": "2.0.5",$/;"	s	object:dependencies.@nodelib/fs.scandir.requires
@nodelib/fs.stat	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@nodelib\/fs.stat": "^2.0.2",$/;"	s	object:dependencies.fast-glob.requires
@nodelib/fs.stat	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@nodelib\/fs.stat": {$/;"	o	object:dependencies
@nodelib/fs.walk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@nodelib\/fs.walk": "^1.2.3",$/;"	s	object:dependencies.fast-glob.requires
@nodelib/fs.walk	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@nodelib\/fs.walk": {$/;"	o	object:dependencies
@sinonjs/commons	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@sinonjs\/commons": "^1.7.0"$/;"	s	object:dependencies.@sinonjs/fake-timers.requires
@sinonjs/commons	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@sinonjs\/commons": {$/;"	o	object:dependencies
@sinonjs/fake-timers	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@sinonjs\/fake-timers": "^6.0.1",$/;"	s	object:dependencies.@jest/fake-timers.requires
@sinonjs/fake-timers	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@sinonjs\/fake-timers": {$/;"	o	object:dependencies
@tootallnate/once	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@tootallnate\/once": "1",$/;"	s	object:dependencies.http-proxy-agent.requires
@tootallnate/once	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@tootallnate\/once": {$/;"	o	object:dependencies
@types/babel__core	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/babel__core": "^7.0.0",$/;"	s	object:dependencies.babel-plugin-jest-hoist.requires
@types/babel__core	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/babel__core": "^7.1.7",$/;"	s	object:dependencies.babel-jest.requires
@types/babel__core	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/babel__core": {$/;"	o	object:dependencies
@types/babel__generator	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/babel__generator": "*",$/;"	s	object:dependencies.@types/babel__core.requires
@types/babel__generator	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/babel__generator": {$/;"	o	object:dependencies
@types/babel__template	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/babel__template": "*",$/;"	s	object:dependencies.@types/babel__core.requires
@types/babel__template	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/babel__template": {$/;"	o	object:dependencies
@types/babel__traverse	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/babel__traverse": "*"$/;"	s	object:dependencies.@types/babel__core.requires
@types/babel__traverse	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/babel__traverse": "^7.0.4",$/;"	s	object:dependencies.jest-snapshot.requires
@types/babel__traverse	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/babel__traverse": "^7.0.6"$/;"	s	object:dependencies.babel-plugin-jest-hoist.requires
@types/babel__traverse	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/babel__traverse": {$/;"	o	object:dependencies
@types/cli-table	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/cli-table": {$/;"	o	object:dependencies
@types/debounce	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/debounce": {$/;"	o	object:dependencies
@types/events	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/events": "*"$/;"	s	object:dependencies.@types/fb-watchman.requires
@types/events	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/events": {$/;"	o	object:dependencies
@types/fb-watchman	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/fb-watchman": {$/;"	o	object:dependencies
@types/fs-extra	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/fs-extra": {$/;"	o	object:dependencies
@types/glob	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/glob": {$/;"	o	object:dependencies
@types/graceful-fs	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/graceful-fs": "^4.1.2",$/;"	s	object:dependencies.jest-haste-map.requires
@types/graceful-fs	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/graceful-fs": {$/;"	o	object:dependencies
@types/istanbul-lib-coverage	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/istanbul-lib-coverage": "*"$/;"	s	object:dependencies.@types/istanbul-lib-report.requires
@types/istanbul-lib-coverage	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/istanbul-lib-coverage": "^2.0.0",$/;"	s	object:dependencies.@jest/test-result.requires
@types/istanbul-lib-coverage	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/istanbul-lib-coverage": "^2.0.0",$/;"	s	object:dependencies.@jest/types.requires
@types/istanbul-lib-coverage	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/istanbul-lib-coverage": "^2.0.1",$/;"	s	object:dependencies.v8-to-istanbul.requires
@types/istanbul-lib-coverage	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/istanbul-lib-coverage": {$/;"	o	object:dependencies
@types/istanbul-lib-report	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/istanbul-lib-report": "*"$/;"	s	object:dependencies.@types/istanbul-reports.requires
@types/istanbul-lib-report	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/istanbul-lib-report": {$/;"	o	object:dependencies
@types/istanbul-reports	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/istanbul-reports": "^3.0.0",$/;"	s	object:dependencies.@jest/types.requires
@types/istanbul-reports	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/istanbul-reports": {$/;"	o	object:dependencies
@types/jest	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/jest": "26.x",$/;"	s	object:dependencies.ts-jest.requires
@types/jest	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/jest": {$/;"	o	object:dependencies
@types/json-schema	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/json-schema": "^7.0.3",$/;"	s	object:dependencies.@typescript-eslint/experimental-utils.requires
@types/json-schema	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/json-schema": {$/;"	o	object:dependencies
@types/marked	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/marked": {$/;"	o	object:dependencies
@types/minimatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/minimatch": "*",$/;"	s	object:dependencies.@types/glob.requires
@types/minimatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/minimatch": {$/;"	o	object:dependencies
@types/minipass	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/minipass": "*",$/;"	s	object:dependencies.@types/tar.requires
@types/minipass	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/minipass": {$/;"	o	object:dependencies
@types/mkdirp	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/mkdirp": {$/;"	o	object:dependencies
@types/node	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*"$/;"	s	object:dependencies.@types/fs-extra.requires
@types/node	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*"$/;"	s	object:dependencies.@types/glob.requires
@types/node	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*"$/;"	s	object:dependencies.@types/graceful-fs.requires
@types/node	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*"$/;"	s	object:dependencies.@types/minipass.requires
@types/node	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*"$/;"	s	object:dependencies.@types/mkdirp.requires
@types/node	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*"$/;"	s	object:dependencies.@types/tar.requires
@types/node	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*"$/;"	s	object:dependencies.jest-mock.requires
@types/node	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.@jest/console.requires
@types/node	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.@jest/core.requires
@types/node	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.@jest/environment.requires
@types/node	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.@jest/fake-timers.requires
@types/node	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.@jest/types.requires
@types/node	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.jest-environment-jsdom.requires
@types/node	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.jest-environment-node.requires
@types/node	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.jest-haste-map.requires
@types/node	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.jest-jasmine2.requires
@types/node	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.jest-runner.requires
@types/node	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.jest-serializer.requires
@types/node	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.jest-util.requires
@types/node	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.jest-watcher.requires
@types/node	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/node": "*",$/;"	s	object:dependencies.jest-worker.requires
@types/node	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/node": {$/;"	o	object:dependencies
@types/normalize-package-data	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/normalize-package-data": "^2.4.0",$/;"	s	object:dependencies.read-pkg.requires
@types/normalize-package-data	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/normalize-package-data": {$/;"	o	object:dependencies
@types/prettier	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/prettier": "^2.0.0",$/;"	s	object:dependencies.jest-snapshot.requires
@types/prettier	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/prettier": {$/;"	o	object:dependencies
@types/semver	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/semver": {$/;"	o	object:dependencies
@types/stack-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/stack-utils": "^2.0.0",$/;"	s	object:dependencies.jest-message-util.requires
@types/stack-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/stack-utils": {$/;"	o	object:dependencies
@types/tar	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/tar": {$/;"	o	object:dependencies
@types/uuid	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/uuid": {$/;"	o	object:dependencies
@types/which	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/which": {$/;"	o	object:dependencies
@types/yargs	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/yargs": "^15.0.0",$/;"	s	object:dependencies.@jest/types.requires
@types/yargs	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/yargs": "^15.0.0",$/;"	s	object:dependencies.jest-runtime.requires
@types/yargs	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/yargs": {$/;"	o	object:dependencies
@types/yargs-parser	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@types\/yargs-parser": "*"$/;"	s	object:dependencies.@types/yargs.requires
@types/yargs-parser	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@types\/yargs-parser": {$/;"	o	object:dependencies
@typescript-eslint/eslint-plugin	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@typescript-eslint\/eslint-plugin": {$/;"	o	object:dependencies
@typescript-eslint/experimental-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/experimental-utils": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/eslint-plugin.requires
@typescript-eslint/experimental-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/experimental-utils": "^4.0.1"$/;"	s	object:dependencies.eslint-plugin-jest.requires
@typescript-eslint/experimental-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@typescript-eslint\/experimental-utils": {$/;"	o	object:dependencies
@typescript-eslint/parser	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@typescript-eslint\/parser": {$/;"	o	object:dependencies
@typescript-eslint/scope-manager	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/scope-manager": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/eslint-plugin.requires
@typescript-eslint/scope-manager	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/scope-manager": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/experimental-utils.requires
@typescript-eslint/scope-manager	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/scope-manager": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/parser.requires
@typescript-eslint/scope-manager	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@typescript-eslint\/scope-manager": {$/;"	o	object:dependencies
@typescript-eslint/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/types": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/experimental-utils.requires
@typescript-eslint/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/types": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/parser.requires
@typescript-eslint/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/types": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/scope-manager.requires
@typescript-eslint/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/types": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/typescript-estree.requires
@typescript-eslint/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/types": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/visitor-keys.requires
@typescript-eslint/types	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@typescript-eslint\/types": {$/;"	o	object:dependencies
@typescript-eslint/typescript-estree	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/typescript-estree": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/experimental-utils.requires
@typescript-eslint/typescript-estree	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/typescript-estree": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/parser.requires
@typescript-eslint/typescript-estree	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@typescript-eslint\/typescript-estree": {$/;"	o	object:dependencies
@typescript-eslint/visitor-keys	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/visitor-keys": "4.11.1"$/;"	s	object:dependencies.@typescript-eslint/scope-manager.requires
@typescript-eslint/visitor-keys	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "@typescript-eslint\/visitor-keys": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/typescript-estree.requires
@typescript-eslint/visitor-keys	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "@typescript-eslint\/visitor-keys": {$/;"	o	object:dependencies
A	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
A	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
A	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
A	vim/.vim/plugged/vim-styled-components/examples/issue-32.js	/^const A = styled.a`$/;"	C
A	vim/.vim/plugged/vim-styled-components/examples/issue-55.ts	/^const A = styled('h1')<Foo>`$/;"	C
A$	vim/.vim/plugged/coc.nvim/build/index.js	/^`),a=s.line-n.line-o.length+1,l=o[o.length-1],c=r.line-a;if(r.line!=s.line)return{line:c,charact/;"	f
A0	vim/.vim/plugged/coc.nvim/build/index.js	/^`),a++,c=i,o=14;switch(w){case 123:return i++,o=1;case 125:return i++,o=2;case 91:return i++,o=3/;"	f
A1	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	v
A5	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
A6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
A8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
A9	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
AC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
ACe	vim/.vim/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:o}}function QB(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	v
AD	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let f of this._placeholders)if(f.index==o&&f.id<s&&f.line==e.range.start.line){let d=thi/;"	v
AG	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
AJ	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
AL	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AP	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	v
AQ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AU	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
AUTHOR	vim/.vim/plugged/fzf/man/man1/fzf.1	/^.SH AUTHOR$/;"	s	title:fzf
AV	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
AW	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c
AX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
AY	vim/.vim/plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	f
AZ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
A_	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
Ab	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
About	vim/.vim/plugged/vim-multiple-cursors/README.md	/^## About$/;"	s	chapter:vim-multiple-cursors
About	vim/.vim/plugged/vim-twiggy/README.md	/^## About$/;"	s	chapter:twiggy.vim
Acknowledgements	vim/.vim/plugged/vim-styled-components/README.md	/^## Acknowledgements$/;"	s	chapter:vim-styled-components
Acknowledgments & Refs	vim/.vim/plugged/vim-vue-plugin/README.md	/^## Acknowledgments & Refs$/;"	s	chapter:vim-vue-plugin [![Build Status][12]](https://travis-ci.com/leafOfTree/vim-vue-plugin)
Ad	vim/.vim/plugged/coc.nvim/build/index.js	/^`);return i.reduce(function(n,s){return s.length>n?s.length:n},0)}});var Yq=x((Kwe,a0)=>{var $oe/;"	c
AdaptCursorOffsetIfNeeded	vim/.vim/plugged/MatchTagAlways/python/mta_core.py	/^def AdaptCursorOffsetIfNeeded( sanitized_html, cursor_offset ):$/;"	f
Add	vim/.vim/plugged/fzf/src/cache.go	/^func (cc *ChunkCache) Add(chunk *Chunk, key string, list []Result) {$/;"	f	struct:fzf.ChunkCache
Add a cursor to each line of your visual selection	vim/.vim/plugged/vim-multiple-cursors/README.md	/^### Add a cursor to each line of your visual selection$/;"	S	section:vim-multiple-cursors""About
Added `--ansi` option (#150)	vim/.vim/plugged/fzf/CHANGELOG.md	/^#### Added `--ansi` option (#150)$/;"	t	subsection:CHANGELOG""0.9.5""New features
Added `--expect` option (#163)	vim/.vim/plugged/fzf/CHANGELOG.md	/^#### Added `--expect` option (#163)$/;"	t	subsection:CHANGELOG""0.9.6""New features
Added `--tac` option to reverse the order of the input.	vim/.vim/plugged/fzf/CHANGELOG.md	/^#### Added `--tac` option to reverse the order of the input.$/;"	t	subsection:CHANGELOG""0.9.4""New features
Advanced configuration	vim/.vim/plugged/lightline.vim/README.md	/^## Advanced configuration$/;"	s	chapter:lightline.vim
Advanced customization	vim/.vim/plugged/fzf.vim/README.md	/^### Advanced customization$/;"	S	section:fzf :heart: vim""Customization
Advanced fzf examples	vim/.vim/plugged/fzf/ADVANCED.md	/^Advanced fzf examples$/;"	c
Advanced topics	vim/.vim/plugged/fzf/README.md	/^Advanced topics$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Ae	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Aee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ag	vim/.vim/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:o}}function QB(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	v
Ai	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
Aj	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Ale	vim/.vim/plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	f
Algo	vim/.vim/plugged/fzf/src/algo/algo.go	/^type Algo func(caseSensitive bool, normalize bool, forward bool, input *util.Chars, pattern []ru/;"	t	package:algo	typeref:typename:func(caseSensitive bool, normalize bool, forward bool, input *util.Chars, pattern []rune, withPos bool, slab *util.Slab) (Result, *[]int)
Align	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^function Align(left, right)$/;"	f
Alt	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Alt$/;"	c	package:tui
AltBS	vim/.vim/plugged/fzf/src/tui/tui.go	/^	AltBS$/;"	c	package:tui
AltDown	vim/.vim/plugged/fzf/src/tui/tui.go	/^	AltDown$/;"	c	package:tui
AltKey	vim/.vim/plugged/fzf/src/tui/tui.go	/^func AltKey(r rune) Event {$/;"	f	package:tui	typeref:typename:Event
AltLeft	vim/.vim/plugged/fzf/src/tui/tui.go	/^	AltLeft$/;"	c	package:tui
AltRight	vim/.vim/plugged/fzf/src/tui/tui.go	/^	AltRight$/;"	c	package:tui
AltSDown	vim/.vim/plugged/fzf/src/tui/tui.go	/^	AltSDown$/;"	c	package:tui
AltSLeft	vim/.vim/plugged/fzf/src/tui/tui.go	/^	AltSLeft$/;"	c	package:tui
AltSRight	vim/.vim/plugged/fzf/src/tui/tui.go	/^	AltSRight$/;"	c	package:tui
AltSUp	vim/.vim/plugged/fzf/src/tui/tui.go	/^	AltSUp$/;"	c	package:tui
AltUp	vim/.vim/plugged/fzf/src/tui/tui.go	/^	AltUp$/;"	c	package:tui
AlternativeInterfaceComponent	vim/.vim/plugged/vim-styled-components/examples/typescript.ts	/^const AlternativeInterfaceComponent = styled<ExistingInterface | {$/;"	C
Always highlight enclosing tags	vim/.vim/plugged/MatchTagAlways/README.md	/^# Always highlight enclosing tags$/;"	c
Ame	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
And finally...	vim/.vim/plugged/vim-twiggy/README.md	/^### And finally...$/;"	S	section:twiggy.vim""Usage
AnonymousFunction272f78ae0100	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
AnonymousFunction272f78ae0200	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
AnonymousFunction272f78ae0300	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}function G9(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function K9(){return process.en/;"	f
AnonymousFunction272f78ae0400	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
AnonymousFunction272f78ae0500	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:sK
AnonymousFunction272f78ae0600	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:sK
AnonymousFunction272f78ae0700	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
AnonymousFunction272f78ae0800	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
AnonymousFunction272f78ae0900	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
AnonymousFunction272f78ae0a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
AnonymousFunction272f78ae0b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:AnonymousFunction272f78ae0a00.t.stringify
AnonymousFunction272f78ae0c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:AnonymousFunction272f78ae0a00.t.stringify
AnonymousFunction272f78ae0d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
AnonymousFunction272f78ae0e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae0f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae1000	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae10000	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae10100	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae10200	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae10100.e
AnonymousFunction272f78ae10300	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae10400	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae10500	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae10600	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae10700	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae10600.r
AnonymousFunction272f78ae10800	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae10600.r
AnonymousFunction272f78ae10900	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae10a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae10b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae10c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae10d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae10e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae10f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae1100	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae11000	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae11100	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae11200	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae11300	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae11400	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae11500	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae11600	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae11700	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae11800	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae11900	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae11a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae11b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae11c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae11d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae11e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae11f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae1200	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae12000	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae12100	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae12200	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae12300	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae12400	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae12500	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae12600	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae12700	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae12800	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78ae12900	vim/.vim/plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	f
AnonymousFunction272f78ae12a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	f	function:AnonymousFunction272f78ae12900.i
AnonymousFunction272f78ae12b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	f
AnonymousFunction272f78ae12c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	f
AnonymousFunction272f78ae12d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	f
AnonymousFunction272f78ae12e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	f
AnonymousFunction272f78ae12f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1300	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae13000	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae13100	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae13200	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae13300	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae13400	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae13500	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae13600	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae13700	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae13800	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae13900	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae13a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae13b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae13c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae13d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae13e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae13f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1400	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae14000	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae14100	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae14200	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae14300	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae14400	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae14500	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae14600	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae14700	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae14800	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae14900	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae14a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae14b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae14c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae14d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae14e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae14f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1500	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae15000	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae15100	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae15200	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae15300	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae15400	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae15500	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae15600	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae15700	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae15800	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae15900	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae15a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae15b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae15c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae15d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae15e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae15f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1600	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae16000	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae16100	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae16200	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae16300	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae16400	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae16500	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae16600	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae16700	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae16800	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae16900	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae16a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae16b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae16c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae16d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae16e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae16f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1700	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae17000	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae17100	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae17200	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae17300	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae17400	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae17500	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae17600	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae17700	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae17800	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae17900	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae17a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae17b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae17c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae17d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae17e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae17f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1800	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae18000	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae18100	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae18200	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae18300	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae18400	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae18500	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae18600	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae18700	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae18800	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae18900	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae18a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae18b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae18c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae18d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae18e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae18f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1900	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:AnonymousFunction272f78ae1800
AnonymousFunction272f78ae19000	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae19100	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae19200	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae19300	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae19400	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae19500	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae19600	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae19700	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae19800	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae19900	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae19a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae19b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae19c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae19d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae19e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae19f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:AnonymousFunction272f78ae1800.AnonymousFunction272f78ae1900.b
AnonymousFunction272f78ae1a000	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1a100	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1a200	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1a300	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1a400	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1a500	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1a600	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1a700	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1a800	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1a900	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1aa00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1ab00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1ac00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1ad00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1ae00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1af00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae1b000	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1b100	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1b200	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1b300	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1b400	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1b500	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1b600	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1b700	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1b800	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1b900	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1ba00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1bb00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1bc00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1bd00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1be00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1bf00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae1c000	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1c100	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1c200	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1c300	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1c400	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1c500	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1c600	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunction272f78ae1c500
AnonymousFunction272f78ae1c700	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1c800	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1c900	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1ca00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1cb00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1cc00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1cd00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:WC
AnonymousFunction272f78ae1ce00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:WC.AnonymousFunction272f78ae1cd00
AnonymousFunction272f78ae1cf00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:WC
AnonymousFunction272f78ae1d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:AnonymousFunction272f78ae1c00
AnonymousFunction272f78ae1d000	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1d100	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
AnonymousFunction272f78ae1d200	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
AnonymousFunction272f78ae1d300	vim/.vim/plugged/coc.nvim/build/index.js	/^`+n.text):t.push(n);continue}if(n=this.tokenizer.fences(e)){e=e.substring(n.raw.length),t.push(n/;"	f
AnonymousFunction272f78ae1d400	vim/.vim/plugged/coc.nvim/build/index.js	/^`+n.text):t.push(n);continue}if(e){let u="Infinite loop on byte: "+e.charCodeAt(0);if(this.optio/;"	f
AnonymousFunction272f78ae1d500	vim/.vim/plugged/coc.nvim/build/index.js	/^`+(h.tokens?this.parseInline(h.tokens):h.text);i+=t?this.renderer.paragraph(d):d;continue}defaul/;"	f
AnonymousFunction272f78ae1d600	vim/.vim/plugged/coc.nvim/build/index.js	/^`+(h.tokens?this.parseInline(h.tokens):h.text);i+=t?this.renderer.paragraph(d):d;continue}defaul/;"	f
AnonymousFunction272f78ae1d700	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1d800	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1d900	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1da00	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1db00	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1dc00	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1dd00	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1de00	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1df00	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae1e000	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1e100	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1e200	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1e300	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1e400	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f	function:AnonymousFunction272f78ae1e300
AnonymousFunction272f78ae1e500	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1e600	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1e700	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f	function:AnonymousFunction272f78ae1e600
AnonymousFunction272f78ae1e800	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1e900	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f	function:AnonymousFunction272f78ae1e800
AnonymousFunction272f78ae1ea00	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1eb00	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1ec00	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1ed00	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1ee00	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1ef00	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae1f000	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1f100	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1f200	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1f300	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1f400	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1f500	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1f600	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1f700	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
AnonymousFunction272f78ae1f800	vim/.vim/plugged/coc.nvim/build/index.js	/^`);return i.reduce(function(n,s){return s.length>n?s.length:n},0)}});var Yq=x((Kwe,a0)=>{var $oe/;"	f
AnonymousFunction272f78ae1f900	vim/.vim/plugged/coc.nvim/build/index.js	/^`);return i.reduce(function(n,s){return s.length>n?s.length:n},0)}});var Yq=x((Kwe,a0)=>{var $oe/;"	f
AnonymousFunction272f78ae1fa00	vim/.vim/plugged/coc.nvim/build/index.js	/^`);return r.length?r[0].length:0});Ad.prototype.render;Ad.prototype.toString=function(){var r=""/;"	f
AnonymousFunction272f78ae1fb00	vim/.vim/plugged/coc.nvim/build/index.js	/^`);return r.length?r[0].length:0});Ad.prototype.render;Ad.prototype.toString=function(){var r=""/;"	f
AnonymousFunction272f78ae1fc00	vim/.vim/plugged/coc.nvim/build/index.js	/^`);return r.length?r[0].length:0});Ad.prototype.render;Ad.prototype.toString=function(){var r=""/;"	f
AnonymousFunction272f78ae1fd00	vim/.vim/plugged/coc.nvim/build/index.js	/^`);return r.length?r[0].length:0});Ad.prototype.render;Ad.prototype.toString=function(){var r=""/;"	f
AnonymousFunction272f78ae1fe00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}function h(y,S){var w=[],_=0;if(!Array.isArray(y)&&typeof y=="object"){var L=Object.keys(y)[0/;"	f
AnonymousFunction272f78ae1ff00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(function(X,ae){return X.push(g(ae,k)),X},[]),j=F.length;j>_&&(_=j),w.push({contents:F,/;"	f	function:AnonymousFunction272f78ae1fe00
AnonymousFunction272f78ae2000	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae20000	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(function(X,ae){return X.push(g(ae,k)),X},[]),j=F.length;j>_&&(_=j),w.push({contents:F,/;"	f
AnonymousFunction272f78ae20100	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(function(X,ae){return X.push(g(ae,k)),X},[]),j=F.length;j>_&&(_=j),w.push({contents:F,/;"	f
AnonymousFunction272f78ae20200	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(function(X,ae){return X.push(g(ae,k)),X},[]),j=F.length;j>_&&(_=j),w.push({contents:F,/;"	f
AnonymousFunction272f78ae20300	vim/.vim/plugged/coc.nvim/build/index.js	/^`+p(e.style.border,n.left)),A+=M.join(p(e.style.border,n.middle))+p(e.style.border,n.right)}),p(/;"	f	function:AnonymousFunction272f78ae1fa00.p
AnonymousFunction272f78ae20400	vim/.vim/plugged/coc.nvim/build/index.js	/^`),this.length&&this.forEach(function(y,S){if(!i.length&&S==0)d();else if(!t.compact||S<!!i.leng/;"	f
AnonymousFunction272f78ae20500	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
AnonymousFunction272f78ae20600	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	f
AnonymousFunction272f78ae20700	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	f
AnonymousFunction272f78ae20800	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	f
AnonymousFunction272f78ae20900	vim/.vim/plugged/coc.nvim/build/index.js	/^`+d0+t(e)}checkbox(e){return"["+(e?"X":" ")+"] "}paragraph(e){return e=this.compose(this.o.parag/;"	f
AnonymousFunction272f78ae20a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunction272f78ae20b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunction272f78ae20c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunction272f78ae20d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunction272f78ae20e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunction272f78ae20f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunction272f78ae2100	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae21000	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunction272f78ae21100	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunction272f78ae21200	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunction272f78ae21300	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunction272f78ae21400	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunction272f78ae21500	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
AnonymousFunction272f78ae21600	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:AnonymousFunction272f78ae21500.i
AnonymousFunction272f78ae21700	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunction272f78ae21800	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:dB
AnonymousFunction272f78ae21900	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunction272f78ae21a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunction272f78ae21b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunction272f78ae21c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunction272f78ae21d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunction272f78ae21e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunction272f78ae21f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunction272f78ae2200	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae22000	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunction272f78ae22100	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunction272f78ae22200	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunction272f78ae22300	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunction272f78ae22400	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:e
AnonymousFunction272f78ae22500	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:e
AnonymousFunction272f78ae22600	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:e
AnonymousFunction272f78ae22700	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunction272f78ae22800	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
AnonymousFunction272f78ae22900	vim/.vim/plugged/coc.nvim/build/index.js	/^   %s`,L,L,S,i);var $=S.type==="*"?K0:S.type==="?"?G0:"\\\\"+S.type;n=!0,i=i.slice(0,S.reStart)+/;"	f
AnonymousFunction272f78ae22a00	vim/.vim/plugged/coc.nvim/build/index.js	/^   %s`,L,L,S,i);var $=S.type==="*"?K0:S.type==="?"?G0:"\\\\"+S.type;n=!0,i=i.slice(0,S.reStart)+/;"	f	function:Xae
AnonymousFunction272f78ae22b00	vim/.vim/plugged/coc.nvim/build/index.js	/^   %s`,L,L,S,i);var $=S.type==="*"?K0:S.type==="?"?G0:"\\\\"+S.type;n=!0,i=i.slice(0,S.reStart)+/;"	f
AnonymousFunction272f78ae22c00	vim/.vim/plugged/coc.nvim/build/index.js	/^   %s`,L,L,S,i);var $=S.type==="*"?K0:S.type==="?"?G0:"\\\\"+S.type;n=!0,i=i.slice(0,S.reStart)+/;"	f
AnonymousFunction272f78ae22d00	vim/.vim/plugged/coc.nvim/build/index.js	/^   %s`,L,L,S,i);var $=S.type==="*"?K0:S.type==="?"?G0:"\\\\"+S.type;n=!0,i=i.slice(0,S.reStart)+/;"	f	function:AnonymousFunction272f78ae22c00
AnonymousFunction272f78ae22e00	vim/.vim/plugged/coc.nvim/build/index.js	/^   %s`,L,L,S,i);var $=S.type==="*"?K0:S.type==="?"?G0:"\\\\"+S.type;n=!0,i=i.slice(0,S.reStart)+/;"	c
AnonymousFunction272f78ae22f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae2300	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae23000	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae23100	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae23200	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae23300	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae23400	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae23500	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae23600	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae23700	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunction272f78ae23800	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae23900	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae23a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae23b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae23c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae23d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae23e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae23f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae2400	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae24000	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae24100	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae24200	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae24300	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae24400	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae24500	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae24600	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunction272f78ae24700	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunction272f78ae24800	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunction272f78ae24900	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunction272f78ae24a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunction272f78ae24b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae24c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae24d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae24e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae24f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae2500	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae25000	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae25100	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunction272f78ae25200	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunction272f78ae25300	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunction272f78ae25400	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunction272f78ae25500	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunction272f78ae25600	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunction272f78ae25700	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunction272f78ae25800	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f	function:t
AnonymousFunction272f78ae25900	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae25a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae25b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae25c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae25d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae25e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae25f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae2600	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae26000	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae26100	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae26200	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae26300	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae26400	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae26500	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f	function:AnonymousFunction272f78ae26400
AnonymousFunction272f78ae26600	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae26700	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae26800	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
AnonymousFunction272f78ae26900	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunction272f78ae26a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f	function:AnonymousFunction272f78ae26900
AnonymousFunction272f78ae26b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
AnonymousFunction272f78ae26c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	f
AnonymousFunction272f78ae26d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	f
AnonymousFunction272f78ae26e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	f
AnonymousFunction272f78ae26f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	f
AnonymousFunction272f78ae2700	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae27000	vim/.vim/plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	f
AnonymousFunction272f78ae27100	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunction272f78ae27200	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f	function:Ue
AnonymousFunction272f78ae27300	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunction272f78ae27400	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunction272f78ae27500	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunction272f78ae27600	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunction272f78ae27700	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunction272f78ae27800	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunction272f78ae27900	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunction272f78ae27a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunction272f78ae27b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunction272f78ae27c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunction272f78ae27d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunction272f78ae27e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunction272f78ae27f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunction272f78ae2800	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae28000	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunction272f78ae28100	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunction272f78ae28200	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunction272f78ae28300	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunction272f78ae28400	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunction272f78ae28500	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunction272f78ae28600	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunction272f78ae28700	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunction272f78ae28800	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
AnonymousFunction272f78ae28900	vim/.vim/plugged/coc.nvim/build/index.js	/^`;function sW(r,e){var t=[],i="";typeof e=="string"?e={section:e,whitespace:!1}:(e=e||{},e.white/;"	f
AnonymousFunction272f78ae28a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`;function sW(r,e){var t=[],i="";typeof e=="string"?e={section:e,whitespace:!1}:(e=e||{},e.white/;"	f
AnonymousFunction272f78ae28b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
AnonymousFunction272f78ae28c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
AnonymousFunction272f78ae28d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
AnonymousFunction272f78ae28e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
AnonymousFunction272f78ae28f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
AnonymousFunction272f78ae2900	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae29000	vim/.vim/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
AnonymousFunction272f78ae29100	vim/.vim/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
AnonymousFunction272f78ae29200	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae29300	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae29400	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunction272f78ae29300
AnonymousFunction272f78ae29500	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae29600	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae29700	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae29800	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae29900	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae29a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae29b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae29c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunction272f78ae29b00
AnonymousFunction272f78ae29d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae29e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae29f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae2a000	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2a100	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunction272f78ae2a000
AnonymousFunction272f78ae2a200	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2a300	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2a400	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2a500	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2a600	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2a700	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunction272f78ae2a600
AnonymousFunction272f78ae2a800	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2a900	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2aa00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2ab00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2ac00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2ad00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2ae00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2af00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:r
AnonymousFunction272f78ae2b000	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2b100	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2b200	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2b300	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2b400	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c
AnonymousFunction272f78ae2b500	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2b600	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunction272f78ae2b500
AnonymousFunction272f78ae2b700	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c
AnonymousFunction272f78ae2b800	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2b900	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2ba00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2bb00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2bc00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2bd00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2be00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2bf00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c
AnonymousFunction272f78ae2c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae2c000	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c
AnonymousFunction272f78ae2c100	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
AnonymousFunction272f78ae2c200	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2c300	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2c400	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2c500	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2c600	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2c700	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae2c600
AnonymousFunction272f78ae2c800	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2c900	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c	class:AnonymousFunction272f78ae2c800
AnonymousFunction272f78ae2ca00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae2c800.AnonymousFunction272f78ae2c900
AnonymousFunction272f78ae2cb00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2cc00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae2cb00
AnonymousFunction272f78ae2cd00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2ce00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae2cd00
AnonymousFunction272f78ae2cf00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae2d000	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2d100	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2d200	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2d300	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2d400	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2d500	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2d600	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:t.chain
AnonymousFunction272f78ae2d700	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:t.chain.AnonymousFunction272f78ae2d600
AnonymousFunction272f78ae2d800	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2d900	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2da00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2db00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2dc00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2dd00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2de00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2df00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae2e000	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2e100	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae2e000
AnonymousFunction272f78ae2e200	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2e300	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:zi
AnonymousFunction272f78ae2e400	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2e500	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2e600	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2e700	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2e800	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2e900	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2ea00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2eb00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2ec00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2ed00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2ee00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2ef00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
AnonymousFunction272f78ae2f000	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2f100	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2f200	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2f300	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2f400	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2f500	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae2f400.s
AnonymousFunction272f78ae2f600	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae2f400.s.AnonymousFunction272f78ae2f500
AnonymousFunction272f78ae2f700	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae2f400.s.AnonymousFunction272f78ae2f500.AnonymousFunction272f78ae2f600
AnonymousFunction272f78ae2f800	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2f900	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2fa00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:p
AnonymousFunction272f78ae2fb00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:p
AnonymousFunction272f78ae2fc00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:h.buffer
AnonymousFunction272f78ae2fd00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:h.skip
AnonymousFunction272f78ae2fe00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae2ff00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae3000	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunction272f78ae30000	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae30100	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae30200	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae30100
AnonymousFunction272f78ae30300	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae30100.AnonymousFunction272f78ae30200
AnonymousFunction272f78ae30400	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae30500	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae30600	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae30500
AnonymousFunction272f78ae30700	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae30800	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae30900	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae30a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae30b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae30c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae30d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae30e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae30f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunction272f78ae3100	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunction272f78ae31000	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunction272f78ae31100	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae31200	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae31100
AnonymousFunction272f78ae31300	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae31400	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunction272f78ae31500	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae31400
AnonymousFunction272f78ae31600	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae31700	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae31800	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunction272f78ae31900	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae31a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae31b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae31c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae31d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae31e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae31f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunction272f78ae3200	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunction272f78ae32000	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae32100	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae32200	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae32300	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae32200
AnonymousFunction272f78ae32400	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae32500	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae32600	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunction272f78ae32700	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunction272f78ae32800	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:unzipStream
AnonymousFunction272f78ae32900	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae32a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae32b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae32c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae32d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae32e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae32f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae32e00
AnonymousFunction272f78ae3300	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunction272f78ae33000	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae33100	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:unzipStream
AnonymousFunction272f78ae33200	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunction272f78ae33300	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae33400	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae33500	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae33600	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunction272f78ae33700	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae33800	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae33900	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae33600
AnonymousFunction272f78ae33a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
AnonymousFunction272f78ae33b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae33c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:Spe
AnonymousFunction272f78ae33d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
AnonymousFunction272f78ae33e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	f
AnonymousFunction272f78ae33f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	f
AnonymousFunction272f78ae3400	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f	function:Yw.F
AnonymousFunction272f78ae34000	vim/.vim/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	f	function:AnonymousFunction272f78ae33f00.n
AnonymousFunction272f78ae34100	vim/.vim/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	f
AnonymousFunction272f78ae34200	vim/.vim/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	g
AnonymousFunction272f78ae34300	vim/.vim/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	f
AnonymousFunction272f78ae34400	vim/.vim/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	f
AnonymousFunction272f78ae34500	vim/.vim/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	f
AnonymousFunction272f78ae34600	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),g=+p.split(" ")[1];Kh("got proxy server response: %o",p),e({statusCode:g,buffered:d})}r.on("/;"	f
AnonymousFunction272f78ae34700	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),g=+p.split(" ")[1];Kh("got proxy server response: %o",p),e({statusCode:g,buffered:d})}r.on("/;"	f	function:AnonymousFunction272f78ae34600.n
AnonymousFunction272f78ae34800	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),g=+p.split(" ")[1];Kh("got proxy server response: %o",p),e({statusCode:g,buffered:d})}r.on("/;"	f
AnonymousFunction272f78ae34900	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),g=+p.split(" ")[1];Kh("got proxy server response: %o",p),e({statusCode:g,buffered:d})}r.on("/;"	g
AnonymousFunction272f78ae34a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
AnonymousFunction272f78ae34b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
AnonymousFunction272f78ae34c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
AnonymousFunction272f78ae34d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
AnonymousFunction272f78ae34e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
AnonymousFunction272f78ae34f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
AnonymousFunction272f78ae3500	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f	function:j
AnonymousFunction272f78ae35000	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
AnonymousFunction272f78ae35100	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
AnonymousFunction272f78ae35200	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
AnonymousFunction272f78ae35300	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
AnonymousFunction272f78ae35400	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
AnonymousFunction272f78ae35500	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
AnonymousFunction272f78ae35600	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
AnonymousFunction272f78ae35700	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
AnonymousFunction272f78ae35800	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
AnonymousFunction272f78ae35900	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	f
AnonymousFunction272f78ae35a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
AnonymousFunction272f78ae35b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f	function:$me
AnonymousFunction272f78ae35c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
AnonymousFunction272f78ae35d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
AnonymousFunction272f78ae35e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
AnonymousFunction272f78ae3600	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f	function:j
AnonymousFunction272f78ae3700	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f	function:l
AnonymousFunction272f78ae3800	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunction272f78ae3900	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunction272f78ae3a00	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunction272f78ae3b00	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunction272f78ae3c00	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunction272f78ae3d00	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunction272f78ae3e00	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunction272f78ae3f00	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunction272f78ae4000	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f	function:S
AnonymousFunction272f78ae4100	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f	function:_
AnonymousFunction272f78ae4200	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f	function:j
AnonymousFunction272f78ae4300	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunction272f78ae4400	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunction272f78ae4500	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunction272f78ae4600	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
AnonymousFunction272f78ae4700	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
AnonymousFunction272f78ae4800	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
AnonymousFunction272f78ae4900	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f	function:jJ
AnonymousFunction272f78ae4a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f	function:jJ
AnonymousFunction272f78ae4b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
AnonymousFunction272f78ae4c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
AnonymousFunction272f78ae4d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
AnonymousFunction272f78ae4e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
AnonymousFunction272f78ae4f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
AnonymousFunction272f78ae5000	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
AnonymousFunction272f78ae5100	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunction272f78ae5200	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunction272f78ae5300	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunction272f78ae5400	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunction272f78ae5500	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunction272f78ae5600	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunction272f78ae5700	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunction272f78ae5800	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunction272f78ae5900	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
AnonymousFunction272f78ae5a00	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
AnonymousFunction272f78ae5b00	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
AnonymousFunction272f78ae5c00	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
AnonymousFunction272f78ae5d00	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
AnonymousFunction272f78ae5e00	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
AnonymousFunction272f78ae5f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
AnonymousFunction272f78ae6000	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunction272f78ae6100	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunction272f78ae6200	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunction272f78ae6300	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunction272f78ae6400	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:RQ
AnonymousFunction272f78ae6500	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Hf
AnonymousFunction272f78ae6600	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Da
AnonymousFunction272f78ae6700	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Ra
AnonymousFunction272f78ae6800	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Xe
AnonymousFunction272f78ae6900	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunction272f78ae6a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunction272f78ae6b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunction272f78ae6c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
AnonymousFunction272f78ae6d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Pa
AnonymousFunction272f78ae6e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:$i
AnonymousFunction272f78ae6f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Em
AnonymousFunction272f78ae7000	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Gf
AnonymousFunction272f78ae7100	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:xr
AnonymousFunction272f78ae7200	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:ws
AnonymousFunction272f78ae7300	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunction272f78ae7400	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunction272f78ae7500	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
AnonymousFunction272f78ae7600	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunction272f78ae7700	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunction272f78ae7800	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
AnonymousFunction272f78ae7900	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
AnonymousFunction272f78ae7a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunction272f78ae7b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
AnonymousFunction272f78ae7c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
AnonymousFunction272f78ae7d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunction272f78ae7e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
AnonymousFunction272f78ae7f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunction272f78ae8000	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
AnonymousFunction272f78ae8100	vim/.vim/plugged/coc.nvim/build/index.js	/^`}debug(e,...t){tF!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
AnonymousFunction272f78ae8200	vim/.vim/plugged/coc.nvim/build/index.js	/^`}debug(e,...t){tF!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
AnonymousFunction272f78ae8300	vim/.vim/plugged/coc.nvim/build/index.js	/^`}debug(e,...t){tF!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
AnonymousFunction272f78ae8400	vim/.vim/plugged/coc.nvim/build/index.js	/^`}debug(e,...t){tF!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
AnonymousFunction272f78ae8500	vim/.vim/plugged/coc.nvim/build/index.js	/^`}debug(e,...t){tF!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
AnonymousFunction272f78ae8600	vim/.vim/plugged/coc.nvim/build/index.js	/^`}debug(e,...t){tF!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
AnonymousFunction272f78ae8700	vim/.vim/plugged/coc.nvim/build/index.js	/^`}debug(e,...t){tF!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
AnonymousFunction272f78ae8800	vim/.vim/plugged/coc.nvim/build/index.js	/^`}debug(e,...t){tF!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
AnonymousFunction272f78ae8900	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}catch(t){uc.error("Send error:",e)}}redraw(e=!1){this.send(["redraw",e?"force":""])}command(e/;"	f
AnonymousFunction272f78ae8a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunction272f78ae8b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunction272f78ae8c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunction272f78ae8d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunction272f78ae8e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunction272f78ae8f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunction272f78ae9000	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunction272f78ae9100	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunction272f78ae9200	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunction272f78ae9300	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunction272f78ae9400	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunction272f78ae9500	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunction272f78ae9600	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
AnonymousFunction272f78ae9700	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
AnonymousFunction272f78ae9800	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
AnonymousFunction272f78ae9900	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
AnonymousFunction272f78ae9a00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
AnonymousFunction272f78ae9b00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
AnonymousFunction272f78ae9c00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
AnonymousFunction272f78ae9d00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
AnonymousFunction272f78ae9e00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
AnonymousFunction272f78ae9f00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunction272f78aea000	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunction272f78aea100	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunction272f78aea200	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunction272f78aea300	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunction272f78aea400	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunction272f78aea500	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunction272f78aea600	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunction272f78aea700	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunction272f78aea800	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunction272f78aea900	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunction272f78aeaa00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunction272f78aeab00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunction272f78aeac00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunction272f78aead00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunction272f78aeae00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunction272f78aeaf00	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunction272f78aeb000	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunction272f78aeb100	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
AnonymousFunction272f78aeb200	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aeb300	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aeb400	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aeb500	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aeb600	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aeb700	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aeb800	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aeb900	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aeba00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aebb00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aebc00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aebd00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aebe00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aebf00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aec000	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aec100	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aec200	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aec300	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aec400	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aec500	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aec600	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aec700	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aec800	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aec900	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aeca00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aecb00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aecc00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aecd00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aece00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aecf00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aed000	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aed100	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aed200	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aed300	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aed400	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aed500	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aed600	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aed700	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aed800	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aed900	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aeda00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aedb00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aedc00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aedd00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aede00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aedf00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aee000	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aee100	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aee200	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aee300	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aee400	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aee500	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aee600	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aee700	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aee800	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aee900	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aeea00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aeeb00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aeec00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aeed00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aeee00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aeef00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aef000	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aef100	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aef200	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aef300	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aef400	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aef500	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aef600	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aef700	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aef800	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aef900	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aefa00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aefb00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aefc00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aefd00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aefe00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction272f78aeff00	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
AnonymousFunction5f5fc9ae0100	vim/.vim/plugged/vim-css-color/tests/example.jsx	/^	render: function() {$/;"	f
Ansi	vim/.vim/plugged/fzf/src/options.go	/^	Ansi        bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Answer	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^  func Answer(char)$/;"	f
Ao	vim/.vim/plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
Aoe	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
App	vim/.vim/plugged/vim-styled-components/examples/complex.js	/^const App = connect(({ store: { panOffset, hasSelection } }) => ($/;"	C
AppClass	vim/.vim/plugged/vim-styled-components/examples/complex.js	/^export default class AppClass extends Component {$/;"	c
Aq	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
Aqe	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
Array	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
Articles	vim/.vim/plugged/coc.nvim/Readme.md	/^## Articles$/;"	s
As	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
As Vim plugin	vim/.vim/plugged/fzf/README.md	/^### As Vim plugin$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Installation
AsEvent	vim/.vim/plugged/fzf/src/tui/tui.go	/^func (t EventType) AsEvent() Event {$/;"	f	type:tui.EventType	typeref:typename:Event
AsString	vim/.vim/plugged/fzf/src/item.go	/^func (item *Item) AsString(stripAnsi bool) string {$/;"	f	struct:fzf.Item	typeref:typename:string
AsString	vim/.vim/plugged/fzf/src/pattern.go	/^func (p *Pattern) AsString() string {$/;"	f	struct:fzf.Pattern	typeref:typename:string
AsUint16	vim/.vim/plugged/fzf/src/util/util.go	/^func AsUint16(val int) uint16 {$/;"	f	package:util	typeref:typename:uint16
Ase	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
At	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
AtomicBool	vim/.vim/plugged/fzf/src/util/atomicbool.go	/^type AtomicBool struct {$/;"	s	package:util
Attr	vim/.vim/plugged/fzf/src/tui/dummy.go	/^type Attr int32$/;"	t	package:tui	typeref:typename:int32
Attr	vim/.vim/plugged/fzf/src/tui/tcell.go	/^type Attr tcell.Style$/;"	t	package:tui	typeref:typename:tcell.Style
Attr	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Attr  Attr$/;"	m	struct:tui.ColorAttr	typeref:typename:Attr
Attr	vim/.vim/plugged/fzf/src/tui/tui.go	/^func (p ColorPair) Attr() Attr {$/;"	f	struct:tui.ColorPair	typeref:typename:Attr
AttrClear	vim/.vim/plugged/fzf/src/tui/dummy.go	/^	AttrClear     = Attr(1 << 8)$/;"	c	package:tui
AttrClear	vim/.vim/plugged/fzf/src/tui/tcell.go	/^	AttrClear     = Attr(1 << 8)$/;"	c	package:tui
AttrRegular	vim/.vim/plugged/fzf/src/tui/dummy.go	/^	AttrRegular   = Attr(1 << 7)$/;"	c	package:tui
AttrRegular	vim/.vim/plugged/fzf/src/tui/tcell.go	/^	AttrRegular   = Attr(1 << 7)$/;"	c	package:tui
AttrUndefined	vim/.vim/plugged/fzf/src/tui/dummy.go	/^	AttrUndefined = Attr(0)$/;"	c	package:tui
AttrUndefined	vim/.vim/plugged/fzf/src/tui/tcell.go	/^	AttrUndefined = Attr(0)$/;"	c	package:tui
Author	vim/.vim/plugged/lightline.vim/README.md	/^## Author$/;"	s	chapter:lightline.vim
Auto-completion	vim/Readme.md	/^### Auto-completion$/;"	S	section:My awesome vim dotfile""Used Plugins
Available Colorschemes	vim/.vim/plugged/lightline.vim/colorscheme.md	/^# Available Colorschemes$/;"	c
Avoid overload	vim/.vim/plugged/vim-vue-plugin/README.md	/^## Avoid overload$/;"	s	chapter:vim-vue-plugin [![Build Status][12]](https://travis-ci.com/leafOfTree/vim-vue-plugin)
Aw	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Ax	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
Ay	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
B	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
B	vim/.vim/plugged/vim-styled-components/examples/issue-55.ts	/^const B = styled('h1')<{ [attr: string]: any, bool: boolean, tmp?: number }>`$/;"	C
B$	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
B0	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
B1	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
B3	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
B5	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
B6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
B8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
BASE	vim/.vim/plugged/fzf/test/test_go.rb	/^BASE = File.expand_path('..', __dir__)$/;"	C
BASE_PATH	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^BASE_PATH = File.expand_path('..\/plugin_tests\/test_files\/', __FILE__)$/;"	C
BD	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
BG	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
BI	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
BINARY	vim/.vim/plugged/fzf/Makefile	/^	BINARY := $(BINARY32)$/;"	m
BINARY	vim/.vim/plugged/fzf/Makefile	/^	BINARY := $(BINARY64)$/;"	m
BINARY	vim/.vim/plugged/fzf/Makefile	/^	BINARY := $(BINARYARM5)$/;"	m
BINARY	vim/.vim/plugged/fzf/Makefile	/^	BINARY := $(BINARYARM6)$/;"	m
BINARY	vim/.vim/plugged/fzf/Makefile	/^	BINARY := $(BINARYARM7)$/;"	m
BINARY	vim/.vim/plugged/fzf/Makefile	/^	BINARY := $(BINARYARM8)$/;"	m
BINARY	vim/.vim/plugged/fzf/Makefile	/^	BINARY := $(BINARYPPC64LE)$/;"	m
BINARY	vim/.vim/plugged/fzf/Makefile	/^	BINARY := $(BINARYRISCV64)$/;"	m
BINARY32	vim/.vim/plugged/fzf/Makefile	/^BINARY32       := fzf-$(GOOS)_386$/;"	m
BINARY64	vim/.vim/plugged/fzf/Makefile	/^BINARY64       := fzf-$(GOOS)_amd64$/;"	m
BINARYARM5	vim/.vim/plugged/fzf/Makefile	/^BINARYARM5     := fzf-$(GOOS)_arm5$/;"	m
BINARYARM6	vim/.vim/plugged/fzf/Makefile	/^BINARYARM6     := fzf-$(GOOS)_arm6$/;"	m
BINARYARM7	vim/.vim/plugged/fzf/Makefile	/^BINARYARM7     := fzf-$(GOOS)_arm7$/;"	m
BINARYARM8	vim/.vim/plugged/fzf/Makefile	/^BINARYARM8     := fzf-$(GOOS)_arm8$/;"	m
BINARYPPC64LE	vim/.vim/plugged/fzf/Makefile	/^BINARYPPC64LE  := fzf-$(GOOS)_ppc64le$/;"	m
BINARYRISCV64	vim/.vim/plugged/fzf/Makefile	/^BINARYRISCV64  := fzf-$(GOOS)_riscv64$/;"	m
BJ	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
BL	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
BN	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
BO	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
BSpace	vim/.vim/plugged/fzf/src/tui/tui.go	/^	BSpace$/;"	c	package:tui
BT	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
BTab	vim/.vim/plugged/fzf/src/tui/tui.go	/^	BTab$/;"	c	package:tui
BU	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
BUILD_FLAGS	vim/.vim/plugged/fzf/Makefile	/^BUILD_FLAGS    := -a -ldflags "-s -w -X main.version=$(VERSION) -X main.revision=$(REVISION)" -t/;"	m
BUILD_INVERTED_INDEX	vim/.vim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set BUILD_INVERTED_INDEX=1$/;"	v
BUILD_INVERTED_INDEX	vim/.vim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set BUILD_INVERTED_INDEX=0$/;"	v
BV	vim/.vim/plugged/coc.nvim/build/index.js	/^`).join(" "),e.slice(0,t*2)}dispose(){this.stop()}}});var TD,Tme,Dme,_y,BV=R(()=>{TD=E(Ui());As(/;"	v
BVe	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
BW	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
BX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
BZ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ba	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Backers	vim/.vim/plugged/coc.nvim/Readme.md	/^## Backers$/;"	s
BackwardEOF	vim/.vim/plugged/fzf/src/tui/tui.go	/^	BackwardEOF$/;"	c	package:tui
Bae	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
BaicizhanTranslator	vim/.vim/plugged/vim-translator/script/translator.py	/^class BaicizhanTranslator(BaseTranslator):$/;"	c
BaseTranslator	vim/.vim/plugged/vim-translator/script/translator.py	/^class BaseTranslator(object):$/;"	c
Basic	vim/Readme.md	/^### Basic$/;"	S	section:My awesome vim dotfile""Shortcuts
Bb	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Bc	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
Bd	vim/.vim/plugged/coc.nvim/build/index.js	/^`),a++,c=i,o=14;switch(w){case 123:return i++,o=1;case 125:return i++,o=2;case 91:return i++,o=3/;"	f
Be	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Bee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Before submitting	vim/.vim/plugged/fzf.vim/.github/ISSUE_TEMPLATE.md	/^Before submitting$/;"	c
BenchmarkExtractColor	vim/.vim/plugged/fzf/src/ansi_test.go	/^func BenchmarkExtractColor(b *testing.B) {$/;"	f	package:fzf
BenchmarkNextAnsiEscapeSequence	vim/.vim/plugged/fzf/src/ansi_test.go	/^func BenchmarkNextAnsiEscapeSequence(b *testing.B) {$/;"	f	package:fzf
BenchmarkNextAnsiEscapeSequence_Regex	vim/.vim/plugged/fzf/src/ansi_test.go	/^func BenchmarkNextAnsiEscapeSequence_Regex(b *testing.B) {$/;"	f	package:fzf
Bg	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Bg	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Bg           ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Bg	vim/.vim/plugged/fzf/src/tui/tui.go	/^func (p ColorPair) Bg() Color {$/;"	f	struct:tui.ColorPair	typeref:typename:Color
Bie	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
BingDict	vim/.vim/plugged/vim-translator/script/translator.py	/^class BingDict(BaseTranslator):$/;"	c
Bj	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Bk	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	v
Bl	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
Black	vim/.vim/plugged/fzf/src/options.go	/^	Black       bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Blink	vim/.vim/plugged/fzf/src/tui/dummy.go	/^	Blink     = Attr(1 << 4)$/;"	c	package:tui
Blink	vim/.vim/plugged/fzf/src/tui/tcell.go	/^	Blink          = Attr(tcell.AttrBlink)$/;"	c	package:tui
Blink2	vim/.vim/plugged/fzf/src/tui/dummy.go	/^	Blink2    = Attr(1 << 5)$/;"	c	package:tui
Bme	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
Bn	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
Bold	vim/.vim/plugged/fzf/src/options.go	/^	Bold        bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Bold	vim/.vim/plugged/fzf/src/tui/dummy.go	/^	Bold      = Attr(1)$/;"	c	package:tui
Bold	vim/.vim/plugged/fzf/src/tui/tcell.go	/^	Bold      Attr = Attr(tcell.AttrBold)$/;"	c	package:tui	typeref:type:Attr
Border	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Border       ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
BorderBottom	vim/.vim/plugged/fzf/src/tui/tui.go	/^	BorderBottom$/;"	c	package:tui
BorderCharacter	vim/.vim/plugged/fzf/src/tui/tui.go	/^type BorderCharacter int$/;"	t	package:tui	typeref:typename:int
BorderHorizontal	vim/.vim/plugged/fzf/src/tui/tui.go	/^	BorderHorizontal$/;"	c	package:tui
BorderLeft	vim/.vim/plugged/fzf/src/tui/tui.go	/^	BorderLeft$/;"	c	package:tui
BorderNone	vim/.vim/plugged/fzf/src/tui/tui.go	/^	BorderNone BorderShape = iota$/;"	c	package:tui	typeref:type:BorderShape
BorderRight	vim/.vim/plugged/fzf/src/tui/tui.go	/^	BorderRight$/;"	c	package:tui
BorderRounded	vim/.vim/plugged/fzf/src/tui/tui.go	/^	BorderRounded$/;"	c	package:tui
BorderShape	vim/.vim/plugged/fzf/src/options.go	/^	BorderShape tui.BorderShape$/;"	m	struct:fzf.Options	typeref:typename:tui.BorderShape
BorderShape	vim/.vim/plugged/fzf/src/tui/tui.go	/^type BorderShape int$/;"	t	package:tui	typeref:typename:int
BorderSharp	vim/.vim/plugged/fzf/src/tui/tui.go	/^	BorderSharp$/;"	c	package:tui
BorderStyle	vim/.vim/plugged/fzf/src/tui/tui.go	/^type BorderStyle struct {$/;"	s	package:tui
BorderTop	vim/.vim/plugged/fzf/src/tui/tui.go	/^	BorderTop$/;"	c	package:tui
BorderVertical	vim/.vim/plugged/fzf/src/tui/tui.go	/^	BorderVertical$/;"	c	package:tui
Bq	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
Br	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Branches	vim/.vim/plugged/fzf/ADVANCED.md	/^### Branches$/;"	S	section:Advanced fzf examples""Key bindings for git objects
Breaking Changes	vim/.vim/plugged/vim-translator/README.md	/^## Breaking Changes$/;"	s	chapter:vim-translator
Breaking syntax highlighting in very long files	vim/.vim/plugged/vim-styled-components/README.md	/^### Breaking syntax highlighting in very long files$/;"	S	section:vim-styled-components""Caveats
Bse	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Bt	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
Bu	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
Bug fixes	vim/.vim/plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.11
Bug fixes	vim/.vim/plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.12
Bug fixes	vim/.vim/plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.13
Bug fixes	vim/.vim/plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.5
Bug fixes	vim/.vim/plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.6
Bug fixes	vim/.vim/plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.7
Bug fixes	vim/.vim/plugged/fzf/CHANGELOG.md	/^### Bug fixes$/;"	S	section:CHANGELOG""0.9.8
Bugs and Feature Requests	vim/.vim/plugged/editorconfig-vim/README.md	/^## Bugs and Feature Requests$/;"	s	chapter:EditorConfig Vim Plugin
Build instructions	vim/.vim/plugged/fzf/BUILD.md	/^Build instructions$/;"	s	chapter:Building fzf
BuildPattern	vim/.vim/plugged/fzf/src/pattern.go	/^func BuildPattern(fuzzy bool, fuzzyAlgo algo.Algo, extended bool, caseMode Case, normalize bool,/;"	f	package:fzf	typeref:typename:*Pattern
Building fzf	vim/.vim/plugged/fzf/BUILD.md	/^Building fzf$/;"	c
Building fzf	vim/.vim/plugged/fzf/README.md	/^Building fzf$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Building your own Iceberg	vim/.vim/plugged/iceberg.vim/README.md	/^# Building your own Iceberg$/;"	c
Button	vim/.vim/plugged/vim-styled-components/examples/apis.js	/^const Button = cd('button')(`color: white`);$/;"	C
Button	vim/.vim/plugged/vim-styled-components/examples/apis.js	/^const Button = dc('button')(`$/;"	C
Button	vim/.vim/plugged/vim-styled-components/examples/apis.js	/^const Button = dc('button')`color: white`;$/;"	C
Button	vim/.vim/plugged/vim-styled-components/examples/apis.js	/^const Button = styled(`button`)`$/;"	C
Button	vim/.vim/plugged/vim-styled-components/examples/apis.js	/^const Button = styled.button`$/;"	C
Button	vim/.vim/plugged/vim-styled-components/examples/indent.js	/^const Button = styled.button`$/;"	C
Bw	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
Bx	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
By	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
ByOrder	vim/.vim/plugged/fzf/src/result.go	/^type ByOrder []Offset$/;"	t	package:fzf	typeref:typename:[]Offset
ByRelevance	vim/.vim/plugged/fzf/src/result.go	/^type ByRelevance []Result$/;"	t	package:fzf	typeref:typename:[]Result
ByRelevanceTac	vim/.vim/plugged/fzf/src/result.go	/^type ByRelevanceTac []Result$/;"	t	package:fzf	typeref:typename:[]Result
Byte	vim/.vim/plugged/fzf/src/tui/tui.go	/^func (t EventType) Byte() byte {$/;"	f	type:tui.EventType	typeref:typename:byte
Bytes	vim/.vim/plugged/fzf/src/util/chars.go	/^func (chars *Chars) Bytes() []byte {$/;"	f	struct:util.Chars	typeref:typename:[]byte
Bz	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
C	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
C	vim/.vim/plugged/vim-styled-components/examples/issue-55.ts	/^const C = styled<Foo>('h1')`$/;"	C
C$	vim/.vim/plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	v
C0	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
C4	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
C5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
C6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
C8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
CA	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
CC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
CD	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
CFill	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) CFill(fg Color, bg Color, attr Attr, text string) FillReturn {$/;"	f	struct:tui.LightWindow	typeref:typename:FillReturn
CFill	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) CFill(fg Color, bg Color, a Attr, str string) FillReturn {$/;"	f	struct:tui.TcellWindow	typeref:typename:FillReturn
CFill	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CFill(fg Color, bg Color, attr Attr, text string) FillReturn$/;"	n	interface:tui.Window	typeref:typename:FillReturn
CG	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
CHANGELOG	vim/.vim/plugged/fzf/CHANGELOG.md	/^CHANGELOG$/;"	c
CI	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
CK	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
CL	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
CLOSING	vim/.vim/plugged/MatchTagAlways/python/mta_core.py	/^  CLOSING = 2$/;"	v	class:TagType
CN	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
COMMENT_REGEX	vim/.vim/plugged/MatchTagAlways/python/mta_core.py	/^COMMENT_REGEX = re.compile( '<!--.*?-->', re.DOTALL )$/;"	v
COMPREPLY=	vim/.vim/plugged/fzf/shell/completion.bash	/^    COMPREPLY=()$/;"	f
COMPREPLY=	vim/.vim/plugged/fzf/shell/completion.bash	/^  COMPREPLY=()$/;"	f
CP	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	v
CPrint	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) CPrint(pair ColorPair, text string) {$/;"	f	struct:tui.LightWindow
CPrint	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) CPrint(pair ColorPair, text string) {$/;"	f	struct:tui.TcellWindow
CPrint	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CPrint(color ColorPair, text string)$/;"	n	interface:tui.Window
CSCOPE_ARGS	vim/.vim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -q$/;"	v
CSCOPE_ARGS	vim/.vim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=$/;"	v
CSCOPE_ARGS	vim/.vim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=%CSCOPE_ARGS% -i %DB_FILE%.files$/;"	v
CSCOPE_EXE	vim/.vim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_EXE=%~2$/;"	v
CSCOPE_EXE	vim/.vim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_EXE=cscope$/;"	v
CSSColor	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^	augroup CSSColor$/;"	a
CTAGS_ARGS	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% "%PROJECT_ROOT%"$/;"	v
CTAGS_ARGS	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% --append "%UPDATED_SOURCE%"$/;"	v
CTAGS_ARGS	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% -L %TAGS_FILE%.files$/;"	v
CTAGS_ARGS	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% %~2$/;"	v
CTAGS_ARGS	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --exclude=%2$/;"	v
CTAGS_ARGS	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --options=%2$/;"	v
CTAGS_ARGS	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_ARGS=$/;"	v
CTAGS_EXE	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_EXE=%~2$/;"	v
CTAGS_EXE	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_EXE=ctags$/;"	v
CTEST_CUSTOM_TESTS_IGNORE	vim/.vim/plugged/editorconfig-vim/tests/core/CTestCustom.cmake	/^    set(CTEST_CUSTOM_TESTS_IGNORE ${CTEST_CUSTOM_TESTS_IGNORE} g_utf_8_char)$/;"	v
CTEST_CUSTOM_TESTS_IGNORE	vim/.vim/plugged/editorconfig-vim/tests/core/CTestCustom.cmake	/^    set(CTEST_CUSTOM_TESTS_IGNORE ${CTEST_CUSTOM_TESTS_IGNORE} utf_8_char)$/;"	v
CV	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	v
CX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
CZ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
C_	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
CacheKey	vim/.vim/plugged/fzf/src/pattern.go	/^func (p *Pattern) CacheKey() string {$/;"	f	struct:fzf.Pattern	typeref:typename:string
Cae	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
Can I display the plugin information at the filename component?	vim/.vim/plugged/lightline.vim/README.md	/^### Can I display the plugin information at the filename component?$/;"	S	section:lightline.vim""Advanced configuration
Can I display the plugin name at the mode component?	vim/.vim/plugged/lightline.vim/README.md	/^### Can I display the plugin name at the mode component?$/;"	S	section:lightline.vim""Advanced configuration
Can I hide the readonly component in other plugins buffer?	vim/.vim/plugged/lightline.vim/README.md	/^### Can I hide the readonly component in other plugins buffer?$/;"	S	section:lightline.vim""Advanced configuration
Can I hide the readonly component in the help buffer?	vim/.vim/plugged/lightline.vim/README.md	/^### Can I hide the readonly component in the help buffer?$/;"	S	section:lightline.vim""Advanced configuration
Can I trim the bar between the filename and modified sign?	vim/.vim/plugged/lightline.vim/README.md	/^### Can I trim the bar between the filename and modified sign?$/;"	S	section:lightline.vim""Advanced configuration
Can I trim the file format and encoding information on narrow windows?	vim/.vim/plugged/lightline.vim/README.md	/^### Can I trim the file format and encoding information on narrow windows?$/;"	S	section:lightline.vim""Advanced configuration
CanAccessCursorColumn	vim/.vim/plugged/MatchTagAlways/python/mta_vim.py	/^def CanAccessCursorColumn( cursor_column ):$/;"	f
Card	vim/.vim/plugged/vim-styled-components/examples/issue-37.ts	/^export const Card = styled<CardProps, `div`>('div')`$/;"	C
CardProps	vim/.vim/plugged/vim-styled-components/examples/issue-37.ts	/^interface CardProps {$/;"	i
Case	vim/.vim/plugged/fzf/src/options.go	/^	Case        Case$/;"	m	struct:fzf.Options	typeref:typename:Case
Case	vim/.vim/plugged/fzf/src/options.go	/^type Case int$/;"	t	package:fzf	typeref:typename:int
CaseIgnore	vim/.vim/plugged/fzf/src/options.go	/^	CaseIgnore$/;"	c	package:fzf
CaseRespect	vim/.vim/plugged/fzf/src/options.go	/^	CaseRespect$/;"	c	package:fzf
CaseSmart	vim/.vim/plugged/fzf/src/options.go	/^	CaseSmart Case = iota$/;"	c	package:fzf	typeref:type:Case
Caveats	vim/.vim/plugged/vim-styled-components/README.md	/^## Caveats$/;"	s	chapter:vim-styled-components
Cb	vim/.vim/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	f
Cc	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Ce	vim/.vim/plugged/coc.nvim/build/index.js	/^${JSON.stringify(P,null,4)}`);let z=P;if(ti.string(z.id)||ti.number(z.id)){let K=String(z.id),ce/;"	f
Cee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Cg	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
Change	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Change$/;"	c	package:tui
Changed behavior on `--no-sort`	vim/.vim/plugged/fzf/CHANGELOG.md	/^#### Changed behavior on `--no-sort`$/;"	t	subsection:CHANGELOG""0.9.4""*Backward incompatible changes*
Char	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Char       rune$/;"	m	struct:tui.Event	typeref:typename:rune
Chars	vim/.vim/plugged/fzf/src/util/chars.go	/^type Chars struct {$/;"	s	package:util
Checking for Final Newline	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/insert_final_newline.rst	/^Checking for Final Newline$/;"	s	chapter:Insert Final Newline Property
Chunk	vim/.vim/plugged/fzf/src/chunklist.go	/^type Chunk struct {$/;"	s	package:fzf
ChunkCache	vim/.vim/plugged/fzf/src/cache.go	/^type ChunkCache struct {$/;"	s	package:fzf
ChunkList	vim/.vim/plugged/fzf/src/chunklist.go	/^type ChunkList struct {$/;"	s	package:fzf
Ci	vim/.vim/plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	f
Cl	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
Cle	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
CleanUp	vim/.vim/plugged/vim-gutentags/plat/unix/update_scopedb.sh	/^CleanUp() {$/;"	f
Clear	vim/.vim/plugged/fzf/src/chunklist.go	/^func (cl *ChunkList) Clear() {$/;"	f	struct:fzf.ChunkList
Clear	vim/.vim/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Clear()            {}$/;"	f	unknown:tui.FullscreenRenderer
Clear	vim/.vim/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Clear() {$/;"	f	struct:tui.LightRenderer
Clear	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Clear() {$/;"	f	unknown:tui.FullscreenRenderer
Clear	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Clear()$/;"	n	interface:tui.Renderer
Clear	vim/.vim/plugged/fzf/src/util/eventbox.go	/^func (events *Events) Clear() {$/;"	f	type:util.Events
ClearOnExit	vim/.vim/plugged/fzf/src/options.go	/^	ClearOnExit bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Close	vim/.vim/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Close()            {}$/;"	f	unknown:tui.FullscreenRenderer
Close	vim/.vim/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Close() {$/;"	f	struct:tui.LightRenderer
Close	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Close() {$/;"	f	struct:tui.LightWindow
Close	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Close() {$/;"	f	unknown:tui.FullscreenRenderer
Close	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Close() {$/;"	f	struct:tui.TcellWindow
Close	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Close()$/;"	n	interface:tui.Renderer
Close	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Close()$/;"	n	interface:tui.Window
CloseTagDisableBuffer	vim/.vim/plugged/vim-closetag/plugin/closetag.vim	/^    com! -nargs=* -complete=file CloseTagDisableBuffer let b:closetag_disabled = 1$/;"	c
CloseTagEnableBuffer	vim/.vim/plugged/vim-closetag/plugin/closetag.vim	/^    com! -nargs=* -complete=file CloseTagEnableBuffer let b:closetag_disabled = 0$/;"	c
CloseTagToggleBuffer	vim/.vim/plugged/vim-closetag/plugin/closetag.vim	/^    com! -nargs=* -complete=file CloseTagToggleBuffer let b:closetag_disabled = exists('b:closet/;"	c
Cm	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Cme	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
Cn	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	f
CoC	vim/Readme.md	/^### CoC $/;"	S	section:My awesome vim dotfile""Shortcuts
CoC Plugins	vim/Readme.md	/^#### CoC Plugins$/;"	t	subsection:My awesome vim dotfile""Used Plugins""Auto-completion
CocAction	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=* -range CocAction :call coc#rpc#notify('codeActionRange', [<line1>, <line2>, <f/;"	c
CocAction	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! CocAction(name, ...) abort$/;"	f
CocActionAsync	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! CocActionAsync(name, ...) abort$/;"	f
CocCommand	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=* -complete=custom,s:CommandList -range CocCommand :call coc#rpc#notify('runComm/;"	c
CocConfig	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocConfig       :call s:OpenConfig()$/;"	c
CocDiagnostics	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? CocDiagnostics  :call s:OpenDiagnostics(<f-args>)$/;"	c
CocDisable	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocDisable      :call s:Disable()$/;"	c
CocEnable	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocEnable       :call s:Enable(0)$/;"	c
CocFirst	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocFirst        :call coc#rpc#notify('listFirs/;"	c
CocFix	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=* -range CocFix    :call coc#rpc#notify('codeActionRange', [<line1>, <line2>, 'q/;"	c
CocHasProvider	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! CocHasProvider(name) abort$/;"	f
CocInfo	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocInfo         :call s:ShowInfo()$/;"	c
CocInstall	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=* -bar -complete=custom,s:InstallOptions CocInstall   :call coc#util#install_ext/;"	c
CocLast	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocLast         :call coc#rpc#notify('listLast/;"	c
CocList	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=* -complete=custom,coc#list#options CocList      :call coc#rpc#notify('openList'/;"	c
CocListCancel	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocListCancel   :call coc#rpc#notify('listCanc/;"	c
CocListResume	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocListResume   :call coc#rpc#notify('listResu/;"	c
CocLocalConfig	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocLocalConfig  :call coc#rpc#notify('openLocalConfig', [])$/;"	c
CocLocations	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! CocLocations(id, method, ...) abort$/;"	f
CocLocationsAsync	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! CocLocationsAsync(id, method, ...) abort$/;"	f
CocNext	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocNext         :call coc#rpc#notify('listNext/;"	c
CocNotify	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! CocNotify(...) abort$/;"	f
CocOpenLog	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocOpenLog      :call coc#rpc#notify('openLog',  [])$/;"	c
CocOutline	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocOutline      :call coc#rpc#notify('showOutline', [])$/;"	c
CocPopupCallback	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! CocPopupCallback(bufnr, arglist) abort$/;"	f
CocPrev	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocPrev         :call coc#rpc#notify('listPrev/;"	c
CocRebuild	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocRebuild      :call coc#util#rebuild()$/;"	c
CocRegistNotification	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! CocRegistNotification(id, method, cb) abort$/;"	f
CocRequest	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! CocRequest(...) abort$/;"	f
CocRequestAsync	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! CocRequestAsync(...)$/;"	f
CocRestart	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocRestart      :call coc#rpc#restart()$/;"	c
CocSearch	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=+ -complete=custom,s:SearchOptions  CocSearch    :call coc#rpc#notify('search', /;"	c
CocStart	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocStart        :call coc#rpc#start_server()$/;"	c
CocTagFunc	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! CocTagFunc(pattern, flags, info) abort$/;"	f
CocUninstall	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=+ -complete=custom,s:ExtensionList  CocUninstall :call CocActionAsync('uninstall/;"	c
CocUpdate	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocUpdate       :call coc#util#update_extensions(1)$/;"	c
CocUpdateSync	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 -bar CocUpdateSync   :call coc#util#update_extensions()$/;"	c
CocWatch	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=1 -complete=custom,s:LoadedExtensions  CocWatch    :call coc#rpc#notify('watchEx/;"	c
CoffeeList	vim/.vim/plugged/vim-styled-components/examples/issue-30-3.js	/^class CoffeeList extends React.Component<Props, State> {$/;"	c
ColBorder	vim/.vim/plugged/fzf/src/tui/tui.go	/^	ColBorder               ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCurrent	vim/.vim/plugged/fzf/src/tui/tui.go	/^	ColCurrent              ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCurrentCursor	vim/.vim/plugged/fzf/src/tui/tui.go	/^	ColCurrentCursor        ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCurrentCursorEmpty	vim/.vim/plugged/fzf/src/tui/tui.go	/^	ColCurrentCursorEmpty   ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCurrentMatch	vim/.vim/plugged/fzf/src/tui/tui.go	/^	ColCurrentMatch         ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCurrentSelected	vim/.vim/plugged/fzf/src/tui/tui.go	/^	ColCurrentSelected      ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCurrentSelectedEmpty	vim/.vim/plugged/fzf/src/tui/tui.go	/^	ColCurrentSelectedEmpty ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCursor	vim/.vim/plugged/fzf/src/tui/tui.go	/^	ColCursor               ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColCursorEmpty	vim/.vim/plugged/fzf/src/tui/tui.go	/^	ColCursorEmpty          ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColDisabled	vim/.vim/plugged/fzf/src/tui/tui.go	/^	ColDisabled             ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColHeader	vim/.vim/plugged/fzf/src/tui/tui.go	/^	ColHeader               ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColInfo	vim/.vim/plugged/fzf/src/tui/tui.go	/^	ColInfo                 ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColInput	vim/.vim/plugged/fzf/src/tui/tui.go	/^	ColInput                ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColMatch	vim/.vim/plugged/fzf/src/tui/tui.go	/^	ColMatch                ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColNormal	vim/.vim/plugged/fzf/src/tui/tui.go	/^	ColNormal               ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColPreview	vim/.vim/plugged/fzf/src/tui/tui.go	/^	ColPreview              ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColPreviewBorder	vim/.vim/plugged/fzf/src/tui/tui.go	/^	ColPreviewBorder        ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColPrompt	vim/.vim/plugged/fzf/src/tui/tui.go	/^	ColPrompt               ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColSelected	vim/.vim/plugged/fzf/src/tui/tui.go	/^	ColSelected             ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
ColSpinner	vim/.vim/plugged/fzf/src/tui/tui.go	/^	ColSpinner              ColorPair$/;"	v	package:tui	typeref:struct:ColorPair
Color	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Color Color$/;"	m	struct:tui.ColorAttr	typeref:typename:Color
Color	vim/.vim/plugged/fzf/src/tui/tui.go	/^type Color int32$/;"	t	package:tui	typeref:typename:int32
Color themes	vim/.vim/plugged/fzf/ADVANCED.md	/^Color themes$/;"	s	chapter:Advanced fzf examples
ColorAttr	vim/.vim/plugged/fzf/src/tui/tui.go	/^type ColorAttr struct {$/;"	s	package:tui
ColorPair	vim/.vim/plugged/fzf/src/tui/tui.go	/^type ColorPair struct {$/;"	s	package:tui
ColorTheme	vim/.vim/plugged/fzf/src/tui/tui.go	/^type ColorTheme struct {$/;"	s	package:tui
Colored	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Colored      bool$/;"	m	struct:tui.ColorTheme	typeref:typename:bool
Colors	vim/.vim/plugged/fzf/src/item.go	/^func (item *Item) Colors() []ansiOffset {$/;"	f	struct:fzf.Item	typeref:typename:[]ansiOffset
Colorscheme configuration	vim/.vim/plugged/lightline.vim/README.md	/^## Colorscheme configuration$/;"	s	chapter:lightline.vim
Comands	vim/.vim/plugged/MatchTagAlways/README.md	/^## Comands$/;"	s	chapter:Always highlight enclosing tags
Command-Line Completion	vim/.vim/plugged/far.vim/README.md	/^### Command-Line Completion$/;"	S	section:far.vim - Find And Replace Vim plugin""Extras
Command-local options	vim/.vim/plugged/fzf.vim/README.md	/^### Command-local options$/;"	S	section:fzf :heart: vim""Customization
Commands	vim/.vim/plugged/fzf.vim/README.md	/^Commands$/;"	s	chapter:fzf :heart: vim
Commands	vim/.vim/plugged/gv.vim/README.md	/^### Commands$/;"	S	section:gv.vim""Usage
Commands	vim/.vim/plugged/vim-closetag/README.md	/^#### Commands$/;"	t	chapter:closetag.vim
Commands	vim/.vim/plugged/vim-translator/README.md	/^## Commands$/;"	s	chapter:vim-translator
Commands in the searching result window	vim/.vim/plugged/far.vim/README.md	/^### Commands in the searching result window$/;"	S	section:far.vim - Find And Replace Vim plugin""Usage
Commentary	vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^command! -range -bar -bang Commentary call s:go(<line1>,<line2>,<bang>0)$/;"	c
Commit hashes	vim/.vim/plugged/fzf/ADVANCED.md	/^### Commit hashes$/;"	S	section:Advanced fzf examples""Key bindings for git objects
Comparable	vim/.vim/plugged/fzf/src/tui/tui.go	/^func (e Event) Comparable() Event {$/;"	f	unknown:tui.Event	typeref:typename:Event
Compiler settings	vim/.vim/plugged/typescript-vim/README.md	/^Compiler settings$/;"	s	chapter:Typescript Syntax for Vim
CompilerSet	vim/.vim/plugged/typescript-vim/compiler/typescript.vim	/^  command! -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	vim/.vim/plugged/vim-javascript/compiler/eslint.vim	/^  command! -nargs=* CompilerSet setlocal <args>$/;"	c
Completion functions	vim/.vim/plugged/fzf.vim/README.md	/^Completion functions$/;"	s	chapter:fzf :heart: vim
CompletionTest	vim/.vim/plugged/fzf/test/test_go.rb	/^module CompletionTest$/;"	m
Components	vim/.vim/plugged/vim-lightline-coc/README.md	/^## Components$/;"	s	chapter:lightline-coc
Concealing Characters	vim/.vim/plugged/vim-javascript/README.md	/^## Concealing Characters$/;"	s	chapter:vim-javascript
Configuration	vim/.vim/plugged/fzf/README-VIM.md	/^### Configuration$/;"	S	section:FZF Vim integration""`:FZF[!]`
Configuration	vim/.vim/plugged/vim-lightline-coc/README.md	/^## Configuration$/;"	s	chapter:lightline-coc
Configuration	vim/.vim/plugged/vim-translator/README.md	/^## Configuration$/;"	s	chapter:vim-translator
Configuration	vim/.vim/plugged/vim-vue-plugin/README.md	/^## Configuration$/;"	s	chapter:vim-vue-plugin [![Build Status][12]](https://travis-ci.com/leafOfTree/vim-vue-plugin)
Configuration Variables	vim/.vim/plugged/vim-javascript/README.md	/^## Configuration Variables$/;"	s	chapter:vim-javascript
Consistency Check	vim/.vim/plugged/far.vim/README.md	/^### Consistency Check$/;"	S	section:far.vim - Find And Replace Vim plugin""Extras
Constrain	vim/.vim/plugged/fzf/src/util/util.go	/^func Constrain(val int, min int, max int) int {$/;"	f	package:util	typeref:typename:int
Constrain32	vim/.vim/plugged/fzf/src/util/util.go	/^func Constrain32(val int32, min int32, max int32) int32 {$/;"	f	package:util	typeref:typename:int32
Contact	vim/.vim/plugged/MatchTagAlways/README.md	/^## Contact$/;"	s	chapter:Always highlight enclosing tags
Container	vim/.vim/plugged/vim-styled-components/examples/apis.js	/^class Container {$/;"	c
Container	vim/.vim/plugged/vim-styled-components/examples/issue-47.js	/^const Container = styled.div`$/;"	C
Contents	vim/.vim/plugged/vim-multiple-cursors/README.md	/^## Contents$/;"	s	chapter:vim-multiple-cursors
Context-based behavior	vim/.vim/plugged/vim-vue-plugin/README.md	/^## Context-based behavior$/;"	s	chapter:vim-vue-plugin [![Build Status][12]](https://travis-ci.com/leafOfTree/vim-vue-plugin)
Contributing	vim/.vim/plugged/vim-gutentags/CONTRIBUTING.md	/^# Contributing$/;"	c
Contributing	vim/.vim/plugged/vim-javascript/README.md	/^## Contributing$/;"	s	chapter:vim-javascript
Contributing	vim/.vim/plugged/vim-multiple-cursors/README.md	/^## Contributing$/;"	s	chapter:vim-multiple-cursors
Contributing	vim/.vim/plugged/vim-styled-components/README.md	/^## Contributing$/;"	s	chapter:vim-styled-components
Contributing	vim/.vim/plugged/vim-toml/README.md	/^## Contributing$/;"	s	chapter:vim-toml
Contributing	vim/.vim/plugged/vim-twiggy/CONTRIBUTING.md	/^Contributing$/;"	c
Contributors	vim/.vim/plugged/vim-multiple-cursors/README.md	/^### Contributors$/;"	S	section:vim-multiple-cursors""Contributing
CopyRunes	vim/.vim/plugged/fzf/src/util/chars.go	/^func (chars *Chars) CopyRunes(dest []rune) {$/;"	f	struct:util.Chars
CountItems	vim/.vim/plugged/fzf/src/chunklist.go	/^func CountItems(cs []*Chunk) int {$/;"	f	package:fzf	typeref:typename:int
Cp	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
Cr	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
Credit	vim/.vim/plugged/vim-lightline-coc/README.md	/^## Credit$/;"	s	chapter:lightline-coc
Credit	vim/.vim/plugged/vim-multiple-cursors/README.md	/^## Credit$/;"	s	chapter:vim-multiple-cursors
Credits	vim/.vim/plugged/golden-ratio/README.md	/^## Credits$/;"	s	chapter:Golden Ratio
Criteria	vim/.vim/plugged/fzf/src/options.go	/^	Criteria    []criterion$/;"	m	struct:fzf.Options	typeref:typename:[]criterion
Cs	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	v
Cse	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
CtrlA	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlA$/;"	c	package:tui
CtrlAlt	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlAlt$/;"	c	package:tui
CtrlAltKey	vim/.vim/plugged/fzf/src/tui/tui.go	/^func CtrlAltKey(r rune) Event {$/;"	f	package:tui	typeref:typename:Event
CtrlB	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlB$/;"	c	package:tui
CtrlBackSlash	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlBackSlash$/;"	c	package:tui
CtrlC	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlC$/;"	c	package:tui
CtrlCaret	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlCaret$/;"	c	package:tui
CtrlD	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlD$/;"	c	package:tui
CtrlE	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlE$/;"	c	package:tui
CtrlF	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlF$/;"	c	package:tui
CtrlG	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlG$/;"	c	package:tui
CtrlH	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlH$/;"	c	package:tui
CtrlJ	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlJ$/;"	c	package:tui
CtrlK	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlK$/;"	c	package:tui
CtrlL	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlL$/;"	c	package:tui
CtrlM	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlM$/;"	c	package:tui
CtrlN	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlN$/;"	c	package:tui
CtrlO	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlO$/;"	c	package:tui
CtrlP	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlP$/;"	c	package:tui
CtrlQ	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlQ$/;"	c	package:tui
CtrlR	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlR$/;"	c	package:tui
CtrlRightBracket	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlRightBracket$/;"	c	package:tui
CtrlS	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlS$/;"	c	package:tui
CtrlSlash	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlSlash$/;"	c	package:tui
CtrlSpace	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlSpace$/;"	c	package:tui
CtrlT	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlT$/;"	c	package:tui
CtrlU	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlU$/;"	c	package:tui
CtrlV	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlV$/;"	c	package:tui
CtrlW	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlW$/;"	c	package:tui
CtrlX	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlX$/;"	c	package:tui
CtrlY	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlY$/;"	c	package:tui
CtrlZ	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CtrlZ$/;"	c	package:tui
Current	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Current      ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
CurrentLineAndColumn	vim/.vim/plugged/MatchTagAlways/python/mta_vim.py	/^def CurrentLineAndColumn():$/;"	f
CurrentMatch	vim/.vim/plugged/fzf/src/tui/tui.go	/^	CurrentMatch ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Currently supported:	vim/.vim/plugged/iceberg-dark/README.md	/^## Currently supported:$/;"	s	chapter:iceberg-dark
Cursor	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Cursor       ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Custom	vim/.vim/plugged/lightline.vim/test/expand.vim	/^  function! Custom()$/;"	f
Custom	vim/.vim/plugged/lightline.vim/test/onetab.vim	/^  function! Custom(n)$/;"	f
Custom completion	vim/.vim/plugged/fzf.vim/README.md	/^Custom completion$/;"	s	chapter:fzf :heart: vim
Custom fuzzy completion	vim/.vim/plugged/fzf/README.md	/^#### Custom fuzzy completion$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
Custom statusline	vim/.vim/plugged/fzf.vim/README.md	/^### Custom statusline$/;"	S	section:fzf :heart: vim""Status line of terminal buffer
Custom1	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^  function! Custom1()$/;"	f
Custom2	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^  function! Custom2()$/;"	f
Custom3	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^  function! Custom3()$/;"	f
Customization	vim/.vim/plugged/fzf.vim/README.md	/^Customization$/;"	s	chapter:fzf :heart: vim
Customization	vim/.vim/plugged/gv.vim/README.md	/^Customization$/;"	s	chapter:gv.vim
Cw	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Cx	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
Cy	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	f
Cycle	vim/.vim/plugged/fzf/src/options.go	/^	Cycle       bool$/;"	m	struct:fzf.Options	typeref:typename:bool
D	vim/.vim/autoload/plug.vim	/^  nnoremap <silent> <buffer> D  :PlugDiff<cr>$/;"	m
D	vim/.vim/plugged/coc.nvim/build/index.js	/^`)==-1&&(u+=" ",f(c,"CocTreeDescription"),u+=c),{line:u,highlights:o}}async appendTreeNode(e,t,i/;"	v
D	vim/.vim/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^filter global:D($file = $debug) {$/;"	f
D	vim/.vim/plugged/vim-styled-components/examples/issue-55.ts	/^const D = styled.h1<Foo>`$/;"	C
D$	vim/.vim/plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	v
D0	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
D5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
D6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
D7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
D8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
D9	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
DA	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
DB	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
DB_FILE	vim/.vim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set DB_FILE=%~2$/;"	v
DB_FILE	vim/.vim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set DB_FILE=cscope.out$/;"	v
DC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
DD	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
DEBUG	vim/.vim/plugged/fzf/src/algo/algo.go	/^var DEBUG bool$/;"	v	package:algo	typeref:typename:bool
DEFAULT	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	c	class:r
DEFAULT_TIMEOUT	vim/.vim/plugged/fzf/test/test_go.rb	/^DEFAULT_TIMEOUT = 10$/;"	C
DESCRIPTION	vim/.vim/plugged/fzf/man/man1/fzf-tmux.1	/^.SH DESCRIPTION$/;"	s	title:fzf-tmux
DESCRIPTION	vim/.vim/plugged/fzf/man/man1/fzf.1	/^.SH DESCRIPTION$/;"	s	title:fzf
DG	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
DIR	vim/.vim/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^$global:DIR = $PSScriptRoot$/;"	v
DK	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
DO	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
DR	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
DS	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
DT	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
DV	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	f
DW	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
DX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
DZ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
D_	vim/.vim/plugged/coc.nvim/build/index.js	/^`),0,i]]);return t[o-1]}async withProgress(e,t){return this.checkDialog()?await new bg(this.nvim/;"	f
Da	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Dae	vim/.vim/plugged/coc.nvim/build/index.js	/^`),a++,c=i,o=14;switch(w){case 123:return i++,o=1;case 125:return i++,o=2;case 91:return i++,o=3/;"	f
Dark256	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Dark256   *ColorTheme$/;"	v	package:tui	typeref:typename:*ColorTheme
DarkBg	vim/.vim/plugged/fzf/src/tui/tui.go	/^	DarkBg       ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Db	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Dc	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Dd	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
De	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	f
Debug	vim/.vim/plugged/vim-rooter/test/runner.vim	/^function Debug(msg)$/;"	f
Dee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Default16	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Default16 *ColorTheme$/;"	v	package:tui	typeref:typename:*ColorTheme
Del	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Del$/;"	c	package:tui
Delimiter	vim/.vim/plugged/fzf/src/options.go	/^	Delimiter   Delimiter$/;"	m	struct:fzf.Options	typeref:typename:Delimiter
Delimiter	vim/.vim/plugged/fzf/src/tokenizer.go	/^type Delimiter struct {$/;"	s	package:fzf
Demo	vim/.vim/plugged/fzf/README.md	/^#### Demo$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Usage
Dependencies	vim/.vim/plugged/fzf.vim/README.md	/^### Dependencies$/;"	S	section:fzf :heart: vim""Installation
Describe the bug	vim/.vim/plugged/coc.nvim/.github/ISSUE_TEMPLATE/bug_report.md	/^## Describe the bug$/;"	s
Description	vim/.vim/plugged/vim-vue-plugin/README.md	/^### Description$/;"	S	section:vim-vue-plugin [![Build Status][12]](https://travis-ci.com/leafOfTree/vim-vue-plugin)""Configuration
Dg	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
Di	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
Dim	vim/.vim/plugged/fzf/src/tui/dummy.go	/^	Dim       = Attr(1 << 1)$/;"	c	package:tui
Dim	vim/.vim/plugged/fzf/src/tui/tcell.go	/^	Dim            = Attr(tcell.AttrDim)$/;"	c	package:tui
Disable for a specific filetype	vim/.vim/plugged/editorconfig-vim/README.md	/^### Disable for a specific filetype$/;"	S	section:EditorConfig Vim Plugin""Selected Options
Disable rules	vim/.vim/plugged/editorconfig-vim/README.md	/^### Disable rules$/;"	S	section:EditorConfig Vim Plugin""Selected Options
Disabled	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Disabled     ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Disclaimer	vim/.vim/plugged/far.vim/README.md	/^## Disclaimer$/;"	s	chapter:far.vim - Find And Replace Vim plugin
Div	vim/.vim/plugged/vim-styled-components/examples/issue-32.js	/^const Div = styled.div`$/;"	C
Div	vim/.vim/plugged/vim-styled-components/examples/issue-33.js	/^const Div = styled.div.attrs({$/;"	C
Dj	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Dl	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
Dle	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Dm	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Dme	vim/.vim/plugged/coc.nvim/build/index.js	/^`).join(" "),e.slice(0,t*2)}dispose(){this.stop()}}});var TD,Tme,Dme,_y,BV=R(()=>{TD=E(Ui());As(/;"	v
Dn	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
Do	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
DoneParseArgs	vim/.vim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:DoneParseArgs$/;"	l
DoneParseArgs	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:DoneParseArgs$/;"	l
Double	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Double bool$/;"	m	struct:tui.MouseEvent	typeref:typename:bool
DoubleClick	vim/.vim/plugged/fzf/src/tui/tui.go	/^	DoubleClick$/;"	c	package:tui
Down	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Down   bool$/;"	m	struct:tui.MouseEvent	typeref:typename:bool
Down	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Down$/;"	c	package:tui
Ds	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Dse	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Dt	vim/.vim/plugged/coc.nvim/build/index.js	/^`),_.log(`Sending notification '${P.method}'.`,z)}else to("send-notification",P)}function Dt(P,z/;"	f
DurWithin	vim/.vim/plugged/fzf/src/util/util.go	/^func DurWithin($/;"	f	package:util	typeref:typename:time.Duration
Dv	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunction272f78ae2b000
Dw	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Dy	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Dynamic reloading of the list	vim/.vim/plugged/fzf/ADVANCED.md	/^Dynamic reloading of the list$/;"	s	chapter:Advanced fzf examples
E	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
E	vim/.vim/plugged/vim-styled-components/examples/issue-55.ts	/^const E = styled.h1<{ [attr: string]: any, bool: boolean, tmp?: number }>`$/;"	C
E$	vim/.vim/plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	v
E0	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
E1	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	v
E5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
E6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
E7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
E8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
EB	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
EBe	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
EC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
ED	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
EDITORCONFIG_CMD	vim/.vim/plugged/editorconfig-vim/tests/core/CMakeLists.txt	/^    set(EDITORCONFIG_CMD "${CMAKE_SOURCE_DIR}\/editorconfig")$/;"	v
EDITORCONFIG_CMD	vim/.vim/plugged/editorconfig-vim/tests/core/CMakeLists.txt	/^    set(EDITORCONFIG_CMD "${CMAKE_SOURCE_DIR}\/editorconfig.bat")$/;"	v
EDITORCONFIG_CMD	vim/.vim/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^    set(EDITORCONFIG_CMD "editorconfig" CACHE STRING "editorconfig command.")$/;"	v
EDITORCONFIG_CMD_IS_TARGET	vim/.vim/plugged/editorconfig-vim/tests/core/CMakeLists.txt	/^set(EDITORCONFIG_CMD_IS_TARGET FALSE)$/;"	v
EDITORCONFIG_CMD_IS_TARGET	vim/.vim/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^    set(EDITORCONFIG_CMD_IS_TARGET OFF CACHE BOOL$/;"	v
EG	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
EJ	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
EK	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
EL	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
ENGINES	vim/.vim/plugged/vim-translator/script/translator.py	/^ENGINES = {$/;"	v
ENVIRONMENT	vim/.vim/plugged/fzf/man/man1/fzf.1	/^.SH ENVIRONMENT VARIABLES$/;"	s	title:fzf
EOF	vim/.vim/plugged/editorconfig-vim/tests/core/editorconfig	/^helpstr=$(cat<<'EOF'$/;"	h
EOF	vim/.vim/plugged/fzf/install	/^  cat << EOF$/;"	h
EOF	vim/.vim/plugged/fzf/install	/^  cat > "$src" << EOF$/;"	h
EOF	vim/.vim/plugged/fzf/install	/^  fish << EOF$/;"	h
EOF	vim/.vim/plugged/fzf/uninstall	/^  cat << EOF$/;"	h
ES	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	v
ESC	vim/.vim/plugged/fzf/src/tui/tui.go	/^	ESC$/;"	c	package:tui
EV	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	v
EX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
EXIT	vim/.vim/plugged/fzf/man/man1/fzf.1	/^.SH EXIT STATUS$/;"	s	title:fzf
EXTENDED	vim/.vim/plugged/fzf/man/man1/fzf.1	/^.SH EXTENDED SEARCH MODE$/;"	s	title:fzf
E_	vim/.vim/plugged/coc.nvim/build/index.js	/^`)==-1&&(u+=" ",f(c,"CocTreeDescription"),u+=c),{line:u,highlights:o}}async appendTreeNode(e,t,i/;"	v
Eae	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
Eb	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Ed	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Edit vim files	vim/Readme.md	/^### Edit vim files $/;"	S	section:My awesome vim dotfile""Shortcuts
Editing	vim/Readme.md	/^### Editing$/;"	S	section:My awesome vim dotfile""Used Plugins
EditorConfig Vim Plugin	vim/.vim/plugged/editorconfig-vim/README.md	/^# EditorConfig Vim Plugin$/;"	c
EditorConfigDisable	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^command! EditorConfigDisable call s:EditorConfigEnable(0)$/;"	c
EditorConfigEnable	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^command! EditorConfigEnable call s:EditorConfigEnable(1)$/;"	c
EditorConfigReload	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^command! EditorConfigReload call s:UseConfigFiles() " Reload EditorConfig files$/;"	c
Ee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
Eee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ef	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	v
Eg	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Ei	vim/.vim/plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
Ej	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
El	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
Ele	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Em	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Eme	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	f
EmotionDiv	vim/.vim/plugged/vim-styled-components/examples/apis.js	/^const EmotionDiv = ($/;"	C
EmptyMerger	vim/.vim/plugged/fzf/src/merger.go	/^var EmptyMerger = NewMerger(nil, [][]Result{}, false, false)$/;"	v	package:fzf
EmptyTheme	vim/.vim/plugged/fzf/src/tui/tui.go	/^func EmptyTheme() *ColorTheme {$/;"	f	package:tui	typeref:typename:*ColorTheme
En	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
Enclose	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Enclose(y int, x int) bool {$/;"	f	struct:tui.LightWindow	typeref:typename:bool
Enclose	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Enclose(y int, x int) bool {$/;"	f	struct:tui.TcellWindow	typeref:typename:bool
Enclose	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Enclose(y int, x int) bool$/;"	n	interface:tui.Window	typeref:typename:bool
End	vim/.vim/plugged/fzf/src/algo/algo.go	/^	End   int$/;"	m	struct:algo.Result	typeref:typename:int
End	vim/.vim/plugged/fzf/src/tui/tui.go	/^	End$/;"	c	package:tui
Environment Information	vim/.vim/plugged/vim-multiple-cursors/CONTRIBUTING.md	/^## Environment Information$/;"	s	chapter:Problems summary
Environment variables	vim/.vim/plugged/fzf/README.md	/^#### Environment variables$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Usage
Environment variables / Aliases	vim/.vim/plugged/fzf/README.md	/^#### Environment variables \/ Aliases$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
EqualMatch	vim/.vim/plugged/fzf/src/algo/algo.go	/^func EqualMatch(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []ru/;"	f	package:algo	typeref:typename:(Result, *[]int)
Er	vim/.vim/plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
Erase	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Erase() {$/;"	f	struct:tui.LightWindow
Erase	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Erase() {$/;"	f	struct:tui.TcellWindow
Erase	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Erase()$/;"	n	interface:tui.Window
Ese	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Et	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Ev	vim/.vim/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
Event	vim/.vim/plugged/fzf/src/tui/tui.go	/^type Event struct {$/;"	s	package:tui
EventBox	vim/.vim/plugged/fzf/src/util/eventbox.go	/^type EventBox struct {$/;"	s	package:util
EventType	vim/.vim/plugged/fzf/src/tui/tui.go	/^type EventType int$/;"	t	package:tui	typeref:typename:int
EventType	vim/.vim/plugged/fzf/src/util/eventbox.go	/^type EventType int$/;"	t	package:util	typeref:typename:int
Events	vim/.vim/plugged/fzf/src/util/eventbox.go	/^type Events map[EventType]interface{}$/;"	t	package:util	typeref:typename:map[EventType]interface{}
EvtClose	vim/.vim/plugged/fzf/src/util/eventbox_test.go	/^	EvtClose$/;"	c	package:util
EvtHeader	vim/.vim/plugged/fzf/src/constants.go	/^	EvtHeader$/;"	c	package:fzf
EvtQuit	vim/.vim/plugged/fzf/src/constants.go	/^	EvtQuit$/;"	c	package:fzf
EvtReadFin	vim/.vim/plugged/fzf/src/constants.go	/^	EvtReadFin$/;"	c	package:fzf
EvtReadFin	vim/.vim/plugged/fzf/src/util/eventbox_test.go	/^	EvtReadFin$/;"	c	package:util
EvtReadNew	vim/.vim/plugged/fzf/src/constants.go	/^	EvtReadNew util.EventType = iota$/;"	c	package:fzf	typeref:typename:util.EventType
EvtReadNew	vim/.vim/plugged/fzf/src/util/eventbox_test.go	/^	EvtReadNew EventType = iota$/;"	c	package:util	typeref:typename:EventType
EvtReady	vim/.vim/plugged/fzf/src/constants.go	/^	EvtReady$/;"	c	package:fzf
EvtSearchFin	vim/.vim/plugged/fzf/src/constants.go	/^	EvtSearchFin$/;"	c	package:fzf
EvtSearchFin	vim/.vim/plugged/fzf/src/util/eventbox_test.go	/^	EvtSearchFin$/;"	c	package:util
EvtSearchNew	vim/.vim/plugged/fzf/src/constants.go	/^	EvtSearchNew$/;"	c	package:fzf
EvtSearchNew	vim/.vim/plugged/fzf/src/util/eventbox_test.go	/^	EvtSearchNew$/;"	c	package:util
EvtSearchProgress	vim/.vim/plugged/fzf/src/constants.go	/^	EvtSearchProgress$/;"	c	package:fzf
EvtSearchProgress	vim/.vim/plugged/fzf/src/util/eventbox_test.go	/^	EvtSearchProgress$/;"	c	package:util
Ew	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Ex	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
ExactMatchNaive	vim/.vim/plugged/fzf/src/algo/algo.go	/^func ExactMatchNaive(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern/;"	f	package:algo	typeref:typename:(Result, *[]int)
Example	vim/.vim/plugged/vim-css-color/tests/example.jsx	/^var Example = React.createClass({$/;"	v
Example	vim/.vim/plugged/vim-vue-plugin/README.md	/^### Example$/;"	S	section:vim-vue-plugin [![Build Status][12]](https://travis-ci.com/leafOfTree/vim-vue-plugin)""Configuration
Example fetch and merge workflow	vim/.vim/plugged/vim-twiggy/README.md	/^### Example fetch and merge workflow$/;"	S	section:twiggy.vim""Usage
Example vim configuration	vim/.vim/plugged/coc.nvim/Readme.md	/^## Example vim configuration$/;"	s
Example: Advanced ripgrep integration	vim/.vim/plugged/fzf.vim/README.md	/^#### Example: Advanced ripgrep integration$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Example: Customizing `Files` command	vim/.vim/plugged/fzf.vim/README.md	/^#### Example: Customizing `Files` command$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Example: `Rg` command with preview window	vim/.vim/plugged/fzf.vim/README.md	/^#### Example: `Rg` command with preview window$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Example: `git grep` wrapper	vim/.vim/plugged/fzf.vim/README.md	/^#### Example: `git grep` wrapper$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Examples	vim/.vim/plugged/fzf/README-VIM.md	/^#### Examples$/;"	t	subsection:FZF Vim integration""`:FZF[!]`""Configuration
Examples	vim/.vim/plugged/fzf/README.md	/^Examples$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Exception	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^function Exception()$/;"	f
Excluded patterns	vim/.vim/plugged/editorconfig-vim/README.md	/^### Excluded patterns$/;"	S	section:EditorConfig Vim Plugin""Selected Options
ExecCommand	vim/.vim/plugged/fzf/src/util/util_unix.go	/^func ExecCommand(command string, setpgid bool) *exec.Cmd {$/;"	f	package:util	typeref:typename:*exec.Cmd
ExecCommand	vim/.vim/plugged/fzf/src/util/util_windows.go	/^func ExecCommand(command string, setpgid bool) *exec.Cmd {$/;"	f	package:util	typeref:typename:*exec.Cmd
ExecCommandWith	vim/.vim/plugged/fzf/src/util/util_unix.go	/^func ExecCommandWith(shell string, command string, setpgid bool) *exec.Cmd {$/;"	f	package:util	typeref:typename:*exec.Cmd
ExecCommandWith	vim/.vim/plugged/fzf/src/util/util_windows.go	/^func ExecCommandWith(shell string, command string, setpgid bool) *exec.Cmd {$/;"	f	package:util	typeref:typename:*exec.Cmd
Executing external programs	vim/.vim/plugged/fzf/README.md	/^### Executing external programs$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics
ExistingInterface	vim/.vim/plugged/vim-styled-components/examples/typescript.ts	/^interface ExistingInterface {$/;"	i
Exit0	vim/.vim/plugged/fzf/src/options.go	/^	Exit0       bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Expect	vim/.vim/plugged/fzf/src/options.go	/^	Expect      map[tui.Event]string$/;"	m	struct:fzf.Options	typeref:typename:map[tui.Event]string
Expected	vim/.vim/plugged/vim-multiple-cursors/CONTRIBUTING.md	/^## Expected$/;"	s	chapter:Problems summary
Explanation of `g:fzf_colors`	vim/.vim/plugged/fzf/README-VIM.md	/^##### Explanation of `g:fzf_colors`$/;"	T	subsubsection:FZF Vim integration""`:FZF[!]`""Configuration""Examples
Extended	vim/.vim/plugged/fzf/src/options.go	/^	Extended    bool$/;"	m	struct:fzf.Options	typeref:typename:bool
ExtendedInterfaceComponent	vim/.vim/plugged/vim-styled-components/examples/typescript.ts	/^const ExtendedInterfaceComponent = styled<ExistingInterface & {$/;"	C
Extras	vim/.vim/plugged/far.vim/README.md	/^## Extras$/;"	s	chapter:far.vim - Find And Replace Vim plugin
Ey	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
F	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f	function:Yw
F	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
F	vim/.vim/plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#FindComplete -nargs=+ -range=-1 F$/;"	c
F	vim/.vim/plugged/vim-styled-components/examples/issue-55.ts	/^const F = styled.span<Foo>`$/;"	C
F$	vim/.vim/plugged/coc.nvim/build/index.js	/^`),a=s.line-n.line-o.length+1,l=o[o.length-1],c=r.line-a;if(r.line!=s.line)return{line:c,charact/;"	f
F0	vim/.vim/plugged/coc.nvim/build/index.js	/^`),a++,c=i,o=14;switch(w){case 123:return i++,o=1;case 125:return i++,o=2;case 91:return i++,o=3/;"	f
F1	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	v
F1	vim/.vim/plugged/fzf/src/tui/tui.go	/^	F1$/;"	c	package:tui
F10	vim/.vim/plugged/fzf/src/tui/tui.go	/^	F10$/;"	c	package:tui
F11	vim/.vim/plugged/fzf/src/tui/tui.go	/^	F11$/;"	c	package:tui
F12	vim/.vim/plugged/fzf/src/tui/tui.go	/^	F12$/;"	c	package:tui
F2	vim/.vim/plugged/fzf/src/tui/tui.go	/^	F2$/;"	c	package:tui
F3	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
F3	vim/.vim/plugged/fzf/src/tui/tui.go	/^	F3$/;"	c	package:tui
F4	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),g=+p.split(" ")[1];Kh("got proxy server response: %o",p),e({statusCode:g,buffered:d})}r.on("/;"	v
F4	vim/.vim/plugged/fzf/src/tui/tui.go	/^	F4$/;"	c	package:tui
F5	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
F5	vim/.vim/plugged/fzf/src/tui/tui.go	/^	F5$/;"	c	package:tui
F6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
F6	vim/.vim/plugged/fzf/src/tui/tui.go	/^	F6$/;"	c	package:tui
F7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
F7	vim/.vim/plugged/fzf/src/tui/tui.go	/^	F7$/;"	c	package:tui
F8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
F8	vim/.vim/plugged/fzf/src/tui/tui.go	/^	F8$/;"	c	package:tui
F9	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
F9	vim/.vim/plugged/fzf/src/tui/tui.go	/^	F9$/;"	c	package:tui
FAQ	vim/.vim/plugged/MatchTagAlways/README.md	/^## FAQ$/;"	s	chapter:Always highlight enclosing tags
FAQ	vim/.vim/plugged/vim-commentary/README.markdown	/^## FAQ$/;"	s	chapter:commentary.vim
FAQ	vim/.vim/plugged/vim-fugitive/README.markdown	/^## FAQ$/;"	s	chapter:fugitive.vim
FAQ	vim/.vim/plugged/vim-multiple-cursors/README.md	/^## FAQ$/;"	s	chapter:vim-multiple-cursors
FAQ	vim/.vim/plugged/vim-rhubarb/README.markdown	/^## FAQ$/;"	s	chapter:rhubarb.vim
FAQ	vim/.vim/plugged/vim-translator/README.md	/^## FAQ$/;"	s	chapter:vim-translator
FB	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
FC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
FD	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}var Xs,Zu,FD,aG=R(()=>{Xs=E(H());OD();Vt();yt();Y();Te();_e();nG();AD();oG();Zu=U()("snippets/;"	v
FG	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
FH	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
FIELD	vim/.vim/plugged/fzf/man/man1/fzf.1	/^.SH FIELD INDEX EXPRESSION$/;"	s	title:fzf
FILE	vim/.vim/plugged/fzf/test/test_go.rb	/^FILE = File.expand_path(__FILE__)$/;"	C
FILESIZE	vim/.vim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^for \/F %%F in ("%DB_FILE%.files") do set FILESIZE=%%~zF$/;"	v
FILESIZE	vim/.vim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILESIZE=0$/;"	v
FILE_LIST_CMD	vim/.vim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	vim/.vim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD_IS_ABSOLUTE=1$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD_IS_ABSOLUTE=0$/;"	v
FK	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
FM	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
FNe	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
FP	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
FQ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
FT	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
FV	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
FW	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
FX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
FZF	vim/.vim/plugged/fzf/plugin/fzf.vim	/^command! -nargs=* -complete=dir -bang FZF call s:cmd(<bang>0, <f-args>)$/;"	c
FZF	vim/.vim/plugged/fzf/test/test_go.rb	/^FZF = "FZF_DEFAULT_OPTS= FZF_DEFAULT_COMMAND= #{BASE}\/bin\/fzf"$/;"	C
FZF Search	vim/Readme.md	/^### FZF Search $/;"	S	section:My awesome vim dotfile""Shortcuts
FZF Vim integration	vim/.vim/plugged/fzf/README-VIM.md	/^FZF Vim integration$/;"	c
F_	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
Far	vim/.vim/plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#FarComplete -nargs=+ -range=-1 Far$/;"	c
Far	vim/.vim/plugged/far.vim/plugin/far.vim	/^function! Far(rngmode, rngline1, rngline2, cmdline) range abort "{{{$/;"	f
FarDo	vim/.vim/plugged/far.vim/plugin/far.vim	/^function! FarDo(...) abort range "{{{$/;"	f
FarModePrompt	vim/.vim/plugged/far.vim/plugin/far.vim	/^function! FarModePrompt(rngmode, rngline1, rngline2, substitute_open, cmdline, ...) abort range /;"	f
FarPlugin	vim/.vim/plugged/far.vim/rplugin/python3/far/__init__.py	/^    class FarPlugin(object):$/;"	c
FarPrompt	vim/.vim/plugged/far.vim/plugin/far.vim	/^function! FarPrompt(rngmode, rngline1, rngline2, ...) abort range "{{{$/;"	f
FarUndo	vim/.vim/plugged/far.vim/plugin/far.vim	/^function! FarUndo(...) abort range "{{{$/;"	f
Fardo	vim/.vim/plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#FardoComplete -nargs=* -range=-1 Fardo$/;"	c
Farf	vim/.vim/plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#FarArgsComplete -nargs=* -range=-1 Farf$/;"	c
Farp	vim/.vim/plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#FarArgsComplete -nargs=* -range=-1 Farp$/;"	c
Farr	vim/.vim/plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#FarArgsComplete -nargs=* -range=-1 Farr$/;"	c
Farundo	vim/.vim/plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#FarundoComplete -nargs=* -range=-1 Farundo$/;"	c
Fb	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Fc	vim/.vim/plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	f
Fd	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}function nae(r,e,t){return r=r.trim(),r=e?rae(r,t):tae(r,t),r}function Fd(r){return r+`$/;"	f
Fe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
Features	vim/.vim/plugged/iceberg.vim/README.md	/^# Features$/;"	c
Features	vim/.vim/plugged/vim-translator/README.md	/^## Features$/;"	s	chapter:vim-translator
Fee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Feedback	vim/.vim/plugged/coc.nvim/Readme.md	/^## Feedback$/;"	s
Fg	vim/.vim/plugged/coc.nvim/build/index.js	/^`:"")}get lineCount(){return this.lines.length+(this.eol?1:0)}getText(e){if(e){let t=this.offset/;"	v
Fg	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Fg           ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Fg	vim/.vim/plugged/fzf/src/tui/tui.go	/^func (p ColorPair) Fg() Color {$/;"	f	struct:tui.ColorPair	typeref:typename:Color
Fi	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	v
FileWord	vim/.vim/plugged/fzf/src/options.go	/^	FileWord    bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Files and directories	vim/.vim/plugged/fzf/README.md	/^#### Files and directories$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
Files listed in `git status`	vim/.vim/plugged/fzf/ADVANCED.md	/^### Files listed in `git status`$/;"	S	section:Advanced fzf examples""Key bindings for git objects
Fill	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Fill(text string) FillReturn {$/;"	f	struct:tui.LightWindow	typeref:typename:FillReturn
Fill	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Fill(str string) FillReturn {$/;"	f	struct:tui.TcellWindow	typeref:typename:FillReturn
Fill	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Fill(text string) FillReturn$/;"	n	interface:tui.Window	typeref:typename:FillReturn
FillContinue	vim/.vim/plugged/fzf/src/tui/tui.go	/^	FillContinue FillReturn = iota$/;"	c	package:tui	typeref:type:FillReturn
FillNextLine	vim/.vim/plugged/fzf/src/tui/tui.go	/^	FillNextLine$/;"	c	package:tui
FillReturn	vim/.vim/plugged/fzf/src/tui/tui.go	/^type FillReturn int$/;"	t	package:tui	typeref:typename:int
FillSuspend	vim/.vim/plugged/fzf/src/tui/tui.go	/^	FillSuspend$/;"	c	package:tui
Filter	vim/.vim/plugged/fzf/src/options.go	/^	Filter      *string$/;"	m	struct:fzf.Options	typeref:typename:*string
Find	.config/nvim_copy/init.vim	/^command! -bang -nargs=* Find$/;"	c
Find	vim/.vim/plugged/far.vim/plugin/far.vim	/^function! Find(rngmode, rngline1, rngline2, cmdline, ...) range abort "{{{$/;"	f
Find	vim/.vimrc	/^command! -bang -nargs=* Find$/;"	c
Find-Vim	vim/.vim/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^function global:Find-Vim$/;"	f
FindRootDirectory	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^function! FindRootDirectory()$/;"	f
Finding Trailing Whitespace	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/trim_trailing_whitespace.rst	/^Finding Trailing Whitespace$/;"	s	chapter:Trim Trailing Whitespace Property
FinishFill	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) FinishFill() {$/;"	f	struct:tui.LightWindow
FinishFill	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) FinishFill() {$/;"	f	struct:tui.TcellWindow
FinishFill	vim/.vim/plugged/fzf/src/tui/tui.go	/^	FinishFill()$/;"	n	interface:tui.Window
Fish shell	vim/.vim/plugged/fzf/README.md	/^#### Fish shell$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Tips
Fixedgq	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^function! Fixedgq(lnum, count)$/;"	f
Fixes and improvements	vim/.vim/plugged/fzf/CHANGELOG.md	/^### Fixes and improvements$/;"	S	section:CHANGELOG""0.10.2
Fj	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Fme	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Fo	vim/.vim/plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
Foe	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
Fold	.config/nvim_copy/init.vim	/^command! -nargs=? Fold :call CocAction('fold', <f-args>)$/;"	c
Fold	vim/.vimrc	/^command! -nargs=? Fold :call CocAction('fold', <f-args>)$/;"	c
Foo	vim/.vim/plugged/vim-styled-components/examples/issue-55.ts	/^interface Foo {$/;"	i
For other environments	vim/.vim/plugged/iceberg.vim/README.md	/^# For other environments$/;"	c
Format	.config/nvim_copy/init.vim	/^command! -nargs=0 Format :call CocAction('format')$/;"	c
Format	vim/.vimrc	/^command! -nargs=0 Format :call CocAction('format')$/;"	c
ForwardFindTag	vim/.vim/plugged/MatchTagAlways/python/mta_core.py	/^def ForwardFindTag( text, from_position ):$/;"	f
FriendlyName	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^function FriendlyName(test_name)$/;"	f
Fs	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	f
Fse	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Ft	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	f
Fu	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
Fugitive	vim/Readme.md	/^### Fugitive $/;"	S	section:My awesome vim dotfile""Shortcuts
FugitiveCommonDir	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveCommonDir(...) abort$/;"	f
FugitiveConfig	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfig(...) abort$/;"	f
FugitiveConfigGet	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfigGet(name, ...) abort$/;"	f
FugitiveConfigGetAll	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfigGetAll(name, ...) abort$/;"	f
FugitiveConfigGetRegexp	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfigGetRegexp(pattern, ...) abort$/;"	f
FugitiveDetect	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveDetect(...) abort$/;"	f
FugitiveDidChange	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveDidChange(...) abort$/;"	f
FugitiveExecute	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveExecute(args, ...) abort$/;"	f
FugitiveExtractGitDir	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveExtractGitDir(path) abort$/;"	f
FugitiveFind	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveFind(...) abort$/;"	f
FugitiveGitDir	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveGitDir(...) abort$/;"	f
FugitiveGitPath	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveGitPath(path) abort$/;"	f
FugitiveGitVersion	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveGitVersion(...) abort$/;"	f
FugitiveHead	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveHead(...) abort$/;"	f
FugitiveIsGitDir	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveIsGitDir(...) abort$/;"	f
FugitiveParse	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveParse(...) abort$/;"	f
FugitivePath	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitivePath(...) abort$/;"	f
FugitivePrepare	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitivePrepare(...) abort$/;"	f
FugitiveReal	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveReal(...) abort$/;"	f
FugitiveRemote	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveRemote(...) abort$/;"	f
FugitiveRemoteUrl	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveRemoteUrl(...) abort$/;"	f
FugitiveResult	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveResult(...) abort$/;"	f
FugitiveShellCommand	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveShellCommand(...) abort$/;"	f
FugitiveStatusline	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveStatusline(...) abort$/;"	f
FugitiveVimPath	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveVimPath(path) abort$/;"	f
FugitiveWorkTree	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveWorkTree(...) abort$/;"	f
FullscreenRenderer	vim/.vim/plugged/fzf/src/tui/tui.go	/^type FullscreenRenderer struct {$/;"	s	package:tui
Fuzzy	vim/.vim/plugged/fzf/src/options.go	/^	Fuzzy       bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Fuzzy completion for bash and zsh	vim/.vim/plugged/fzf/README.md	/^Fuzzy completion for bash and zsh$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
FuzzyAlgo	vim/.vim/plugged/fzf/src/options.go	/^	FuzzyAlgo   algo.Algo$/;"	m	struct:fzf.Options	typeref:typename:algo.Algo
FuzzyMatchV1	vim/.vim/plugged/fzf/src/algo/algo.go	/^func FuzzyMatchV1(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []/;"	f	package:algo	typeref:typename:(Result, *[]int)
FuzzyMatchV2	vim/.vim/plugged/fzf/src/algo/algo.go	/^func FuzzyMatchV2(caseSensitive bool, normalize bool, forward bool, input *util.Chars, pattern [/;"	f	package:algo	typeref:typename:(Result, *[]int)
Fw	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Fx	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	v
Fy	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
G	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
G	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:pK.e
G	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^  command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#Complete G   exe fugitive#Comm/;"	c
G	vim/.vim/plugged/vim-styled-components/examples/issue-55.ts	/^const G = styled.span.attrs({ role: 'presentation' })<{ bool: boolean, tmp?: number } & Foo>`$/;"	C
G$	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
G1	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
G4	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
G5	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
G6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
G7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
G8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
G9	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}function G9(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function K9(){return process.en/;"	f
GA	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
GB	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
GC	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
GD	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
GFilesCwd	.config/nvim_copy/init.vim	/^command! -bang -nargs=? GFilesCwd$/;"	c
GFilesCwd	vim/.vimrc	/^command! -bang -nargs=? GFilesCwd$/;"	c
GG	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
GI	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
GM	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
GN	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
GO	vim/.vim/plugged/fzf/Makefile	/^GO             ?= go$/;"	m
GOOS	vim/.vim/plugged/fzf/Makefile	/^GOOS           ?= $(word 1, $(subst \/, " ", $(word 4, $(shell go version))))$/;"	m
GP	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
GQ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
GR	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
GT	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
GV	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
GV	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^command! -bang -nargs=* -range=0 -complete=customlist,s:gvcomplete GV call s:gv(<bang>0, <count>/;"	c
GX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
GZ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ga	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
Gae	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Gb	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Gc	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
Gd	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
Gee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Generate a logfile if appropriate	vim/.vim/plugged/vim-multiple-cursors/CONTRIBUTING.md	/^## Generate a logfile if appropriate$/;"	s	chapter:Problems summary
Generating fzf color theme from Vim color schemes	vim/.vim/plugged/fzf/ADVANCED.md	/^### Generating fzf color theme from Vim color schemes$/;"	S	section:Advanced fzf examples""Color themes
Get	vim/.vim/plugged/fzf/src/merger.go	/^func (mg *Merger) Get(idx int) Result {$/;"	f	struct:fzf.Merger	typeref:typename:Result
Get	vim/.vim/plugged/fzf/src/util/atomicbool.go	/^func (a *AtomicBool) Get() bool {$/;"	f	struct:util.AtomicBool	typeref:typename:bool
Get	vim/.vim/plugged/fzf/src/util/chars.go	/^func (chars *Chars) Get(i int) rune {$/;"	f	struct:util.Chars	typeref:typename:rune
GetCSSIndent	vim/.vim/plugged/vim-vue-plugin/lib/indent/css.vim	/^function GetCSSIndent()$/;"	f
GetChar	vim/.vim/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) GetChar() Event { return Event{} }$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:Event
GetChar	vim/.vim/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) GetChar() Event {$/;"	f	struct:tui.LightRenderer	typeref:typename:Event
GetChar	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) GetChar() Event {$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:Event
GetChar	vim/.vim/plugged/fzf/src/tui/tui.go	/^	GetChar() Event$/;"	n	interface:tui.Renderer	typeref:typename:Event
GetGraphQLIndent	vim/.vim/plugged/vim-graphql/indent/graphql.vim	/^function GetGraphQLIndent()$/;"	f
GetJavascriptGraphQLIndent	vim/.vim/plugged/vim-graphql/after/indent/javascript.vim	/^function GetJavascriptGraphQLIndent()$/;"	f
GetJavascriptIndent	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^function GetJavascriptIndent()$/;"	f
GetNextUnmatchedClosingTag	vim/.vim/plugged/MatchTagAlways/python/mta_core.py	/^def GetNextUnmatchedClosingTag( html, cursor_offset ):$/;"	f
GetNextUnmatchedClosingTag_Nested_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def GetNextUnmatchedClosingTag_Nested_test():$/;"	f
GetNextUnmatchedClosingTag_NoClosingTagFail_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def GetNextUnmatchedClosingTag_NoClosingTagFail_test():$/;"	f
GetNextUnmatchedClosingTag_NoOpeningTagFail_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def GetNextUnmatchedClosingTag_NoOpeningTagFail_test():$/;"	f
GetNextUnmatchedClosingTag_OnAngleBracket_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def GetNextUnmatchedClosingTag_OnAngleBracket_test():$/;"	f
GetNextUnmatchedClosingTag_OrphanOpeningTag_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def GetNextUnmatchedClosingTag_OrphanOpeningTag_test():$/;"	f
GetNextUnmatchedClosingTag_Simple_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def GetNextUnmatchedClosingTag_Simple_test():$/;"	f
GetOpeningAndClosingTags	vim/.vim/plugged/MatchTagAlways/python/mta_core.py	/^def GetOpeningAndClosingTags( html, cursor_offset ):$/;"	f
GetPHPGraphQLIndent	vim/.vim/plugged/vim-graphql/after/indent/php.vim	/^function GetPHPGraphQLIndent()$/;"	f
GetPreviousUnmatchedOpeningTag	vim/.vim/plugged/MatchTagAlways/python/mta_core.py	/^def GetPreviousUnmatchedOpeningTag( html, cursor_offset ):$/;"	f
GetPreviousUnmatchedOpeningTag_NestedMultiLine_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def GetPreviousUnmatchedOpeningTag_NestedMultiLine_test():$/;"	f
GetPreviousUnmatchedOpeningTag_Nested_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def GetPreviousUnmatchedOpeningTag_Nested_test():$/;"	f
GetPreviousUnmatchedOpeningTag_OnAngleBracket_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def GetPreviousUnmatchedOpeningTag_OnAngleBracket_test():$/;"	f
GetPreviousUnmatchedOpeningTag_OrphanOpeningTag_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def GetPreviousUnmatchedOpeningTag_OrphanOpeningTag_test():$/;"	f
GetPreviousUnmatchedOpeningTag_Simple_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def GetPreviousUnmatchedOpeningTag_Simple_test():$/;"	f
GetStyledIndent	vim/.vim/plugged/vim-styled-components/after/indent/javascript.vim	/^fu! GetStyledIndent()$/;"	f
GetTsxIndent	vim/.vim/plugged/vim-jsx-typescript/after/indent/typescriptreact.vim	/^function! GetTsxIndent()$/;"	f
GetTypescriptGraphQLIndent	vim/.vim/plugged/vim-graphql/after/indent/typescript.vim	/^function GetTypescriptGraphQLIndent()$/;"	f
GetTypescriptIndent	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^function GetTypescriptIndent()$/;"	f
GetTypescriptIndent	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^function GetTypescriptIndent()$/;"	f
GetVueFold	vim/.vim/plugged/vim-vue-plugin/ftplugin/vue/fold.vim	/^function! GetVueFold(lnum)$/;"	f
GetVueIndent	vim/.vim/plugged/vim-vue-plugin/indent/vue.vim	/^function! GetVueIndent()$/;"	f
GetVueSubtype	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! GetVueSubtype()$/;"	f
GetVueSyntax	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! GetVueSyntax()$/;"	f
GetVueTag	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! GetVueTag(...)$/;"	f
Gf	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Gg	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
Gie	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Git	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^command! -bang -nargs=? -range=-1 -complete=customlist,fugitive#Complete Git exe fugitive#Comman/;"	c
Git	vim/Readme.md	/^### Git$/;"	S	section:My awesome vim dotfile""Used Plugins
Git Log	vim/.vim/plugged/vim-twiggy/README.md	/^### Git Log$/;"	S	section:twiggy.vim""Usage
GitGutter	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutter    call gitgutter#process_buffer(bufnr(''), 1)$/;"	c
GitGutterAll	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterAll call gitgutter#all(1)$/;"	c
GitGutterBufferDisable	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterBufferDisable call gitgutter#buffer_disable()$/;"	c
GitGutterBufferEnable	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterBufferEnable  call gitgutter#buffer_enable()$/;"	c
GitGutterBufferToggle	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterBufferToggle  call gitgutter#buffer_toggle()$/;"	c
GitGutterCursorHold	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterCursorHold(timer)$/;"	f
GitGutterDebug	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterDebug call gitgutter#debug#debug()$/;"	c
GitGutterDisable	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterDisable call gitgutter#disable()$/;"	c
GitGutterEnable	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterEnable  call gitgutter#enable()$/;"	c
GitGutterFold	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterFold call gitgutter#fold#toggle()$/;"	c
GitGutterGetHunkSummary	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunkSummary()$/;"	f
GitGutterGetHunks	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunks()$/;"	f
GitGutterLineHighlightsDisable	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsDisable call gitgutter#highlight#line_disable()$/;"	c
GitGutterLineHighlightsEnable	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsEnable  call gitgutter#highlight#line_enable()$/;"	c
GitGutterLineHighlightsToggle	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsToggle  call gitgutter#highlight#line_toggle()$/;"	c
GitGutterLineNrHighlightsDisable	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineNrHighlightsDisable call gitgutter#highlight#linenr_disable()$/;"	c
GitGutterLineNrHighlightsEnable	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineNrHighlightsEnable  call gitgutter#highlight#linenr_enable()$/;"	c
GitGutterLineNrHighlightsToggle	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineNrHighlightsToggle  call gitgutter#highlight#linenr_toggle()$/;"	c
GitGutterNextHunk	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar -count=1 GitGutterNextHunk call gitgutter#hunk#next_hunk(<count>)$/;"	c
GitGutterPrevHunk	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar -count=1 GitGutterPrevHunk call gitgutter#hunk#prev_hunk(<count>)$/;"	c
GitGutterPreviewHunk	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterPreviewHunk call gitgutter#hunk#preview()$/;"	c
GitGutterQuickFix	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterQuickFix call gitgutter#quickfix(0)$/;"	c
GitGutterQuickFixCurrentFile	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterQuickFixCurrentFile call gitgutter#quickfix(1)$/;"	c
GitGutterSignsDisable	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsDisable call gitgutter#sign#disable()$/;"	c
GitGutterSignsEnable	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsEnable  call gitgutter#sign#enable()$/;"	c
GitGutterSignsToggle	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsToggle  call gitgutter#sign#toggle()$/;"	c
GitGutterStageHunk	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar -range=% GitGutterStageHunk call gitgutter#hunk#stage(<line1>,<line2>)$/;"	c
GitGutterToggle	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterToggle  call gitgutter#toggle()$/;"	c
GitGutterUndoHunk	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterUndoHunk    call gitgutter#hunk#undo()$/;"	c
Gj	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
GlobError	vim/.vim/plugged/far.vim/rplugin/python3/far/sources/far_glob.py	/^class GlobError(ValueError):$/;"	c
Global options	vim/.vim/plugged/fzf.vim/README.md	/^### Global options$/;"	S	section:fzf :heart: vim""Customization
Global options supported by `fzf#wrap`	vim/.vim/plugged/fzf/README-VIM.md	/^### Global options supported by `fzf#wrap`$/;"	S	section:FZF Vim integration""`fzf#wrap`
Gme	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
Goe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
Golden Ratio	vim/.vim/plugged/golden-ratio/README.md	/^# Golden Ratio$/;"	c
GoldenRatioAug	vim/.vim/plugged/golden-ratio/plugin/golden_ratio.vim	/^    aug GoldenRatioAug$/;"	a
GoldenRatioResize	vim/.vim/plugged/golden-ratio/plugin/golden_ratio.vim	/^command! GoldenRatioResize call <SID>resize_to_golden_ratio()$/;"	c
GoldenRatioToggle	vim/.vim/plugged/golden-ratio/plugin/golden_ratio.vim	/^command! GoldenRatioToggle call <SID>toggle_global_golden_ratio()$/;"	c
GoogleTranslator	vim/.vim/plugged/vim-translator/script/translator.py	/^class GoogleTranslator(BaseTranslator):$/;"	c
Gpe	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
Gq	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
Gr	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
GraphConfigPanelContainer	vim/.vim/plugged/vim-styled-components/examples/complex.js	/^const GraphConfigPanelContainer = styled.div`$/;"	C
GraphContainer	vim/.vim/plugged/vim-styled-components/examples/complex.js	/^const GraphContainer = styled.div`$/;"	C
GraphListContainer	vim/.vim/plugged/vim-styled-components/examples/complex.js	/^const GraphListContainer = styled.div`$/;"	C
GraphQL Samples	vim/.vim/plugged/vim-graphql/samples/README.md	/^# GraphQL Samples$/;"	c
GraphQL for Vim	vim/.vim/plugged/vim-graphql/README.md	/^# GraphQL for Vim$/;"	c
Grid	vim/.vim/plugged/vim-styled-components/examples/issue-66.ts	/^const Grid = styled('div')<{ gap?: number }>`$/;"	C
Gs	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Gt	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Gu	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
Gutentags	vim/.vim/plugged/vim-gutentags/README.md	/^# Gutentags$/;"	c
GutentagsToggleEnabled	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleEnabled :let g:gutentags_enabled=!g:gutentags_enabled$/;"	c
GutentagsToggleFake	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleFake    :call gutentags#fake()$/;"	c
GutentagsToggleTrace	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleTrace   :call gutentags#toggletrace()$/;"	c
GutentagsUpdate	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^    command! -buffer -bang GutentagsUpdate :call s:manual_update_tags(<bang>0)$/;"	c
Gutter	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Gutter       ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Gx	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Gy	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
Gz	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
H	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
H	vim/.vim/plugged/vim-styled-components/examples/issue-55.ts	/^const H = styled(F).attrs({ role: 'presentation' })<{ bool: boolean, tmp?: number } | Foo>`$/;"	C
H$	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
H$e	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
H0	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
H4	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
H5	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
H6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
H8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
H9	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
HC	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
HD	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
HG	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
HH	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
HI	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
HJ	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
HL	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
HN	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
HO	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
HP	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
HT	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
HV	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
HX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
HaiciDict	vim/.vim/plugged/vim-translator/script/translator.py	/^class HaiciDict(BaseTranslator):$/;"	c
HasBg	vim/.vim/plugged/fzf/src/tui/tui.go	/^func (p ColorPair) HasBg() bool {$/;"	f	struct:tui.ColorPair	typeref:typename:bool
HasFullscreenRenderer	vim/.vim/plugged/fzf/src/tui/dummy.go	/^func HasFullscreenRenderer() bool {$/;"	f	package:tui	typeref:typename:bool
HasFullscreenRenderer	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func HasFullscreenRenderer() bool {$/;"	f	package:tui	typeref:typename:bool
Hb	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Hc	vim/.vim/plugged/coc.nvim/build/index.js	/^`),a++,c=i,o=14;switch(w){case 123:return i++,o=1;case 125:return i++,o=2;case 91:return i++,o=3/;"	f
Hd	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
Header	vim/.vim/plugged/fzf/src/options.go	/^	Header      []string$/;"	m	struct:fzf.Options	typeref:typename:[]string
Header	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Header       ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
HeaderFirst	vim/.vim/plugged/fzf/src/options.go	/^	HeaderFirst bool$/;"	m	struct:fzf.Options	typeref:typename:bool
HeaderLines	vim/.vim/plugged/fzf/src/options.go	/^	HeaderLines int$/;"	m	struct:fzf.Options	typeref:typename:int
Height	vim/.vim/plugged/fzf/src/options.go	/^	Height      sizeSpec$/;"	m	struct:fzf.Options	typeref:typename:sizeSpec
Height	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Height() int {$/;"	f	struct:tui.LightWindow	typeref:typename:int
Height	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Height() int {$/;"	f	struct:tui.TcellWindow	typeref:typename:int
Height	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Height() int$/;"	n	interface:tui.Window	typeref:typename:int
HexToColor	vim/.vim/plugged/fzf/src/tui/tui.go	/^func HexToColor(rrggbb string) Color {$/;"	f	package:tui	typeref:typename:Color
Hf	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Hg	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
HiLink	vim/.vim/plugged/typescript-vim/syntax/typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	vim/.vim/plugged/typescript-vim/syntax/typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	vim/.vim/plugged/vim-javascript/extras/flow.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	vim/.vim/plugged/vim-javascript/extras/flow.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	vim/.vim/plugged/vim-javascript/extras/jsdoc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	vim/.vim/plugged/vim-javascript/extras/jsdoc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	vim/.vim/plugged/vim-javascript/syntax/javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	vim/.vim/plugged/vim-javascript/syntax/javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
Hide statusline	vim/.vim/plugged/fzf.vim/README.md	/^### Hide statusline$/;"	S	section:fzf :heart: vim""Status line of terminal buffer
Hide statusline	vim/.vim/plugged/fzf/README-VIM.md	/^### Hide statusline$/;"	S	section:FZF Vim integration""Tips
Hie	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
Highlight	vim/.vim/plugged/vim-multiple-cursors/README.md	/^### Highlight$/;"	S	section:vim-multiple-cursors""Settings
Highlight	vim/.vim/plugged/vim-translator/README.md	/^## Highlight$/;"	s	chapter:vim-translator
History	vim/.vim/plugged/fzf/src/history.go	/^type History struct {$/;"	s	package:fzf
History	vim/.vim/plugged/fzf/src/options.go	/^	History     *History$/;"	m	struct:fzf.Options	typeref:typename:*History
Hj	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Hm	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Hme	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	f
Hoe	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
Home	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Home$/;"	c	package:tui
Host names	vim/.vim/plugged/fzf/README.md	/^#### Host names$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
HotpinkButton	vim/.vim/plugged/vim-styled-components/examples/apis.js	/^const HotpinkButton = Button.extend`$/;"	C
HotpinkButton	vim/.vim/plugged/vim-styled-components/examples/apis.js	/^const HotpinkButton = Button.extnde`background: none`;$/;"	C
HotpinkDiv	vim/.vim/plugged/vim-styled-components/examples/apis.js	/^const HotpinkDiv = HotpinkButton.withComponent('div');$/;"	C
HotpinkDvi	vim/.vim/plugged/vim-styled-components/examples/apis.js	/^const HotpinkDvi = HotpinkButton.withComponent('dvi');$/;"	C
How can I truncate the components from the right in narrow windows?	vim/.vim/plugged/lightline.vim/README.md	/^#### How can I truncate the components from the right in narrow windows?$/;"	t	subsection:lightline.vim""Advanced configuration""more tips
How it works	vim/.vim/plugged/vim-vue-plugin/README.md	/^## How it works$/;"	s	chapter:vim-vue-plugin [![Build Status][12]](https://travis-ci.com/leafOfTree/vim-vue-plugin)
How?	vim/.vim/plugged/vim-gutentags/README.md	/^## How?$/;"	s	chapter:Gutentags
Hscroll	vim/.vim/plugged/fzf/src/options.go	/^	Hscroll     bool$/;"	m	struct:fzf.Options	typeref:typename:bool
HscrollOff	vim/.vim/plugged/fzf/src/options.go	/^	HscrollOff  int$/;"	m	struct:fzf.Options	typeref:typename:int
Hse	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
Hu	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	v
Hue	vim/.vim/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
Hw	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
Hy	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
Hz	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
Hze	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
I	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
I	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
I	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:$0
I$	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
I've noticed that sometimes no tags are highlighted. Why?	vim/.vim/plugged/MatchTagAlways/README.md	/^### I've noticed that sometimes no tags are highlighted. Why?$/;"	S	section:Always highlight enclosing tags""FAQ
I0	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
I16	vim/.vim/plugged/fzf/src/util/slab.go	/^	I16 []int16$/;"	m	struct:util.Slab	typeref:typename:[]int16
I32	vim/.vim/plugged/fzf/src/util/slab.go	/^	I32 []int32$/;"	m	struct:util.Slab	typeref:typename:[]int32
I3e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
I4	vim/.vim/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	v
I5	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	f
I6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
I7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
I8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
I9	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
IC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
ICibaTranslator	vim/.vim/plugged/vim-translator/script/translator.py	/^class ICibaTranslator(BaseTranslator):$/;"	c
ID	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
IDEs and text editors	vim/.vim/plugged/iceberg.vim/README.md	/^## IDEs and text editors$/;"	s	chapter:For other environments
IF	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
IG	vim/.vim/plugged/coc.nvim/build/index.js	/^`+n+"\\n```"),r.push({content:n,filetype:t}))}function ege(r){return r?typeof r.filetype=="strin/;"	v
IN	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
INDEX_WHOLE_PROJECT	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set INDEX_WHOLE_PROJECT=0$/;"	v
INDEX_WHOLE_PROJECT	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set INDEX_WHOLE_PROJECT=1$/;"	v
IO	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
IP	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
IR	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
IV	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
IZ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
I_	vim/.vim/plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
Iae	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
Ib	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Ic	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
Ie	vim/.vim/plugged/coc.nvim/build/index.js	/^${JSON.stringify(P.error,void 0,4)}`):n.error("Received response message without id. No further /;"	f
Iee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
If	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
Ig	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
IgnoreFileError	vim/.vim/plugged/far.vim/rplugin/python3/far/sources/far_glob.py	/^class IgnoreFileError(ValueError):$/;"	c
Iie	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f
Ik	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	v
Il	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ile	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	f
Ime	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Improvements	vim/.vim/plugged/fzf/CHANGELOG.md	/^### Improvements$/;"	S	section:CHANGELOG""0.9.10
Improvements	vim/.vim/plugged/fzf/CHANGELOG.md	/^### Improvements$/;"	S	section:CHANGELOG""0.9.3
Improvements	vim/.vim/plugged/fzf/CHANGELOG.md	/^### Improvements$/;"	S	section:CHANGELOG""0.9.4
Improvements	vim/.vim/plugged/fzf/CHANGELOG.md	/^### Improvements$/;"	S	section:CHANGELOG""0.9.5
In	vim/.vim/plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
Indentation Specific	vim/.vim/plugged/vim-javascript/README.md	/^## Indentation Specific$/;"	s	chapter:vim-javascript
Indenting	vim/.vim/plugged/typescript-vim/README.md	/^Indenting$/;"	s	chapter:Typescript Syntax for Vim
Index	vim/.vim/plugged/fzf/src/item.go	/^func (item *Item) Index() int32 {$/;"	f	struct:fzf.Item	typeref:typename:int32
Index	vim/.vim/plugged/fzf/src/result.go	/^func (result *Result) Index() int32 {$/;"	f	struct:fzf.Result	typeref:typename:int32
Index	vim/.vim/plugged/fzf/src/util/chars.go	/^	Index int32$/;"	m	struct:util.Chars	typeref:typename:int32
Info	vim/.vim/plugged/fzf/.github/ISSUE_TEMPLATE.md	/^## Info$/;"	s
Info	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Info         ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
InfoStyle	vim/.vim/plugged/fzf/src/options.go	/^	InfoStyle   infoStyle$/;"	m	struct:fzf.Options	typeref:typename:infoStyle
Init	vim/.vim/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Init()             {}$/;"	f	unknown:tui.FullscreenRenderer
Init	vim/.vim/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Init() {$/;"	f	struct:tui.LightRenderer
Init	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Init() {$/;"	f	unknown:tui.FullscreenRenderer
Init	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Init()$/;"	n	interface:tui.Renderer
InlineInterfaceComponent	vim/.vim/plugged/vim-styled-components/examples/typescript.ts	/^const InlineInterfaceComponent = styled<{$/;"	C
InlineInterfaceComponent2	vim/.vim/plugged/vim-styled-components/examples/typescript.ts	/^const InlineInterfaceComponent2 = styled<{$/;"	C
Input	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) Input() (bool, []rune) {$/;"	f	struct:fzf.Terminal	typeref:typename:(bool, []rune)
Input	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Input        ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Input	vim/.vim/plugged/vim-styled-components/examples/apis.js	/^const Input = styled.inptu.attrs({})`background: none`;$/;"	C
Input	vim/.vim/plugged/vim-styled-components/examples/apis.js	/^const Input = styled.input.attrs({$/;"	C
Input	vim/.vim/plugged/vim-styled-components/examples/issue-30-1.js	/^const Input = styled(({ primary, outline, ...restProps }) => ($/;"	C
Insert	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Insert$/;"	c	package:tui
Insert Final Newline Property	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/insert_final_newline.rst	/^Insert Final Newline Property$/;"	c
Install	vim/.vim/plugged/typescript-vim/README.md	/^Install$/;"	s	chapter:Typescript Syntax for Vim
Install as Vim8 plugin	vim/.vim/plugged/editorconfig-vim/README.md	/^### Install as Vim8 plugin$/;"	S	section:EditorConfig Vim Plugin""Installation
Install via [Vundle](https://github.com/VundleVim/Vundle.Vim)	vim/.vim/plugged/vim-styled-components/README.md	/^### Install via [Vundle](https:\/\/github.com\/VundleVim\/Vundle.Vim)$/;"	S	section:vim-styled-components""Installation
Install via [pathogen](https://github.com/tpope/vim-pathogen)	vim/.vim/plugged/vim-styled-components/README.md	/^### Install via [pathogen](https:\/\/github.com\/tpope\/vim-pathogen)$/;"	S	section:vim-styled-components""Installation
Install via [vim-plug](https://github.com/junegunn/vim-plug)	vim/.vim/plugged/vim-styled-components/README.md	/^### Install via [vim-plug](https:\/\/github.com\/junegunn\/vim-plug)$/;"	S	section:vim-styled-components""Installation
Install with [Vundle][]	vim/.vim/plugged/editorconfig-vim/README.md	/^### Install with [Vundle][]$/;"	S	section:EditorConfig Vim Plugin""Installation
Install with [pathogen](https://github.com/tpope/vim-pathogen)	vim/.vim/plugged/vim-javascript/README.md	/^### Install with [pathogen](https:\/\/github.com\/tpope\/vim-pathogen)$/;"	S	section:vim-javascript""Installation
Install with [pathogen][]	vim/.vim/plugged/editorconfig-vim/README.md	/^### Install with [pathogen][]$/;"	S	section:EditorConfig Vim Plugin""Installation
Install with [vim-plug][]	vim/.vim/plugged/editorconfig-vim/README.md	/^### Install with [vim-plug][]$/;"	S	section:EditorConfig Vim Plugin""Installation
Install with native package manager	vim/.vim/plugged/vim-javascript/README.md	/^### Install with native package manager$/;"	S	section:vim-javascript""Installation
Install with the archive	vim/.vim/plugged/editorconfig-vim/README.md	/^### Install with the archive$/;"	S	section:EditorConfig Vim Plugin""Installation
Installation	vim/.vim/plugged/MatchTagAlways/README.md	/^## Installation$/;"	s	chapter:Always highlight enclosing tags
Installation	vim/.vim/plugged/editorconfig-vim/README.md	/^## Installation$/;"	s	chapter:EditorConfig Vim Plugin
Installation	vim/.vim/plugged/far.vim/README.md	/^## Installation$/;"	s	chapter:far.vim - Find And Replace Vim plugin
Installation	vim/.vim/plugged/fzf.vim/README.md	/^Installation$/;"	s	chapter:fzf :heart: vim
Installation	vim/.vim/plugged/fzf/README-VIM.md	/^Installation$/;"	s	chapter:FZF Vim integration
Installation	vim/.vim/plugged/fzf/README.md	/^Installation$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Installation	vim/.vim/plugged/golden-ratio/README.md	/^## Installation$/;"	s	chapter:Golden Ratio
Installation	vim/.vim/plugged/gv.vim/README.md	/^Installation$/;"	s	chapter:gv.vim
Installation	vim/.vim/plugged/lightline.vim/README.md	/^## Installation$/;"	s	chapter:lightline.vim
Installation	vim/.vim/plugged/vim-closetag/README.md	/^#### Installation$/;"	t	chapter:closetag.vim
Installation	vim/.vim/plugged/vim-commentary/README.markdown	/^## Installation$/;"	s	chapter:commentary.vim
Installation	vim/.vim/plugged/vim-fugitive/README.markdown	/^## Installation$/;"	s	chapter:fugitive.vim
Installation	vim/.vim/plugged/vim-graphql/README.md	/^## Installation$/;"	s	chapter:GraphQL for Vim
Installation	vim/.vim/plugged/vim-javascript/README.md	/^## Installation$/;"	s	chapter:vim-javascript
Installation	vim/.vim/plugged/vim-jsx-typescript/README.md	/^## Installation$/;"	s	chapter:vim-jsx-typescript
Installation	vim/.vim/plugged/vim-lightline-coc/README.md	/^## Installation$/;"	s	chapter:lightline-coc
Installation	vim/.vim/plugged/vim-multiple-cursors/README.md	/^## Installation$/;"	s	chapter:vim-multiple-cursors
Installation	vim/.vim/plugged/vim-rhubarb/README.markdown	/^## Installation$/;"	s	chapter:rhubarb.vim
Installation	vim/.vim/plugged/vim-styled-components/README.md	/^## Installation$/;"	s	chapter:vim-styled-components
Installation	vim/.vim/plugged/vim-toml/README.md	/^## Installation$/;"	s	chapter:vim-toml
Installation	vim/.vim/plugged/vim-translator/README.md	/^## Installation$/;"	s	chapter:vim-translator
Installation	vim/.vim/plugged/vim-twiggy/README.md	/^## Installation$/;"	s	chapter:twiggy.vim
Installation	vim/.vim/plugged/vim-vue-plugin/README.md	/^## Installation$/;"	s	chapter:vim-vue-plugin [![Build Status][12]](https://travis-ci.com/leafOfTree/vim-vue-plugin)
Installation and configuration	vim/.vim/plugged/vim-LanguageTool/README.md	/^# Installation and configuration$/;"	c
Int	vim/.vim/plugged/fzf/src/tui/tui.go	/^func (t EventType) Int() int {$/;"	f	type:tui.EventType	typeref:typename:int
Integration	vim/.vim/plugged/vim-lightline-coc/README.md	/^## Integration$/;"	s	chapter:lightline-coc
Interactions with other plugins	vim/.vim/plugged/vim-multiple-cursors/README.md	/^### Interactions with other plugins$/;"	S	section:vim-multiple-cursors""Settings
InterfaceComponent	vim/.vim/plugged/vim-styled-components/examples/typescript.ts	/^const InterfaceComponent = styled<ExistingInterface, 'h1'>('h1')`$/;"	C
Intro	vim/.vim/plugged/far.vim/README.md	/^## Intro$/;"	s	chapter:far.vim - Find And Replace Vim plugin
Introduction	vim/.vim/plugged/fzf/ADVANCED.md	/^Introduction$/;"	s	chapter:Advanced fzf examples
Introduction	vim/.vim/plugged/lightline.vim/README.md	/^## Introduction$/;"	s	chapter:lightline.vim
Invalid	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Invalid$/;"	c	package:tui
Io	vim/.vim/plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	v
Ip	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
Ir	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
Is	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
IsBytes	vim/.vim/plugged/fzf/src/util/chars.go	/^func (chars *Chars) IsBytes() bool {$/;"	f	struct:util.Chars	typeref:typename:bool
IsDefault	vim/.vim/plugged/fzf/src/tui/tui.go	/^func (c Color) IsDefault() bool {$/;"	f	type:tui.Color	typeref:typename:bool
IsEmpty	vim/.vim/plugged/fzf/src/pattern.go	/^func (p *Pattern) IsEmpty() bool {$/;"	f	struct:fzf.Pattern	typeref:typename:bool
IsFull	vim/.vim/plugged/fzf/src/chunklist.go	/^func (c *Chunk) IsFull() bool {$/;"	f	struct:fzf.Chunk	typeref:typename:bool
IsLightRendererSupported	vim/.vim/plugged/fzf/src/tui/light_unix.go	/^func IsLightRendererSupported() bool {$/;"	f	package:tui	typeref:typename:bool
IsLightRendererSupported	vim/.vim/plugged/fzf/src/tui/light_windows.go	/^func IsLightRendererSupported() bool {$/;"	f	package:tui	typeref:typename:bool
IsStyledDefinition	vim/.vim/plugged/vim-styled-components/after/ftplugin/javascript.vim	/^fu! IsStyledDefinition(lnum)$/;"	f
IsTty	vim/.vim/plugged/fzf/src/util/util.go	/^func IsTty() bool {$/;"	f	package:util	typeref:typename:bool
IsWindows	vim/.vim/plugged/fzf/src/util/util_unix.go	/^func IsWindows() bool {$/;"	f	package:util	typeref:typename:bool
IsWindows	vim/.vim/plugged/fzf/src/util/util_windows.go	/^func IsWindows() bool {$/;"	f	package:util	typeref:typename:bool
Issue Creation	vim/.vim/plugged/vim-multiple-cursors/README.md	/^### Issue Creation$/;"	S	section:vim-multiple-cursors""Contributing
It's great for quick refactoring	vim/.vim/plugged/vim-multiple-cursors/README.md	/^### It's great for quick refactoring$/;"	S	section:vim-multiple-cursors""About
Italic	vim/.vim/plugged/fzf/src/tui/dummy.go	/^	Italic    = Attr(1 << 2)$/;"	c	package:tui
Italic	vim/.vim/plugged/fzf/src/tui/tcell.go	/^	Italic         = Attr(tcell.AttrItalic)$/;"	c	package:tui
Item	vim/.vim/plugged/fzf/src/item.go	/^type Item struct {$/;"	s	package:fzf
ItemBuilder	vim/.vim/plugged/fzf/src/chunklist.go	/^type ItemBuilder func(*Item, []byte) bool$/;"	t	package:fzf	typeref:typename:func(*Item, []byte) bool
Iw	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Ix	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
Iy	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
J	vim/.vim/plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
J	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^  nnoremap <buffer> <silent> J      :<C-U>call <SID>jump_to_current_branch()<CR>$/;"	m
J$	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
J0	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
J1	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
J3	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
J4	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
J5	vim/.vim/plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	f
J6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
J7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
J8	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
J9	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}function G9(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function K9(){return process.en/;"	f
JA	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
JB	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
JC	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
JD	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
JG	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
JL	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
JM	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
JN	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
JO	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
JP	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
JPe	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
JQ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
JR	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
JT	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
JV	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
JWe	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
JZ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ja	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Jae	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Janus	vim/.vim/plugged/vim-toml/README.md	/^### Janus$/;"	S	section:vim-toml""Installation
JavaScript and TypeScript Support	vim/.vim/plugged/vim-graphql/README.md	/^## JavaScript and TypeScript Support$/;"	s	chapter:GraphQL for Vim
Jb	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Jc	vim/.vim/plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	v
Jd	vim/.vim/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:o}}function QB(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	v
Jf	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Jg	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Jie	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Jj	vim/.vim/plugged/coc.nvim/build/index.js	/^`)==-1&&(u+=" ",f(c,"CocTreeDescription"),u+=c),{line:u,highlights:o}}async appendTreeNode(e,t,i/;"	v
Jk	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
Jm	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Jme	vim/.vim/plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
Jn	vim/.vim/plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
Joe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
Jp	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	c
Jp	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
Jq	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
Jqe	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
Jr	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
Js	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	f
Jse	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
Ju	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
JumpLabels	vim/.vim/plugged/fzf/src/options.go	/^	JumpLabels  string$/;"	m	struct:fzf.Options	typeref:typename:string
JumpToCurrentError	vim/.vim/plugged/vim-LanguageTool/autoload/languagetool.vim	/^function <sid>JumpToCurrentError() "{{{1$/;"	f
Jy	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
Jz	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
K	.config/nvim_copy/init.vim	/^nnoremap <silent> K :call <SID>show_documentation()<CR>$/;"	m
K	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:to
K	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:pK.e
K	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Il
K	vim/.vimrc	/^nnoremap <silent> K :call <SID>show_documentation()<CR>$/;"	m
K$	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
K4	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
K5	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
K6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
K7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
K8	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
K9	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}function G9(r){r?process.env.DEBUG=r:delete process.env.DEBUG}function K9(){return process.en/;"	f
KB	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
KC	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
KD	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
KEY/EVENT	vim/.vim/plugged/fzf/man/man1/fzf.1	/^.SH KEY\/EVENT BINDINGS$/;"	s	title:fzf
KG	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
KH	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
KI	vim/.vim/plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	f
KN	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
KP	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
KQ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
KT	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
KV	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
KZ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Ka	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
Kae	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Kb	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Kc	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
Kd	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
Kee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
KeepRight	vim/.vim/plugged/fzf/src/options.go	/^	KeepRight   bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Key	vim/.vim/plugged/fzf/src/tui/tui.go	/^func Key(r rune) Event {$/;"	f	package:tui	typeref:typename:Event
Key Mappings	vim/.vim/plugged/vim-translator/README.md	/^## Key Mappings$/;"	s	chapter:vim-translator
Key bindings for command-line	vim/.vim/plugged/fzf/README.md	/^Key bindings for command-line$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Key bindings for git objects	vim/.vim/plugged/fzf/ADVANCED.md	/^Key bindings for git objects$/;"	s	chapter:Advanced fzf examples
Keymap	vim/.vim/plugged/fzf/src/options.go	/^	Keymap      map[tui.Event][]action$/;"	m	struct:fzf.Options	typeref:typename:map[tui.Event][]action
Kf	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Kg	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Ki	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
Kie	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
KillCommand	vim/.vim/plugged/fzf/src/util/util_unix.go	/^func KillCommand(cmd *exec.Cmd) error {$/;"	f	package:util	typeref:typename:error
KillCommand	vim/.vim/plugged/fzf/src/util/util_windows.go	/^func KillCommand(cmd *exec.Cmd) error {$/;"	f	package:util	typeref:typename:error
Kj	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Kme	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	f
Kn	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Koe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
Kq	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
Kr	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Ks	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
Kt	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Ku	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Kx	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
Ky	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
L	vim/.vim/autoload/plug.vim	/^    nnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
L	vim/.vim/autoload/plug.vim	/^    xnoremap <silent> <buffer> L :call <SID>status_load(line('.'))<cr>$/;"	m
L	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
L	vim/.vim/plugged/coc.nvim/build/index.js	/^`),a++,c=i,o=14;switch(w){case 123:return i++,o=1;case 125:return i++,o=2;case 91:return i++,o=3/;"	v
L	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
L	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:$0
L	vim/.vim/plugged/editorconfig-vim/tests/core/tests/meta/CMakeLists.txt	/^set(L "[ \\t\\n\\r]+")$/;"	v
L$	vim/.vim/plugged/coc.nvim/build/index.js	/^`),s=n.length-(t.end.line-t.start.line)-1,o=0;if(t.end.line==r.line){let a=b0(t)&&s==0,l=a?t.end/;"	f
L0	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
L3	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
L5	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
L6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
L7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
L8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
L9	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
LA	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
LAYOUT	vim/.vim/plugged/fzf/man/man1/fzf-tmux.1	/^.SH LAYOUT OPTIONS$/;"	s	title:fzf-tmux
LC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
LD	vim/.vim/plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
LG	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
LICENSE	vim/.vim/plugged/fzf/man/man1/fzf.1	/^.SH LICENSE$/;"	s	title:fzf
LJ	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
LK	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
LL	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
LN	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
LO	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
LOG_FILE	vim/.vim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	vim/.vim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	vim/.vim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^set LOG_FILE=$/;"	v
LOG_FILE	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set LOG_FILE=$/;"	v
LQ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
LV	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
LW	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
LX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
Lae	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Language Server Protocol Support	vim/.vim/plugged/vim-graphql/README.md	/^## Language Server Protocol Support$/;"	s	chapter:GraphQL for Vim
LanguageToolCheck	vim/.vim/plugged/vim-LanguageTool/plugin/LanguageTool.vim	/^com! -nargs=0 -range=% LanguageToolCheck :call languagetool#Check(<line1>,$/;"	c
LanguageToolClear	vim/.vim/plugged/vim-LanguageTool/plugin/LanguageTool.vim	/^com! -nargs=0          LanguageToolClear :call languagetool#Clear()$/;"	c
Latin1 Character Set	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/charset.rst	/^Latin1 Character Set$/;"	s	chapter:Tests for Newlines
Latin1 Character Set with Unicode	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/charset.rst	/^Latin1 Character Set with Unicode$/;"	s	chapter:Tests for Newlines
Layout	vim/.vim/plugged/fzf/README.md	/^#### Layout$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Usage
Layout	vim/.vim/plugged/fzf/src/options.go	/^	Layout      layoutType$/;"	m	struct:fzf.Options	typeref:typename:layoutType
LayoutHeaderContainer	vim/.vim/plugged/vim-styled-components/examples/issue-52.js	/^const LayoutHeaderContainer = styled.div`$/;"	C
Lb	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Lc	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
Le	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
LeadingWhitespaces	vim/.vim/plugged/fzf/src/util/chars.go	/^func (chars *Chars) LeadingWhitespaces() int {$/;"	f	struct:util.Chars	typeref:typename:int
Lee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Left	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Left() int {$/;"	f	struct:tui.LightWindow	typeref:typename:int
Left	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Left() int {$/;"	f	struct:tui.TcellWindow	typeref:typename:int
Left	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Left   bool$/;"	m	struct:tui.MouseEvent	typeref:typename:bool
Left	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Left$/;"	c	package:tui
Left	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Left() int$/;"	n	interface:tui.Window	typeref:typename:int
LeftClick	vim/.vim/plugged/fzf/src/tui/tui.go	/^	LeftClick$/;"	c	package:tui
Len	vim/.vim/plugged/fzf/src/result.go	/^func (a ByOrder) Len() int {$/;"	f	type:fzf.ByOrder	typeref:typename:int
Len	vim/.vim/plugged/fzf/src/result.go	/^func (a ByRelevance) Len() int {$/;"	f	type:fzf.ByRelevance	typeref:typename:int
Len	vim/.vim/plugged/fzf/src/result.go	/^func (a ByRelevanceTac) Len() int {$/;"	f	type:fzf.ByRelevanceTac	typeref:typename:int
Len	vim/.vim/plugged/fzf/src/terminal.go	/^func (a byTimeOrder) Len() int {$/;"	f	type:fzf.byTimeOrder	typeref:typename:int
Length	vim/.vim/plugged/fzf/src/merger.go	/^func (mg *Merger) Length() int {$/;"	f	struct:fzf.Merger	typeref:typename:int
Length	vim/.vim/plugged/fzf/src/util/chars.go	/^func (chars *Chars) Length() int {$/;"	f	struct:util.Chars	typeref:typename:int
Less	vim/.vim/plugged/fzf/src/result.go	/^func (a ByOrder) Less(i, j int) bool {$/;"	f	type:fzf.ByOrder	typeref:typename:bool
Less	vim/.vim/plugged/fzf/src/result.go	/^func (a ByRelevance) Less(i, j int) bool {$/;"	f	type:fzf.ByRelevance	typeref:typename:bool
Less	vim/.vim/plugged/fzf/src/result.go	/^func (a ByRelevanceTac) Less(i, j int) bool {$/;"	f	type:fzf.ByRelevanceTac	typeref:typename:bool
Less	vim/.vim/plugged/fzf/src/terminal.go	/^func (a byTimeOrder) Less(i, j int) bool {$/;"	f	type:fzf.byTimeOrder	typeref:typename:bool
Lg	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
Li	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
License	vim/.vim/plugged/MatchTagAlways/README.md	/^## License$/;"	s	chapter:Always highlight enclosing tags
License	vim/.vim/plugged/coc.nvim/Readme.md	/^## License$/;"	s
License	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/README.rst	/^License$/;"	s	chapter:Tests for EditorConfig Plugins
License	vim/.vim/plugged/far.vim/README.md	/^## License$/;"	s	chapter:far.vim - Find And Replace Vim plugin
License	vim/.vim/plugged/fzf.vim/README.md	/^License$/;"	s	chapter:fzf :heart: vim
License	vim/.vim/plugged/fzf/BUILD.md	/^License$/;"	s	chapter:Building fzf
License	vim/.vim/plugged/golden-ratio/README.md	/^## License$/;"	s	chapter:Golden Ratio
License	vim/.vim/plugged/iceberg-dark/README.md	/^## License$/;"	s	chapter:iceberg-dark
License	vim/.vim/plugged/iceberg.vim/README.md	/^# License$/;"	c
License	vim/.vim/plugged/lightline.vim/README.md	/^## License$/;"	s	chapter:lightline.vim
License	vim/.vim/plugged/vim-LanguageTool/README.md	/^# License$/;"	c
License	vim/.vim/plugged/vim-commentary/README.markdown	/^## License$/;"	s	chapter:commentary.vim
License	vim/.vim/plugged/vim-fugitive/README.markdown	/^## License$/;"	s	chapter:fugitive.vim
License	vim/.vim/plugged/vim-graphql/README.md	/^## License$/;"	s	chapter:GraphQL for Vim
License	vim/.vim/plugged/vim-javascript/README.md	/^## License$/;"	s	chapter:vim-javascript
License	vim/.vim/plugged/vim-lightline-coc/README.md	/^## License$/;"	s	chapter:lightline-coc
License	vim/.vim/plugged/vim-styled-components/README.md	/^## License$/;"	s	chapter:vim-styled-components
License	vim/.vim/plugged/vim-translator/README.md	/^## License$/;"	s	chapter:vim-translator
License	vim/.vim/plugged/vim-vue-plugin/README.md	/^## License$/;"	s	chapter:vim-vue-plugin [![Build Status][12]](https://travis-ci.com/leafOfTree/vim-vue-plugin)
Light256	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Light256  *ColorTheme$/;"	v	package:tui	typeref:typename:*ColorTheme
LightRenderer	vim/.vim/plugged/fzf/src/tui/light.go	/^type LightRenderer struct {$/;"	s	package:tui
LightWindow	vim/.vim/plugged/fzf/src/tui/light.go	/^type LightWindow struct {$/;"	s	package:tui
LineColumnForOffsetInString	vim/.vim/plugged/MatchTagAlways/python/mta_core.py	/^def LineColumnForOffsetInString( text, offset ):$/;"	f
LineColumnOffsetConversions_BasicMultiLine_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def LineColumnOffsetConversions_BasicMultiLine_test():$/;"	f
LineColumnOffsetConversions_Basic_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def LineColumnOffsetConversions_Basic_test():$/;"	f
LineColumnOffsetConversions_ComplexMultiLine_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def LineColumnOffsetConversions_ComplexMultiLine_test():$/;"	f
LineColumnOffsetConversions_EmtpyLine_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def LineColumnOffsetConversions_EmtpyLine_test():$/;"	f
LineColumnOffsetConversions_FailColumnOutOfRange_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def LineColumnOffsetConversions_FailColumnOutOfRange_test():$/;"	f
LineColumnOffsetConversions_FailLineOutOfRange_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def LineColumnOffsetConversions_FailLineOutOfRange_test():$/;"	f
LineColumnOffsetConversions_FailOnEmptyString_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def LineColumnOffsetConversions_FailOnEmptyString_test():$/;"	f
Lle	vim/.vim/plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
Lm	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	v
Lme	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
Ln	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
LocationOfEnclosingTagsInWindowView	vim/.vim/plugged/MatchTagAlways/python/mta_vim.py	/^def LocationOfEnclosingTagsInWindowView():$/;"	f
LocationsOfEnclosingTags	vim/.vim/plugged/MatchTagAlways/python/mta_core.py	/^def LocationsOfEnclosingTags( input_html, cursor_line, cursor_column ):$/;"	f
LocationsOfEnclosingTags_Basic_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def LocationsOfEnclosingTags_Basic_test():$/;"	f
LocationsOfEnclosingTags_Comments_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def LocationsOfEnclosingTags_Comments_test():$/;"	f
LocationsOfEnclosingTags_CursorInTagFull_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def LocationsOfEnclosingTags_CursorInTagFull_test():$/;"	f
LocationsOfEnclosingTags_CursorInTag_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def LocationsOfEnclosingTags_CursorInTag_test():$/;"	f
LocationsOfEnclosingTags_Fail_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def LocationsOfEnclosingTags_Fail_test():$/;"	f
LocationsOfEnclosingTags_MultiLine_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def LocationsOfEnclosingTags_MultiLine_test():$/;"	f
LocationsOfEnclosingTags_Nested_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def LocationsOfEnclosingTags_Nested_test():$/;"	f
LocationsOfEnclosingTags_UnbalancedOpeningTagFull_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def LocationsOfEnclosingTags_UnbalancedOpeningTagFull_test():$/;"	f
LocationsOfEnclosingTags_UnbalancedOpeningTag_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def LocationsOfEnclosingTags_UnbalancedOpeningTag_test():$/;"	f
Log	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^function Log(msg)$/;"	f
Log	vim/.vim/plugged/vim-rooter/test/runner.vim	/^function Log(msg)$/;"	f
Log tailing	vim/.vim/plugged/fzf/ADVANCED.md	/^Log tailing$/;"	s	chapter:Advanced fzf examples
Lookup	vim/.vim/plugged/fzf/src/cache.go	/^func (cc *ChunkCache) Lookup(chunk *Chunk, key string) []Result {$/;"	f	struct:fzf.ChunkCache	typeref:typename:[]Result
Loop	vim/.vim/plugged/fzf/src/matcher.go	/^func (m *Matcher) Loop() {$/;"	f	struct:fzf.Matcher
Loop	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) Loop() {$/;"	f	struct:fzf.Terminal
LoopParseArgs	vim/.vim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:LoopParseArgs$/;"	l
LoopParseArgs	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:LoopParseArgs$/;"	l
Lpe	vim/.vim/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	f
Ls	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
Lse	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Lt	vim/.vim/plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
Lu	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
Lv	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
Lw	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Lx	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	v
Ly	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
M	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
M	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:pK.e
M$	vim/.vim/plugged/coc.nvim/build/index.js	/^`),o=i.line==r.start.line?i.character-r.start.character:i.character,a=A$(s,i.line-r.start.line,o/;"	v
M0	vim/.vim/plugged/coc.nvim/build/index.js	/^`),a++,c=i,o=14;switch(w){case 123:return i++,o=1;case 125:return i++,o=2;case 91:return i++,o=3/;"	f
M2e	vim/.vim/plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
M5	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
M6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
M7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
M8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
M9	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
MA	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
MAKEFILE	vim/.vim/plugged/fzf/Makefile	/^MAKEFILE       := $(realpath $(lastword $(MAKEFILE_LIST)))$/;"	m
MC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
MD	vim/.vim/plugged/coc.nvim/build/index.js	/^`),s=n.length-(t.end.line-t.start.line+1);if(this.line=this.line+s,t.end.line==this.line){let o=/;"	f
MG	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
MM	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
MP	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
MR	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
MS	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	v
MU	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
MV	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	f
MX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
MY	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
Mae	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
MakeBorderStyle	vim/.vim/plugged/fzf/src/tui/tui.go	/^func MakeBorderStyle(shape BorderShape, unicode bool) BorderStyle {$/;"	f	package:tui	typeref:typename:BorderStyle
MakeSlab	vim/.vim/plugged/fzf/src/util/slab.go	/^func MakeSlab(size16 int, size32 int) *Slab {$/;"	f	package:util	typeref:typename:*Slab
MakeTransparentBorder	vim/.vim/plugged/fzf/src/tui/tui.go	/^func MakeTransparentBorder() BorderStyle {$/;"	f	package:tui	typeref:typename:BorderStyle
Managing Tabs	vim/Readme.md	/^### Managing Tabs$/;"	S	section:My awesome vim dotfile""Shortcuts
Mapping	vim/.vim/plugged/vim-multiple-cursors/README.md	/^## Mapping$/;"	s	chapter:vim-multiple-cursors
Mappings	vim/.vim/plugged/fzf.vim/README.md	/^Mappings$/;"	s	chapter:fzf :heart: vim
Mappings	vim/.vim/plugged/gv.vim/README.md	/^### Mappings$/;"	S	section:gv.vim""Usage
Margin	vim/.vim/plugged/fzf/src/options.go	/^	Margin      [4]sizeSpec$/;"	m	struct:fzf.Options	typeref:typename:[4]sizeSpec
Marker	vim/.vim/plugged/fzf/src/options.go	/^	Marker      string$/;"	m	struct:fzf.Options	typeref:typename:string
Match	vim/.vim/plugged/fzf/src/pattern.go	/^func (p *Pattern) Match(chunk *Chunk, slab *util.Slab) []Result {$/;"	f	struct:fzf.Pattern	typeref:typename:[]Result
Match	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Match        ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Match characters from visual selection	vim/.vim/plugged/vim-multiple-cursors/README.md	/^### Match characters from visual selection$/;"	S	section:vim-multiple-cursors""About
MatchItem	vim/.vim/plugged/fzf/src/pattern.go	/^func (p *Pattern) MatchItem(item *Item, withPos bool, slab *util.Slab) (*Result, []Offset, *[]in/;"	f	struct:fzf.Pattern	typeref:typename:(*Result, []Offset, *[]int)
MatchRequest	vim/.vim/plugged/fzf/src/matcher.go	/^type MatchRequest struct {$/;"	s	package:fzf
MatchTagAlways#GoToEnclosingTag	vim/.vim/plugged/MatchTagAlways/autoload/MatchTagAlways.vim	/^function! MatchTagAlways#GoToEnclosingTag()$/;"	f
MatchTagAlways#Setup	vim/.vim/plugged/MatchTagAlways/autoload/MatchTagAlways.vim	/^function! MatchTagAlways#Setup()$/;"	f
Matcher	vim/.vim/plugged/fzf/src/matcher.go	/^type Matcher struct {$/;"	s	package:fzf
Max	vim/.vim/plugged/fzf/src/util/util.go	/^func Max(first int, second int) int {$/;"	f	package:util	typeref:typename:int
Max16	vim/.vim/plugged/fzf/src/util/util.go	/^func Max16(first int16, second int16) int16 {$/;"	f	package:util	typeref:typename:int16
Max32	vim/.vim/plugged/fzf/src/util/util.go	/^func Max32(first int32, second int32) int32 {$/;"	f	package:util	typeref:typename:int32
MaxX	vim/.vim/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) MaxX() int      { return 0 }$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:int
MaxX	vim/.vim/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) MaxX() int {$/;"	f	struct:tui.LightRenderer	typeref:typename:int
MaxX	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) MaxX() int {$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:int
MaxX	vim/.vim/plugged/fzf/src/tui/tui.go	/^	MaxX() int$/;"	n	interface:tui.Renderer	typeref:typename:int
MaxY	vim/.vim/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) MaxY() int      { return 0 }$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:int
MaxY	vim/.vim/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) MaxY() int {$/;"	f	struct:tui.LightRenderer	typeref:typename:int
MaxY	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) MaxY() int {$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:int
MaxY	vim/.vim/plugged/fzf/src/tui/tui.go	/^	MaxY() int$/;"	n	interface:tui.Renderer	typeref:typename:int
Mb	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Mc	vim/.vim/plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	f
Md	vim/.vim/plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	f
Me	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
Mee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Merge	vim/.vim/plugged/fzf/src/tui/dummy.go	/^func (a Attr) Merge(b Attr) Attr {$/;"	f	type:tui.Attr	typeref:typename:Attr
Merge	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (a Attr) Merge(b Attr) Attr {$/;"	f	type:tui.Attr	typeref:typename:Attr
Merge	vim/.vim/plugged/fzf/src/tui/tui.go	/^func (p ColorPair) Merge(other ColorPair) ColorPair {$/;"	f	struct:tui.ColorPair	typeref:typename:ColorPair
MergeAttr	vim/.vim/plugged/fzf/src/tui/tui.go	/^func (p ColorPair) MergeAttr(other ColorPair) ColorPair {$/;"	f	struct:tui.ColorPair	typeref:typename:ColorPair
MergeNonDefault	vim/.vim/plugged/fzf/src/tui/tui.go	/^func (p ColorPair) MergeNonDefault(other ColorPair) ColorPair {$/;"	f	struct:tui.ColorPair	typeref:typename:ColorPair
Merger	vim/.vim/plugged/fzf/src/merger.go	/^type Merger struct {$/;"	s	package:fzf
Merging and Rebasing	vim/.vim/plugged/vim-twiggy/README.md	/^### Merging and Rebasing$/;"	S	section:twiggy.vim""Usage
Mg	vim/.vim/plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	f
Min	vim/.vim/plugged/fzf/src/util/util.go	/^func Min(first int, second int) int {$/;"	f	package:util	typeref:typename:int
Min32	vim/.vim/plugged/fzf/src/util/util.go	/^func Min32(first int32, second int32) int32 {$/;"	f	package:util	typeref:typename:int32
MinHeight	vim/.vim/plugged/fzf/src/options.go	/^	MinHeight   int$/;"	m	struct:fzf.Options	typeref:typename:int
Minimal	vim/.vim/plugged/iceberg-dark/README.md	/^#### Minimal$/;"	t	subsection:iceberg-dark""Currently supported:""[tmux](https://github.com/tmux/tmux):
Minor improvements/fixes	vim/.vim/plugged/fzf/CHANGELOG.md	/^### Minor improvements\/fixes$/;"	S	section:CHANGELOG""0.10.0
Minor improvements/fixes	vim/.vim/plugged/fzf/CHANGELOG.md	/^### Minor improvements\/fixes$/;"	S	section:CHANGELOG""0.10.1
Mj	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Mme	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Mn	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	f
Mod	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Mod    bool$/;"	m	struct:tui.MouseEvent	typeref:typename:bool
Modal	vim/.vim/plugged/vim-styled-components/examples/issue-30-3.js	/^        <Modal$/;"	M	class:CoffeeList
Mode names are too long. Can I use shorter mode names?	vim/.vim/plugged/lightline.vim/README.md	/^#### Mode names are too long. Can I use shorter mode names?$/;"	t	subsection:lightline.vim""Advanced configuration""more tips
Modified	vim/.vim/plugged/lightline.vim/test/expand.vim	/^  function! Modified()$/;"	f
Mouse	vim/.vim/plugged/fzf/src/options.go	/^	Mouse       bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Mouse	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Mouse$/;"	c	package:tui
MouseEvent	vim/.vim/plugged/fzf/src/tui/tui.go	/^	MouseEvent *MouseEvent$/;"	m	struct:tui.Event	typeref:typename:*MouseEvent
MouseEvent	vim/.vim/plugged/fzf/src/tui/tui.go	/^type MouseEvent struct {$/;"	s	package:tui
Move	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Move(y int, x int) {$/;"	f	struct:tui.LightWindow
Move	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Move(y int, x int) {$/;"	f	struct:tui.TcellWindow
Move	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Move(y int, x int)$/;"	n	interface:tui.Window
Move between windows	vim/Readme.md	/^### Move between windows $/;"	S	section:My awesome vim dotfile""Shortcuts
MoveAndClear	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) MoveAndClear(y int, x int) {$/;"	f	struct:tui.LightWindow
MoveAndClear	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) MoveAndClear(y int, x int) {$/;"	f	struct:tui.TcellWindow
MoveAndClear	vim/.vim/plugged/fzf/src/tui/tui.go	/^	MoveAndClear(y int, x int)$/;"	n	interface:tui.Window
Mp	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
Mq	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
Ms	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
Mse	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Mt	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
MtaJumpToOtherTag	vim/.vim/plugged/MatchTagAlways/plugin/MatchTagAlways.vim	/^command -nargs=0 MtaJumpToOtherTag call MatchTagAlways#GoToEnclosingTag()$/;"	c
Mu	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Multi	vim/.vim/plugged/fzf/src/options.go	/^	Multi       int$/;"	m	struct:fzf.Options	typeref:typename:int
Multiline Replacement	vim/.vim/plugged/far.vim/README.md	/^### Multiline Replacement$/;"	S	section:far.vim - Find And Replace Vim plugin""Extras
Multiple Cursors	vim/.vim/plugged/vim-multiple-cursors/spec/benchmark_spec.rb	/^describe "Multiple Cursors" do$/;"	d
Multiple Cursors misc	vim/.vim/plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^describe "Multiple Cursors misc" do$/;"	d
Multiple Cursors op pending & exit from insert|visual mode	vim/.vim/plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^describe "Multiple Cursors op pending & exit from insert|visual mode" do$/;"	d
Multiple Cursors when changing the line count	vim/.vim/plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^describe "Multiple Cursors when changing the line count" do$/;"	d
Multiple Cursors when normal_maps is empty	vim/.vim/plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^describe "Multiple Cursors when normal_maps is empty" do$/;"	d
Multiple Cursors when using insert mappings	vim/.vim/plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^describe "Multiple Cursors when using insert mappings" do$/;"	d
Multiple Cursors when visual_maps is empty	vim/.vim/plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^describe "Multiple Cursors when visual_maps is empty" do$/;"	d
MultipleCursorsFind	vim/.vim/plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^command! -nargs=1 -range=% MultipleCursorsFind$/;"	c
Mv	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
Mw	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
Mx	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
My	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
My awesome vim dotfile	vim/Readme.md	/^# My awesome vim dotfile$/;"	c
MyTheme	vim/.vim/plugged/vim-css-color/tests/example.ts	/^const MyTheme = {$/;"	C
Mze	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
N	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
N$	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
N0	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
N4	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
N5	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
N6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
N8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
N9	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
NAME	vim/.vim/plugged/fzf/man/man1/fzf-tmux.1	/^.SH NAME$/;"	s	title:fzf-tmux
NAME	vim/.vim/plugged/fzf/man/man1/fzf.1	/^.SH NAME$/;"	s	title:fzf
NB	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
ND	vim/.vim/plugged/coc.nvim/build/index.js	/^`),s=n.length-(t.end.line-t.start.line+1);if(this.line=this.line+s,t.end.line==this.line){let o=/;"	f
NG	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
NH	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
NI	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
NM	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
NO	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
NP	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
NPe	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
NR	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
NV	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	f
NW	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
NX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
NY	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
Na	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Nae	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
NavItem	vim/.vim/plugged/vim-styled-components/examples/issue-30-2.js	/^const NavItem = styled.div`$/;"	C
Navigation	vim/Readme.md	/^### Navigation$/;"	S	section:My awesome vim dotfile""Used Plugins
Nb	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Nc	vim/.vim/plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	v
Nd	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
Ne	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Nee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Need help?	vim/.vim/plugged/far.vim/README.md	/^### Need help?$/;"	S	section:far.vim - Find And Replace Vim plugin""Usage
NeoVimLoggerHandler	vim/.vim/plugged/far.vim/rplugin/python3/far/__init__.py	/^    class NeoVimLoggerHandler(logging.Handler):$/;"	c
Neovim-Async, Ack, Ag, Ripgrep support	vim/.vim/plugged/far.vim/README.md	/^### Neovim-Async, Ack, Ag, Ripgrep support$/;"	S	section:far.vim - Find And Replace Vim plugin""Extras
New features	vim/.vim/plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.10.0
New features	vim/.vim/plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.10.1
New features	vim/.vim/plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.10
New features	vim/.vim/plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.11
New features	vim/.vim/plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.12
New features	vim/.vim/plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.13
New features	vim/.vim/plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.3
New features	vim/.vim/plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.4
New features	vim/.vim/plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.5
New features	vim/.vim/plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.6
New features	vim/.vim/plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.7
New features	vim/.vim/plugged/fzf/CHANGELOG.md	/^### New features$/;"	S	section:CHANGELOG""0.9.9
NewAtomicBool	vim/.vim/plugged/fzf/src/util/atomicbool.go	/^func NewAtomicBool(initialState bool) *AtomicBool {$/;"	f	package:util	typeref:typename:*AtomicBool
NewChunkCache	vim/.vim/plugged/fzf/src/cache.go	/^func NewChunkCache() ChunkCache {$/;"	f	package:fzf	typeref:typename:ChunkCache
NewChunkList	vim/.vim/plugged/fzf/src/chunklist.go	/^func NewChunkList(trans ItemBuilder) *ChunkList {$/;"	f	package:fzf	typeref:typename:*ChunkList
NewColorAttr	vim/.vim/plugged/fzf/src/tui/tui.go	/^func NewColorAttr() ColorAttr {$/;"	f	package:tui	typeref:typename:ColorAttr
NewColorPair	vim/.vim/plugged/fzf/src/tui/tui.go	/^func NewColorPair(fg Color, bg Color, attr Attr) ColorPair {$/;"	f	package:tui	typeref:typename:ColorPair
NewEventBox	vim/.vim/plugged/fzf/src/util/eventbox.go	/^func NewEventBox() *EventBox {$/;"	f	package:util	typeref:typename:*EventBox
NewFullscreenRenderer	vim/.vim/plugged/fzf/src/tui/tui.go	/^func NewFullscreenRenderer(theme *ColorTheme, forceBlack bool, mouse bool) Renderer {$/;"	f	package:tui	typeref:typename:Renderer
NewHistory	vim/.vim/plugged/fzf/src/history.go	/^func NewHistory(path string, maxSize int) (*History, error) {$/;"	f	package:fzf	typeref:typename:(*History, error)
NewLightRenderer	vim/.vim/plugged/fzf/src/tui/light.go	/^func NewLightRenderer(theme *ColorTheme, forceBlack bool, mouse bool, tabstop int, clearOnExit b/;"	f	package:tui	typeref:typename:Renderer
NewMatcher	vim/.vim/plugged/fzf/src/matcher.go	/^func NewMatcher(patternBuilder func([]rune) *Pattern,$/;"	f	package:fzf	typeref:typename:*Matcher
NewMerger	vim/.vim/plugged/fzf/src/merger.go	/^func NewMerger(pattern *Pattern, lists [][]Result, sorted bool, tac bool) *Merger {$/;"	f	package:fzf	typeref:typename:*Merger
NewReader	vim/.vim/plugged/fzf/src/reader.go	/^func NewReader(pusher func([]byte) bool, eventBox *util.EventBox, delimNil bool, wait bool) *Rea/;"	f	package:fzf	typeref:typename:*Reader
NewTerminal	vim/.vim/plugged/fzf/src/terminal.go	/^func NewTerminal(opts *Options, eventBox *util.EventBox) *Terminal {$/;"	f	package:fzf	typeref:typename:*Terminal
NewWindow	vim/.vim/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) NewWindow(top int, left int, width int, height int, preview bool, b/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:Window
NewWindow	vim/.vim/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) NewWindow(top int, left int, width int, height int, preview bool, border/;"	f	struct:tui.LightRenderer	typeref:typename:Window
NewWindow	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) NewWindow(top int, left int, width int, height int, preview bool, b/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:Window
NewWindow	vim/.vim/plugged/fzf/src/tui/tui.go	/^	NewWindow(top int, left int, width int, height int, preview bool, borderStyle BorderStyle) Wind/;"	n	interface:tui.Renderer	typeref:typename:Window
Ng	vim/.vim/plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	f
Nj	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Nje	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Nme	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
Nn	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
No external editorconfig core library is required	vim/.vim/plugged/editorconfig-vim/README.md	/^### No external editorconfig core library is required$/;"	S	section:EditorConfig Vim Plugin""Installation
NoColorTheme	vim/.vim/plugged/fzf/src/tui/tui.go	/^func NoColorTheme() *ColorTheme {$/;"	f	package:tui	typeref:typename:*ColorTheme
None	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f	function:r
Normalize	vim/.vim/plugged/fzf/src/options.go	/^	Normalize   bool$/;"	m	struct:fzf.Options	typeref:typename:bool
NormalizeRunes	vim/.vim/plugged/fzf/src/algo/normalize.go	/^func NormalizeRunes(runes []rune) []rune {$/;"	f	package:algo	typeref:typename:[]rune
Not Trimming Whitespace	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/trim_trailing_whitespace.rst	/^Not Trimming Whitespace$/;"	s	chapter:Trim Trailing Whitespace Property
Note for developers of other plugins	vim/.vim/plugged/lightline.vim/README.md	/^## Note for developers of other plugins$/;"	s	chapter:lightline.vim
Np	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
Npe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	f
Ns	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
Nse	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Nt	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
Nth	vim/.vim/plugged/fzf/src/options.go	/^	Nth         []Range$/;"	m	struct:fzf.Options	typeref:typename:[]Range
Nu	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Nv	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
Nw	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
Ny	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
O	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
O	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <buffer> O :call <sid>gld()<cr>$/;"	m
O	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <silent> <buffer> O    :call <sid>open(0, 1)<cr>$/;"	m
O	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  xnoremap <silent> <buffer> O    :<c-u>call <sid>open(1, 1)<cr>$/;"	m
O$	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	f
O0	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
O1	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	v
O5	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
O6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
O7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
O8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
O9	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
OBe	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
OC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
OCe	vim/.vim/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:o}}function QB(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	v
OD	vim/.vim/plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
OG	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
OH	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
OI	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
OJ	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
OK	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
OPENING	vim/.vim/plugged/MatchTagAlways/python/mta_core.py	/^  OPENING = 1$/;"	v	class:TagType
OPTIONS	vim/.vim/plugged/fzf/man/man1/fzf.1	/^.SH OPTIONS$/;"	s	title:fzf
OR	.config/nvim_copy/init.vim	/^command! -nargs=0 OR :call CocAction('runCommand', 'editor.action.organizeImport')$/;"	c
OR	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
OR	vim/.vimrc	/^command! -nargs=0 OR :call CocAction('runCommand', 'editor.action.organizeImport')$/;"	c
OS	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	v
OT	vim/.vim/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	f
OV	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
O_	vim/.vim/plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
Oae	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Ob	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Oc	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
Oe	vim/.vim/plugged/coc.nvim/build/index.js	/^`),_.log(`Sending request '${P.method} - (${P.id})'.`,z)}else to("send-request",P)}function Oe(P/;"	f
Oee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Of	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
Offset	vim/.vim/plugged/fzf/src/result.go	/^type Offset [2]int32$/;"	t	package:fzf	typeref:typename:[2]int32
OffsetForLineColumnInString	vim/.vim/plugged/MatchTagAlways/python/mta_core.py	/^def OffsetForLineColumnInString( text, line, column ):$/;"	f
Og	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
Oi	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
Oi	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae2d200
Oj	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
Ol	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Old Mac-style Newlines	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/end_of_line.rst	/^Old Mac-style Newlines$/;"	S	section:Tests for Newlines
OldHope	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### OldHope$/;"	S	chapter:Available Colorschemes
Ole	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	f
Ome	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
Once	vim/.vim/plugged/fzf/src/util/util.go	/^func Once(nextResponse bool) func() bool {$/;"	f	package:util	typeref:typename:func() bool
Oo	vim/.vim/plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	v
Optional: concerning jsx.	vim/.vim/plugged/vim-javascript/ISSUE_TEMPLATE.md	/^#### Optional: concerning jsx.$/;"	t
Options	vim/.vim/plugged/MatchTagAlways/README.md	/^## Options$/;"	s	chapter:Always highlight enclosing tags
Options	vim/.vim/plugged/fzf/README.md	/^#### Options$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Usage
Options	vim/.vim/plugged/fzf/src/options.go	/^type Options struct {$/;"	s	package:fzf
Options	vim/.vim/plugged/golden-ratio/README.md	/^## Options$/;"	s	chapter:Golden Ratio
Options	vim/.vim/plugged/vim-closetag/README.md	/^#### Options$/;"	t	chapter:closetag.vim
Oq	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
Os	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
Ose	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Ot	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
Other	vim/.vim/plugged/iceberg.vim/README.md	/^## Other$/;"	s	chapter:For other environments
Ou	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
Ow	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Ox	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
Oy	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
P	vim/.vim/plugged/vim-styled-components/examples/issue-32.js	/^const P = styled.p`$/;"	C
P	vim/.vim/plugged/vim-styled-components/examples/issue-33.js	/^const P = styled.p.attrs({$/;"	C
P$	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
P0	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
P5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
P6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
P7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
P8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
PAUSE_BEFORE_EXIT	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set PAUSE_BEFORE_EXIT=1$/;"	v
PAUSE_BEFORE_EXIT	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set PAUSE_BEFORE_EXIT=0$/;"	v
PB	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
PC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
PD	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
PF	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	v
PG	vim/.vim/plugged/coc.nvim/build/index.js	/^`+h+d;u.push({range:ds.Range.create(n,h.length,n,h.length),newText:"  \\\\ "}),g=g+"\\\\ ",u.pus/;"	v
PHP Support	vim/.vim/plugged/vim-graphql/README.md	/^## PHP Support$/;"	s	chapter:GraphQL for Vim
PK	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
PL	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
PM	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
PN	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
PO	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
POST_PROCESS_CMD	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set POST_PROCESS_CMD=%~2$/;"	v
POST_PROCESS_CMD	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set POST_PROCESS_CMD=$/;"	v
PR	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
PROJECT_ROOT	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set PROJECT_ROOT=%~2$/;"	v
PROJECT_ROOT	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set PROJECT_ROOT=$/;"	v
PROJ_ROOT	vim/.vim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set PROJ_ROOT=%~2$/;"	v
PS	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	v
PS1	vim/.vim/plugged/fzf/test/test_go.rb	/^PS1= PROMPT_COMMAND= HISTFILE= HISTSIZE=100$/;"	C
PT	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
PV	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
PW	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
PWe	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
PX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
PY2	vim/.vim/plugged/MatchTagAlways/python/mta_core.py	/^PY2 = (sys.version_info[0] == 2)$/;"	v
PY2	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^PY2 = (sys.version_info[0] == 2)$/;"	v
P_	vim/.vim/plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
Pa	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
PacifyHtmlComments	vim/.vim/plugged/MatchTagAlways/python/mta_core.py	/^def PacifyHtmlComments( text ):$/;"	f
PacifyHtmlComments_Works_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def PacifyHtmlComments_Works_test():$/;"	f
Padding	vim/.vim/plugged/fzf/src/options.go	/^	Padding     [4]sizeSpec$/;"	m	struct:fzf.Options	typeref:typename:[4]sizeSpec
Pae	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
PaperColor (`background=dark`)	vim/.vim/plugged/lightline.vim/README.md	/^### PaperColor (`background=dark`)$/;"	S	chapter:lightline.vim
PaperColor (`background=dark`)	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### PaperColor (`background=dark`)$/;"	S	chapter:Available Colorschemes
PaperColor (`background=light`)	vim/.vim/plugged/lightline.vim/README.md	/^### PaperColor (`background=light`)$/;"	S	chapter:lightline.vim
PaperColor (`background=light`)	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### PaperColor (`background=light`)$/;"	S	chapter:Available Colorschemes
ParseArgs	vim/.vim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:ParseArgs$/;"	l
ParseArgs	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:ParseArgs$/;"	l
ParseOptions	vim/.vim/plugged/fzf/src/options.go	/^func ParseOptions() *Options {$/;"	f	package:fzf	typeref:typename:*Options
ParseRange	vim/.vim/plugged/fzf/src/tokenizer.go	/^func ParseRange(str *string) (Range, bool) {$/;"	f	package:fzf	typeref:typename:(Range, bool)
PassMerger	vim/.vim/plugged/fzf/src/merger.go	/^func PassMerger(chunks *[]*Chunk, tac bool) *Merger {$/;"	f	package:fzf	typeref:typename:*Merger
Pathogen	vim/.vim/plugged/typescript-vim/README.md	/^### Pathogen$/;"	S	section:Typescript Syntax for Vim""Install
Pathogen	vim/.vim/plugged/vim-toml/README.md	/^### Pathogen$/;"	S	section:vim-toml""Installation
Pattern	vim/.vim/plugged/fzf/src/pattern.go	/^type Pattern struct {$/;"	s	package:fzf
Pause	vim/.vim/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Pause(bool)        {}$/;"	f	unknown:tui.FullscreenRenderer
Pause	vim/.vim/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Pause(clear bool) {$/;"	f	struct:tui.LightRenderer
Pause	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Pause(clear bool) {$/;"	f	unknown:tui.FullscreenRenderer
Pause	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Pause(clear bool)$/;"	n	interface:tui.Renderer
Pb	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
Pc	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Pe	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
Pee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Peek	vim/.vim/plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) Peek(event EventType) bool {$/;"	f	struct:util.EventBox	typeref:typename:bool
Performance	vim/.vim/plugged/fzf/README.md	/^### Performance$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics
Pg	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
PgDn	vim/.vim/plugged/fzf/src/tui/tui.go	/^	PgDn$/;"	c	package:tui
PgUp	vim/.vim/plugged/fzf/src/tui/tui.go	/^	PgUp$/;"	c	package:tui
Philosophy	vim/.vim/plugged/iceberg.vim/README.md	/^# Philosophy$/;"	c
Phony	vim/.vim/plugged/fzf/src/options.go	/^	Phony       bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Pje	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Pl	vim/.vim/plugged/coc.nvim/build/index.js	/^`+h+d;u.push({range:ds.Range.create(n,h.length,n,h.length),newText:"  \\\\ "}),g=g+"\\\\ ",u.pus/;"	v
Ple	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Plug	vim/.vim/autoload/plug.vim	/^  command! -nargs=+ -bar Plug call plug#(<args>)$/;"	c
PlugClean	vim/.vim/autoload/plug.vim	/^  command! -nargs=0 -bar -bang PlugClean call s:clean(<bang>0)$/;"	c
PlugDiff	vim/.vim/autoload/plug.vim	/^  command! -nargs=0 -bar PlugDiff    call s:diff()$/;"	c
PlugInstall	vim/.vim/autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugInstall call s:install(<bang>0, /;"	c
PlugLOD	vim/.vim/autoload/plug.vim	/^    augroup PlugLOD$/;"	a
PlugSnapshot	vim/.vim/autoload/plug.vim	/^  command! -nargs=? -bar -bang -complete=file PlugSnapshot call s:snapshot(<bang>0, <f-args>)$/;"	c
PlugStatus	vim/.vim/autoload/plug.vim	/^  command! -nargs=0 -bar PlugStatus  call s:status()$/;"	c
PlugUpdate	vim/.vim/autoload/plug.vim	/^  command! -nargs=* -bar -bang -complete=customlist,s:names PlugUpdate  call s:update(<bang>0, [/;"	c
PlugUpgrade	vim/.vim/autoload/plug.vim	/^  command! -nargs=0 -bar PlugUpgrade if s:upgrade() | execute 'source' s:esc(s:me) | endif$/;"	c
Pme	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
Pn	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Po	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
Pointer	vim/.vim/plugged/fzf/src/options.go	/^	Pointer     string$/;"	m	struct:fzf.Options	typeref:typename:string
Popup window support	vim/.vim/plugged/fzf/ADVANCED.md	/^#### Popup window support$/;"	t	subsection:Advanced fzf examples""Screen Layout""`fzf-tmux`
Pp	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
PrefixMatch	vim/.vim/plugged/fzf/src/algo/algo.go	/^func PrefixMatch(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []r/;"	f	package:algo	typeref:typename:(Result, *[]int)
Prepend	vim/.vim/plugged/fzf/src/util/chars.go	/^func (chars *Chars) Prepend(prefix string) {$/;"	f	struct:util.Chars
Prerequisites	vim/.vim/plugged/fzf/BUILD.md	/^### Prerequisites$/;"	S	section:Building fzf""Build instructions
Preview	vim/.vim/plugged/fzf/src/options.go	/^	Preview     previewOpts$/;"	m	struct:fzf.Options	typeref:typename:previewOpts
Preview window	vim/.vim/plugged/fzf.vim/README.md	/^#### Preview window$/;"	t	subsection:fzf :heart: vim""Customization""Global options
Preview window	vim/.vim/plugged/fzf/README.md	/^### Preview window$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics
PreviewBg	vim/.vim/plugged/fzf/src/tui/tui.go	/^	PreviewBg    ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
PreviewFg	vim/.vim/plugged/fzf/src/tui/tui.go	/^	PreviewFg    ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Print	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Print(text string) {$/;"	f	struct:tui.LightWindow
Print	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Print(text string) {$/;"	f	struct:tui.TcellWindow
Print	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Print(text string)$/;"	n	interface:tui.Window
PrintQuery	vim/.vim/plugged/fzf/src/options.go	/^	PrintQuery  bool$/;"	m	struct:fzf.Options	typeref:typename:bool
PrintSep	vim/.vim/plugged/fzf/src/options.go	/^	PrintSep    string$/;"	m	struct:fzf.Options	typeref:typename:string
Printer	vim/.vim/plugged/fzf/src/options.go	/^	Printer     func(string)$/;"	m	struct:fzf.Options	typeref:typename:func(string)
Problem / Steps to reproduce	vim/.vim/plugged/fzf/.github/ISSUE_TEMPLATE.md	/^## Problem \/ Steps to reproduce$/;"	s
Problems summary	vim/.vim/plugged/vim-multiple-cursors/CONTRIBUTING.md	/^# Problems summary$/;"	c
Process IDs	vim/.vim/plugged/fzf/README.md	/^#### Process IDs$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
Prompt	vim/.vim/plugged/fzf/src/options.go	/^	Prompt      string$/;"	m	struct:fzf.Options	typeref:typename:string
Prompt	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Prompt       ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Pros	vim/.vim/plugged/fzf/README.md	/^Pros$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Protect	vim/.vim/plugged/fzf/src/protector/protector.go	/^func Protect() {$/;"	f	package:protector
Protect	vim/.vim/plugged/fzf/src/protector/protector_openbsd.go	/^func Protect() {$/;"	f	package:protector
Provide a minimal .vimrc with less than 50 lines	vim/.vim/plugged/vim-multiple-cursors/CONTRIBUTING.md	/^## Provide a minimal .vimrc with less than 50 lines$/;"	s	chapter:Problems summary
Ps	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Pse	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Pull Requests	vim/.vim/plugged/vim-multiple-cursors/README.md	/^### Pull Requests$/;"	S	section:vim-multiple-cursors""Contributing
Push	vim/.vim/plugged/fzf/src/chunklist.go	/^func (cl *ChunkList) Push(data []byte) bool {$/;"	f	struct:fzf.ChunkList	typeref:typename:bool
Pushing	vim/.vim/plugged/vim-gutentags/CONTRIBUTING.md	/^## Pushing$/;"	s	chapter:Contributing
Pw	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Px	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
Py	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Q	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^  nnoremap <buffer> Q :quit<CR>:call <SID>Close()<CR>$/;"	m
Q$	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
Q0	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
Q4	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Q5	vim/.vim/plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
Q6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Q8	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
QB	vim/.vim/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:o}}function QB(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	f
QC	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
QG	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
QK	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
QL	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
QM	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
QN	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
QO	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
QR	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function wK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
QT	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
QV	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
QWe	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
QY	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
Qa	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
Qae	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
Qb	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Qc	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Qe	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
Qf	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Qg	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	f
Qh	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
Qie	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Qj	vim/.vim/plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
Qk	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
Qm	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Qme	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
Qoe	vim/.vim/plugged/coc.nvim/build/index.js	/^`+r)}function Qoe(r,e){let t=new RegExp("(\\\\S(?: |  )?)((?:"+e+")+)("+h$+"(?:.*)+)$","gm");ret/;"	f
Qp	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
Qpe	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
Qr	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
Qs	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Qu	vim/.vim/plugged/coc.nvim/build/index.js	/^`),s=n.length-(t.end.line-t.start.line+1);if(this.line=this.line+s,t.end.line==this.line){let o=/;"	v
Query	vim/.vim/plugged/fzf/src/options.go	/^	Query       string$/;"	m	struct:fzf.Options	typeref:typename:string
Quick Start	vim/.vim/plugged/coc.nvim/Readme.md	/^## Quick Start$/;"	s
Quick Start	vim/.vim/plugged/vim-multiple-cursors/README.md	/^## Quick Start$/;"	s	chapter:vim-multiple-cursors
Qx	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Qy	vim/.vim/plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
Qz	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
R	vim/.vim/autoload/plug.vim	/^  nnoremap <silent> <buffer> R  :call <SID>retry()<cr>$/;"	m
R	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
R0	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
R4	vim/.vim/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	v
R5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
R6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
R7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
R8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
RC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
RCe	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
RD	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
REVISION	vim/.vim/plugged/fzf/Makefile	/^REVISION       := $(FZF_REVISION)$/;"	m
REVISION	vim/.vim/plugged/fzf/Makefile	/^REVISION       := $(shell git log -n 1 --pretty=format:%h -- $(SOURCES) 2> \/dev\/null)$/;"	m
RG	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
RH	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
RIe	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
RK	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
RL	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
RM	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
RN	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
ROOT_DIR	vim/.vim/plugged/fzf/Makefile	/^ROOT_DIR       := $(shell dirname $(MAKEFILE))$/;"	m
RQ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
RR	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
RU	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
RV	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	f
RZ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
R_	vim/.vim/plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
Ra	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Rae	vim/.vim/plugged/coc.nvim/build/index.js	/^`),a++,c=i,o=14;switch(w){case 123:return i++,o=1;case 125:return i++,o=2;case 91:return i++,o=3/;"	f
Random	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^function Random(min, max)$/;"	f
Random	vim/.vim/plugged/vim-rooter/test/runner.vim	/^function Random(min, max)$/;"	f
Range	vim/.vim/plugged/fzf/src/tokenizer.go	/^type Range struct {$/;"	s	package:fzf
Rationale	vim/.vim/plugged/fzf.vim/README.md	/^Rationale$/;"	s	chapter:fzf :heart: vim
Rb	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Rd	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
Re	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
ReScript Support	vim/.vim/plugged/vim-graphql/README.md	/^## ReScript Support$/;"	s	chapter:GraphQL for Vim
Read	vim/.vim/plugged/fzf/src/util/util_unix.go	/^func Read(fd int, b []byte) (int, error) {$/;"	f	package:util	typeref:typename:(int, error)
Read	vim/.vim/plugged/fzf/src/util/util_windows.go	/^func Read(fd int, b []byte) (int, error) {$/;"	f	package:util	typeref:typename:(int, error)
ReadSource	vim/.vim/plugged/fzf/src/reader.go	/^func (r *Reader) ReadSource() {$/;"	f	struct:fzf.Reader
ReadZero	vim/.vim/plugged/fzf/src/options.go	/^	ReadZero    bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Reader	vim/.vim/plugged/fzf/src/reader.go	/^type Reader struct {$/;"	s	package:fzf
ReasonML Support	vim/.vim/plugged/vim-graphql/README.md	/^## ReasonML Support$/;"	s	chapter:GraphQL for Vim
Recommented Setting	vim/.vim/plugged/far.vim/README.md	/^#### Recommented Setting$/;"	t	section:far.vim - Find And Replace Vim plugin""Troubleshooting
Reduced initial memory footprint (#151)	vim/.vim/plugged/fzf/CHANGELOG.md	/^#### Reduced initial memory footprint (#151)$/;"	t	subsection:CHANGELOG""0.9.5""Improvements
Reducer example	vim/.vim/plugged/fzf.vim/README.md	/^### Reducer example$/;"	S	section:fzf :heart: vim""Custom completion
Ree	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Refar	vim/.vim/plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#RefarComplete -nargs=* -range=-1 Refar$/;"	c
Refar	vim/.vim/plugged/far.vim/plugin/far.vim	/^function! Refar(rngmode, rngline1, rngline2, ...) abort "{{{$/;"	f
References	vim/.vim/plugged/vim-translator/README.md	/^## References$/;"	s	chapter:vim-translator
Refresh	vim/.vim/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Refresh()          {}$/;"	f	unknown:tui.FullscreenRenderer
Refresh	vim/.vim/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Refresh() {$/;"	f	struct:tui.LightRenderer
Refresh	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Refresh() {$/;"	f	struct:tui.LightWindow
Refresh	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Refresh() {$/;"	f	unknown:tui.FullscreenRenderer
Refresh	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Refresh() {$/;"	f	struct:tui.TcellWindow
Refresh	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Refresh()$/;"	n	interface:tui.Renderer
Refresh	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Refresh()$/;"	n	interface:tui.Window
RefreshWindows	vim/.vim/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) RefreshWindows(windows []Window) {}$/;"	f	unknown:tui.FullscreenRenderer
RefreshWindows	vim/.vim/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) RefreshWindows(windows []Window) {$/;"	f	struct:tui.LightRenderer
RefreshWindows	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) RefreshWindows(windows []Window) {$/;"	f	unknown:tui.FullscreenRenderer
RefreshWindows	vim/.vim/plugged/fzf/src/tui/tui.go	/^	RefreshWindows(windows []Window)$/;"	n	interface:tui.Renderer
Related Projects	vim/.vim/plugged/vim-gutentags/README.md	/^# Related Projects$/;"	c
Related projects	vim/.vim/plugged/fzf/README.md	/^Related projects$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Reloading the candidate list	vim/.vim/plugged/fzf/README.md	/^### Reloading the candidate list$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Advanced topics
RemoveClosedOpenTags	vim/.vim/plugged/MatchTagAlways/python/mta_core.py	/^  def RemoveClosedOpenTags( tags_to_close, new_tag ):$/;"	f	function:GetNextUnmatchedClosingTag	file:
Rename	vim/.vim/plugged/rename.vim/plugin/rename.vim	/^command! -nargs=* -complete=customlist,SiblingFiles -bang Rename :call Rename("<args>", "<bang>"/;"	c
Rename	vim/.vim/plugged/rename.vim/plugin/rename.vim	/^function! Rename(name, bang)$/;"	f
Renderer	vim/.vim/plugged/fzf/src/tui/tui.go	/^type Renderer interface {$/;"	i	package:tui
Reproduce the bug	vim/.vim/plugged/coc.nvim/.github/ISSUE_TEMPLATE/bug_report.md	/^## Reproduce the bug$/;"	s
Reset	vim/.vim/plugged/fzf/src/matcher.go	/^func (m *Matcher) Reset(chunks []*Chunk, patternRunes []rune, cancel bool, final bool, sort bool/;"	f	struct:fzf.Matcher
Resize	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Resize$/;"	c	package:tui
Respecting `.gitignore`	vim/.vim/plugged/fzf/README.md	/^#### Respecting `.gitignore`$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Tips
Result	vim/.vim/plugged/fzf/src/algo/algo.go	/^type Result struct {$/;"	s	package:algo
Result	vim/.vim/plugged/fzf/src/result.go	/^type Result struct {$/;"	s	package:fzf
Result from CocInfo	vim/.vim/plugged/coc.nvim/.github/ISSUE_TEMPLATE/bug_report.md	/^## Result from CocInfo$/;"	s
Resume	vim/.vim/plugged/fzf/src/tui/dummy.go	/^func (r *FullscreenRenderer) Resume(bool, bool) {}$/;"	f	unknown:tui.FullscreenRenderer
Resume	vim/.vim/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) Resume(clear bool, sigcont bool) {$/;"	f	struct:tui.LightRenderer
Resume	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) Resume(clear bool, sigcont bool) {$/;"	f	unknown:tui.FullscreenRenderer
Resume	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Resume(clear bool, sigcont bool)$/;"	n	interface:tui.Renderer
Reverse	vim/.vim/plugged/fzf/src/tui/dummy.go	/^	Reverse   = Attr(1 << 6)$/;"	c	package:tui
Reverse	vim/.vim/plugged/fzf/src/tui/tcell.go	/^	Reverse        = Attr(tcell.AttrReverse)$/;"	c	package:tui
ReverseFindTag	vim/.vim/plugged/MatchTagAlways/python/mta_core.py	/^def ReverseFindTag( text, from_position ):$/;"	f
Rg	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Right	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Right$/;"	c	package:tui
RightClick	vim/.vim/plugged/fzf/src/tui/tui.go	/^	RightClick$/;"	c	package:tui
Ripgrep integration	vim/.vim/plugged/fzf/ADVANCED.md	/^Ripgrep integration$/;"	s	chapter:Advanced fzf examples
Rk	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	v
Rl	vim/.vim/plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
Rle	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Rme	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Rn	vim/.vim/plugged/coc.nvim/build/index.js	/^`:"")}get lineCount(){return this.lines.length+(this.eol?1:0)}getText(e){if(e){let t=this.offset/;"	v
Ro	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
Rooter	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^command! -bar Rooter call <SID>rooter()$/;"	c
RooterToggle	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^command! -bar RooterToggle call <SID>toggle()$/;"	c
Row	vim/.vim/plugged/vim-styled-components/examples/complex.js	/^const Row = styled.div`$/;"	C
Rq	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
Rs	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Rse	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Run	vim/.vim/plugged/fzf/src/core.go	/^func Run(opts *Options, version string, revision string) {$/;"	f	package:fzf
RunTest	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^function RunTest(test)$/;"	f
RunTest	vim/.vim/plugged/vim-rooter/test/runner.vim	/^function RunTest(test)$/;"	f
Rune	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Rune EventType = iota$/;"	c	package:tui	typeref:type:EventType
RunesToChars	vim/.vim/plugged/fzf/src/util/chars.go	/^func RunesToChars(runes []rune) Chars {$/;"	f	package:util	typeref:typename:Chars
RunesWidth	vim/.vim/plugged/fzf/src/util/util.go	/^func RunesWidth(runes []rune, prefixWidth int, tabstop int, limit int) (int, int) {$/;"	f	package:util	typeref:typename:(int, int)
Running Tests	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/README.rst	/^Running Tests$/;"	s	chapter:Tests for EditorConfig Plugins
Rv	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
Rw	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Ry	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Rze	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
S	vim/.vim/autoload/plug.vim	/^  nnoremap <silent> <buffer> S  :PlugStatus<cr>$/;"	m
S	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
S	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
S	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:r.read.f
S	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	c	class:dB
S	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:$0
S	vim/.vim/plugged/fzf/src/tui/tui.go	/^	S      int$/;"	m	struct:tui.MouseEvent	typeref:typename:int
S$	vim/.vim/plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	f
S$e	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
S0	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
S1	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	v
S5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
S6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
S8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
SB	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
SC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
SD	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
SDown	vim/.vim/plugged/fzf/src/tui/tui.go	/^	SDown$/;"	c	package:tui
SEE	vim/.vim/plugged/fzf/man/man1/fzf.1	/^.SH SEE ALSO$/;"	s	title:fzf
SELF_CLOSED	vim/.vim/plugged/MatchTagAlways/python/mta_core.py	/^  SELF_CLOSED = 3$/;"	v	class:TagType
SF	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	v
SG	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
SHELL	vim/.vim/plugged/fzf/Makefile	/^SHELL          := bash$/;"	m
SI	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
SK	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
SL	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
SLeft	vim/.vim/plugged/fzf/src/tui/tui.go	/^	SLeft$/;"	c	package:tui
SO	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
SOURCES	vim/.vim/plugged/fzf/Makefile	/^SOURCES        := $(wildcard *.go src\/*.go src\/*\/*.go) $(MAKEFILE)$/;"	m
SQ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
SR	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
SRight	vim/.vim/plugged/fzf/src/tui/tui.go	/^	SRight$/;"	c	package:tui
SUp	vim/.vim/plugged/fzf/src/tui/tui.go	/^	SUp$/;"	c	package:tui
SV	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
SW	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
SX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
SYNOPSIS	vim/.vim/plugged/fzf/man/man1/fzf-tmux.1	/^.SH SYNOPSIS$/;"	s	title:fzf-tmux
SYNOPSIS	vim/.vim/plugged/fzf/man/man1/fzf.1	/^.SH SYNOPSIS$/;"	s	title:fzf
S_	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Sae	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
Sb	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
Sc	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Schedule	vim/.vim/plugged/vim-styled-components/examples/issue-44.js	/^const Schedule = styled.div`$/;"	C
Score	vim/.vim/plugged/fzf/src/algo/algo.go	/^	Score int$/;"	m	struct:algo.Result	typeref:typename:int
Screen Layout	vim/.vim/plugged/fzf/ADVANCED.md	/^Screen Layout$/;"	s	chapter:Advanced fzf examples
Screen shot (if possible)	vim/.vim/plugged/vim-multiple-cursors/CONTRIBUTING.md	/^## Screen shot (if possible)$/;"	s	chapter:Problems summary
Screencasts	vim/.vim/plugged/vim-fugitive/README.markdown	/^## Screencasts$/;"	s	chapter:fugitive.vim
Screenshots	vim/.vim/plugged/vim-LanguageTool/README.md	/^# Screenshots$/;"	c
Screenshots (optional)	vim/.vim/plugged/coc.nvim/.github/ISSUE_TEMPLATE/bug_report.md	/^## Screenshots (optional)$/;"	s
ScrollOff	vim/.vim/plugged/fzf/src/options.go	/^	ScrollOff   int$/;"	m	struct:fzf.Options	typeref:typename:int
SdcvShell	vim/.vim/plugged/vim-translator/script/translator.py	/^class SdcvShell(BaseTranslator):$/;"	c
Se	vim/.vim/plugged/coc.nvim/build/index.js	/^${JSON.stringify(P.error,void 0,4)}`):n.error("Received response message without id. No further /;"	f
Search	vim/.vim/plugged/fzf/src/cache.go	/^func (cc *ChunkCache) Search(chunk *Chunk, key string) []Result {$/;"	f	struct:fzf.ChunkCache	typeref:typename:[]Result
Search	vim/Readme.md	/^### Search$/;"	S	section:My awesome vim dotfile""Shortcuts
Search syntax	vim/.vim/plugged/fzf/README.md	/^#### Search syntax$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Usage
Searching Interatively	vim/.vim/plugged/far.vim/README.md	/^### Searching Interatively$/;"	S	section:far.vim - Find And Replace Vim plugin""Usage
Searching with Command	vim/.vim/plugged/far.vim/README.md	/^### Searching with Command$/;"	S	section:far.vim - Find And Replace Vim plugin""Usage
Section	vim/.vim/plugged/vim-styled-components/examples/typescript.ts	/^class Section extends React.Component<SectionProps, {}> {$/;"	c
SectionProps	vim/.vim/plugged/vim-styled-components/examples/typescript.ts	/^interface SectionProps {$/;"	i
See	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
See also	vim/.vim/plugged/vim-vue-plugin/README.md	/^## See also$/;"	s	chapter:vim-vue-plugin [![Build Status][12]](https://travis-ci.com/leafOfTree/vim-vue-plugin)
Select1	vim/.vim/plugged/fzf/src/options.go	/^	Select1     bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Selected	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Selected     ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Selected Options	vim/.vim/plugged/editorconfig-vim/README.md	/^## Selected Options$/;"	s	chapter:EditorConfig Vim Plugin
Self-Promotion	vim/.vim/plugged/vim-commentary/README.markdown	/^## Self-Promotion$/;"	s	chapter:commentary.vim
Self-Promotion	vim/.vim/plugged/vim-fugitive/README.markdown	/^## Self-Promotion$/;"	s	chapter:fugitive.vim
Self-Promotion	vim/.vim/plugged/vim-rhubarb/README.markdown	/^## Self-Promotion$/;"	s	chapter:rhubarb.vim
Set	vim/.vim/plugged/fzf/src/util/atomicbool.go	/^func (a *AtomicBool) Set(newState bool) bool {$/;"	f	struct:util.AtomicBool	typeref:typename:bool
Set	vim/.vim/plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) Set(event EventType, value interface{}) {$/;"	f	struct:util.EventBox
SetNonblock	vim/.vim/plugged/fzf/src/util/util_unix.go	/^func SetNonblock(file *os.File, nonblock bool) {$/;"	f	package:util
SetNonblock	vim/.vim/plugged/fzf/src/util/util_windows.go	/^func SetNonblock(file *os.File, nonblock bool) {$/;"	f	package:util
SetUp	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function SetUp()$/;"	f
SetUp	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^function SetUp()$/;"	f
Settings	vim/.vim/plugged/fzf/README.md	/^#### Settings$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
Settings	vim/.vim/plugged/vim-multiple-cursors/README.md	/^## Settings$/;"	s	chapter:vim-multiple-cursors
Settings	vim/.vim/plugged/vim-styled-components/examples/complex.js	/^const Settings: Function = connect(({ store: { updateSettings, undo, canUndo } }) => ($/;"	C
SettingsContainer	vim/.vim/plugged/vim-styled-components/examples/complex.js	/^const SettingsContainer = styled.div`$/;"	C
Sge	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Shell	vim/.vim/plugged/fzf/test/test_go.rb	/^class Shell$/;"	c
Shortcuts	vim/Readme.md	/^## Shortcuts$/;"	s	chapter:My awesome vim dotfile
ShowUsage	vim/.vim/plugged/vim-gutentags/plat/unix/update_scopedb.sh	/^ShowUsage() {$/;"	f
ShowUsage	vim/.vim/plugged/vim-gutentags/plat/unix/update_tags.sh	/^ShowUsage() {$/;"	f
Shuffle	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^function Shuffle(list)$/;"	f
Shuffle	vim/.vim/plugged/vim-rooter/test/runner.vim	/^function Shuffle(list)$/;"	f
SiblingFiles	vim/.vim/plugged/rename.vim/plugin/rename.vim	/^function! SiblingFiles(A, L, P)$/;"	f
SidebarContainer	vim/.vim/plugged/vim-styled-components/examples/complex.js	/^const SidebarContainer = styled.div`$/;"	C
Sl	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
Slab	vim/.vim/plugged/fzf/src/util/slab.go	/^type Slab struct {$/;"	s	package:util
Sle	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Sm	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Sme	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	f
Sn	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	f
Snapshot	vim/.vim/plugged/fzf/src/chunklist.go	/^func (cl *ChunkList) Snapshot() ([]*Chunk, int) {$/;"	f	struct:fzf.ChunkList	typeref:typename:([]*Chunk, int)
SomeOtherThing	vim/.vim/plugged/vim-styled-components/examples/issue-37.ts	/^export const SomeOtherThing = styled.p`$/;"	C
Something	vim/.vim/plugged/vim-styled-components/examples/issue-44.js	/^const Something = styled(Link)`$/;"	C
Sort	vim/.vim/plugged/fzf/src/options.go	/^	Sort        int$/;"	m	struct:fzf.Options	typeref:typename:int
Sorting	vim/.vim/plugged/vim-twiggy/README.md	/^#### Sorting$/;"	t	section:twiggy.vim""Usage
Sp	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
Sp	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Space-based indentation	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^Space-based indentation$/;"	s	chapter:Tests for Indentation Properties
Space-based indentation with no size specified	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^Space-based indentation with no size specified$/;"	S	section:Space-based indentation
Spe	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
Specificity of styling APIs	vim/.vim/plugged/vim-styled-components/README.md	/^### Specificity of styling APIs$/;"	S	section:vim-styled-components""Caveats
Spinner	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Spinner      ColorAttr$/;"	m	struct:tui.ColorTheme	typeref:typename:ColorAttr
Spirit of this plugin	vim/.vim/plugged/lightline.vim/README.md	/^## Spirit of this plugin$/;"	s	chapter:lightline.vim
Split management	vim/Readme.md	/^### Split management$/;"	S	section:My awesome vim dotfile""Shortcuts
Sq	vim/.vim/plugged/coc.nvim/build/index.js	/^`+(h.tokens?this.parseInline(h.tokens):h.text);i+=t?this.renderer.paragraph(d):d;continue}defaul/;"	v
Sr	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Sse	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
St	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
Start	vim/.vim/plugged/fzf/src/algo/algo.go	/^	Start int$/;"	m	struct:algo.Result	typeref:typename:int
Start Vim with a minimal configuration	vim/.vim/plugged/fzf.vim/.github/ISSUE_TEMPLATE.md	/^Start Vim with a minimal configuration$/;"	c
Starting fzf in a popup window	vim/.vim/plugged/fzf/README-VIM.md	/^### Starting fzf in a popup window$/;"	S	section:FZF Vim integration""Tips
Status line of terminal buffer	vim/.vim/plugged/fzf.vim/README.md	/^Status line of terminal buffer$/;"	s	chapter:fzf :heart: vim
Statusline	vim/.vim/plugged/vim-translator/README.md	/^## Statusline$/;"	s	chapter:vim-translator
String	vim/.vim/plugged/fzf/src/pattern.go	/^func (t term) String() string {$/;"	f	struct:fzf.term	typeref:typename:string
String	vim/.vim/plugged/fzf/src/terminal_test.go	/^func (item *Item) String() string {$/;"	f	unknown:fzf.Item	typeref:typename:string
String	vim/.vim/plugged/fzf/src/tokenizer.go	/^func (d Delimiter) String() string {$/;"	f	struct:fzf.Delimiter	typeref:typename:string
String	vim/.vim/plugged/fzf/src/tokenizer.go	/^func (t Token) String() string {$/;"	f	struct:fzf.Token	typeref:typename:string
String	vim/.vim/plugged/fzf/src/util/chars.go	/^func (chars *Chars) String() string {$/;"	f	struct:util.Chars	typeref:typename:string
Style	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (c Color) Style() tcell.Color {$/;"	f	unknown:tui.Color	typeref:typename:tcell.Color
StyledButton	vim/.vim/plugged/vim-styled-components/examples/syntax.js	/^const StyledButton = styled.button`$/;"	C
StyledSection	vim/.vim/plugged/vim-styled-components/examples/typescript.ts	/^const StyledSection = styled(Section)`$/;"	C
SuffixMatch	vim/.vim/plugged/fzf/src/algo/algo.go	/^func SuffixMatch(caseSensitive bool, normalize bool, forward bool, text *util.Chars, pattern []r/;"	f	package:algo	typeref:typename:(Result, *[]int)
Summary	vim/.vim/plugged/fzf/README-VIM.md	/^Summary$/;"	s	chapter:FZF Vim integration
Support	vim/.vim/plugged/vim-styled-components/README.md	/^## Support$/;"	s	chapter:vim-styled-components
Support the project	vim/.vim/plugged/coc.nvim/Readme.md	/^## Support the project$/;"	s
Supported commands	vim/.vim/plugged/fzf/README.md	/^#### Supported commands$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Fuzzy completion for bash and zsh
Supported properties	vim/.vim/plugged/editorconfig-vim/README.md	/^## Supported properties$/;"	s	chapter:EditorConfig Vim Plugin
Sv	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
Sw	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Swap	vim/.vim/plugged/fzf/src/result.go	/^func (a ByOrder) Swap(i, j int) {$/;"	f	type:fzf.ByOrder
Swap	vim/.vim/plugged/fzf/src/result.go	/^func (a ByRelevance) Swap(i, j int) {$/;"	f	type:fzf.ByRelevance
Swap	vim/.vim/plugged/fzf/src/result.go	/^func (a ByRelevanceTac) Swap(i, j int) {$/;"	f	type:fzf.ByRelevanceTac
Swap	vim/.vim/plugged/fzf/src/terminal.go	/^func (a byTimeOrder) Swap(i, j int) {$/;"	f	type:fzf.byTimeOrder
Switching to fzf-only search mode	vim/.vim/plugged/fzf/ADVANCED.md	/^### Switching to fzf-only search mode$/;"	S	section:Advanced fzf examples""Ripgrep integration
Sx	vim/.vim/plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	v
Sxe	vim/.vim/plugged/coc.nvim/build/index.js	/^`),o=i.line==r.start.line?i.character-r.start.character:i.character,a=A$(s,i.line-r.start.line,o/;"	v
Sy	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
Sync	vim/.vim/plugged/fzf/src/options.go	/^	Sync        bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Syntax Highlight	vim/Readme.md	/^###  Syntax Highlight$/;"	S	section:My awesome vim dotfile""Used Plugins
Syntax Highlighting	vim/.vim/plugged/vim-graphql/README.md	/^## Syntax Highlighting$/;"	s	chapter:GraphQL for Vim
Syntax highlighting	vim/.vim/plugged/typescript-vim/README.md	/^Syntax highlighting$/;"	s	chapter:Typescript Syntax for Vim
T0	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
T5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
T6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
T7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
T8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
TA	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
TAGS_FILE	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set TAGS_FILE=%~2$/;"	v
TAGS_FILE	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set TAGS_FILE=tags$/;"	v
TAG_REGEX	vim/.vim/plugged/MatchTagAlways/python/mta_core.py	/^TAG_REGEX = re.compile($/;"	v
TAG_REGEX_Works_test	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^def TAG_REGEX_Works_test():$/;"	f
TB	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
TC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
TD	vim/.vim/plugged/coc.nvim/build/index.js	/^`).join(" "),e.slice(0,t*2)}dispose(){this.stop()}}});var TD,Tme,Dme,_y,BV=R(()=>{TD=E(Ui());As(/;"	v
TEMPLATE	vim/.vim/plugged/fzf/test/test_go.rb	/^TEMPLATE = DATA.read$/;"	C
TEMPNAME	vim/.vim/plugged/fzf/test/test_go.rb	/^  TEMPNAME = '\/tmp\/output'$/;"	C	class:TestBase
TG	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
TI	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
TJ	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
TK	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
TL	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
TN	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
TO	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
TR	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
TU	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
TUe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
TV	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	v
TW	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
TX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
T_	vim/.vim/plugged/coc.nvim/build/index.js	/^`),0,i]]);return t[o-1]}async withProgress(e,t){return this.checkDialog()?await new bg(this.nvim/;"	f
Ta	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Tab	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Tab$/;"	c	package:tui
Tab-based indentation	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^Tab-based indentation$/;"	s	chapter:Tests for Indentation Properties
Tab-based indentation with no size specified	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^Tab-based indentation with no size specified$/;"	S	section:Tab-based indentation
Tab-based indentation with size of 4	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^Tab-based indentation with size of 4$/;"	S	section:Tab-based indentation
Tab-based indentation with size of 4 and tab width of 8	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^Tab-based indentation with size of 4 and tab width of 8$/;"	S	section:Tab-based indentation
Table of Contents	vim/.vim/plugged/fzf/README.md	/^Table of Contents$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Table of Contents	vim/.vim/plugged/vim-styled-components/README.md	/^## Table of Contents$/;"	s	chapter:vim-styled-components
Tabstop	vim/.vim/plugged/fzf/src/options.go	/^	Tabstop     int$/;"	m	struct:fzf.Options	typeref:typename:int
Tac	vim/.vim/plugged/fzf/src/options.go	/^	Tac         bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Tae	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
Tag	vim/.vim/plugged/MatchTagAlways/python/mta_core.py	/^class Tag( object ):$/;"	c
TagContainer	vim/.vim/plugged/vim-styled-components/examples/issue-52.js	/^const TagContainer = styled.div`$/;"	C
TagType	vim/.vim/plugged/MatchTagAlways/python/mta_core.py	/^class TagType( object ):$/;"	c
TagWithSameNameExistsInSequence	vim/.vim/plugged/MatchTagAlways/python/mta_core.py	/^def TagWithSameNameExistsInSequence( tag, sequence ):$/;"	f
Tb	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
TcellWindow	vim/.vim/plugged/fzf/src/tui/tcell.go	/^type TcellWindow struct {$/;"	s	package:tui
Td	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Te	vim/.vim/plugged/coc.nvim/build/index.js	/^`)==-1&&(u+=" ",f(c,"CocTreeDescription"),u+=c),{line:u,highlights:o}}async appendTreeNode(e,t,i/;"	v
TearDown	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function TearDown()$/;"	f
TearDown	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^function TearDown()$/;"	f
Tee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Terminal	vim/.vim/plugged/fzf/src/terminal.go	/^type Terminal struct {$/;"	s	package:fzf
Terminal emulators	vim/.vim/plugged/iceberg.vim/README.md	/^## Terminal emulators$/;"	s	chapter:For other environments
Test	vim/.vim/plugged/vim-styled-components/examples/indent.js	/^class Test extends React.Component {$/;"	c
Test for Newline	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/insert_final_newline.rst	/^Test for Newline$/;"	S	section:Tests for Newline at end of File
Test for No Newline	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/insert_final_newline.rst	/^Test for No Newline$/;"	S	section:Tests for Newline at end of File
TestAdditiveExpect	vim/.vim/plugged/fzf/src/options_test.go	/^func TestAdditiveExpect(t *testing.T) {$/;"	f	package:fzf
TestAnsiCodeStringConversion	vim/.vim/plugged/fzf/src/ansi_test.go	/^func TestAnsiCodeStringConversion(t *testing.T) {$/;"	f	package:fzf
TestAtomicBool	vim/.vim/plugged/fzf/src/util/atomicbool_test.go	/^func TestAtomicBool(t *testing.T) {$/;"	f	package:util
TestBase	vim/.vim/plugged/fzf/test/test_go.rb	/^class TestBase < Minitest::Test$/;"	c
TestBash	vim/.vim/plugged/fzf/test/test_go.rb	/^class TestBash < TestBase$/;"	c	mixin:include:TestShell,include:CompletionTest
TestBind	vim/.vim/plugged/fzf/src/options_test.go	/^func TestBind(t *testing.T) {$/;"	f	package:fzf
TestCacheKey	vim/.vim/plugged/fzf/src/pattern_test.go	/^func TestCacheKey(t *testing.T) {$/;"	f	package:fzf
TestCacheable	vim/.vim/plugged/fzf/src/pattern_test.go	/^func TestCacheable(t *testing.T) {$/;"	f	package:fzf
TestCaseSensitivity	vim/.vim/plugged/fzf/src/pattern_test.go	/^func TestCaseSensitivity(t *testing.T) {$/;"	f	package:fzf
TestCharsLength	vim/.vim/plugged/fzf/src/util/chars_test.go	/^func TestCharsLength(t *testing.T) {$/;"	f	package:util
TestCharsToString	vim/.vim/plugged/fzf/src/util/chars_test.go	/^func TestCharsToString(t *testing.T) {$/;"	f	package:util
TestChunkCache	vim/.vim/plugged/fzf/src/cache_test.go	/^func TestChunkCache(t *testing.T) {$/;"	f	package:fzf
TestChunkList	vim/.vim/plugged/fzf/src/chunklist_test.go	/^func TestChunkList(t *testing.T) {$/;"	f	package:fzf
TestColorOffset	vim/.vim/plugged/fzf/src/result_test.go	/^func TestColorOffset(t *testing.T) {$/;"	f	package:fzf
TestColorSpec	vim/.vim/plugged/fzf/src/options_test.go	/^func TestColorSpec(t *testing.T) {$/;"	f	package:fzf
TestContrain	vim/.vim/plugged/fzf/src/util/util_test.go	/^func TestContrain(t *testing.T) {$/;"	f	package:util
TestDefaultCtrlNP	vim/.vim/plugged/fzf/src/options_test.go	/^func TestDefaultCtrlNP(t *testing.T) {$/;"	f	package:fzf
TestDelimiterRegex	vim/.vim/plugged/fzf/src/options_test.go	/^func TestDelimiterRegex(t *testing.T) {$/;"	f	package:fzf
TestDelimiterRegexRegex	vim/.vim/plugged/fzf/src/options_test.go	/^func TestDelimiterRegexRegex(t *testing.T) {$/;"	f	package:fzf
TestDelimiterRegexString	vim/.vim/plugged/fzf/src/options_test.go	/^func TestDelimiterRegexString(t *testing.T) {$/;"	f	package:fzf
TestEmptyMerger	vim/.vim/plugged/fzf/src/merger_test.go	/^func TestEmptyMerger(t *testing.T) {$/;"	f	package:fzf
TestEmptyPattern	vim/.vim/plugged/fzf/src/algo/algo_test.go	/^func TestEmptyPattern(t *testing.T) {$/;"	f	package:algo
TestEqual	vim/.vim/plugged/fzf/src/pattern_test.go	/^func TestEqual(t *testing.T) {$/;"	f	package:fzf
TestEventBox	vim/.vim/plugged/fzf/src/util/eventbox_test.go	/^func TestEventBox(t *testing.T) {$/;"	f	package:util
TestExact	vim/.vim/plugged/fzf/src/pattern_test.go	/^func TestExact(t *testing.T) {$/;"	f	package:fzf
TestExactMatchNaive	vim/.vim/plugged/fzf/src/algo/algo_test.go	/^func TestExactMatchNaive(t *testing.T) {$/;"	f	package:algo
TestExactMatchNaiveBackward	vim/.vim/plugged/fzf/src/algo/algo_test.go	/^func TestExactMatchNaiveBackward(t *testing.T) {$/;"	f	package:algo
TestExtractColor	vim/.vim/plugged/fzf/src/ansi_test.go	/^func TestExtractColor(t *testing.T) {$/;"	f	package:fzf
TestFish	vim/.vim/plugged/fzf/test/test_go.rb	/^class TestFish < TestBase$/;"	c	mixin:include:TestShell
TestFuzzyMatch	vim/.vim/plugged/fzf/src/algo/algo_test.go	/^func TestFuzzyMatch(t *testing.T) {$/;"	f	package:algo
TestFuzzyMatchBackward	vim/.vim/plugged/fzf/src/algo/algo_test.go	/^func TestFuzzyMatchBackward(t *testing.T) {$/;"	f	package:algo
TestGetCharEventKey	vim/.vim/plugged/fzf/src/tui/tcell_test.go	/^func TestGetCharEventKey(t *testing.T) {$/;"	f	package:tui
TestGoFZF	vim/.vim/plugged/fzf/test/test_go.rb	/^class TestGoFZF < TestBase$/;"	c
TestHexToColor	vim/.vim/plugged/fzf/src/tui/tui_test.go	/^func TestHexToColor(t *testing.T) {$/;"	f	package:tui
TestHistory	vim/.vim/plugged/fzf/src/history_test.go	/^func TestHistory(t *testing.T) {$/;"	f	package:fzf
TestIrrelevantNth	vim/.vim/plugged/fzf/src/options_test.go	/^func TestIrrelevantNth(t *testing.T) {$/;"	f	package:fzf
TestLongString	vim/.vim/plugged/fzf/src/algo/algo_test.go	/^func TestLongString(t *testing.T) {$/;"	f	package:algo
TestMax	vim/.vim/plugged/fzf/src/util/util_test.go	/^func TestMax(t *testing.T) {$/;"	f	package:util
TestMergerSorted	vim/.vim/plugged/fzf/src/merger_test.go	/^func TestMergerSorted(t *testing.T) {$/;"	f	package:fzf
TestMergerUnsorted	vim/.vim/plugged/fzf/src/merger_test.go	/^func TestMergerUnsorted(t *testing.T) {$/;"	f	package:fzf
TestNextAnsiEscapeSequence	vim/.vim/plugged/fzf/src/ansi_test.go	/^func TestNextAnsiEscapeSequence(t *testing.T) {$/;"	f	package:fzf
TestNextAnsiEscapeSequence_Fuzz_Modified	vim/.vim/plugged/fzf/src/ansi_test.go	/^func TestNextAnsiEscapeSequence_Fuzz_Modified(t *testing.T) {$/;"	f	package:fzf
TestNextAnsiEscapeSequence_Fuzz_Random	vim/.vim/plugged/fzf/src/ansi_test.go	/^func TestNextAnsiEscapeSequence_Fuzz_Random(t *testing.T) {$/;"	f	package:fzf
TestNormalize	vim/.vim/plugged/fzf/src/algo/algo_test.go	/^func TestNormalize(t *testing.T) {$/;"	f	package:algo
TestOffsetSort	vim/.vim/plugged/fzf/src/result_test.go	/^func TestOffsetSort(t *testing.T) {$/;"	f	package:fzf
TestOnce	vim/.vim/plugged/fzf/src/util/util_test.go	/^func TestOnce(t *testing.T) {$/;"	f	package:util
TestOrigTextAndTransformed	vim/.vim/plugged/fzf/src/pattern_test.go	/^func TestOrigTextAndTransformed(t *testing.T) {$/;"	f	package:fzf
TestParseAnsiCode	vim/.vim/plugged/fzf/src/ansi_test.go	/^func TestParseAnsiCode(t *testing.T) {$/;"	f	package:fzf
TestParseKeys	vim/.vim/plugged/fzf/src/options_test.go	/^func TestParseKeys(t *testing.T) {$/;"	f	package:fzf
TestParseKeysWithComma	vim/.vim/plugged/fzf/src/options_test.go	/^func TestParseKeysWithComma(t *testing.T) {$/;"	f	package:fzf
TestParsePlaceholder	vim/.vim/plugged/fzf/src/terminal_test.go	/^func TestParsePlaceholder(t *testing.T) {$/;"	f	package:fzf
TestParseRange	vim/.vim/plugged/fzf/src/tokenizer_test.go	/^func TestParseRange(t *testing.T) {$/;"	f	package:fzf
TestParseTermsEmpty	vim/.vim/plugged/fzf/src/pattern_test.go	/^func TestParseTermsEmpty(t *testing.T) {$/;"	f	package:fzf
TestParseTermsExtended	vim/.vim/plugged/fzf/src/pattern_test.go	/^func TestParseTermsExtended(t *testing.T) {$/;"	f	package:fzf
TestParseTermsExtendedExact	vim/.vim/plugged/fzf/src/pattern_test.go	/^func TestParseTermsExtendedExact(t *testing.T) {$/;"	f	package:fzf
TestPowershellCommands	vim/.vim/plugged/fzf/src/terminal_test.go	/^func TestPowershellCommands(t *testing.T) {$/;"	f	package:fzf
TestPrefixMatch	vim/.vim/plugged/fzf/src/algo/algo_test.go	/^func TestPrefixMatch(t *testing.T) {$/;"	f	package:algo
TestPreviewOpts	vim/.vim/plugged/fzf/src/options_test.go	/^func TestPreviewOpts(t *testing.T) {$/;"	f	package:fzf
TestQuoteEntry	vim/.vim/plugged/fzf/src/terminal_test.go	/^func TestQuoteEntry(t *testing.T) {$/;"	f	package:fzf
TestRankComparison	vim/.vim/plugged/fzf/src/result_test.go	/^func TestRankComparison(t *testing.T) {$/;"	f	package:fzf
TestReadFromCommand	vim/.vim/plugged/fzf/src/reader_test.go	/^func TestReadFromCommand(t *testing.T) {$/;"	f	package:fzf
TestReplacePlaceholder	vim/.vim/plugged/fzf/src/terminal_test.go	/^func TestReplacePlaceholder(t *testing.T) {$/;"	f	package:fzf
TestResultRank	vim/.vim/plugged/fzf/src/result_test.go	/^func TestResultRank(t *testing.T) {$/;"	f	package:fzf
TestShell	vim/.vim/plugged/fzf/test/test_go.rb	/^module TestShell$/;"	m
TestSplitNth	vim/.vim/plugged/fzf/src/options_test.go	/^func TestSplitNth(t *testing.T) {$/;"	f	package:fzf
TestStringPtr	vim/.vim/plugged/fzf/src/item_test.go	/^func TestStringPtr(t *testing.T) {$/;"	f	package:fzf
TestSuffixMatch	vim/.vim/plugged/fzf/src/algo/algo_test.go	/^func TestSuffixMatch(t *testing.T) {$/;"	f	package:algo
TestToCharsAscii	vim/.vim/plugged/fzf/src/util/chars_test.go	/^func TestToCharsAscii(t *testing.T) {$/;"	f	package:util
TestToggle	vim/.vim/plugged/fzf/src/options_test.go	/^func TestToggle(t *testing.T) {$/;"	f	package:fzf
TestTokenize	vim/.vim/plugged/fzf/src/tokenizer_test.go	/^func TestTokenize(t *testing.T) {$/;"	f	package:fzf
TestTransform	vim/.vim/plugged/fzf/src/tokenizer_test.go	/^func TestTransform(t *testing.T) {$/;"	f	package:fzf
TestTransformIndexOutOfBounds	vim/.vim/plugged/fzf/src/tokenizer_test.go	/^func TestTransformIndexOutOfBounds(t *testing.T) {$/;"	f	package:fzf
TestTranslator	vim/.vim/plugged/vim-translator/test/test_translator.py	/^class TestTranslator(unittest.TestCase):$/;"	c
TestTrimLength	vim/.vim/plugged/fzf/src/util/chars_test.go	/^func TestTrimLength(t *testing.T) {$/;"	f	package:util
TestUnixCommands	vim/.vim/plugged/fzf/src/terminal_test.go	/^func TestUnixCommands(t *testing.T) {$/;"	f	package:fzf
TestValidateSign	vim/.vim/plugged/fzf/src/options_test.go	/^func TestValidateSign(t *testing.T) {$/;"	f	package:fzf
TestWindowsCommands	vim/.vim/plugged/fzf/src/terminal_test.go	/^func TestWindowsCommands(t *testing.T) {$/;"	f	package:fzf
TestZsh	vim/.vim/plugged/fzf/test/test_go.rb	/^class TestZsh < TestBase$/;"	c	mixin:include:TestShell,include:CompletionTest
Test_add_lines	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_add_lines()$/;"	f
Test_add_lines_fish	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_add_lines_fish()$/;"	f
Test_around_text_object	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_around_text_object()$/;"	f
Test_common_prefix	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_common_prefix()$/;"	f
Test_common_suffix	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_common_suffix()$/;"	f
Test_diff_highlight	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_diff_highlight()$/;"	f
Test_dir_in_project	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^function Test_dir_in_project()$/;"	f
Test_edit_file_with_same_name_as_a_branch	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_edit_file_with_same_name_as_a_branch()$/;"	f
Test_empty_file	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_empty_file()$/;"	f
Test_encoding	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_encoding()$/;"	f
Test_exclude	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^function Test_exclude()$/;"	f
Test_file_added_to_git	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_file_added_to_git()$/;"	f
Test_file_in_project	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^function Test_file_in_project()$/;"	f
Test_file_in_project_subdir	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^function Test_file_in_project_subdir()$/;"	f
Test_filename_leading_dash	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_leading_dash()$/;"	f
Test_filename_umlaut	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_umlaut()$/;"	f
Test_filename_with_equals	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_equals()$/;"	f
Test_filename_with_square_brackets	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_square_brackets()$/;"	f
Test_fix_file_references	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_fix_file_references()$/;"	f
Test_foldtext	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_foldtext()$/;"	f
Test_follow_symlink	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_follow_symlink()$/;"	f
Test_glob	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^function Test_glob()$/;"	f
Test_has_file_in_subdirectory	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^function Test_has_file_in_subdirectory()$/;"	f
Test_hunk_outside_noop	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_outside_noop()$/;"	f
Test_hunk_stage	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage()$/;"	f
Test_hunk_stage_nearby_hunk	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_nearby_hunk()$/;"	f
Test_hunk_stage_partial_cmd_added	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_partial_cmd_added()$/;"	f
Test_hunk_stage_partial_preview_added	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_partial_preview_added()$/;"	f
Test_hunk_stage_partial_preview_added_removed	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_partial_preview_added_removed()$/;"	f
Test_hunk_stage_partial_visual_added	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_partial_visual_added()$/;"	f
Test_hunk_stage_preview_write	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_preview_write()$/;"	f
Test_hunk_undo	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_undo()$/;"	f
Test_hunk_undo_dos	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_undo_dos()$/;"	f
Test_ignores_suffixesadd	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^function Test_ignores_suffixesadd()$/;"	f
Test_inner_text_object	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_inner_text_object()$/;"	f
Test_keep_alt	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_alt()$/;"	f
Test_keep_modified	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_modified()$/;"	f
Test_keep_op_marks	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_op_marks()$/;"	f
Test_lcs	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_lcs()$/;"	f
Test_modify_lines	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_modify_lines()$/;"	f
Test_no_modifications	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_no_modifications()$/;"	f
Test_non_project_file_change_to_home	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^function Test_non_project_file_change_to_home()$/;"	f
Test_non_project_file_change_to_parent	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^function Test_non_project_file_change_to_parent()$/;"	f
Test_non_project_file_default	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^function Test_non_project_file_default()$/;"	f
Test_orphaned_signs	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_orphaned_signs()$/;"	f
Test_overlapping_hunk_op	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_overlapping_hunk_op()$/;"	f
Test_overlapping_hunks	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_overlapping_hunks()$/;"	f
Test_preview	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_preview()$/;"	f
Test_preview_dos	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_preview_dos()$/;"	f
Test_priority	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_priority()$/;"	f
Test_project_dir	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^function Test_project_dir()$/;"	f
Test_quickfix	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_quickfix()$/;"	f
Test_remove_first_lines	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_remove_first_lines()$/;"	f
Test_remove_lines	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_remove_lines()$/;"	f
Test_resolve_symlinks	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^function Test_resolve_symlinks()$/;"	f
Test_root_contains_wildcards	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^function Test_root_contains_wildcards()$/;"	f
Test_root_has_ancestor	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^function Test_root_has_ancestor()$/;"	f
Test_root_has_parent	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^function Test_root_has_parent()$/;"	f
Test_root_is_directory	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^function Test_root_is_directory()$/;"	f
Test_split	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_split()$/;"	f
Test_target_directories_only	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^function Test_target_directories_only()$/;"	f
Test_target_some_files_only	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^function Test_target_some_files_only()$/;"	f
Test_toggle	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^function Test_toggle()$/;"	f
Test_undo_nearby_hunk	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_undo_nearby_hunk()$/;"	f
Test_untracked_file_outside_repo	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_outside_repo()$/;"	f
Test_untracked_file_square_brackets_within_repo	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_square_brackets_within_repo()$/;"	f
Test_untracked_file_within_repo	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_within_repo()$/;"	f
Test_user_autocmd	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_user_autocmd()$/;"	f
Test_user_autocmd	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^function Test_user_autocmd()$/;"	f
Test_write_file_to_different_name	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^function Test_write_file_to_different_name()$/;"	f
Test_write_new_file	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^function Test_write_new_file()$/;"	f
Test_write_option	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_write_option()$/;"	f
Testing	vim/.vim/plugged/vim-graphql/README.md	/^## Testing$/;"	s	chapter:GraphQL for Vim
Testing	vim/.vim/plugged/vim-gutentags/CONTRIBUTING.md	/^## Testing$/;"	s	chapter:Contributing
Testing	vim/.vim/plugged/vim-rooter/test/README.markdown	/^# Testing$/;"	c
Tests for EditorConfig Plugins	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/README.rst	/^Tests for EditorConfig Plugins$/;"	c
Tests for End of Line Property	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/end_of_line.rst	/^Tests for End of Line Property$/;"	c
Tests for Indentation Properties	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/indentation.rst	/^Tests for Indentation Properties$/;"	c
Tests for Newline at end of File	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/insert_final_newline.rst	/^Tests for Newline at end of File$/;"	s	chapter:Insert Final Newline Property
Tests for Newlines	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/charset.rst	/^Tests for Newlines$/;"	c
Tests for Newlines	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/end_of_line.rst	/^Tests for Newlines$/;"	s	chapter:Tests for End of Line Property
Tg	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
The `g:mta_filetypes` option	vim/.vim/plugged/MatchTagAlways/README.md	/^### The `g:mta_filetypes` option$/;"	S	section:Always highlight enclosing tags""Options
The `g:mta_set_default_matchtag_color` option	vim/.vim/plugged/MatchTagAlways/README.md	/^### The `g:mta_set_default_matchtag_color` option$/;"	S	section:Always highlight enclosing tags""Options
The `g:mta_use_matchparen_group` option	vim/.vim/plugged/MatchTagAlways/README.md	/^### The `g:mta_use_matchparen_group` option$/;"	S	section:Always highlight enclosing tags""Options
Theme	vim/.vim/plugged/fzf/src/options.go	/^	Theme       *tui.ColorTheme$/;"	m	struct:fzf.Options	typeref:typename:*tui.ColorTheme
Third-party libraries used	vim/.vim/plugged/fzf/BUILD.md	/^Third-party libraries used$/;"	s	chapter:Building fzf
Ti	vim/.vim/plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
Tips	vim/.vim/plugged/fzf/README-VIM.md	/^Tips$/;"	s	chapter:FZF Vim integration
Tips	vim/.vim/plugged/fzf/README.md	/^Tips$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Tj	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
Tk	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	v
Tl	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	v
Tle	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Tm	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Tme	vim/.vim/plugged/coc.nvim/build/index.js	/^`).join(" "),e.slice(0,t*2)}dispose(){this.stop()}}});var TD,Tme,Dme,_y,BV=R(()=>{TD=E(Ui());As(/;"	v
Tmux	vim/.vim/plugged/fzf/test/test_go.rb	/^class Tmux$/;"	c
ToChars	vim/.vim/plugged/fzf/src/util/chars.go	/^func ToChars(bytes []byte) Chars {$/;"	f	package:util	typeref:typename:Chars
ToRunes	vim/.vim/plugged/fzf/src/util/chars.go	/^func (chars *Chars) ToRunes() []rune {$/;"	f	struct:util.Chars	typeref:typename:[]rune
ToString	vim/.vim/plugged/fzf/src/ansi.go	/^func (s *ansiState) ToString() string {$/;"	f	struct:fzf.ansiState	typeref:typename:string
ToString	vim/.vim/plugged/fzf/src/util/chars.go	/^func (chars *Chars) ToString() string {$/;"	f	struct:util.Chars	typeref:typename:string
ToTty	vim/.vim/plugged/fzf/src/util/util.go	/^func ToTty() bool {$/;"	f	package:util	typeref:typename:bool
ToggleSort	vim/.vim/plugged/fzf/src/options.go	/^	ToggleSort  bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Toggling between data sources	vim/.vim/plugged/fzf/ADVANCED.md	/^### Toggling between data sources$/;"	S	section:Advanced fzf examples""Dynamic reloading of the list
Token	vim/.vim/plugged/fzf/src/tokenizer.go	/^type Token struct {$/;"	s	package:fzf
Tokenize	vim/.vim/plugged/fzf/src/tokenizer.go	/^func Tokenize(text string, delimiter Delimiter) []Token {$/;"	f	package:fzf	typeref:typename:[]Token
TomatoButton	vim/.vim/plugged/vim-styled-components/examples/apis.js	/^const TomatoButton = styled(Button)`$/;"	C
TomatoButton	vim/.vim/plugged/vim-styled-components/examples/apis.js	/^const TomatoButton = unstyled(Button)`$/;"	C
Tomorrow	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### Tomorrow$/;"	S	chapter:Available Colorschemes
Tomorrow_Night	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### Tomorrow_Night$/;"	S	chapter:Available Colorschemes
Tomorrow_Night_Blue	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### Tomorrow_Night_Blue$/;"	S	chapter:Available Colorschemes
Tomorrow_Night_Bright	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### Tomorrow_Night_Bright$/;"	S	chapter:Available Colorschemes
Tomorrow_Night_Eighties	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### Tomorrow_Night_Eighties$/;"	S	chapter:Available Colorschemes
Tools	vim/Readme.md	/^### Tools$/;"	S	section:My awesome vim dotfile""Used Plugins
Top	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Top() int {$/;"	f	struct:tui.LightWindow	typeref:typename:int
Top	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Top() int {$/;"	f	struct:tui.TcellWindow	typeref:typename:int
Top	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Top() int$/;"	n	interface:tui.Window	typeref:typename:int
Tpe	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
Tq	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
Tr	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c
Tr	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
TrailingWhitespaces	vim/.vim/plugged/fzf/src/util/chars.go	/^func (chars *Chars) TrailingWhitespaces() int {$/;"	f	struct:util.Chars	typeref:typename:int
Transform	vim/.vim/plugged/fzf/src/tokenizer.go	/^func Transform(tokens []Token, withNth []Range) []Token {$/;"	f	package:fzf	typeref:typename:[]Token
Translate	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^  \\ Translate$/;"	c
TranslateH	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^command! -nargs=0   TranslateH call translator#history#export()$/;"	c
TranslateL	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^command! -nargs=0   TranslateL call translator#logger#open_log()$/;"	c
TranslateR	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^  \\ TranslateR$/;"	c
TranslateShell	vim/.vim/plugged/vim-translator/script/translator.py	/^class TranslateShell(BaseTranslator):$/;"	c
TranslateW	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^  \\ TranslateW$/;"	c
TranslateX	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^  \\ TranslateX$/;"	c
Trim Trailing Whitespace Property	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/trim_trailing_whitespace.rst	/^Trim Trailing Whitespace Property$/;"	c
TrimLength	vim/.vim/plugged/fzf/src/item.go	/^func (item *Item) TrimLength() uint16 {$/;"	f	struct:fzf.Item	typeref:typename:uint16
TrimLength	vim/.vim/plugged/fzf/src/util/chars.go	/^func (chars *Chars) TrimLength() uint16 {$/;"	f	struct:util.Chars	typeref:typename:uint16
TrimTrailingWhitespaces	vim/.vim/plugged/fzf/src/util/chars.go	/^func (chars *Chars) TrimTrailingWhitespaces() {$/;"	f	struct:util.Chars
Trimming Whitespace	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/trim_trailing_whitespace.rst	/^Trimming Whitespace$/;"	s	chapter:Trim Trailing Whitespace Property
Trouble shooting	vim/.vim/plugged/coc.nvim/Readme.md	/^## Trouble shooting$/;"	s
Troubleshooting	vim/.vim/plugged/far.vim/README.md	/^## Troubleshooting$/;"	s	chapter:far.vim - Find And Replace Vim plugin
Tse	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Tt	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
TtyIn	vim/.vim/plugged/fzf/src/tui/ttyname_unix.go	/^func TtyIn() *os.File {$/;"	f	package:tui	typeref:typename:*os.File
TtyIn	vim/.vim/plugged/fzf/src/tui/ttyname_windows.go	/^func TtyIn() *os.File {$/;"	f	package:tui	typeref:typename:*os.File
Tu	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
Tw	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
Twiggy	vim/.vim/plugged/vim-twiggy/plugin/twiggy.vim	/^command -nargs=* -complete=custom,TwiggyCompleteBranches Twiggy call twiggy#Branch(<f-args>)$/;"	c
TwiggyBranchUnderCursor	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! TwiggyBranchUnderCursor() abort$/;"	f
TwiggyCompleteBranches	vim/.vim/plugged/vim-twiggy/plugin/twiggy.vim	/^function! TwiggyCompleteBranches(A,L,P) abort$/;"	f
TwiggyCompleteRemotes	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! TwiggyCompleteRemotes(A,L,P) abort$/;"	f
Txe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
Ty	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Type	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Type       EventType$/;"	m	struct:tui.Event	typeref:typename:EventType
Typescript Syntax for Vim	vim/.vim/plugged/typescript-vim/README.md	/^Typescript Syntax for Vim$/;"	c
U	vim/.vim/autoload/plug.vim	/^  nnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
U	vim/.vim/autoload/plug.vim	/^  xnoremap <silent> <buffer> U  :call <SID>status_update()<cr>$/;"	m
U	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
U$	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
U0	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
U1	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
U4	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
U5	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
U6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
U7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
U8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
UA	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
UB	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
UC	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
UD	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
UG	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
UJ	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
UK	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
UM	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
UN	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
UNAME_M	vim/.vim/plugged/fzf/Makefile	/^UNAME_M := $(shell uname -m)$/;"	m
UNSETS	vim/.vim/plugged/fzf/test/test_go.rb	/^UNSETS = %w[$/;"	C
UO	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
UPDATED_SOURCE	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^    set UPDATED_SOURCE=%~2$/;"	v
UPDATED_SOURCE	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^set UPDATED_SOURCE=$/;"	v
UT	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
UTF-16BE Character Set	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/charset.rst	/^UTF-16BE Character Set$/;"	s	chapter:Tests for Newlines
UTF-16LE Character Set	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/charset.rst	/^UTF-16LE Character Set$/;"	s	chapter:Tests for Newlines
UTF-8 Character Set	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/charset.rst	/^UTF-8 Character Set$/;"	s	chapter:Tests for Newlines
UTF-8 with BOM Character Set	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/charset.rst	/^UTF-8 with BOM Character Set$/;"	s	chapter:Tests for Newlines
UU	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
UV	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
UX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
Ua	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
Uae	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Ub	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Uc	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
Ud	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
Ue	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
Ug	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Uh	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
Ui	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Uie	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
Uj	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Uk	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
Um	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Ume	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	f
Un	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	v
Underline	vim/.vim/plugged/fzf/src/tui/dummy.go	/^	Underline = Attr(1 << 3)$/;"	c	package:tui
Underline	vim/.vim/plugged/fzf/src/tui/tcell.go	/^	Underline      = Attr(tcell.AttrUnderline)$/;"	c	package:tui
Unicode	vim/.vim/plugged/fzf/src/options.go	/^	Unicode     bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Unix-style Newlines	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/end_of_line.rst	/^Unix-style Newlines$/;"	S	section:Tests for Newlines
Unlock	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:Unlock$/;"	l
Unwatch	vim/.vim/plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) Unwatch(events ...EventType) {$/;"	f	struct:util.EventBox
Uoe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
Up	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
Up	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Up$/;"	c	package:tui
UpdateCount	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) UpdateCount(cnt int, final bool, failedCommand *string) {$/;"	f	struct:fzf.Terminal
UpdateHeader	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) UpdateHeader(header []string) {$/;"	f	struct:fzf.Terminal
UpdateList	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) UpdateList(merger *Merger, reset bool) {$/;"	f	struct:fzf.Terminal
UpdateProgress	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) UpdateProgress(progress float32) {$/;"	f	struct:fzf.Terminal
Updating the list of processes by pressing CTRL-R	vim/.vim/plugged/fzf/ADVANCED.md	/^### Updating the list of processes by pressing CTRL-R$/;"	S	section:Advanced fzf examples""Dynamic reloading of the list
Upgrading fzf	vim/.vim/plugged/fzf/README.md	/^Upgrading fzf$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Upload the log file	vim/.vim/plugged/vim-multiple-cursors/CONTRIBUTING.md	/^## Upload the log file$/;"	s	chapter:Problems summary
Uq	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
Usage	vim/.vim/plugged/far.vim/README.md	/^## Usage$/;"	s	chapter:far.vim - Find And Replace Vim plugin
Usage	vim/.vim/plugged/fzf/README.md	/^Usage$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Usage	vim/.vim/plugged/gv.vim/README.md	/^Usage$/;"	s	chapter:gv.vim
Usage	vim/.vim/plugged/typescript-vim/README.md	/^Usage$/;"	s	chapter:Typescript Syntax for Vim
Usage	vim/.vim/plugged/vim-LanguageTool/README.md	/^# Usage$/;"	c
Usage	vim/.vim/plugged/vim-closetag/README.md	/^#### Usage$/;"	t	chapter:closetag.vim
Usage	vim/.vim/plugged/vim-gutentags/plat/win32/update_scopedb.cmd	/^:Usage$/;"	l
Usage	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^:Usage$/;"	l
Usage	vim/.vim/plugged/vim-twiggy/README.md	/^## Usage$/;"	s	chapter:twiggy.vim
Use	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
Use editorconfig-core-test in your project as a git submodule	vim/.vim/plugged/editorconfig-vim/tests/core/tests/README.md	/^### Use editorconfig-core-test in your project as a git submodule$/;"	S
Use editorconfig-core-test independently	vim/.vim/plugged/editorconfig-vim/tests/core/tests/README.md	/^### Use editorconfig-core-test independently$/;"	S
Use the command to match regexp	vim/.vim/plugged/vim-multiple-cursors/README.md	/^### Use the command to match regexp$/;"	S	section:vim-multiple-cursors""About
Used Plugins	vim/Readme.md	/^## Used Plugins$/;"	s	chapter:My awesome vim dotfile
Using Homebrew	vim/.vim/plugged/fzf/README.md	/^### Using Homebrew$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Installation
Using Linux package managers	vim/.vim/plugged/fzf/README.md	/^### Using Linux package managers$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Installation
Using Makefile	vim/.vim/plugged/fzf/BUILD.md	/^### Using Makefile$/;"	S	section:Building fzf""Build instructions
Using Vim Packages	vim/.vim/plugged/vim-graphql/README.md	/^### Using Vim Packages$/;"	S	section:GraphQL for Vim""Installation
Using [vim-plug](https://github.com/junegunn/vim-plug)	vim/.vim/plugged/fzf.vim/README.md	/^### Using [vim-plug](https:\/\/github.com\/junegunn\/vim-plug)$/;"	S	section:fzf :heart: vim""Installation
Using [vim-plug](https://github.com/junegunn/vim-plug)	vim/.vim/plugged/vim-graphql/README.md	/^### Using [vim-plug](https:\/\/github.com\/junegunn\/vim-plug)$/;"	S	section:GraphQL for Vim""Installation
Using fzf as the secondary filter	vim/.vim/plugged/fzf/ADVANCED.md	/^### Using fzf as the secondary filter$/;"	S	section:Advanced fzf examples""Ripgrep integration
Using git	vim/.vim/plugged/fzf/README.md	/^### Using git$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Installation
Using the finder	vim/.vim/plugged/fzf/README.md	/^#### Using the finder$/;"	t	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Usage
Uu	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
Uxe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
Uy	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Uz	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
V$	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
V4	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
V5	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
V6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
V8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
V9	vim/.vim/plugged/coc.nvim/build/index.js	/^`+s),r.push(n+"m+"+Tp.exports.humanize(this.diff)+"[0m")}else r[0]=z9()+e+" "+r[0]}function z9(/;"	f
VA	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
VB	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
VC	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
VD	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
VERSION	vim/.vim/plugged/fzf/Makefile	/^VERSION        := $(FZF_VERSION)$/;"	m
VERSION	vim/.vim/plugged/fzf/Makefile	/^VERSION        := $(shell git describe --abbrev=0 2> \/dev\/null)$/;"	m
VERSION_REGEX	vim/.vim/plugged/fzf/Makefile	/^VERSION_REGEX  := $(subst .,\\.,$(VERSION_TRIM))$/;"	m
VERSION_TRIM	vim/.vim/plugged/fzf/Makefile	/^VERSION_TRIM   := $(shell sed "s\/-.*\/\/" <<< $(VERSION))$/;"	m
VG	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
VIM	vim/.vim/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^$global:VIM = Find-Vim$/;"	v
VM	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
VN	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
VP	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
VT	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
VU	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
VV	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
VX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
Va	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
Vae	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Vb	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Vc	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
Vce	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
Vee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Verifying Character Set	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/charset.rst	/^Verifying Character Set$/;"	c
Verifying Newline Style	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/end_of_line.rst	/^Verifying Newline Style$/;"	s	chapter:Tests for End of Line Property
Version	vim/.vim/plugged/fzf/src/options.go	/^	Version     bool$/;"	m	struct:fzf.Options	typeref:typename:bool
Vf	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
Vg	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
Vi	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
Vie	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
Vim Version	vim/.vim/plugged/vim-graphql/.github/ISSUE_TEMPLATE.md	/^### Vim Version$/;"	S
Vim functions	vim/.vim/plugged/fzf.vim/README.md	/^#### Vim functions$/;"	t	subsection:fzf :heart: vim""Customization""Advanced customization
Vim packages (recommended; Vim 8+ only)	vim/.vim/plugged/vim-toml/README.md	/^### Vim packages (recommended; Vim 8+ only)$/;"	S	section:vim-toml""Installation
Vim plugin	vim/.vim/plugged/fzf/README.md	/^Vim plugin$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
Vim-plug:	vim/.vim/plugged/vim-jsx-typescript/README.md	/^### Vim-plug:$/;"	S	section:vim-jsx-typescript""Installation
VimVuePluginIndentMain	vim/.vim/plugged/vim-vue-plugin/indent/vue.vim	/^function! VimVuePluginIndentMain(...)$/;"	f
VimVuePluginSyntaxMain	vim/.vim/plugged/vim-vue-plugin/syntax/vue.vim	/^function! VimVuePluginSyntaxMain(...)$/;"	f
Visual	vim/Readme.md	/^### Visual$/;"	S	section:My awesome vim dotfile""Used Plugins
Vj	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Vm	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Vme	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
Vn	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Voe	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
Vp	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
Vpe	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
Vr	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
Vt	vim/.vim/plugged/coc.nvim/build/index.js	/^`),o=i.line==r.start.line?i.character-r.start.character:i.character,a=A$(s,i.line-r.start.line,o/;"	v
Vu	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
VueFoldMain	vim/.vim/plugged/vim-vue-plugin/ftplugin/vue/fold.vim	/^function! VueFoldMain(...)$/;"	f
Vundle	vim/.vim/plugged/vim-toml/README.md	/^### Vundle$/;"	S	section:vim-toml""Installation
Vundle:	vim/.vim/plugged/vim-jsx-typescript/README.md	/^### Vundle:$/;"	S	section:vim-jsx-typescript""Installation
Vx	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Vy	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
W	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
W	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
W	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:$0
W$	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
W1e	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
W4	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
W5	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
W6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
W7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
W8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
W9	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
WA	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
WB	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
WC	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
WD	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
WG	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
WM	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
WN	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
WP	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
WQ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
WR	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
WT	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
WU	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
WV	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
WX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
Wait	vim/.vim/plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) Wait(callback func(*Events)) {$/;"	f	struct:util.EventBox
WaitFor	vim/.vim/plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) WaitFor(event EventType) {$/;"	f	struct:util.EventBox
Watch	vim/.vim/plugged/fzf/src/util/eventbox.go	/^func (b *EventBox) Watch(events ...EventType) {$/;"	f	struct:util.EventBox
Wb	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Wc	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
Wce	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
Wd	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
We	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
What?	vim/.vim/plugged/vim-gutentags/README.md	/^## What?$/;"	s	chapter:Gutentags
Where can I find the default components?	vim/.vim/plugged/lightline.vim/README.md	/^#### Where can I find the default components?$/;"	t	subsection:lightline.vim""Advanced configuration""more tips
Why yet another clone of powerline?	vim/.vim/plugged/lightline.vim/README.md	/^## Why yet another clone of powerline?$/;"	s	chapter:lightline.vim
Why you should use fzf on Vim	vim/.vim/plugged/fzf.vim/README.md	/^Why you should use fzf on Vim$/;"	s	chapter:fzf :heart: vim
Why?	vim/.vim/plugged/coc.nvim/Readme.md	/^## Why?$/;"	s
Why?	vim/.vim/plugged/vim-gutentags/README.md	/^## Why?$/;"	s	chapter:Gutentags
Width	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Width() int {$/;"	f	struct:tui.LightWindow	typeref:typename:int
Width	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Width() int {$/;"	f	struct:tui.TcellWindow	typeref:typename:int
Width	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Width() int$/;"	n	interface:tui.Window	typeref:typename:int
Wie	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
Window	vim/.vim/plugged/fzf/src/tui/tui.go	/^type Window interface {$/;"	i	package:tui
Windows	vim/.vim/plugged/fzf/README.md	/^### Windows$/;"	S	section:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)""Installation
Windows-style Newlines	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/tests/end_of_line.rst	/^Windows-style Newlines$/;"	S	section:Tests for Newlines
With powerline symbols	vim/.vim/plugged/iceberg-dark/README.md	/^#### With powerline symbols$/;"	t	subsection:iceberg-dark""Currently supported:""[tmux](https://github.com/tmux/tmux):
WithAttr	vim/.vim/plugged/fzf/src/tui/tui.go	/^func (p ColorPair) WithAttr(attr Attr) ColorPair {$/;"	f	struct:tui.ColorPair	typeref:typename:ColorPair
WithNth	vim/.vim/plugged/fzf/src/options.go	/^	WithNth     []Range$/;"	m	struct:fzf.Options	typeref:typename:[]Range
Wj	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	f
Wk	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	v
Wm	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
Wme	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	f
Woe	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
Wpe	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
Wq	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f
Wr	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
Writing	vim/.vim/plugged/vim-gutentags/CONTRIBUTING.md	/^## Writing$/;"	s	chapter:Contributing
Wt	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
Wu	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
Wue	vim/.vim/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
Ww	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
Wy	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
X	vim/.vim/autoload/plug.vim	/^    nnoremap <silent> <buffer> X :call <SID>revert()<cr>$/;"	m
X	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
X	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
X	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) X() int {$/;"	f	struct:tui.LightWindow	typeref:typename:int
X	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) X() int {$/;"	f	struct:tui.TcellWindow	typeref:typename:int
X	vim/.vim/plugged/fzf/src/tui/tui.go	/^	X      int$/;"	m	struct:tui.MouseEvent	typeref:typename:int
X	vim/.vim/plugged/fzf/src/tui/tui.go	/^	X() int$/;"	n	interface:tui.Window	typeref:typename:int
X$	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
X0	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
X1	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
X4	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
X5	vim/.vim/plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	f
X6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
X6e	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
X8	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
X9	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
XB	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
XC	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
XCe	vim/.vim/plugged/coc.nvim/build/index.js	/^`:"")}get lineCount(){return this.lines.length+(this.eol?1:0)}getText(e){if(e){let t=this.offset/;"	v
XD	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
XG	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
XI	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
XK	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
XL	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
XM	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
XN	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
XO	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
XP	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	v
XR	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
XS	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
XT	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
XV	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
XX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
XY	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
XZ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
X_	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c	class:AnonymousFunction272f78ae2b100
Xa	vim/.vim/plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
Xae	vim/.vim/plugged/coc.nvim/build/index.js	/^   %s`,L,L,S,i);var $=S.type==="*"?K0:S.type==="?"?G0:"\\\\"+S.type;n=!0,i=i.slice(0,S.reStart)+/;"	f
Xb	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Xc	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Xd	vim/.vim/plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	v
Xe	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Xf	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Xg	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Xh	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Xhe	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
Xie	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Xj	vim/.vim/plugged/coc.nvim/build/index.js	/^`)==-1&&(u+=" ",f(c,"CocTreeDescription"),u+=c),{line:u,highlights:o}}async appendTreeNode(e,t,i/;"	v
Xk	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
Xm	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Xme	vim/.vim/plugged/coc.nvim/build/index.js	/^`)==-1}var oG=R(()=>{});function Xme(r,e,t){let i=r.split(\/\\r?\\n\/),n=t.insertSpaces?" ".repe/;"	f
XmlIndentGet	vim/.vim/plugged/vim-vue-plugin/lib/indent/xml.vim	/^fun! XmlIndentGet(lnum, use_syntax_check)$/;"	f
XmlIndentSum	vim/.vim/plugged/vim-vue-plugin/lib/indent/xml.vim	/^fun! <SID>XmlIndentSum(lnum, style, add)$/;"	f
XmlIndentSynCheck	vim/.vim/plugged/vim-vue-plugin/lib/indent/xml.vim	/^fun! <SID>XmlIndentSynCheck(lnum)$/;"	f
XmlIndentWithPattern	vim/.vim/plugged/vim-vue-plugin/lib/indent/xml.vim	/^fun! <SID>XmlIndentWithPattern(line, pat)$/;"	f
Xo	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
Xoe	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
Xr	vim/.vim/plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
Xs	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}var Xs,Zu,FD,aG=R(()=>{Xs=E(H());OD();Vt();yt();Y();Te();_e();nG();AD();oG();Zu=U()("snippets/;"	v
Xu	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
Xx	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Xy	vim/.vim/plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
Xz	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
Y	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Y	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) Y() int {$/;"	f	struct:tui.LightWindow	typeref:typename:int
Y	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) Y() int {$/;"	f	struct:tui.TcellWindow	typeref:typename:int
Y	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Y      int$/;"	m	struct:tui.MouseEvent	typeref:typename:int
Y	vim/.vim/plugged/fzf/src/tui/tui.go	/^	Y() int$/;"	n	interface:tui.Window	typeref:typename:int
Y$	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
Y0	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
Y3e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
Y4	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Y5	vim/.vim/plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	f
Y6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Y7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
Y8	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
Y9	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
YB	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
YC	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
YD	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
YG	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
YH	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
YHe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
YK	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
YL	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
YM	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
YN	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
YO	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
YQ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
YT	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
YU	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
YUe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
YV	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
YY	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
Ya	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
Yae	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
Yb	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Yc	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Yd	vim/.vim/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:o}}function QB(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	v
Ye	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
Yf	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Yg	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Yie	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Yj	vim/.vim/plugged/coc.nvim/build/index.js	/^`)==-1&&(u+=" ",f(c,"CocTreeDescription"),u+=c),{line:u,highlights:o}}async appendTreeNode(e,t,i/;"	v
Yme	vim/.vim/plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
Yn	vim/.vim/plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
Yoe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
YoudaoTranslator	vim/.vim/plugged/vim-translator/script/translator.py	/^class YoudaoTranslator(BaseTranslator):$/;"	c
Yq	vim/.vim/plugged/coc.nvim/build/index.js	/^`);return i.reduce(function(n,s){return s.length>n?s.length:n},0)}});var Yq=x((Kwe,a0)=>{var $oe/;"	v
Yr	vim/.vim/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:o}}function QB(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	v
Ys	vim/.vim/plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
Yt	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	c	class:Il.K
Yt	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	c	class:Il.ce
Yt	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	c	class:Il.z
Yu	vim/.vim/plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
Yue	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
Yv	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
Yw	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
Yx	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Yy	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
Z$	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
Z0	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
Z4	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Z4e	vim/.vim/plugged/coc.nvim/build/index.js	/^`+n+"\\n```"),r.push({content:n,filetype:t}))}function ege(r){return r?typeof r.filetype=="strin/;"	v
Z5	vim/.vim/plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	f
Z6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Z8	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
ZB	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
ZG	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
ZK	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
ZL	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
ZM	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
ZO	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
ZT	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
ZU	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
ZV	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
ZX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
ZY	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
Z_	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
Za	vim/.vim/plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
Zae	vim/.vim/plugged/coc.nvim/build/index.js	/^   %s`,L,L,S,i);var $=S.type==="*"?K0:S.type==="?"?G0:"\\\\"+S.type;n=!0,i=i.slice(0,S.reStart)+/;"	f
Zb	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
Zc	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
Zd	vim/.vim/plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	v
Zee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
Zf	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
Zg	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
Zh	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
Zie	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
Zj	vim/.vim/plugged/coc.nvim/build/index.js	/^`),0,i]]);return t[o-1]}async withProgress(e,t){return this.checkDialog()?await new bg(this.nvim/;"	f
Zm	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
Zme	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
Zo	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
Zoe	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
Zp	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
Zs	vim/.vim/plugged/coc.nvim/build/index.js	/^`+n+"\\n```"),r.push({content:n,filetype:t}))}function ege(r){return r?typeof r.filetype=="strin/;"	v
Zse	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
Zu	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}var Xs,Zu,FD,aG=R(()=>{Xs=E(H());OD();Vt();yt();Y();Te();_e();nG();AD();oG();Zu=U()("snippets/;"	v
Zw	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	v
Zwe	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
Zy	vim/.vim/plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
[	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
[License](LICENSE)	vim/.vim/plugged/fzf/README-VIM.md	/^[License](LICENSE)$/;"	s	chapter:FZF Vim integration
[License](LICENSE)	vim/.vim/plugged/fzf/README.md	/^[License](LICENSE)$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
[NeoBundle](https://github.com/Shougo/neobundle.vim)	vim/.vim/plugged/lightline.vim/README.md	/^### [NeoBundle](https:\/\/github.com\/Shougo\/neobundle.vim)$/;"	S	section:lightline.vim""Installation
[Pathogen](https://github.com/tpope/vim-pathogen)	vim/.vim/plugged/lightline.vim/README.md	/^### [Pathogen](https:\/\/github.com\/tpope\/vim-pathogen)$/;"	S	section:lightline.vim""Installation
[Vim packages](https://vimhelp.org/repeat.txt.html#packages) (since Vim 7.4.1528)	vim/.vim/plugged/lightline.vim/README.md	/^### [Vim packages](https:\/\/vimhelp.org\/repeat.txt.html#packages) (since Vim 7.4.1528)$/;"	S	section:lightline.vim""Installation
[Vundle](https://github.com/VundleVim/Vundle.vim)	vim/.vim/plugged/lightline.vim/README.md	/^### [Vundle](https:\/\/github.com\/VundleVim\/Vundle.vim)$/;"	S	section:lightline.vim""Installation
[[	vim/.vim/autoload/plug.vim	/^  nnoremap <silent> <buffer> [[ :silent! call <SID>section('b')<cr>$/;"	m
[[	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <silent> <buffer> <expr> [[ <sid>move('b')$/;"	m
[[	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  xnoremap <silent> <buffer> <expr> [[ <sid>move('b')$/;"	m
[]	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <silent> <buffer> <expr> [] <sid>move('b')$/;"	m
[]	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  xnoremap <silent> <buffer> <expr> [] <sid>move('b')$/;"	m
[bumblebee-status](https://github.com/tobi-wan-kenobi/bumblebee-status):	vim/.vim/plugged/iceberg-dark/README.md	/^### [bumblebee-status](https:\/\/github.com\/tobi-wan-kenobi\/bumblebee-status):$/;"	S	section:iceberg-dark""Currently supported:
[c	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^    nmap <buffer> [c <Plug>(GitGutterPrevHunk)$/;"	m
[dein.vim](https://github.com/Shougo/dein.vim)	vim/.vim/plugged/lightline.vim/README.md	/^### [dein.vim](https:\/\/github.com\/Shougo\/dein.vim)$/;"	S	section:lightline.vim""Installation
[lightline.vim](https://github.com/itchyny/lightline.vim):	vim/.vim/plugged/iceberg-dark/README.md	/^### [lightline.vim](https:\/\/github.com\/itchyny\/lightline.vim):$/;"	S	section:iceberg-dark""Currently supported:
[tmux](https://github.com/tmux/tmux):	vim/.vim/plugged/iceberg-dark/README.md	/^### [tmux](https:\/\/github.com\/tmux\/tmux):$/;"	S	section:iceberg-dark""Currently supported:
[vim-airline](https://github.com/vim-airline/vim-airline):	vim/.vim/plugged/iceberg-dark/README.md	/^### [vim-airline](https:\/\/github.com\/vim-airline\/vim-airline):$/;"	S	section:iceberg-dark""Currently supported:
[vim-plug](https://github.com/junegunn/vim-plug)	vim/.vim/plugged/far.vim/README.md	/^#### [vim-plug](https:\/\/github.com\/junegunn\/vim-plug)$/;"	t	section:far.vim - Find And Replace Vim plugin""Installation
[vim-plug](https://github.com/junegunn/vim-plug)	vim/.vim/plugged/lightline.vim/README.md	/^### [vim-plug](https:\/\/github.com\/junegunn\/vim-plug)$/;"	S	section:lightline.vim""Installation
]	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
][	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <silent> <buffer> <expr> ][ <sid>move('')$/;"	m
][	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  xnoremap <silent> <buffer> <expr> ][ <sid>move('')$/;"	m
]]	vim/.vim/autoload/plug.vim	/^  nnoremap <silent> <buffer> ]] :silent! call <SID>section('')<cr>$/;"	m
]]	vim/.vim/plugged/fzf/shell/completion.bash	/^  if [[ "$(type -t _fzf_comprun 2>&1)" = function ]]; then$/;"	f
]]	vim/.vim/plugged/fzf/shell/completion.zsh	/^  if [[ "$(type _fzf_comprun 2>&1)" =~ function ]]; then$/;"	f
]]	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <silent> <buffer> <expr> ]] <sid>move('')$/;"	m
]]	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  xnoremap <silent> <buffer> <expr> ]] <sid>move('')$/;"	m
]c	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^    nmap <buffer> ]c <Plug>(GitGutterNextHunk)$/;"	m
^[_a-zA-Z]+$	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "^[_a-zA-Z]+$": {$/;"	o	object:properties.languageserver.patternProperties
_	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
_	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
_	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:AnonymousFunction272f78ae29d00.s
_	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:$0
_$	vim/.vim/plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	v
_**This project is not currently maintained.** If you'd like to help, or for further info, see [#77](https://github.com/styled-components/vim-styled-components/issues/77)_	vim/.vim/plugged/vim-styled-components/README.md	/^### _**This project is not currently maintained.** If you'd like to help, or for further info, s/;"	S
_0	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
_4	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
_5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
_6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
_8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
_A	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
_B	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
_C	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
_D	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
_F	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	v
_G	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
_J	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
_K	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
_N	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
_T	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
_U	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
_V	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	v
_X	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
_Y	vim/.vim/plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	f
__	vim/.vim/plugged/coc.nvim/build/index.js	/^`)==-1&&(u+=" ",f(c,"CocTreeDescription"),u+=c),{line:u,highlights:o}}async appendTreeNode(e,t,i/;"	v
__EOF	scripts/network.sh	/^        cat << __EOF | sort -R | head -1 | ${CMD} tee -a \/etc\/resolv.conf 1> \/dev\/null$/;"	h
__EOF	scripts/network.sh	/^  cat << __EOF$/;"	h
__bool__	vim/.vim/plugged/MatchTagAlways/python/mta_core.py	/^    def __bool__( self ):$/;"	m	class:Tag
__builtin	scripts/__openbox_restart_plank.sh	/^__builtin() {$/;"	f
__builtin	scripts/__openbox_restart_tint2.sh	/^__builtin() {$/;"	f
__color_life	scripts/__conky_battery.sh	/^__color_life() { # 1=LIFE$/;"	f
__color_time	scripts/__conky_battery.sh	/^__color_time() { # 1=TIME$/;"	f
__eq__	vim/.vim/plugged/MatchTagAlways/python/mta_core.py	/^  def __eq__( self, other ):$/;"	m	class:Tag
__fsel	vim/.vim/plugged/fzf/shell/key-bindings.zsh	/^__fsel() {$/;"	f
__fzf_cd__	vim/.vim/plugged/fzf/shell/key-bindings.bash	/^__fzf_cd__() {$/;"	f
__fzf_comprun	vim/.vim/plugged/fzf/shell/completion.bash	/^__fzf_comprun() {$/;"	f
__fzf_comprun	vim/.vim/plugged/fzf/shell/completion.zsh	/^__fzf_comprun() {$/;"	f
__fzf_defc	vim/.vim/plugged/fzf/shell/completion.bash	/^__fzf_defc() {$/;"	f
__fzf_extract_command	vim/.vim/plugged/fzf/shell/completion.zsh	/^__fzf_extract_command() {$/;"	f
__fzf_generic_path_completion	vim/.vim/plugged/fzf/shell/completion.bash	/^__fzf_generic_path_completion() {$/;"	f
__fzf_generic_path_completion	vim/.vim/plugged/fzf/shell/completion.zsh	/^__fzf_generic_path_completion() {$/;"	f
__fzf_history__	vim/.vim/plugged/fzf/shell/key-bindings.bash	/^__fzf_history__() {$/;"	f
__fzf_orig_completion	vim/.vim/plugged/fzf/shell/completion.bash	/^__fzf_orig_completion() {$/;"	f
__fzf_select__	vim/.vim/plugged/fzf/shell/key-bindings.bash	/^__fzf_select__() {$/;"	f
__fzfcmd	vim/.vim/plugged/fzf/shell/key-bindings.bash	/^__fzfcmd() {$/;"	f
__fzfcmd	vim/.vim/plugged/fzf/shell/key-bindings.zsh	/^__fzfcmd() {$/;"	f
__gateway_check	scripts/network.sh	/^__gateway_check() {$/;"	f
__init__	vim/.vim/plugged/MatchTagAlways/python/mta_core.py	/^  def __init__( self, match_object ):$/;"	m	class:Tag
__init__	vim/.vim/plugged/far.vim/rplugin/python3/far/__init__.py	/^        def __init__(self, nvim):$/;"	m	class:FarPlugin
__init__	vim/.vim/plugged/far.vim/rplugin/python3/far/__init__.py	/^        def __init__(self, nvim):$/;"	m	class:NeoVimLoggerHandler
__init__	vim/.vim/plugged/vim-translator/script/translator.py	/^    def __init__(self):$/;"	m	class:BaicizhanTranslator
__init__	vim/.vim/plugged/vim-translator/script/translator.py	/^    def __init__(self):$/;"	m	class:BingDict
__init__	vim/.vim/plugged/vim-translator/script/translator.py	/^    def __init__(self):$/;"	m	class:GoogleTranslator
__init__	vim/.vim/plugged/vim-translator/script/translator.py	/^    def __init__(self):$/;"	m	class:HaiciDict
__init__	vim/.vim/plugged/vim-translator/script/translator.py	/^    def __init__(self):$/;"	m	class:ICibaTranslator
__init__	vim/.vim/plugged/vim-translator/script/translator.py	/^    def __init__(self):$/;"	m	class:SdcvShell
__init__	vim/.vim/plugged/vim-translator/script/translator.py	/^    def __init__(self):$/;"	m	class:TranslateShell
__init__	vim/.vim/plugged/vim-translator/script/translator.py	/^    def __init__(self):$/;"	m	class:YoudaoTranslator
__init__	vim/.vim/plugged/vim-translator/script/translator.py	/^    def __init__(self, name):$/;"	m	class:BaseTranslator
__init__	vim/.vim/plugged/vim-translator/test/test_translator.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:TestTranslator
__net_shares_umount	scripts/__openbox_lock_zzz.sh	/^__net_shares_umount() {$/;"	f
__net_shares_umount	scripts/network.sh	/^__net_shares_umount() {$/;"	f
__network_reset	scripts/network.sh	/^__network_reset() {$/;"	f
__network_status	scripts/network.sh	/^__network_status() {$/;"	f
__nonzero__	vim/.vim/plugged/MatchTagAlways/python/mta_core.py	/^    def __nonzero__( self ):$/;"	m	class:Tag
__random_mac	scripts/network.sh	/^__random_mac() { # 1=INTERFACE$/;"	f
__right	scripts/__openbox_restart_plank.sh	/^__right() {$/;"	f
__right	scripts/__openbox_restart_tint2.sh	/^__right() {$/;"	f
__usage	scripts/__conky_battery.sh	/^__usage() {$/;"	f
__usage	scripts/__conky_if_ping.sh	/^__usage() {$/;"	f
__usage	scripts/__openbox_cpufreq.sh	/^__usage() {$/;"	f
__usage	scripts/network.sh	/^__usage() {$/;"	f
__usage	scripts/xdotool.sh	/^__usage() {$/;"	f
__usage_dns	scripts/network.sh	/^__usage_dns() {$/;"	f
__usage_lan	scripts/network.sh	/^__usage_lan() {$/;"	f
__usage_wlan	scripts/network.sh	/^__usage_wlan() {$/;"	f
__usage_wwan	scripts/network.sh	/^__usage_wwan() {$/;"	f
__wlan_wait_associated	scripts/network.sh	/^__wlan_wait_associated() {$/;"	f
__wwan_check	scripts/network.sh	/^__wwan_check() { # 1=PROFILE$/;"	f
_ae	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
_b	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
_c	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
_cache	vim/.vim/plugged/fzf/src/pattern.go	/^	_cache        ChunkCache$/;"	v	package:fzf	typeref:typename:ChunkCache
_colorToAttribute	vim/.vim/plugged/fzf/src/tui/tcell.go	/^	_colorToAttribute = []tcell.Color{$/;"	v	package:tui
_compile	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	m	class:fs
_d	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
_e	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
_ee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
_far_nvim_rpc_invoke	vim/.vim/plugged/far.vim/rplugin/python3/far/__init__.py	/^        def _far_nvim_rpc_invoke(self, args):$/;"	m	class:FarPlugin
_fe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
_fzf_alias_completion	vim/.vim/plugged/fzf/shell/completion.bash	/^_fzf_alias_completion() {$/;"	f
_fzf_compgen_dir	vim/.vim/plugged/fzf/shell/completion.bash	/^  _fzf_compgen_dir() {$/;"	f
_fzf_compgen_dir	vim/.vim/plugged/fzf/shell/completion.zsh	/^  _fzf_compgen_dir() {$/;"	f
_fzf_compgen_path	vim/.vim/plugged/fzf/shell/completion.bash	/^  _fzf_compgen_path() {$/;"	f
_fzf_compgen_path	vim/.vim/plugged/fzf/shell/completion.zsh	/^  _fzf_compgen_path() {$/;"	f
_fzf_complete	vim/.vim/plugged/fzf/shell/completion.bash	/^_fzf_complete() {$/;"	f
_fzf_complete	vim/.vim/plugged/fzf/shell/completion.zsh	/^_fzf_complete() {$/;"	f
_fzf_complete_export	vim/.vim/plugged/fzf/shell/completion.zsh	/^_fzf_complete_export() {$/;"	f
_fzf_complete_kill	vim/.vim/plugged/fzf/shell/completion.bash	/^_fzf_complete_kill() {$/;"	f
_fzf_complete_kill	vim/.vim/plugged/fzf/shell/completion.zsh	/^_fzf_complete_kill() {$/;"	f
_fzf_complete_kill_post	vim/.vim/plugged/fzf/shell/completion.zsh	/^_fzf_complete_kill_post() {$/;"	f
_fzf_complete_ssh	vim/.vim/plugged/fzf/shell/completion.zsh	/^_fzf_complete_ssh() {$/;"	f
_fzf_complete_telnet	vim/.vim/plugged/fzf/shell/completion.zsh	/^_fzf_complete_telnet() {$/;"	f
_fzf_complete_unalias	vim/.vim/plugged/fzf/shell/completion.zsh	/^_fzf_complete_unalias() {$/;"	f
_fzf_complete_unset	vim/.vim/plugged/fzf/shell/completion.zsh	/^_fzf_complete_unset() {$/;"	f
_fzf_dir_completion	vim/.vim/plugged/fzf/shell/completion.bash	/^_fzf_dir_completion() {$/;"	f
_fzf_dir_completion	vim/.vim/plugged/fzf/shell/completion.zsh	/^_fzf_dir_completion() {$/;"	f
_fzf_feed_fifo	vim/.vim/plugged/fzf/shell/completion.zsh	/^_fzf_feed_fifo() ($/;"	f
_fzf_file_completion	vim/.vim/plugged/fzf/shell/completion.bash	/^_fzf_file_completion() {$/;"	f
_fzf_handle_dynamic_completion	vim/.vim/plugged/fzf/shell/completion.bash	/^_fzf_handle_dynamic_completion() {$/;"	f
_fzf_host_completion	vim/.vim/plugged/fzf/shell/completion.bash	/^_fzf_host_completion() {$/;"	f
_fzf_opts_completion	vim/.vim/plugged/fzf/shell/completion.bash	/^_fzf_opts_completion() {$/;"	f
_fzf_path_completion	vim/.vim/plugged/fzf/shell/completion.bash	/^_fzf_path_completion() {$/;"	f
_fzf_path_completion	vim/.vim/plugged/fzf/shell/completion.zsh	/^_fzf_path_completion() {$/;"	f
_fzf_proc_completion	vim/.vim/plugged/fzf/shell/completion.bash	/^_fzf_proc_completion() {$/;"	f
_fzf_proc_completion_post	vim/.vim/plugged/fzf/shell/completion.bash	/^_fzf_proc_completion_post() {$/;"	f
_fzf_setup_completion	vim/.vim/plugged/fzf/shell/completion.bash	/^_fzf_setup_completion() {$/;"	f
_fzf_statusline	vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^  augroup _fzf_statusline$/;"	a
_fzf_var_completion	vim/.vim/plugged/fzf/shell/completion.bash	/^_fzf_var_completion() {$/;"	f
_g	vim/.vim/plugged/coc.nvim/build/index.js	/^`),a++,c=i,o=14;switch(w){case 123:return i++,o=1;case 125:return i++,o=2;case 91:return i++,o=3/;"	v
_i	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
_l	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
_le	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
_me	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
_n	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
_o	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
_patternCache	vim/.vim/plugged/fzf/src/pattern.go	/^	_patternCache map[string]*Pattern$/;"	v	package:fzf	typeref:typename:map[string]*Pattern
_prevMouseButton	vim/.vim/plugged/fzf/src/tui/tcell.go	/^	_prevMouseButton tcell.ButtonMask$/;"	v	package:tui	typeref:typename:tcell.ButtonMask
_r	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
_screen	vim/.vim/plugged/fzf/src/tui/tcell.go	/^	_screen          tcell.Screen$/;"	v	package:tui	typeref:typename:tcell.Screen
_se	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
_splitRegex	vim/.vim/plugged/fzf/src/pattern.go	/^	_splitRegex   *regexp.Regexp$/;"	v	package:fzf	typeref:typename:*regexp.Regexp
_t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
_v	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
_w	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
_y	vim/.vim/plugged/coc.nvim/build/index.js	/^`).join(" "),e.slice(0,t*2)}dispose(){this.stop()}}});var TD,Tme,Dme,_y,BV=R(()=>{TD=E(Ui());As(/;"	v
`--filter` will not block when sort is disabled	vim/.vim/plugged/fzf/CHANGELOG.md	/^#### `--filter` will not block when sort is disabled$/;"	t	subsection:CHANGELOG""0.9.4""Improvements
`--height`	vim/.vim/plugged/fzf/ADVANCED.md	/^### `--height`$/;"	S	section:Advanced fzf examples""Screen Layout
`:FZF[!]`	vim/.vim/plugged/fzf/README-VIM.md	/^`:FZF[!]`$/;"	s	chapter:FZF Vim integration
`MtaJumpToOtherTag`	vim/.vim/plugged/MatchTagAlways/README.md	/^### `MtaJumpToOtherTag`$/;"	S	section:Always highlight enclosing tags""Comands
`TranslateH`	vim/.vim/plugged/vim-translator/README.md	/^#### `TranslateH`$/;"	t	section:vim-translator""Commands
`TranslateL`	vim/.vim/plugged/vim-translator/README.md	/^#### `TranslateL`$/;"	t	section:vim-translator""Commands
`TranslateR`	vim/.vim/plugged/vim-translator/README.md	/^#### `TranslateR`$/;"	t	section:vim-translator""Commands
`TranslateW`	vim/.vim/plugged/vim-translator/README.md	/^#### `TranslateW`$/;"	t	section:vim-translator""Commands
`TranslateX`	vim/.vim/plugged/vim-translator/README.md	/^#### `TranslateX`$/;"	t	section:vim-translator""Commands
`Translate`	vim/.vim/plugged/vim-translator/README.md	/^#### `Translate`$/;"	t	section:vim-translator""Commands
```Multiple_cursors_before/Multiple_cursors_after``` (Default: `nothing`)	vim/.vim/plugged/vim-multiple-cursors/README.md	/^### ```Multiple_cursors_before\/Multiple_cursors_after``` (Default: `nothing`)$/;"	S	section:vim-multiple-cursors""Settings
```g:multi_cursor_exit_from_insert_mode``` (Default: 0)	vim/.vim/plugged/vim-multiple-cursors/README.md	/^### ```g:multi_cursor_exit_from_insert_mode``` (Default: 0)$/;"	S	section:vim-multiple-cursors""Settings
```g:multi_cursor_exit_from_visual_mode``` (Default: 0)	vim/.vim/plugged/vim-multiple-cursors/README.md	/^### ```g:multi_cursor_exit_from_visual_mode``` (Default: 0)$/;"	S	section:vim-multiple-cursors""Settings
```g:multi_cursor_normal_maps``` (Default: see below)	vim/.vim/plugged/vim-multiple-cursors/README.md	/^### ```g:multi_cursor_normal_maps``` (Default: see below)$/;"	S	section:vim-multiple-cursors""Settings
```g:multi_cursor_support_imap``` (Default: 1)	vim/.vim/plugged/vim-multiple-cursors/README.md	/^### ```g:multi_cursor_support_imap``` (Default: 1)$/;"	S	section:vim-multiple-cursors""Settings
```g:multi_cursor_visual_maps``` (Default: see below)	vim/.vim/plugged/vim-multiple-cursors/README.md	/^### ```g:multi_cursor_visual_maps``` (Default: see below)$/;"	S	section:vim-multiple-cursors""Settings
`fzf#run`	vim/.vim/plugged/fzf/README-VIM.md	/^`fzf#run`$/;"	s	chapter:FZF Vim integration
`fzf#wrap`	vim/.vim/plugged/fzf/README-VIM.md	/^`fzf#wrap`$/;"	s	chapter:FZF Vim integration
`fzf-tmux`	vim/.vim/plugged/fzf/ADVANCED.md	/^### `fzf-tmux`$/;"	S	section:Advanced fzf examples""Screen Layout
`fzf-tmux` script	vim/.vim/plugged/fzf/README.md	/^`fzf-tmux` script$/;"	s	chapter:<img src="https://raw.githubusercontent.com/junegunn/i/master/fzf.png" height="170" alt="fzf - a command-line fuzzy finder"> [![github-actions](https://github.com/junegunn/fzf/workflows/Test%20fzf%20on%20Linux/badge.svg)](https://github.com/junegunn/fzf/actions)
a	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f	function:AnonymousFunction272f78ae1e100
a	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
a	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
a	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunction272f78ae13000
a	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),g=+p.split(" ")[1];Kh("got proxy server response: %o",p),e({statusCode:g,buffered:d})}r.on("/;"	f	function:AnonymousFunction272f78ae34600
a	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunction272f78ae12000.e
a	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunction272f78aef800.e
a	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunction272f78aeff00.e
a	vim/.vim/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	f	function:Npe
a	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:AnonymousFunction272f78ae0a00
a	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
a	vim/.vim/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	f	function:AnonymousFunction272f78ae33f00
a	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunction272f78ae29d00
a	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunction272f78ae2ab00
a	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunction272f78ae2c100
a	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	c	class:Lae
a	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	c	class:fB
a	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
a	vim/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^    $a = $argv[$idx]$/;"	v
a	vim/.vim/plugged/fzf/src/terminal.go	/^	a string$/;"	m	struct:fzf.action	typeref:typename:string
a$	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	v
a0e	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
a5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
a6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
a8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
a9	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
aA	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
aC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
aD	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
aG	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}var Xs,Zu,FD,aG=R(()=>{Xs=E(H());OD();Vt();yt();Y();Te();_e();nG();AD();oG();Zu=U()("snippets/;"	v
aI	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
aJ	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
aK	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
aLe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
aM	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	v
aO	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
aP	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
aQ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
aU	vim/.vim/plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	f
aV	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
aW	vim/.vim/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
aY	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
a_	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
aa	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
abab	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "abab": "^2.0.3",$/;"	s	object:dependencies.data-urls.requires
abab	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "abab": "^2.0.5",$/;"	s	object:dependencies.jsdom.requires
abab	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "abab": {$/;"	o	object:dependencies
ac	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
ac	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^    omap <buffer> ac <Plug>(GitGutterTextObjectOuterPending)$/;"	m
ac	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^    xmap <buffer> ac <Plug>(GitGutterTextObjectOuterVisual)$/;"	m
acorn	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "acorn": "^7.1.1",$/;"	s	object:dependencies.acorn-globals.requires
acorn	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "acorn": "^7.4.0",$/;"	s	object:dependencies.espree.requires
acorn	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "acorn": "^8.2.4",$/;"	s	object:dependencies.jsdom.requires
acorn	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "acorn": {$/;"	o	object:dependencies.jsdom.dependencies
acorn	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "acorn": {$/;"	o	object:dependencies
acorn-globals	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "acorn-globals": "^6.0.0",$/;"	s	object:dependencies.jsdom.requires
acorn-globals	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "acorn-globals": {$/;"	o	object:dependencies
acorn-jsx	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "acorn-jsx": "^5.3.1",$/;"	s	object:dependencies.espree.requires
acorn-jsx	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "acorn-jsx": {$/;"	o	object:dependencies
acorn-walk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "acorn-walk": "^7.1.1"$/;"	s	object:dependencies.acorn-globals.requires
acorn-walk	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "acorn-walk": {$/;"	o	object:dependencies
actAbort	vim/.vim/plugged/fzf/src/terminal.go	/^	actAbort$/;"	c	package:fzf
actAccept	vim/.vim/plugged/fzf/src/terminal.go	/^	actAccept$/;"	c	package:fzf
actAcceptNonEmpty	vim/.vim/plugged/fzf/src/terminal.go	/^	actAcceptNonEmpty$/;"	c	package:fzf
actBackwardChar	vim/.vim/plugged/fzf/src/terminal.go	/^	actBackwardChar$/;"	c	package:fzf
actBackwardDeleteChar	vim/.vim/plugged/fzf/src/terminal.go	/^	actBackwardDeleteChar$/;"	c	package:fzf
actBackwardDeleteCharEOF	vim/.vim/plugged/fzf/src/terminal.go	/^	actBackwardDeleteCharEOF$/;"	c	package:fzf
actBackwardKillWord	vim/.vim/plugged/fzf/src/terminal.go	/^	actBackwardKillWord$/;"	c	package:fzf
actBackwardWord	vim/.vim/plugged/fzf/src/terminal.go	/^	actBackwardWord$/;"	c	package:fzf
actBeginningOfLine	vim/.vim/plugged/fzf/src/terminal.go	/^	actBeginningOfLine$/;"	c	package:fzf
actCancel	vim/.vim/plugged/fzf/src/terminal.go	/^	actCancel$/;"	c	package:fzf
actChangePrompt	vim/.vim/plugged/fzf/src/terminal.go	/^	actChangePrompt$/;"	c	package:fzf
actClearQuery	vim/.vim/plugged/fzf/src/terminal.go	/^	actClearQuery$/;"	c	package:fzf
actClearScreen	vim/.vim/plugged/fzf/src/terminal.go	/^	actClearScreen$/;"	c	package:fzf
actClearSelection	vim/.vim/plugged/fzf/src/terminal.go	/^	actClearSelection$/;"	c	package:fzf
actClose	vim/.vim/plugged/fzf/src/terminal.go	/^	actClose$/;"	c	package:fzf
actDeleteChar	vim/.vim/plugged/fzf/src/terminal.go	/^	actDeleteChar$/;"	c	package:fzf
actDeleteCharEOF	vim/.vim/plugged/fzf/src/terminal.go	/^	actDeleteCharEOF$/;"	c	package:fzf
actDeselect	vim/.vim/plugged/fzf/src/terminal.go	/^	actDeselect$/;"	c	package:fzf
actDeselectAll	vim/.vim/plugged/fzf/src/terminal.go	/^	actDeselectAll$/;"	c	package:fzf
actDisableSearch	vim/.vim/plugged/fzf/src/terminal.go	/^	actDisableSearch$/;"	c	package:fzf
actDown	vim/.vim/plugged/fzf/src/terminal.go	/^	actDown$/;"	c	package:fzf
actEnableSearch	vim/.vim/plugged/fzf/src/terminal.go	/^	actEnableSearch$/;"	c	package:fzf
actEndOfLine	vim/.vim/plugged/fzf/src/terminal.go	/^	actEndOfLine$/;"	c	package:fzf
actExecute	vim/.vim/plugged/fzf/src/terminal.go	/^	actExecute$/;"	c	package:fzf
actExecuteMulti	vim/.vim/plugged/fzf/src/terminal.go	/^	actExecuteMulti \/\/ Deprecated$/;"	c	package:fzf
actExecuteSilent	vim/.vim/plugged/fzf/src/terminal.go	/^	actExecuteSilent$/;"	c	package:fzf
actFirst	vim/.vim/plugged/fzf/src/terminal.go	/^	actFirst$/;"	c	package:fzf
actForwardChar	vim/.vim/plugged/fzf/src/terminal.go	/^	actForwardChar$/;"	c	package:fzf
actForwardWord	vim/.vim/plugged/fzf/src/terminal.go	/^	actForwardWord$/;"	c	package:fzf
actHalfPageDown	vim/.vim/plugged/fzf/src/terminal.go	/^	actHalfPageDown$/;"	c	package:fzf
actHalfPageUp	vim/.vim/plugged/fzf/src/terminal.go	/^	actHalfPageUp$/;"	c	package:fzf
actIgnore	vim/.vim/plugged/fzf/src/terminal.go	/^	actIgnore actionType = iota$/;"	c	package:fzf	typeref:type:actionType
actInvalid	vim/.vim/plugged/fzf/src/terminal.go	/^	actInvalid$/;"	c	package:fzf
actJump	vim/.vim/plugged/fzf/src/terminal.go	/^	actJump$/;"	c	package:fzf
actJumpAccept	vim/.vim/plugged/fzf/src/terminal.go	/^	actJumpAccept$/;"	c	package:fzf
actKillLine	vim/.vim/plugged/fzf/src/terminal.go	/^	actKillLine$/;"	c	package:fzf
actKillWord	vim/.vim/plugged/fzf/src/terminal.go	/^	actKillWord$/;"	c	package:fzf
actLast	vim/.vim/plugged/fzf/src/terminal.go	/^	actLast$/;"	c	package:fzf
actMouse	vim/.vim/plugged/fzf/src/terminal.go	/^	actMouse$/;"	c	package:fzf
actNextHistory	vim/.vim/plugged/fzf/src/terminal.go	/^	actNextHistory$/;"	c	package:fzf
actPageDown	vim/.vim/plugged/fzf/src/terminal.go	/^	actPageDown$/;"	c	package:fzf
actPageUp	vim/.vim/plugged/fzf/src/terminal.go	/^	actPageUp$/;"	c	package:fzf
actPreview	vim/.vim/plugged/fzf/src/terminal.go	/^	actPreview$/;"	c	package:fzf
actPreviewBottom	vim/.vim/plugged/fzf/src/terminal.go	/^	actPreviewBottom$/;"	c	package:fzf
actPreviewDown	vim/.vim/plugged/fzf/src/terminal.go	/^	actPreviewDown$/;"	c	package:fzf
actPreviewHalfPageDown	vim/.vim/plugged/fzf/src/terminal.go	/^	actPreviewHalfPageDown$/;"	c	package:fzf
actPreviewHalfPageUp	vim/.vim/plugged/fzf/src/terminal.go	/^	actPreviewHalfPageUp$/;"	c	package:fzf
actPreviewPageDown	vim/.vim/plugged/fzf/src/terminal.go	/^	actPreviewPageDown$/;"	c	package:fzf
actPreviewPageUp	vim/.vim/plugged/fzf/src/terminal.go	/^	actPreviewPageUp$/;"	c	package:fzf
actPreviewTop	vim/.vim/plugged/fzf/src/terminal.go	/^	actPreviewTop$/;"	c	package:fzf
actPreviewUp	vim/.vim/plugged/fzf/src/terminal.go	/^	actPreviewUp$/;"	c	package:fzf
actPreviousHistory	vim/.vim/plugged/fzf/src/terminal.go	/^	actPreviousHistory$/;"	c	package:fzf
actPrintQuery	vim/.vim/plugged/fzf/src/terminal.go	/^	actPrintQuery$/;"	c	package:fzf
actRefreshPreview	vim/.vim/plugged/fzf/src/terminal.go	/^	actRefreshPreview$/;"	c	package:fzf
actReload	vim/.vim/plugged/fzf/src/terminal.go	/^	actReload$/;"	c	package:fzf
actReplaceQuery	vim/.vim/plugged/fzf/src/terminal.go	/^	actReplaceQuery$/;"	c	package:fzf
actRune	vim/.vim/plugged/fzf/src/terminal.go	/^	actRune$/;"	c	package:fzf
actSelect	vim/.vim/plugged/fzf/src/terminal.go	/^	actSelect$/;"	c	package:fzf
actSelectAll	vim/.vim/plugged/fzf/src/terminal.go	/^	actSelectAll$/;"	c	package:fzf
actSigStop	vim/.vim/plugged/fzf/src/terminal.go	/^	actSigStop$/;"	c	package:fzf
actToggle	vim/.vim/plugged/fzf/src/terminal.go	/^	actToggle$/;"	c	package:fzf
actToggleAll	vim/.vim/plugged/fzf/src/terminal.go	/^	actToggleAll$/;"	c	package:fzf
actToggleDown	vim/.vim/plugged/fzf/src/terminal.go	/^	actToggleDown$/;"	c	package:fzf
actToggleIn	vim/.vim/plugged/fzf/src/terminal.go	/^	actToggleIn$/;"	c	package:fzf
actToggleOut	vim/.vim/plugged/fzf/src/terminal.go	/^	actToggleOut$/;"	c	package:fzf
actTogglePreview	vim/.vim/plugged/fzf/src/terminal.go	/^	actTogglePreview$/;"	c	package:fzf
actTogglePreviewWrap	vim/.vim/plugged/fzf/src/terminal.go	/^	actTogglePreviewWrap$/;"	c	package:fzf
actToggleSearch	vim/.vim/plugged/fzf/src/terminal.go	/^	actToggleSearch$/;"	c	package:fzf
actToggleSort	vim/.vim/plugged/fzf/src/terminal.go	/^	actToggleSort$/;"	c	package:fzf
actToggleUp	vim/.vim/plugged/fzf/src/terminal.go	/^	actToggleUp$/;"	c	package:fzf
actUnbind	vim/.vim/plugged/fzf/src/terminal.go	/^	actUnbind$/;"	c	package:fzf
actUnixLineDiscard	vim/.vim/plugged/fzf/src/terminal.go	/^	actUnixLineDiscard$/;"	c	package:fzf
actUnixWordRubout	vim/.vim/plugged/fzf/src/terminal.go	/^	actUnixWordRubout$/;"	c	package:fzf
actUp	vim/.vim/plugged/fzf/src/terminal.go	/^	actUp$/;"	c	package:fzf
actYank	vim/.vim/plugged/fzf/src/terminal.go	/^	actYank$/;"	c	package:fzf
action	vim/.vim/plugged/fzf/src/terminal.go	/^type action struct {$/;"	s	package:fzf
actionType	vim/.vim/plugged/fzf/src/terminal.go	/^type actionType int$/;"	t	package:fzf	typeref:typename:int
activeTempFiles	vim/.vim/plugged/fzf/src/terminal.go	/^var activeTempFiles []string$/;"	v	package:fzf	typeref:typename:[]string
add	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
addRequest	vim/.vim/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	m	class:AnonymousFunction272f78ae33e00.e
additionalProperties	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "additionalProperties": false$/;"	b	object:properties.suggest.completionItemKindLabels
additionalProperties	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "additionalProperties": false,$/;"	b	object:definitions.languageServerCommand
additionalProperties	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "additionalProperties": false,$/;"	b	object:definitions.languageServerModule
additionalProperties	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "additionalProperties": false,$/;"	b	object:definitions.languageServerSocket
additionalProperties	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "additionalProperties": false,$/;"	b	object:properties.diagnostic.floatConfig
additionalProperties	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "additionalProperties": false,$/;"	b	object:properties.hover.floatConfig
additionalProperties	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "additionalProperties": false,$/;"	b	object:properties.signature.floatConfig
additionalProperties	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "additionalProperties": false,$/;"	b	object:properties.suggest.floatConfig
additionalProperties	vim/.vim/plugged/coc.nvim/data/schema.json	/^  "additionalProperties": false,$/;"	b
additionalSchemes	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "additionalSchemes": {$/;"	o	object:definitions.languageServerBase.properties
additionalSchemes	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "additionalSchemes": {},$/;"	o	object:definitions.languageServerCommand.properties
additionalSchemes	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "additionalSchemes": {},$/;"	o	object:definitions.languageServerModule.properties
additionalSchemes	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "additionalSchemes": {},$/;"	o	object:definitions.languageServerSocket.properties
ae	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
aee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
af	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
after	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:Uz.o.u
after	vim/.vim/plugged/vim-multiple-cursors/spec/benchmark_spec.rb	/^def after(string)$/;"	f
after	vim/.vim/plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def after(string)$/;"	f
age	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
agent	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:$T.c
agent-base	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "agent-base": "6",$/;"	s	object:dependencies.http-proxy-agent.requires
agent-base	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "agent-base": "6",$/;"	s	object:dependencies.https-proxy-agent.requires
agent-base	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "agent-base": {$/;"	o	object:dependencies
ah	vim/.vim/plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
aj	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
ajv	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ajv": "^6.10.0",$/;"	s	object:dependencies.eslint.requires
ajv	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ajv": "^6.10.2",$/;"	s	object:dependencies.table.requires
ajv	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ajv": "^6.12.4",$/;"	s	object:dependencies.@eslint/eslintrc.requires
ajv	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "ajv": {$/;"	o	object:dependencies
ak	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	v
algo	vim/.vim/plugged/fzf/src/algo/algo.go	/^package algo$/;"	p
algo	vim/.vim/plugged/fzf/src/algo/algo_test.go	/^package algo$/;"	p
algo	vim/.vim/plugged/fzf/src/algo/normalize.go	/^package algo$/;"	p
all	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
all	vim/.vim/plugged/fzf/Makefile	/^all: target\/$(BINARY)$/;"	t
all	vim/.vim/plugged/vim-graphql/Makefile	/^all: lint test$/;"	t
allItems	vim/.vim/plugged/fzf/src/terminal_test.go	/^	allItems []*Item$/;"	m	struct:fzf.give	typeref:typename:[]*Item
allOf	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/float" }],$/;"	a	object:properties.diagnostic.floatConfig
allOf	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/float" }],$/;"	a	object:properties.hover.floatConfig
allOf	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/float" }],$/;"	a	object:properties.signature.floatConfig
allOf	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/float" }],$/;"	a	object:properties.suggest.floatConfig
allOf	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	a	object:definitions.languageServerCommand
allOf	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	a	object:definitions.languageServerModule
allOf	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "allOf": [{ "$ref": "#\/definitions\/languageServerBase" }],$/;"	a	object:definitions.languageServerSocket
alloc16	vim/.vim/plugged/fzf/src/algo/algo.go	/^func alloc16(offset int, slab *util.Slab, size int) (int, []int16) {$/;"	f	package:algo	typeref:typename:(int, []int16)
alloc32	vim/.vim/plugged/fzf/src/algo/algo.go	/^func alloc32(offset int, slab *util.Slab, size int) (int, []int32) {$/;"	f	package:algo	typeref:typename:(int, []int32)
allowTrailingComma	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	p	class:r.DEFAULT
ame	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
an	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
animationType	vim/.vim/plugged/vim-styled-components/examples/issue-30-3.js	/^          animationType="slide"$/;"	M	class:CoffeeList
ansi	vim/.vim/plugged/fzf/src/terminal.go	/^	ansi         bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
ansi-colors	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ansi-colors": "^4.1.1"$/;"	s	object:dependencies.enquirer.requires
ansi-colors	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "ansi-colors": {$/;"	o	object:dependencies
ansi-escapes	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ansi-escapes": "^4.2.1",$/;"	s	object:dependencies.@jest/core.requires
ansi-escapes	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ansi-escapes": "^4.2.1",$/;"	s	object:dependencies.jest-watcher.requires
ansi-escapes	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ansi-escapes": "^4.2.1",$/;"	s	object:dependencies.terminal-link.requires
ansi-escapes	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "ansi-escapes": {$/;"	o	object:dependencies
ansi-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "ansi-regex": "^4.1.0"$/;"	s	object:dependencies.table.dependencies.strip-ansi.requires
ansi-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ansi-regex": "^5.0.0"$/;"	s	object:dependencies.strip-ansi.requires
ansi-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ansi-regex": "^5.0.0",$/;"	s	object:dependencies.pretty-format.requires
ansi-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ansi-regex": {$/;"	o	object:dependencies.table.dependencies
ansi-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "ansi-regex": {$/;"	o	object:dependencies
ansi-styles	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "ansi-styles": "^3.2.1",$/;"	s	object:dependencies.@babel/highlight.dependencies.chalk.requires
ansi-styles	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "ansi-styles": "^3.2.1",$/;"	s	object:dependencies.cli-table.dependencies.chalk.requires
ansi-styles	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ansi-styles": "^3.2.0",$/;"	s	object:dependencies.slice-ansi.requires
ansi-styles	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ansi-styles": "^4.0.0",$/;"	s	object:dependencies.expect.requires
ansi-styles	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ansi-styles": "^4.0.0",$/;"	s	object:dependencies.pretty-format.requires
ansi-styles	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ansi-styles": "^4.0.0",$/;"	s	object:dependencies.wrap-ansi.requires
ansi-styles	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ansi-styles": "^4.1.0",$/;"	s	object:dependencies.chalk.requires
ansi-styles	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ansi-styles": {$/;"	o	object:dependencies.@babel/highlight.dependencies
ansi-styles	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ansi-styles": {$/;"	o	object:dependencies.chalk.dependencies
ansi-styles	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ansi-styles": {$/;"	o	object:dependencies.cli-table.dependencies
ansi-styles	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ansi-styles": {$/;"	o	object:dependencies.expect.dependencies
ansi-styles	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ansi-styles": {$/;"	o	object:dependencies.pretty-format.dependencies
ansi-styles	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ansi-styles": {$/;"	o	object:dependencies.slice-ansi.dependencies
ansi-styles	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ansi-styles": {$/;"	o	object:dependencies.wrap-ansi.dependencies
ansi-styles	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "ansi-styles": {$/;"	o	object:dependencies
ansiBenchmarkString	vim/.vim/plugged/fzf/src/ansi_test.go	/^const ansiBenchmarkString = "\\x1b[38;5;81m\\x1b[01;31m\\x1b[Kkernel\/\\x1b[0m\\x1b[38;5;81mbpf\//;"	c	package:fzf
ansiOffset	vim/.vim/plugged/fzf/src/ansi.go	/^type ansiOffset struct {$/;"	s	package:fzf
ansiRegexReference	vim/.vim/plugged/fzf/src/ansi_test.go	/^var ansiRegexReference = regexp.MustCompile("(?:\\x1b[\\\\[()][0-9;]*[a-zA-Z@]|\\x1b][0-9];[[:pr/;"	v	package:fzf
ansiState	vim/.vim/plugged/fzf/src/ansi.go	/^type ansiState struct {$/;"	s	package:fzf
anyOf	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "anyOf": [$/;"	a	object:properties.coc.preferences.jumpCommand
any_include?	vim/.vim/plugged/fzf/test/test_go.rb	/^          def any_include?(val)$/;"	f	method:Tmux.until
anymatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "anymatch": "^2.0.0",$/;"	s	object:dependencies.sane.requires
anymatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "anymatch": "^3.0.3",$/;"	s	object:dependencies.jest-haste-map.requires
anymatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "anymatch": "~3.1.1",$/;"	s	object:dependencies.chokidar.requires
anymatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "anymatch": {$/;"	o	object:dependencies.sane.dependencies
anymatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "anymatch": {$/;"	o	object:dependencies
ao	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
aoe	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
ap	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	f
append	vim/.vim/plugged/fzf/src/history.go	/^func (h *History) append(line string) error {$/;"	f	struct:fzf.History	typeref:typename:error
append_line	vim/.vim/plugged/fzf/install	/^append_line() {$/;"	f
apprentice	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### apprentice$/;"	S	chapter:Available Colorschemes
apt	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^    "apt": {$/;"	o
argesc	vim/.vim/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^function global:argesc($arg) {$/;"	f
argparse	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "argparse": "^1.0.7",$/;"	s	object:dependencies.js-yaml.requires
argparse	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "argparse": {$/;"	o	object:dependencies
args	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	p	class:vme.l
args	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "args": {$/;"	o	object:definitions.languageServerCommand.properties
args	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "args": {$/;"	o	object:definitions.languageServerModule.properties
args=	vim/.vim/plugged/fzf/bin/fzf-tmux	/^      args=()$/;"	f
args=	vim/.vim/plugged/fzf/bin/fzf-tmux	/^args=()$/;"	f
args=	vim/.vim/plugged/fzf/shell/completion.bash	/^    args=()$/;"	f
args=	vim/.vim/plugged/fzf/shell/completion.zsh	/^    args=()$/;"	f
argv	vim/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$argv = @(de64_args($args))$/;"	v
arr	vim/.vim/plugged/vim-styled-components/examples/indent.js	/^      arr: [$/;"	p	class:Test.constructor.state
arr-diff	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "arr-diff": "^4.0.0",$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
arr-diff	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "arr-diff": "^4.0.0",$/;"	s	object:dependencies.nanomatch.requires
arr-diff	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "arr-diff": {$/;"	o	object:dependencies
arr-flatten	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "arr-flatten": "^1.1.0",$/;"	s	object:dependencies.sane.dependencies.braces.requires
arr-flatten	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "arr-flatten": {$/;"	o	object:dependencies
arr-union	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "arr-union": "^3.1.0",$/;"	s	object:dependencies.class-utils.requires
arr-union	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "arr-union": "^3.1.0",$/;"	s	object:dependencies.union-value.requires
arr-union	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "arr-union": {$/;"	o	object:dependencies
array	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
array-union	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "array-union": "^2.1.0",$/;"	s	object:dependencies.globby.requires
array-union	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "array-union": {$/;"	o	object:dependencies
array-unique	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "array-unique": "^0.3.2",$/;"	s	object:dependencies.sane.dependencies.braces.requires
array-unique	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "array-unique": "^0.3.2",$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
array-unique	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "array-unique": "^0.3.2",$/;"	s	object:dependencies.extglob.requires
array-unique	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "array-unique": "^0.3.2",$/;"	s	object:dependencies.nanomatch.requires
array-unique	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "array-unique": {$/;"	o	object:dependencies
as	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
asciiFuzzyIndex	vim/.vim/plugged/fzf/src/algo/algo.go	/^func asciiFuzzyIndex(input *util.Chars, pattern []rune, caseSensitive bool) int {$/;"	f	package:algo	typeref:typename:int
ask	vim/.vim/plugged/fzf/install	/^ask() {$/;"	f
ask	vim/.vim/plugged/fzf/uninstall	/^ask() {$/;"	f
assert	vim/.vim/plugged/fzf/src/merger_test.go	/^func assert(t *testing.T, cond bool, msg ...string) {$/;"	f	package:fzf
assert	vim/.vim/plugged/fzf/src/tui/tcell_test.go	/^func assert(t *testing.T, context string, got interface{}, want interface{}) bool {$/;"	f	package:tui	typeref:typename:bool
assertChangeAnnotations	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
assertMatch	vim/.vim/plugged/fzf/src/algo/algo_test.go	/^func assertMatch(t *testing.T, fun Algo, caseSensitive, forward bool, input, pattern string, sid/;"	f	package:algo
assertMatch2	vim/.vim/plugged/fzf/src/algo/algo_test.go	/^func assertMatch2(t *testing.T, fun Algo, caseSensitive, normalize, forward bool, input, pattern/;"	f	package:algo
assign-symbols	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "assign-symbols": "^1.0.0",$/;"	s	object:dependencies.extend-shallow.requires
assign-symbols	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "assign-symbols": {$/;"	o	object:dependencies
astral-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "astral-regex": "^1.0.0",$/;"	s	object:dependencies.slice-ansi.requires
astral-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "astral-regex": {$/;"	o	object:dependencies
asynckit	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "asynckit": "^0.4.0",$/;"	s	object:dependencies.form-data.requires
asynckit	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "asynckit": {$/;"	o	object:dependencies
at	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
at	vim/.vim/plugged/fzf/src/terminal.go	/^	at   time.Time$/;"	m	struct:fzf.selectedItem	typeref:typename:time.Time
at-least-node	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "at-least-node": "^1.0.0",$/;"	s	object:dependencies.fs-extra.requires
at-least-node	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "at-least-node": {$/;"	o	object:dependencies
atob	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "atob": "^2.1.2",$/;"	s	object:dependencies.source-map-resolve.requires
atob	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "atob": {$/;"	o	object:dependencies
atof	vim/.vim/plugged/fzf/src/options.go	/^func atof(str string) float64 {$/;"	f	package:fzf	typeref:typename:float64
atoi	vim/.vim/plugged/fzf/src/options.go	/^func atoi(str string) int {$/;"	f	package:fzf	typeref:typename:int
atoi	vim/.vim/plugged/fzf/src/tui/light.go	/^func atoi(s string, defaultValue int) int {$/;"	f	package:tui	typeref:typename:int
attr	vim/.vim/plugged/fzf/src/ansi.go	/^	attr tui.Attr$/;"	m	struct:fzf.ansiState	typeref:typename:tui.Attr
attr	vim/.vim/plugged/fzf/src/tui/tui.go	/^	attr Attr$/;"	m	struct:tui.ColorPair	typeref:typename:Attr
attrCodes	vim/.vim/plugged/fzf/src/tui/light.go	/^func attrCodes(attr Attr) []string {$/;"	f	package:tui	typeref:typename:[]string
auth	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:eme.n
av	vim/.vim/plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
aw	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	f
awkBlack	vim/.vim/plugged/fzf/src/tokenizer.go	/^	awkBlack$/;"	c	package:fzf
awkNil	vim/.vim/plugged/fzf/src/tokenizer.go	/^	awkNil = iota$/;"	c	package:fzf
awkTokenizer	vim/.vim/plugged/fzf/src/tokenizer.go	/^func awkTokenizer(input string) ([]string, int) {$/;"	f	package:fzf	typeref:typename:([]string, int)
awkWhite	vim/.vim/plugged/fzf/src/tokenizer.go	/^	awkWhite$/;"	c	package:fzf
ax	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	v
ay	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
ayu_dark	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### ayu_dark$/;"	S	chapter:Available Colorschemes
ayu_light	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### ayu_light$/;"	S	chapter:Available Colorschemes
ayu_mirage	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### ayu_mirage$/;"	S	chapter:Available Colorschemes
b	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
b	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
b	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
b	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:AnonymousFunction272f78ae1800.AnonymousFunction272f78ae1900
b	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
b	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:a
b	vim/.vim/plugged/vim-css-color/tests/example.css	/^b { background: #335599 }$/;"	s
b$	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	f
b0	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	f
b5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
b6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
b7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
b8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
b9	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
b:coc_root_patterns	.config/nvim_copy/init.vim	/^let b:coc_root_patterns = ['.git', '.env', 'package,json', 'composer.json']$/;"	v
b:coc_root_patterns	vim/.vimrc	/^let b:coc_root_patterns = ['.git', '.env', 'package,json', 'composer.json']$/;"	v
b:current_syntax	vim/.vim/plugged/typescript-vim/syntax/typescript.vim	/^let b:current_syntax = "typescript"$/;"	v
b:current_syntax	vim/.vim/plugged/vim-fugitive/syntax/fugitive.vim	/^let b:current_syntax = "fugitive"$/;"	v
b:current_syntax	vim/.vim/plugged/vim-fugitive/syntax/fugitiveblame.vim	/^let b:current_syntax = "fugitiveblame"$/;"	v
b:current_syntax	vim/.vim/plugged/vim-graphql/after/syntax/javascript/graphql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	vim/.vim/plugged/vim-graphql/after/syntax/php/graphql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	vim/.vim/plugged/vim-graphql/after/syntax/reason/graphql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	vim/.vim/plugged/vim-graphql/after/syntax/rescript/graphql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	vim/.vim/plugged/vim-graphql/after/syntax/typescript/graphql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	vim/.vim/plugged/vim-graphql/syntax/graphql.vim	/^let b:current_syntax = 'graphql'$/;"	v
b:current_syntax	vim/.vim/plugged/vim-javascript/syntax/javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	vim/.vim/plugged/vim-jsx-typescript/after/syntax/typescriptreact.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	vim/.vim/plugged/vim-jsx-typescript/after/syntax/typescriptreact.vim	/^let b:current_syntax = 'typescriptreact'$/;"	v
b:current_syntax	vim/.vim/plugged/vim-styled-components/after/syntax/javascript.vim	/^  let b:current_syntax=s:current_syntax$/;"	v
b:current_syntax	vim/.vim/plugged/vim-toml/syntax/toml.vim	/^let b:current_syntax = 'toml'$/;"	v
b:current_syntax	vim/.vim/plugged/vim-translator/syntax/translator.vim	/^let b:current_syntax = 'translator'$/;"	v
b:did_ftplugin	vim/.vim/plugged/typescript-vim/ftplugin/typescript.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	vim/.vim/plugged/vim-fugitive/ftplugin/fugitiveblame.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	vim/.vim/plugged/vim-graphql/ftplugin/graphql.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	vim/.vim/plugged/vim-toml/ftplugin/toml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	vim/.vim/plugged/vim-vue-plugin/ftplugin/vue.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vim/.vim/plugged/vim-graphql/indent/graphql.vim	/^  let b:did_indent = 1$/;"	v
b:did_indent	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vim/.vim/plugged/vim-jsx-typescript/after/indent/typescriptreact.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vim/.vim/plugged/vim-vue-plugin/indent/vue.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vim/.vim/plugged/vim-vue-plugin/lib/indent/css.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vim/.vim/plugged/vim-vue-plugin/lib/indent/xml.vim	/^let b:did_indent = 1$/;"	v
b:graphql_nested_syntax	vim/.vim/plugged/vim-graphql/after/syntax/javascript/graphql.vim	/^let b:graphql_nested_syntax = 1$/;"	v
b:graphql_nested_syntax	vim/.vim/plugged/vim-graphql/after/syntax/php/graphql.vim	/^let b:graphql_nested_syntax = 1$/;"	v
b:graphql_nested_syntax	vim/.vim/plugged/vim-graphql/after/syntax/reason/graphql.vim	/^let b:graphql_nested_syntax = 1$/;"	v
b:graphql_nested_syntax	vim/.vim/plugged/vim-graphql/after/syntax/rescript/graphql.vim	/^let b:graphql_nested_syntax = 1$/;"	v
b:graphql_nested_syntax	vim/.vim/plugged/vim-graphql/after/syntax/typescript/graphql.vim	/^let b:graphql_nested_syntax = 1$/;"	v
b:indentexpr_base	vim/.vim/plugged/vim-graphql/after/indent/javascript.vim	/^let b:indentexpr_base = &indentexpr$/;"	v
b:indentexpr_base	vim/.vim/plugged/vim-graphql/after/indent/php.vim	/^let b:indentexpr_base = &indentexpr$/;"	v
b:indentexpr_base	vim/.vim/plugged/vim-graphql/after/indent/typescript.vim	/^let b:indentexpr_base = &indentexpr$/;"	v
b:js_ts_indent	vim/.vim/plugged/vim-styled-components/after/indent/javascript.vim	/^let b:js_ts_indent=&indentexpr$/;"	v
b:match_ignorecase	vim/.vim/plugged/vim-jsx-typescript/after/ftplugin/typescriptreact.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	vim/.vim/plugged/vim-vue-plugin/ftplugin/vue.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_words	vim/.vim/plugged/vim-jsx-typescript/after/ftplugin/typescriptreact.vim	/^  let b:match_words = '(:),\\[:\\],{:},<:>,' .$/;"	v
b:match_words	vim/.vim/plugged/vim-vue-plugin/ftplugin/vue.vim	/^  let b:match_words = '<:>,' .$/;"	v
b:prevofu	vim/.vim/plugged/vim-styled-components/after/ftplugin/javascript.vim	/^    let b:prevofu=&ofu$/;"	v
b:syng_str	vim/.vim/plugged/vim-vue-plugin/ftplugin/vue.vim	/^let b:syng_str = '^\\%(.*template\\)\\@!.*string\\|special'$/;"	v
b:syng_strcom	vim/.vim/plugged/vim-vue-plugin/ftplugin/vue.vim	/^let b:syng_strcom = '^\\%(.*template\\)\\@!.*string\\|comment\\|regex\\|special\\|doc'$/;"	v
b:undo_ftplugin	vim/.vim/plugged/typescript-vim/ftplugin/typescript.vim	/^let b:undo_ftplugin = "setl fo< ofu< com< cms<"$/;"	v
b:undo_ftplugin	vim/.vim/plugged/vim-graphql/ftplugin/graphql.vim	/^let b:undo_ftplugin = 'setlocal com< cms< fo< isk< sts< sw< et<'$/;"	v
b:undo_ftplugin	vim/.vim/plugged/vim-javascript/after/ftplugin/javascript.vim	/^  let b:undo_ftplugin .= ' | setlocal iskeyword< suffixesadd<'$/;"	v
b:undo_ftplugin	vim/.vim/plugged/vim-javascript/after/ftplugin/javascript.vim	/^  let b:undo_ftplugin = 'setlocal iskeyword< suffixesadd<'$/;"	v
b:undo_ftplugin	vim/.vim/plugged/vim-toml/ftplugin/toml.vim	/^let b:undo_ftplugin = 'setlocal commentstring< comments<'$/;"	v
b:undo_indent	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^let b:undo_indent = 'setlocal indentexpr< smartindent< autoindent< indentkeys<'$/;"	v
b:undo_indent	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^let b:undo_indent = 'setlocal indentexpr< smartindent< autoindent< indentkeys< lisp<'$/;"	v
b:undo_indent	vim/.vim/plugged/vim-vue-plugin/lib/indent/css.vim	/^let b:undo_indent = "setl smartindent< indentkeys< indentexpr<"$/;"	v
b:xml_indent_close	vim/.vim/plugged/vim-jsx-typescript/after/indent/typescriptreact.vim	/^let b:xml_indent_close = '.\\{-}<\/'$/;"	v
b:xml_indent_close	vim/.vim/plugged/vim-vue-plugin/lib/indent/xml.vim	/^    let b:xml_indent_close = '.\\{-}<\/'$/;"	v
b:xml_indent_open	vim/.vim/plugged/vim-jsx-typescript/after/indent/typescriptreact.vim	/^let b:xml_indent_open = '.\\{-}<\\a'$/;"	v
b:xml_indent_open	vim/.vim/plugged/vim-vue-plugin/lib/indent/xml.vim	/^    let b:xml_indent_open = '.\\{-}<\\a'$/;"	v
bA	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
bB	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
bC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
bD	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
bG	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
bI	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
bK	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
bL	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
bN	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
bOe	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
bP	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
bV	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
bX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
bZ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
b_	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
ba	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
babel-jest	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "babel-jest": "^26.6.3",$/;"	s	object:dependencies.jest-config.requires
babel-jest	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "babel-jest": {$/;"	o	object:dependencies
babel-plugin-istanbul	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "babel-plugin-istanbul": "^6.0.0",$/;"	s	object:dependencies.@jest/transform.requires
babel-plugin-istanbul	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "babel-plugin-istanbul": "^6.0.0",$/;"	s	object:dependencies.babel-jest.requires
babel-plugin-istanbul	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "babel-plugin-istanbul": {$/;"	o	object:dependencies
babel-plugin-jest-hoist	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "babel-plugin-jest-hoist": "^26.6.2",$/;"	s	object:dependencies.babel-preset-jest.requires
babel-plugin-jest-hoist	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "babel-plugin-jest-hoist": {$/;"	o	object:dependencies
babel-preset-current-node-syntax	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "babel-preset-current-node-syntax": "^1.0.0"$/;"	s	object:dependencies.babel-preset-jest.requires
babel-preset-current-node-syntax	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "babel-preset-current-node-syntax": {$/;"	o	object:dependencies
babel-preset-jest	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "babel-preset-jest": "^26.6.2",$/;"	s	object:dependencies.babel-jest.requires
babel-preset-jest	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "babel-preset-jest": {$/;"	o	object:dependencies
backgroundColor	vim/.vim/plugged/vim-css-color/tests/example.jsx	/^			backgroundColor: 'green',$/;"	p	class:AnonymousFunction5f5fc9ae0100.style
balanced-match	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "balanced-match": "^1.0.0",$/;"	s	object:dependencies.brace-expansion.requires
balanced-match	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "balanced-match": {$/;"	o	object:dependencies
base	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "base": "^0.11.1",$/;"	s	object:dependencies.snapdragon.requires
base	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "base": {$/;"	o	object:dependencies
bash	vim/.vim/plugged/fzf/test/test_go.rb	/^    def bash$/;"	S	class:Shell
basicMatch	vim/.vim/plugged/fzf/src/pattern.go	/^func (p *Pattern) basicMatch(item *Item, withPos bool, slab *util.Slab) (Offset, int, *[]int) {$/;"	f	struct:fzf.Pattern	typeref:typename:(Offset, int, *[]int)
basic_args	vim/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$basic_args = '-nNes','-i','NONE','-u','NONE','-U','NONE'   #, '-V1'$/;"	v
battery	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^    "battery": {$/;"	o
be	vim/.vim/plugged/coc.nvim/build/index.js	/^`+(h.tokens?this.parseInline(h.tokens):h.text);i+=t?this.renderer.paragraph(d):d;continue}defaul/;"	f
before	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:Uz.o.u
before	vim/.vim/plugged/vim-multiple-cursors/spec/benchmark_spec.rb	/^def before(string)$/;"	f
before	vim/.vim/plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def before(string)$/;"	f
begin	vim/.vim/plugged/fzf/src/tokenizer.go	/^	begin int$/;"	m	struct:fzf.Range	typeref:typename:int
bench	vim/.vim/plugged/fzf/Makefile	/^bench:$/;"	t
bf	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
bg	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
bg	vim/.vim/plugged/fzf/src/ansi.go	/^	bg   tui.Color$/;"	m	struct:fzf.ansiState	typeref:typename:tui.Color
bg	vim/.vim/plugged/fzf/src/tui/light.go	/^	bg       Color$/;"	m	struct:tui.LightWindow	typeref:typename:Color
bg	vim/.vim/plugged/fzf/src/tui/tui.go	/^	bg   Color$/;"	m	struct:tui.ColorPair	typeref:typename:Color
bg	vim/.vim/plugged/iceberg-dark/.tmux/iceberg.tmux.conf	/^set -g status-style "none,bg=#1e2132"$/;"	k
bg	vim/.vim/plugged/iceberg-dark/.tmux/iceberg_minimal.tmux.conf	/^set -g status-style "bg=#1e2132"$/;"	k
bg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^            "bg": "#161821"$/;"	s	object:apt.good
bg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^            "bg": "#161821"$/;"	s	object:dnf.good
bg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^            "bg": "#161821"$/;"	s	object:pacman.good
bg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^            "bg": "#84a0c6"$/;"	s	object:battery.charging
bg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^            "bg": "#b4be82"$/;"	s	object:battery.charged
bg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^            "bg": "#e27878"$/;"	s	object:defaults.critical
bg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^            "bg": "#e2a478"$/;"	s	object:defaults.warning
bg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        { "fg": "#d2d4de", "bg": "#161821" },$/;"	s	object:cycle.0
bg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        { "fg": "#d2d4de", "bg": "#1e212d" }$/;"	s	object:cycle.6
bg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        { "fg": "#d2d4de", "bg": "#262939" },$/;"	s	object:cycle.1
bg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        { "fg": "#d2d4de", "bg": "#262939" },$/;"	s	object:cycle.5
bg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        { "fg": "#d2d4de", "bg": "#353a50" },$/;"	s	object:cycle.2
bg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        { "fg": "#d2d4de", "bg": "#353a50" },$/;"	s	object:cycle.4
bg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        { "fg": "#d2d4de", "bg": "#454b68" },$/;"	s	object:cycle.3
bgBlack	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgBlackBright	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgBlue	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgBlueBright	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgColor	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	c	class:Uoe.e
bgCyan	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgCyanBright	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgGreen	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgGreenBright	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgMagenta	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgMagentaBright	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgRed	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgRedBright	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgWhite	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgWhiteBright	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgYellow	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bgYellowBright	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.bgColor
bge	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
bi	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
bi	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
bie	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
big	vim/.vim/plugged/vim-styled-components/examples/issue-37.ts	/^  big: boolean;$/;"	p	interface:CardProps
bin	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
bin/fzf	vim/.vim/plugged/fzf/Makefile	/^bin\/fzf: target\/$(BINARY) | bin$/;"	t
binary	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "binary": "^0.3.0",$/;"	s	object:dependencies.unzip-stream.requires
binary	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "binary": {$/;"	o	object:dependencies
binary-extensions	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "binary-extensions": "^2.0.0"$/;"	s	object:dependencies.is-binary-path.requires
binary-extensions	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "binary-extensions": {$/;"	o	object:dependencies
bj	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
bl	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
black	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
blackBright	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
blah	vim/.vim/plugged/MatchTagAlways/test.html	/^    <div style=">" id="blah">$/;"	I
blah	vim/.vim/plugged/MatchTagAlways/test.html	/^<div style="stuff" id="blah">$/;"	I
ble	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
blue	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
blueBright	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
bme	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	f
bo	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
body	vim/.vim/plugged/vim-styled-components/examples/issue-67.js	/^const body = css.global`$/;"	C
bold	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.modifier
bonusAt	vim/.vim/plugged/fzf/src/algo/algo.go	/^func bonusAt(input *util.Chars, idx int) int16 {$/;"	f	package:algo	typeref:typename:int16
bonusBoundary	vim/.vim/plugged/fzf/src/algo/algo.go	/^	bonusBoundary = scoreMatch \/ 2$/;"	c	package:algo
bonusCamel123	vim/.vim/plugged/fzf/src/algo/algo.go	/^	bonusCamel123 = bonusBoundary + scoreGapExtension$/;"	c	package:algo
bonusConsecutive	vim/.vim/plugged/fzf/src/algo/algo.go	/^	bonusConsecutive = -(scoreGapStart + scoreGapExtension)$/;"	c	package:algo
bonusFirstCharMultiplier	vim/.vim/plugged/fzf/src/algo/algo.go	/^	bonusFirstCharMultiplier = 2$/;"	c	package:algo
bonusFor	vim/.vim/plugged/fzf/src/algo/algo.go	/^func bonusFor(prevClass charClass, class charClass) int16 {$/;"	f	package:algo	typeref:typename:int16
bonusNonWord	vim/.vim/plugged/fzf/src/algo/algo.go	/^	bonusNonWord = scoreMatch \/ 2$/;"	c	package:algo
bool	vim/.vim/plugged/vim-styled-components/examples/issue-55.ts	/^  bool: boolean;$/;"	p	interface:Foo
boolean	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:WQ.l
bools	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:AnonymousFunction272f78ae29d00.t
border	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "border": {$/;"	o	object:definitions.float.properties
border	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "border": {},$/;"	o	object:properties.diagnostic.floatConfig.properties
border	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "border": {},$/;"	o	object:properties.hover.floatConfig.properties
border	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "border": {},$/;"	o	object:properties.signature.floatConfig.properties
border	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "border": {},$/;"	o	object:properties.suggest.floatConfig.properties
border	vim/.vim/plugged/fzf/src/options.go	/^	border      tui.BorderShape$/;"	m	struct:fzf.previewOpts	typeref:typename:tui.BorderShape
border	vim/.vim/plugged/fzf/src/terminal.go	/^	border       tui.Window$/;"	m	struct:fzf.Terminal	typeref:typename:tui.Window
border	vim/.vim/plugged/fzf/src/tui/light.go	/^	border   BorderStyle$/;"	m	struct:tui.LightWindow	typeref:typename:BorderStyle
border	vim/.vim/plugged/vim-css-color/tests/example.jsx	/^			border: '3px dotted rgba(255,0,0)'$/;"	p	class:AnonymousFunction5f5fc9ae0100.style
borderShape	vim/.vim/plugged/fzf/src/terminal.go	/^	borderShape  tui.BorderShape$/;"	m	struct:fzf.Terminal	typeref:typename:tui.BorderShape
borderStyle	vim/.vim/plugged/fzf/src/tui/tcell.go	/^	borderStyle BorderStyle$/;"	m	struct:tui.TcellWindow	typeref:typename:BorderStyle
borderhighlight	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "borderhighlight": {$/;"	o	object:definitions.float.properties
borderhighlight	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "borderhighlight": {},$/;"	o	object:properties.diagnostic.floatConfig.properties
borderhighlight	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "borderhighlight": {},$/;"	o	object:properties.hover.floatConfig.properties
borderhighlight	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "borderhighlight": {},$/;"	o	object:properties.signature.floatConfig.properties
borderhighlight	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "borderhighlight": {},$/;"	o	object:properties.suggest.floatConfig.properties
bottomLeft	vim/.vim/plugged/fzf/src/tui/tui.go	/^	bottomLeft  rune$/;"	m	struct:tui.BorderStyle	typeref:typename:rune
bottomRight	vim/.vim/plugged/fzf/src/tui/tui.go	/^	bottomRight rune$/;"	m	struct:tui.BorderStyle	typeref:typename:rune
bp	vim/.vim/plugged/coc.nvim/build/index.js	/^`+h+d;u.push({range:ds.Range.create(n,h.length,n,h.length),newText:"  \\\\ "}),g=g+"\\\\ ",u.pus/;"	f
brace-expansion	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "brace-expansion": "^1.1.7"$/;"	s	object:dependencies.minimatch.requires
brace-expansion	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "brace-expansion": {$/;"	o	object:dependencies
braces	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "braces": "^2.3.1",$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
braces	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "braces": "^3.0.1",$/;"	s	object:dependencies.micromatch.requires
braces	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "braces": "~3.0.2",$/;"	s	object:dependencies.chokidar.requires
braces	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "braces": {$/;"	o	object:dependencies.sane.dependencies
braces	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "braces": {$/;"	o	object:dependencies
browser-process-hrtime	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "browser-process-hrtime": "^1.0.0"$/;"	s	object:dependencies.w3c-hr-time.requires
browser-process-hrtime	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "browser-process-hrtime": {$/;"	o	object:dependencies
browserslist	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "browserslist": "^4.16.6",$/;"	s	object:dependencies.@babel/helper-compilation-targets.requires
browserslist	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "browserslist": {$/;"	o	object:dependencies
bs-logger	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "bs-logger": "0.x",$/;"	s	object:dependencies.ts-jest.requires
bs-logger	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "bs-logger": {$/;"	o	object:dependencies
bse	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
bser	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "bser": "2.1.1"$/;"	s	object:dependencies.fb-watchman.requires
bser	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "bser": {$/;"	o	object:dependencies
bt	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
bte	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
buffer	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:h
buffer	vim/.vim/plugged/fzf/src/tui/light.go	/^	buffer        []byte$/;"	m	struct:tui.LightRenderer	typeref:typename:[]byte
buffer-from	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "buffer-from": "1.x",$/;"	s	object:dependencies.ts-jest.requires
buffer-from	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "buffer-from": "^1.0.0",$/;"	s	object:dependencies.source-map-support.requires
buffer-from	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "buffer-from": {$/;"	o	object:dependencies
buffers	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "buffers": "~0.1.1",$/;"	s	object:dependencies.binary.requires
buffers	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "buffers": {$/;"	o	object:dependencies
build	vim/.vim/plugged/fzf/Makefile	/^build:$/;"	t
buildCacheKey	vim/.vim/plugged/fzf/src/pattern.go	/^func (p *Pattern) buildCacheKey() string {$/;"	f	struct:fzf.Pattern	typeref:typename:string
buildLists	vim/.vim/plugged/fzf/src/merger_test.go	/^func buildLists(partiallySorted bool) ([][]Result, []Result) {$/;"	f	package:fzf	typeref:typename:([][]Result, []Result)
buildPlusList	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) buildPlusList(template string, forcePlus bool) (bool, []*Item) {$/;"	f	struct:fzf.Terminal	typeref:typename:(bool, []*Item)
buildResult	vim/.vim/plugged/fzf/src/result.go	/^func buildResult(item *Item, offsets []Offset, score int) Result {$/;"	f	package:fzf	typeref:typename:Result
bv	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
bw	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
bx	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
bxe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
by	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
byBegin	vim/.vim/plugged/fzf/src/options.go	/^	byBegin$/;"	c	package:fzf
byEnd	vim/.vim/plugged/fzf/src/options.go	/^	byEnd$/;"	c	package:fzf
byLength	vim/.vim/plugged/fzf/src/options.go	/^	byLength$/;"	c	package:fzf
byScore	vim/.vim/plugged/fzf/src/options.go	/^	byScore criterion = iota$/;"	c	package:fzf	typeref:type:criterion
byTimeOrder	vim/.vim/plugged/fzf/src/terminal.go	/^type byTimeOrder []selectedItem$/;"	t	package:fzf	typeref:typename:[]selectedItem
bytes	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:AnonymousFunction272f78ae2f400.t.e
bytes	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "bytes": {$/;"	o	object:dependencies
c	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
c	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunction272f78ae13000
c	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:jC
c	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),g=+p.split(" ")[1];Kh("got proxy server response: %o",p),e({statusCode:g,buffered:d})}r.on("/;"	f	function:AnonymousFunction272f78ae34600
c	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunction272f78ae12100.e
c	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunction272f78aef700.e
c	vim/.vim/plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	v
c	vim/.vim/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	f	function:Npe
c	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	c
c	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
c	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
c	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c	class:AnonymousFunction272f78ae31400
c	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae33b00.e
c	vim/.vim/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	f	function:AnonymousFunction272f78ae33f00
c	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	c	class:$T
c	vim/.vim/plugged/coc.nvim/build/index.js	/^`);return r.length?r[0].length:0});Ad.prototype.render;Ad.prototype.toString=function(){var r=""/;"	f	function:AnonymousFunction272f78ae1fa00
c	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunction272f78ae29d00
c	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:WQ
c	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
c$	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
c0	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
c1	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
c5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
c6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
c7	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
c8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
c9	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
cB	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
cC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
cD	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
cG	vim/.vim/plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
cJ	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
cK	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
cN	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
cO	vim/.vim/plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	v
cP	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
cQ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
cSpell.userWords	.config/nvim_copy/coc-settings.json	/^  "cSpell.userWords": [$/;"	a
cSpell.userWords	vim/.vim/coc-settings.json	/^  "cSpell.userWords": [$/;"	a
cSpell.words	.config/nvim_copy/coc-settings.json	/^  "cSpell.words": [$/;"	a
cSpell.words	vim/.vim/coc-settings.json	/^  "cSpell.words": [$/;"	a
cV	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
cX	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
c_	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
cache	vim/.vim/plugged/fzf/src/cache.go	/^	cache map[*Chunk]*queryCache$/;"	m	struct:fzf.ChunkCache	typeref:typename:map[*Chunk]*queryCache
cache-base	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "cache-base": "^1.0.1",$/;"	s	object:dependencies.base.requires
cache-base	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "cache-base": {$/;"	o	object:dependencies
cacheKey	vim/.vim/plugged/fzf/src/pattern.go	/^	cacheKey      string$/;"	m	struct:fzf.Pattern	typeref:typename:string
cacheable	vim/.vim/plugged/fzf/src/merger.go	/^func (mg *Merger) cacheable() bool {$/;"	f	struct:fzf.Merger	typeref:typename:bool
cacheable	vim/.vim/plugged/fzf/src/pattern.go	/^	cacheable     bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
cae	vim/.vim/plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	f
calculateScore	vim/.vim/plugged/fzf/src/algo/algo.go	/^func calculateScore(caseSensitive bool, normalize bool, text *util.Chars, pattern []rune, sidx i/;"	f	package:algo	typeref:typename:(int, *[]int)
calculateSize	vim/.vim/plugged/fzf/src/terminal.go	/^func calculateSize(base int, size sizeSpec, occupied int, minSize int, pad int) int {$/;"	f	package:fzf	typeref:typename:int
call-bind	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "call-bind": "^1.0.0",$/;"	s	object:dependencies.object.assign.requires
call-bind	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "call-bind": "^1.0.0",$/;"	s	object:dependencies.side-channel.requires
call-bind	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "call-bind": "^1.0.0",$/;"	s	object:dependencies.string.prototype.matchall.requires
call-bind	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "call-bind": "^1.0.2"$/;"	s	object:dependencies.is-boolean-object.requires
call-bind	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "call-bind": "^1.0.2",$/;"	s	object:dependencies.es-abstract.requires
call-bind	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "call-bind": "^1.0.2",$/;"	s	object:dependencies.is-regex.requires
call-bind	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "call-bind": "^1.0.2",$/;"	s	object:dependencies.regexp.prototype.flags.requires
call-bind	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "call-bind": "^1.0.2",$/;"	s	object:dependencies.string.prototype.trimend.requires
call-bind	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "call-bind": "^1.0.2",$/;"	s	object:dependencies.string.prototype.trimstart.requires
call-bind	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "call-bind": {$/;"	o	object:dependencies
callHierarchy.enableTooltip	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "callHierarchy.enableTooltip": {$/;"	o	object:properties
callHierarchy.openCommand	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "callHierarchy.openCommand": {$/;"	o	object:properties
callHierarchy.splitCommand	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "callHierarchy.splitCommand": {$/;"	o	object:properties
callback	vim/.vim/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	m	class:AnonymousFunction272f78ae33e00.e
callsites	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "callsites": "^3.0.0"$/;"	s	object:dependencies.parent-module.requires
callsites	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "callsites": "^3.0.0",$/;"	s	object:dependencies.@jest/source-map.requires
callsites	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "callsites": {$/;"	o	object:dependencies
camelcase	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "camelcase": "^5.0.0",$/;"	s	object:dependencies.yargs-parser.requires
camelcase	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "camelcase": "^5.3.1",$/;"	s	object:dependencies.@istanbuljs/load-nyc-config.requires
camelcase	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "camelcase": "^6.0.0",$/;"	s	object:dependencies.jest-validate.requires
camelcase	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "camelcase": {$/;"	o	object:dependencies.jest-validate.dependencies
camelcase	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "camelcase": {$/;"	o	object:dependencies
cancelPreview	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) cancelPreview() {$/;"	f	struct:fzf.Terminal
caniuse-lite	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "caniuse-lite": "^1.0.30001219",$/;"	s	object:dependencies.browserslist.requires
caniuse-lite	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "caniuse-lite": {$/;"	o	object:dependencies
capture	vim/.vim/plugged/fzf/test/test_go.rb	/^  def capture$/;"	f	class:Tmux
capture-exit	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "capture-exit": "^2.0.0",$/;"	s	object:dependencies.sane.requires
capture-exit	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "capture-exit": {$/;"	o	object:dependencies
caseSensitive	vim/.vim/plugged/fzf/src/pattern.go	/^	caseSensitive bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
caseSensitive	vim/.vim/plugged/fzf/src/pattern.go	/^	caseSensitive bool$/;"	m	struct:fzf.term	typeref:typename:bool
cb	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:AnonymousFunction272f78ae2f400.t.e
cb	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
cd	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
ce	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Il
cee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
cf	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
cfe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
cgc	vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^    nmap cgc <Plug>ChangeCommentary$/;"	m
cge	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
ch	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
chain	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:t
chainsaw	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chainsaw": "~0.1.0"$/;"	s	object:dependencies.binary.requires
chainsaw	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "chainsaw": {$/;"	o	object:dependencies
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "chalk": "^4.0.0",$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chalk": "^2.0.0",$/;"	s	object:dependencies.@babel/highlight.requires
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chalk": "^2.4.1",$/;"	s	object:dependencies.cli-table.requires
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0"$/;"	s	object:dependencies.@jest/types.requires
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.@jest/console.requires
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.@jest/core.requires
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.@jest/reporters.requires
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.@jest/transform.requires
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.babel-jest.requires
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.eslint.requires
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-config.requires
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-diff.requires
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-each.requires
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-jasmine2.requires
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-matcher-utils.requires
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-message-util.requires
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-resolve.requires
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-runner.requires
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-runtime.requires
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-snapshot.requires
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-util.requires
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-validate.requires
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chalk": "^4.0.0",$/;"	s	object:dependencies.jest-watcher.requires
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chalk": {$/;"	o	object:dependencies.@babel/highlight.dependencies
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chalk": {$/;"	o	object:dependencies.cli-table.dependencies
chalk	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "chalk": {$/;"	o	object:dependencies
char-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "char-regex": "^1.0.2",$/;"	s	object:dependencies.string-length.requires
char-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "char-regex": {$/;"	o	object:dependencies
charClass	vim/.vim/plugged/fzf/src/algo/algo.go	/^type charClass int$/;"	t	package:algo	typeref:typename:int
charClassOf	vim/.vim/plugged/fzf/src/algo/algo.go	/^func charClassOf(char rune) charClass {$/;"	f	package:algo	typeref:typename:charClass
charClassOfAscii	vim/.vim/plugged/fzf/src/algo/algo.go	/^func charClassOfAscii(char rune) charClass {$/;"	f	package:algo	typeref:typename:charClass
charClassOfNonAscii	vim/.vim/plugged/fzf/src/algo/algo.go	/^func charClassOfNonAscii(char rune) charClass {$/;"	f	package:algo	typeref:typename:charClass
charLetter	vim/.vim/plugged/fzf/src/algo/algo.go	/^	charLetter$/;"	c	package:algo
charLower	vim/.vim/plugged/fzf/src/algo/algo.go	/^	charLower$/;"	c	package:algo
charNonWord	vim/.vim/plugged/fzf/src/algo/algo.go	/^	charNonWord charClass = iota$/;"	c	package:algo	typeref:type:charClass
charNumber	vim/.vim/plugged/fzf/src/algo/algo.go	/^	charNumber$/;"	c	package:algo
charUpper	vim/.vim/plugged/fzf/src/algo/algo.go	/^	charUpper$/;"	c	package:algo
character	vim/.vim/plugged/coc.nvim/build/index.js	/^`),o=i.line==r.start.line?i.character-r.start.character:i.character,a=A$(s,i.line-r.start.line,o/;"	p	class:$c.t
charged	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        "charged": {$/;"	o	object:battery
charging	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        "charging": {$/;"	o	object:battery
chars	vim/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^        $chars = ''$/;"	v
checkAscii	vim/.vim/plugged/fzf/src/util/chars.go	/^func checkAscii(bytes []byte) (bool, int) {$/;"	f	package:util	typeref:typename:(bool, int)
check_binary	vim/.vim/plugged/fzf/install	/^check_binary() {$/;"	f
check_binary	vim/.vim/plugged/fzf/install.ps1	/^function check_binary () {$/;"	f
children	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	p	class:q0.i
children	vim/.vim/plugged/vim-styled-components/examples/typescript.ts	/^  children?: React.ReactChild;$/;"	p	interface:SectionProps
chokidar	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "chokidar": {$/;"	o	object:dependencies
chownr	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "chownr": "^2.0.0",$/;"	s	object:dependencies.tar.requires
chownr	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "chownr": {$/;"	o	object:dependencies
chunkSize	vim/.vim/plugged/fzf/src/constants.go	/^	chunkSize int = 100$/;"	c	package:fzf	typeref:typename:int
chunks	vim/.vim/plugged/fzf/src/chunklist.go	/^	chunks []*Chunk$/;"	m	struct:fzf.ChunkList	typeref:typename:[]*Chunk
chunks	vim/.vim/plugged/fzf/src/matcher.go	/^	chunks     []*Chunk$/;"	m	struct:fzf.MatchRequest	typeref:typename:[]*Chunk
chunks	vim/.vim/plugged/fzf/src/merger.go	/^	chunks  *[]*Chunk$/;"	m	struct:fzf.Merger	typeref:typename:*[]*Chunk
ci-info	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ci-info": "^2.0.0"$/;"	s	object:dependencies.is-ci.requires
ci-info	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "ci-info": {$/;"	o	object:dependencies
circular	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:Uz.o.u
cj	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
cjs-module-lexer	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "cjs-module-lexer": "^0.6.0",$/;"	s	object:dependencies.jest-runtime.requires
cjs-module-lexer	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "cjs-module-lexer": {$/;"	o	object:dependencies
class	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "class": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
class-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "class-utils": "^0.3.5",$/;"	s	object:dependencies.base.requires
class-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "class-utils": {$/;"	o	object:dependencies
className	vim/.vim/plugged/vim-styled-components/examples/typescript.ts	/^  className?: string;$/;"	p	interface:SectionProps
clean	vim/.vim/plugged/fzf/Makefile	/^clean:$/;"	t
cleanExit	vim/.vim/plugged/fzf/src/terminal.go	/^	cleanExit    bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
cleanTemporaryFiles	vim/.vim/plugged/fzf/src/terminal.go	/^func cleanTemporaryFiles() {$/;"	f	package:fzf
cleanse	vim/.vim/plugged/fzf/src/tui/light.go	/^func cleanse(str string) string {$/;"	f	package:tui	typeref:typename:string
cleanup	vim/.vim/plugged/fzf/bin/fzf-tmux	/^cleanup() {$/;"	f
clear	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:c
clear	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
clearCache	vim/.vim/plugged/fzf/src/matcher.go	/^	clearCache bool$/;"	m	struct:fzf.MatchRequest	typeref:typename:bool
clearChunkCache	vim/.vim/plugged/fzf/src/pattern.go	/^func clearChunkCache() {$/;"	f	package:fzf
clearCode	vim/.vim/plugged/fzf/src/terminal.go	/^const clearCode string = "\\x1b[2J"$/;"	c	package:fzf	typeref:typename:string
clearOnExit	vim/.vim/plugged/fzf/src/tui/light.go	/^	clearOnExit   bool$/;"	m	struct:tui.LightRenderer	typeref:typename:bool
clearPatternCache	vim/.vim/plugged/fzf/src/pattern.go	/^func clearPatternCache() {$/;"	f	package:fzf
cli-table	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "cli-table": {$/;"	o	object:dependencies
clickY	vim/.vim/plugged/fzf/src/tui/light.go	/^	clickY        []int$/;"	m	struct:tui.LightRenderer	typeref:typename:[]int
clickY	vim/.vim/plugged/fzf/src/tui/tui.go	/^	clickY       []int$/;"	m	struct:tui.FullscreenRenderer	typeref:typename:[]int
cliui	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "cliui": "^6.0.0",$/;"	s	object:dependencies.yargs.requires
cliui	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "cliui": {$/;"	o	object:dependencies
close	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e
close	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "close": {$/;"	o	object:definitions.float.properties
close	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "close": {},$/;"	o	object:properties.diagnostic.floatConfig.properties
close	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "close": {},$/;"	o	object:properties.hover.floatConfig.properties
close	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "close": {},$/;"	o	object:properties.signature.floatConfig.properties
closePlatform	vim/.vim/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) closePlatform() {$/;"	f	unknown:tui.LightRenderer
closePlatform	vim/.vim/plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) closePlatform() {$/;"	f	unknown:tui.LightRenderer
close_translator_window	vim/.vim/plugged/vim-translator/autoload/translator/window/float.vim	/^  augroup close_translator_window$/;"	a
close_translator_window	vim/.vim/plugged/vim-translator/autoload/translator/window/preview.vim	/^  augroup close_translator_window$/;"	a
closetag.vim	vim/.vim/plugged/vim-closetag/README.md	/^closetag.vim$/;"	c
cm	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
cmd	vim/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$cmd = ''$/;"	v
cmd	vim/.vim/plugged/far.vim/autoload/far.vim	/^    let cmd = ['ack', '--nogroup', '--column', '--nocolor',$/;"	v
cmd	vim/.vim/plugged/far.vim/autoload/far.vim	/^    let cmd = ['ag', '--nogroup', '--column', '--nocolor', '--silent', '--vimgrep',$/;"	v
cmd	vim/.vim/plugged/far.vim/autoload/far.vim	/^    let cmd = ['rg', '-0', '--json', '--with-filename', '--no-heading',$/;"	v
cme	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
cn	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
co	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "co": "^4.6.0",$/;"	s	object:dependencies.jest-jasmine2.requires
co	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "co": {$/;"	o	object:dependencies
coc#_cancel	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_cancel()$/;"	f
coc#_complete	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_complete() abort$/;"	f
coc#_do_complete	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_do_complete(start, items, preselect)$/;"	f
coc#_hide	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_hide() abort$/;"	f
coc#_insert_key	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_insert_key(method, key, ...) abort$/;"	f
coc#_map	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_map()$/;"	f
coc#_select	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_select() abort$/;"	f
coc#_select_confirm	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_select_confirm() abort$/;"	f
coc#_selected	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_selected()$/;"	f
coc#_unmap	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_unmap()$/;"	f
coc#_unwatch	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_unwatch(key)$/;"	f
coc#_watch	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_watch(key)$/;"	f
coc#add_command	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#add_command(id, cmd, ...)$/;"	f
coc#add_extension	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#add_extension(...)$/;"	f
coc#api#call	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! coc#api#call(method, args) abort$/;"	f
coc#api#func_names	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! coc#api#func_names() abort$/;"	f
coc#api#notify	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! coc#api#notify(method, args) abort$/;"	f
coc#client#create	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#create(name, command)$/;"	f
coc#client#get_channel	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#get_channel(client)$/;"	f
coc#client#get_client	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#get_client(name) abort$/;"	f
coc#client#is_running	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#is_running(name) abort$/;"	f
coc#client#notify	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#notify(name, method, args)$/;"	f
coc#client#on_response	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#on_response(name, id, resp, isErr)$/;"	f
coc#client#open_log	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#open_log()$/;"	f
coc#client#request	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#request(name, method, args)$/;"	f
coc#client#request_async	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#request_async(name, method, args, cb)$/;"	f
coc#client#restart	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#restart(name) abort$/;"	f
coc#client#restart_all	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#restart_all()$/;"	f
coc#client#stop	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#stop(name) abort$/;"	f
coc#color#rgb2term	vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^function! coc#color#rgb2term(rgb)$/;"	f
coc#compat#buf_add_keymap	vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#buf_add_keymap(bufnr, mode, lhs, rhs, opts) abort$/;"	f
coc#compat#buf_del_keymap	vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#buf_del_keymap(bufnr, mode, lhs) abort$/;"	f
coc#compat#buf_del_var	vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#buf_del_var(bufnr, name) abort$/;"	f
coc#compat#buf_set_lines	vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#buf_set_lines(bufnr, start, end, replacement) abort$/;"	f
coc#compat#buf_win_id	vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#buf_win_id(bufnr) abort$/;"	f
coc#compat#clear_matches	vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#clear_matches(winid) abort$/;"	f
coc#compat#execute	vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#execute(winid, command, ...) abort$/;"	f
coc#compat#matchaddgroups	vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#matchaddgroups(winid, groups) abort$/;"	f
coc#compat#matchaddpos	vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#matchaddpos(group, pos, priority, winid) abort$/;"	f
coc#compat#win_is_valid	vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#win_is_valid(winid) abort$/;"	f
coc#config	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#config(section, value)$/;"	f
coc#cursor#char_offset	vim/.vim/plugged/coc.nvim/autoload/coc/cursor.vim	/^function! coc#cursor#char_offset() abort$/;"	f
coc#cursor#move_by_col	vim/.vim/plugged/coc.nvim/autoload/coc/cursor.vim	/^function! coc#cursor#move_by_col(delta)$/;"	f
coc#cursor#move_to	vim/.vim/plugged/coc.nvim/autoload/coc/cursor.vim	/^function! coc#cursor#move_to(line, character) abort$/;"	f
coc#cursor#position	vim/.vim/plugged/coc.nvim/autoload/coc/cursor.vim	/^function! coc#cursor#position()$/;"	f
coc#cursor#screen_pos	vim/.vim/plugged/coc.nvim/autoload/coc/cursor.vim	/^function! coc#cursor#screen_pos() abort$/;"	f
coc#do_notify	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#do_notify(id, method, result)$/;"	f
coc#expandable	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#expandable() abort$/;"	f
coc#expandableOrJumpable	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#expandableOrJumpable() abort$/;"	f
coc#float#check_related	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#check_related() abort$/;"	f
coc#float#close	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#close(winid) abort$/;"	f
coc#float#close_all	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#close_all(...) abort$/;"	f
coc#float#close_auto_hide_wins	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#close_auto_hide_wins(...) abort$/;"	f
coc#float#close_related	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#close_related(winid, ...) abort$/;"	f
coc#float#content_height	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#content_height(bufnr, width, wrap) abort$/;"	f
coc#float#create_border_lines	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_border_lines(border, title, width, height, hasbtn) abort$/;"	f
coc#float#create_buf	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_buf(bufnr, ...) abort$/;"	f
coc#float#create_cursor_float	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_cursor_float(winid, bufnr, lines, config) abort$/;"	f
coc#float#create_dialog	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_dialog(lines, config) abort$/;"	f
coc#float#create_float_win	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_float_win(winid, bufnr, config) abort$/;"	f
coc#float#create_menu	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_menu(lines, config) abort$/;"	f
coc#float#create_notification	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_notification(lines, config) abort$/;"	f
coc#float#create_prompt_win	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_prompt_win(title, default, opts) abort$/;"	f
coc#float#create_pum_float	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_pum_float(winid, bufnr, lines, config) abort$/;"	f
coc#float#cursor_relative	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#cursor_relative(winid) abort$/;"	f
coc#float#get_config_cursor	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#get_config_cursor(lines, config) abort$/;"	f
coc#float#get_float_win	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#get_float_win() abort$/;"	f
coc#float#get_float_win_list	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#get_float_win_list(...) abort$/;"	f
coc#float#get_related	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#get_related(winid, kind) abort$/;"	f
coc#float#has_float	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#has_float(...) abort$/;"	f
coc#float#has_scroll	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#has_scroll() abort$/;"	f
coc#float#jump	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#jump() abort$/;"	f
coc#float#nvim_border_win	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_border_win(config, winid, border, title, hasbtn, hlgroup, winblend, sha/;"	f
coc#float#nvim_buttons	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_buttons(config, winid, buttons, borderbottom, pad, hlgroup, borderhighl/;"	f
coc#float#nvim_close_btn	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_close_btn(config, winid, border, hlgroup, winblend, related) abort$/;"	f
coc#float#nvim_create_related	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_create_related(winid, config, opts) abort$/;"	f
coc#float#nvim_float_click	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_float_click() abort$/;"	f
coc#float#nvim_refresh_scrollbar	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_refresh_scrollbar(winid) abort$/;"	f
coc#float#nvim_right_pad	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_right_pad(config, winid, hlgroup, winblend, related) abort$/;"	f
coc#float#nvim_scroll_adjust	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_scroll_adjust(winid) abort$/;"	f
coc#float#nvim_scrollbar	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_scrollbar(winid) abort$/;"	f
coc#float#nvim_win_enter	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_win_enter(winid) abort$/;"	f
coc#float#prompt_confirm	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#prompt_confirm(title, cb) abort$/;"	f
coc#float#prompt_insert	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#prompt_insert(text) abort$/;"	f
coc#float#reflow	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#reflow(top) abort$/;"	f
coc#float#scroll	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#scroll(forward, ...)$/;"	f
coc#float#scroll_win	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#scroll_win(winid, forward, amount) abort$/;"	f
coc#float#scrollable	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#scrollable(winid) abort$/;"	f
coc#float#valid	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#valid(winid) abort$/;"	f
coc#float#vim_buttons	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#vim_buttons(winid, config) abort$/;"	f
coc#float#vim_filter	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#vim_filter(winid, key, keys) abort$/;"	f
coc#helper#dict_omit	vim/.vim/plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#dict_omit(dict, keys) abort$/;"	f
coc#helper#dict_pick	vim/.vim/plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#dict_pick(dict, keys) abort$/;"	f
coc#helper#get_charactor	vim/.vim/plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#get_charactor(line, col) abort$/;"	f
coc#helper#last_character	vim/.vim/plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#last_character(line) abort$/;"	f
coc#helper#max	vim/.vim/plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#max(first, ...) abort$/;"	f
coc#helper#min	vim/.vim/plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#min(first, ...) abort$/;"	f
coc#helper#obj_equal	vim/.vim/plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#obj_equal(one, two) abort$/;"	f
coc#helper#str_apply	vim/.vim/plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#str_apply(content, diff) abort$/;"	f
coc#helper#str_compose	vim/.vim/plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#str_compose(line, position, inserted) abort$/;"	f
coc#helper#str_diff	vim/.vim/plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#str_diff(curr, previous, col) abort$/;"	f
coc#highlight#add_highlight	vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#add_highlight(bufnr, src_id, hl_group, line, col_start, col_end) abort$/;"	f
coc#highlight#add_highlights	vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#add_highlights(winid, codes, highlights) abort$/;"	f
coc#highlight#clear_highlight	vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#clear_highlight(bufnr, key, start_line, end_line) abort$/;"	f
coc#highlight#clear_match_group	vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#clear_match_group(winid, match) abort$/;"	f
coc#highlight#clear_matches	vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#clear_matches(winid, ids)$/;"	f
coc#highlight#compose_hlgroup	vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#compose_hlgroup(fgGroup, bgGroup) abort$/;"	f
coc#highlight#create_namespace	vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#create_namespace(key) abort$/;"	f
coc#highlight#get	vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#get(bufnr, key, start, end) abort$/;"	f
coc#highlight#get_highlights	vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#get_highlights(bufnr, key) abort$/;"	f
coc#highlight#get_syntax_name	vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#get_syntax_name(lnum, col)$/;"	f
coc#highlight#highlight_lines	vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#highlight_lines(winid, blocks) abort$/;"	f
coc#highlight#match_ranges	vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#match_ranges(winid, bufnr, ranges, hlGroup, priority) abort$/;"	f
coc#highlight#ranges	vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#ranges(bufnr, key, hlGroup, ranges) abort$/;"	f
coc#highlight#update_highlights	vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#update_highlights(bufnr, key, highlights, ...) abort$/;"	f
coc#jumpable	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#jumpable() abort$/;"	f
coc#list#clean_up	vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#clean_up() abort$/;"	f
coc#list#create	vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#create(position, height, name, numberSelect)$/;"	f
coc#list#get_preview	vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#get_preview(...) abort$/;"	f
coc#list#getchar	vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#getchar() abort$/;"	f
coc#list#has_preview	vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#has_preview()$/;"	f
coc#list#hide	vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#hide(original, height, winid) abort$/;"	f
coc#list#names	vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#names(...) abort$/;"	f
coc#list#options	vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#options(...)$/;"	f
coc#list#preview	vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#preview(lines, config) abort$/;"	f
coc#list#restore	vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#restore(winid, height)$/;"	f
coc#list#scroll_preview	vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#scroll_preview(dir) abort$/;"	f
coc#list#set_height	vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#set_height(height) abort$/;"	f
coc#list#setlines	vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#setlines(bufnr, lines, append)$/;"	f
coc#list#setup	vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#setup(source)$/;"	f
coc#list#status	vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#status(name)$/;"	f
coc#on_enter	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#on_enter()$/;"	f
coc#on_notify	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#on_notify(id, method, Cb)$/;"	f
coc#prompt#activated	vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! coc#prompt#activated() abort$/;"	f
coc#prompt#getc	vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! coc#prompt#getc() abort$/;"	f
coc#prompt#getchar	vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! coc#prompt#getchar() abort$/;"	f
coc#prompt#start_prompt	vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! coc#prompt#start_prompt(session) abort$/;"	f
coc#prompt#stop_prompt	vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! coc#prompt#stop_prompt(session)$/;"	f
coc#refresh	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#refresh() abort$/;"	f
coc#rpc#async_request	vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#async_request(id, method, args)$/;"	f
coc#rpc#async_response	vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#async_response(id, resp, isErr) abort$/;"	f
coc#rpc#get_errors	vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#get_errors()$/;"	f
coc#rpc#kill	vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#kill()$/;"	f
coc#rpc#notify	vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#notify(method, args) abort$/;"	f
coc#rpc#ready	vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#ready()$/;"	f
coc#rpc#request	vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#request(method, args) abort$/;"	f
coc#rpc#request_async	vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#request_async(method, args, cb) abort$/;"	f
coc#rpc#restart	vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#restart()$/;"	f
coc#rpc#start_server	vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#start_server()$/;"	f
coc#rpc#started	vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#started() abort$/;"	f
coc#rpc#stop	vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#stop()$/;"	f
coc#snippet#_select_mappings	vim/.vim/plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#_select_mappings()$/;"	f
coc#snippet#disable	vim/.vim/plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#disable()$/;"	f
coc#snippet#enable	vim/.vim/plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#enable()$/;"	f
coc#snippet#show_choices	vim/.vim/plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#show_choices(lnum, col, len, values) abort$/;"	f
coc#start	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#start(...)$/;"	f
coc#status	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#status()$/;"	f
coc#task#running	vim/.vim/plugged/coc.nvim/autoload/coc/task.vim	/^function! coc#task#running(id)$/;"	f
coc#task#start	vim/.vim/plugged/coc.nvim/autoload/coc/task.vim	/^function! coc#task#start(id, opts)$/;"	f
coc#task#stop	vim/.vim/plugged/coc.nvim/autoload/coc/task.vim	/^function! coc#task#stop(id)$/;"	f
coc#terminal#close	vim/.vim/plugged/coc.nvim/autoload/coc/terminal.vim	/^function! coc#terminal#close(bufnr) abort$/;"	f
coc#terminal#send	vim/.vim/plugged/coc.nvim/autoload/coc/terminal.vim	/^function! coc#terminal#send(bufnr, text, add_new_line) abort$/;"	f
coc#terminal#start	vim/.vim/plugged/coc.nvim/autoload/coc/terminal.vim	/^function! coc#terminal#start(cmd, cwd, env) abort$/;"	f
coc#util#api_version	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#api_version() abort$/;"	f
coc#util#change_lines	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#change_lines(bufnr, list) abort$/;"	f
coc#util#check_refresh	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#check_refresh(bufnr)$/;"	f
coc#util#cursor	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#cursor()$/;"	f
coc#util#diagnostic_info	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#diagnostic_info(bufnr, checkInsert) abort$/;"	f
coc#util#do_autocmd	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#do_autocmd(name) abort$/;"	f
coc#util#do_complete	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#do_complete(name, opt, cb) abort$/;"	f
coc#util#echo_hover	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_hover(msg)$/;"	f
coc#util#echo_lines	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_lines(lines)$/;"	f
coc#util#echo_messages	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_messages(hl, msgs)$/;"	f
coc#util#echo_signatures	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#echo_signatures(signatures) abort$/;"	f
coc#util#extension_root	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#extension_root() abort$/;"	f
coc#util#get_buf_lines	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_buf_lines(bufnr, changedtick)$/;"	f
coc#util#get_bufoptions	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_bufoptions(bufnr, maxFileSize) abort$/;"	f
coc#util#get_changeinfo	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_changeinfo()$/;"	f
coc#util#get_complete_option	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_complete_option()$/;"	f
coc#util#get_config	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_config(key) abort$/;"	f
coc#util#get_config_home	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_config_home()$/;"	f
coc#util#get_data_home	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_data_home()$/;"	f
coc#util#get_format_opts	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_format_opts(bufnr) abort$/;"	f
coc#util#get_input	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_input()$/;"	f
coc#util#getpid	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#getpid()$/;"	f
coc#util#has_preview	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#has_preview()$/;"	f
coc#util#highlight_options	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#highlight_options()$/;"	f
coc#util#install	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#install() abort$/;"	f
coc#util#install_extension	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#install_extension(args) abort$/;"	f
coc#util#iterm_open	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#iterm_open(dir)$/;"	f
coc#util#job_command	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#job_command()$/;"	f
coc#util#jump	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#jump(cmd, filepath, ...) abort$/;"	f
coc#util#jumpTo	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#jumpTo(line, character) abort$/;"	f
coc#util#open_file	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#open_file(cmd, file)$/;"	f
coc#util#open_files	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#open_files(files)$/;"	f
coc#util#open_terminal	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#open_terminal(opts) abort$/;"	f
coc#util#open_url	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#open_url(url)$/;"	f
coc#util#path_replace_patterns	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#path_replace_patterns() abort$/;"	f
coc#util#pick_color	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#pick_color(default_color)$/;"	f
coc#util#preview_info	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#preview_info(info, filetype, ...) abort$/;"	f
coc#util#quickpick	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#quickpick(title, items, cb) abort$/;"	f
coc#util#rebuild	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#rebuild()$/;"	f
coc#util#refactor_fold_text	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#refactor_fold_text(lnum) abort$/;"	f
coc#util#refactor_foldlevel	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#refactor_foldlevel(lnum) abort$/;"	f
coc#util#remote_fns	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#remote_fns(name)$/;"	f
coc#util#root_patterns	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#root_patterns() abort$/;"	f
coc#util#run_terminal	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#run_terminal(opts, cb)$/;"	f
coc#util#set_lines	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#set_lines(bufnr, changedtick, original, replacement, start, end) abort$/;"	f
coc#util#setline	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#setline(lnum, line)$/;"	f
coc#util#timer	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#timer(method, args)$/;"	f
coc#util#unmap	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#unmap(bufnr, keys) abort$/;"	f
coc#util#update_extensions	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#update_extensions(...) abort$/;"	f
coc#util#version	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#version()$/;"	f
coc#util#vim_info	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#vim_info()$/;"	f
coc#util#with_callback	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#with_callback(method, args, cb)$/;"	f
coc#window#close	vim/.vim/plugged/coc.nvim/autoload/coc/window.vim	/^function! coc#window#close(winid) abort$/;"	f
coc#window#find	vim/.vim/plugged/coc.nvim/autoload/coc/window.vim	/^function! coc#window#find(key, val) abort$/;"	f
coc#window#gotoid	vim/.vim/plugged/coc.nvim/autoload/coc/window.vim	/^function! coc#window#gotoid(winid) abort$/;"	f
coc#window#tabnr	vim/.vim/plugged/coc.nvim/autoload/coc/window.vim	/^function! coc#window#tabnr(winid) abort$/;"	f
coc.preferences.bracketEnterImprove	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.bracketEnterImprove": {$/;"	o	object:properties
coc.preferences.colorSupport	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.colorSupport": {$/;"	o	object:properties
coc.preferences.currentFunctionSymbolAutoUpdate	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.currentFunctionSymbolAutoUpdate": {$/;"	o	object:properties
coc.preferences.enableFloatHighlight	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.enableFloatHighlight": {$/;"	o	object:properties
coc.preferences.enableMarkdown	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.enableMarkdown": {$/;"	o	object:properties
coc.preferences.enableMessageDialog	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.enableMessageDialog": {$/;"	o	object:properties
coc.preferences.excludeImageLinksInMarkdownDocument	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.excludeImageLinksInMarkdownDocument": {$/;"	o	object:properties
coc.preferences.extensionUpdateCheck	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.extensionUpdateCheck": {$/;"	o	object:properties
coc.preferences.floatActions	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.floatActions": {$/;"	o	object:properties
coc.preferences.formatOnSaveFiletypes	.config/nvim_copy/coc-settings.json	/^  "coc.preferences.formatOnSaveFiletypes": [$/;"	a
coc.preferences.formatOnSaveFiletypes	vim/.vim/coc-settings.json	/^  "coc.preferences.formatOnSaveFiletypes": [$/;"	a
coc.preferences.formatOnSaveFiletypes	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.formatOnSaveFiletypes": {$/;"	o	object:properties
coc.preferences.formatOnType	.config/nvim_copy/coc-settings.json	/^  "coc.preferences.formatOnType": true,$/;"	b
coc.preferences.formatOnType	vim/.vim/coc-settings.json	/^  "coc.preferences.formatOnType": true,$/;"	b
coc.preferences.formatOnType	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.formatOnType": {$/;"	o	object:properties
coc.preferences.formatOnTypeFiletypes	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.formatOnTypeFiletypes": {$/;"	o	object:properties
coc.preferences.jumpCommand	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.jumpCommand": {$/;"	o	object:properties
coc.preferences.listOfWorkspaceEdit	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.listOfWorkspaceEdit": {$/;"	o	object:properties
coc.preferences.maxFileSize	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.maxFileSize": {$/;"	o	object:properties
coc.preferences.messageLevel	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.messageLevel": {$/;"	o	object:properties
coc.preferences.promptInput	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.promptInput": {$/;"	o	object:properties
coc.preferences.promptWorkspaceEdit	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.promptWorkspaceEdit": {$/;"	o	object:properties
coc.preferences.rootPatterns	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.rootPatterns": {$/;"	o	object:properties
coc.preferences.semanticTokensHighlights	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.semanticTokensHighlights": {$/;"	o	object:properties
coc.preferences.silentAutoupdate	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.silentAutoupdate": {$/;"	o	object:properties
coc.preferences.snippetStatusText	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.snippetStatusText": {$/;"	o	object:properties
coc.preferences.useQuickfixForLocations	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.useQuickfixForLocations": {$/;"	o	object:properties
coc.preferences.watchmanPath	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.watchmanPath": {$/;"	o	object:properties
coc.preferences.willSaveHandlerTimeout	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.preferences.willSaveHandlerTimeout": {$/;"	o	object:properties
coc.source.around.disableSyntaxes	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.source.around.disableSyntaxes": {$/;"	o	object:properties
coc.source.around.enable	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.source.around.enable": {$/;"	o	object:properties
coc.source.around.firstMatch	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.source.around.firstMatch": {$/;"	o	object:properties
coc.source.around.priority	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.source.around.priority": {$/;"	o	object:properties
coc.source.around.shortcut	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.source.around.shortcut": {$/;"	o	object:properties
coc.source.buffer.disableSyntaxes	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.source.buffer.disableSyntaxes": {$/;"	o	object:properties
coc.source.buffer.enable	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.source.buffer.enable": {$/;"	o	object:properties
coc.source.buffer.firstMatch	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.source.buffer.firstMatch": {$/;"	o	object:properties
coc.source.buffer.ignoreGitignore	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.source.buffer.ignoreGitignore": {$/;"	o	object:properties
coc.source.buffer.priority	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.source.buffer.priority": {$/;"	o	object:properties
coc.source.buffer.shortcut	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.source.buffer.shortcut": {$/;"	o	object:properties
coc.source.file.disableSyntaxes	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.source.file.disableSyntaxes": {$/;"	o	object:properties
coc.source.file.enable	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.source.file.enable": {$/;"	o	object:properties
coc.source.file.ignoreHidden	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.source.file.ignoreHidden": {$/;"	o	object:properties
coc.source.file.ignorePatterns	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.source.file.ignorePatterns": {$/;"	o	object:properties
coc.source.file.priority	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.source.file.priority": {$/;"	o	object:properties
coc.source.file.shortcut	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.source.file.shortcut": {$/;"	o	object:properties
coc.source.file.triggerCharacters	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.source.file.triggerCharacters": {$/;"	o	object:properties
coc.source.file.trimSameExts	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "coc.source.file.trimSameExts": {$/;"	o	object:properties
coc_nvim	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^  augroup coc_nvim$/;"	a
codeLens.enable	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "codeLens.enable": {$/;"	o	object:properties
codeLens.separator	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "codeLens.separator": {$/;"	o	object:properties
codeLens.subseparator	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "codeLens.subseparator": {$/;"	o	object:properties
coe	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
coffees	vim/.vim/plugged/vim-styled-components/examples/issue-30-3.js	/^        {coffees === null ? ($/;"	M	class:CoffeeList
colBlack	vim/.vim/plugged/fzf/src/tui/tui.go	/^	colBlack Color = iota$/;"	c	package:tui	typeref:type:Color
colBlue	vim/.vim/plugged/fzf/src/tui/tui.go	/^	colBlue$/;"	c	package:tui
colCyan	vim/.vim/plugged/fzf/src/tui/tui.go	/^	colCyan$/;"	c	package:tui
colDefault	vim/.vim/plugged/fzf/src/tui/tui.go	/^	colDefault   Color = -1$/;"	c	package:tui	typeref:type:Color
colGreen	vim/.vim/plugged/fzf/src/tui/tui.go	/^	colGreen$/;"	c	package:tui
colMagenta	vim/.vim/plugged/fzf/src/tui/tui.go	/^	colMagenta$/;"	c	package:tui
colRed	vim/.vim/plugged/fzf/src/tui/tui.go	/^	colRed$/;"	c	package:tui
colUndefined	vim/.vim/plugged/fzf/src/tui/tui.go	/^	colUndefined Color = -2$/;"	c	package:tui	typeref:type:Color
colWhite	vim/.vim/plugged/fzf/src/tui/tui.go	/^	colWhite$/;"	c	package:tui
colYellow	vim/.vim/plugged/fzf/src/tui/tui.go	/^	colYellow$/;"	c	package:tui
collect-v8-coverage	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "collect-v8-coverage": "^1.0.0"$/;"	s	object:dependencies.@jest/test-result.requires
collect-v8-coverage	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "collect-v8-coverage": "^1.0.0",$/;"	s	object:dependencies.@jest/reporters.requires
collect-v8-coverage	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "collect-v8-coverage": "^1.0.0",$/;"	s	object:dependencies.jest-runtime.requires
collect-v8-coverage	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "collect-v8-coverage": {$/;"	o	object:dependencies
collection-visit	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "collection-visit": "^1.0.0",$/;"	s	object:dependencies.cache-base.requires
collection-visit	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "collection-visit": {$/;"	o	object:dependencies
color	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	c	class:Uoe.e
color	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "color": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
color	vim/.vim/plugged/fzf/src/ansi.go	/^	color  ansiState$/;"	m	struct:fzf.ansiOffset	typeref:typename:ansiState
color	vim/.vim/plugged/fzf/src/result.go	/^	color  tui.ColorPair$/;"	m	struct:fzf.colorOffset	typeref:typename:tui.ColorPair
color	vim/.vim/plugged/fzf/src/tui/tcell.go	/^	color       bool$/;"	m	struct:tui.TcellWindow	typeref:typename:bool
color	vim/.vim/plugged/vim-css-color/tests/example.jsx	/^			color: '#ffde00',$/;"	p	class:AnonymousFunction5f5fc9ae0100.style
color-convert	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "color-convert": "^1.9.0"$/;"	s	object:dependencies.@babel/highlight.dependencies.ansi-styles.requires
color-convert	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "color-convert": "^1.9.0"$/;"	s	object:dependencies.cli-table.dependencies.ansi-styles.requires
color-convert	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "color-convert": "^1.9.0"$/;"	s	object:dependencies.slice-ansi.dependencies.ansi-styles.requires
color-convert	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "color-convert": "^2.0.1"$/;"	s	object:dependencies.chalk.dependencies.ansi-styles.requires
color-convert	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "color-convert": "^2.0.1"$/;"	s	object:dependencies.expect.dependencies.ansi-styles.requires
color-convert	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "color-convert": "^2.0.1"$/;"	s	object:dependencies.pretty-format.dependencies.ansi-styles.requires
color-convert	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "color-convert": "^2.0.1"$/;"	s	object:dependencies.wrap-ansi.dependencies.ansi-styles.requires
color-convert	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "color-convert": {$/;"	o	object:dependencies.@babel/highlight.dependencies
color-convert	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "color-convert": {$/;"	o	object:dependencies.cli-table.dependencies
color-convert	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "color-convert": {$/;"	o	object:dependencies.slice-ansi.dependencies
color-convert	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "color-convert": {$/;"	o	object:dependencies
color-name	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "color-name": "1.1.3"$/;"	s	object:dependencies.@babel/highlight.dependencies.color-convert.requires
color-name	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "color-name": "1.1.3"$/;"	s	object:dependencies.cli-table.dependencies.color-convert.requires
color-name	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "color-name": "1.1.3"$/;"	s	object:dependencies.slice-ansi.dependencies.color-convert.requires
color-name	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "color-name": "~1.1.4"$/;"	s	object:dependencies.color-convert.requires
color-name	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "color-name": {$/;"	o	object:dependencies.@babel/highlight.dependencies
color-name	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "color-name": {$/;"	o	object:dependencies.cli-table.dependencies
color-name	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "color-name": {$/;"	o	object:dependencies.slice-ansi.dependencies
color-name	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "color-name": {$/;"	o	object:dependencies
color1	vim/.vim/plugged/vim-css-color/tests/example.scss	/^$color1: #359;$/;"	v
color2	vim/.vim/plugged/vim-css-color/tests/example.scss	/^$color2: #335599;$/;"	v
color3	vim/.vim/plugged/vim-css-color/tests/example.scss	/^$color3: rgba(144, 0, 0, .5);$/;"	v
color4	vim/.vim/plugged/vim-css-color/tests/example.scss	/^$color4: hsl(0, 100%, 50%);$/;"	v
colorCodes	vim/.vim/plugged/fzf/src/tui/light.go	/^func colorCodes(fg Color, bg Color) []string {$/;"	f	package:tui	typeref:typename:[]string
colorOffset	vim/.vim/plugged/fzf/src/result.go	/^type colorOffset struct {$/;"	s	package:fzf
colorOffsets	vim/.vim/plugged/fzf/src/result.go	/^func (result *Result) colorOffsets(matchOffsets []Offset, theme *tui.ColorTheme, colBase tui.Col/;"	f	struct:fzf.Result	typeref:typename:[]colorOffset
colored	vim/.vim/plugged/fzf/src/ansi.go	/^func (s *ansiState) colored() bool {$/;"	f	struct:fzf.ansiState	typeref:typename:bool
colored	vim/.vim/plugged/fzf/src/tui/light.go	/^	colored  bool$/;"	m	struct:tui.LightWindow	typeref:typename:bool
colorette	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "colorette": "^1.2.2",$/;"	s	object:dependencies.browserslist.requires
colorette	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "colorette": {$/;"	o	object:dependencies
colors	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "colors": {$/;"	o	object:dependencies
colors	vim/.vim/plugged/fzf/src/item.go	/^	colors      *[]ansiOffset \/\/ 8$/;"	m	struct:fzf.Item	typeref:typename:*[]ansiOffset
combined-stream	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "combined-stream": "^1.0.8",$/;"	s	object:dependencies.form-data.requires
combined-stream	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "combined-stream": {$/;"	o	object:dependencies
command	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78aef800.e.a
command	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "command": {$/;"	o	object:definitions.languageServerCommand.properties
command	vim/.vim/plugged/fzf/src/options.go	/^	command     string$/;"	m	struct:fzf.previewOpts	typeref:typename:string
command	vim/.vim/plugged/fzf/src/reader.go	/^	command  *string$/;"	m	struct:fzf.Reader	typeref:typename:*string
command	vim/.vim/plugged/fzf/src/terminal.go	/^	command *string$/;"	m	struct:fzf.searchRequest	typeref:typename:*string
command	vim/.vim/plugged/vim-multiple-cursors/README.md	/^### command$/;"	S	section:vim-multiple-cursors""Quick Start
comment-parser	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "comment-parser": "^0.7.6",$/;"	s	object:dependencies.eslint-plugin-jsdoc.requires
comment-parser	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "comment-parser": {$/;"	o	object:dependencies
commentary.vim	vim/.vim/plugged/vim-commentary/README.markdown	/^# commentary.vim$/;"	c
compareRanks	vim/.vim/plugged/fzf/src/result_others.go	/^func compareRanks(irank Result, jrank Result, tac bool) bool {$/;"	f	package:fzf	typeref:typename:bool
compareRanks	vim/.vim/plugged/fzf/src/result_x86.go	/^func compareRanks(irank Result, jrank Result, tac bool) bool {$/;"	f	package:fzf	typeref:typename:bool
complexMixin	vim/.vim/plugged/vim-styled-components/examples/apis.js	/^const complexMixin = css`$/;"	C
component-emitter	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "component-emitter": "^1.2.1",$/;"	s	object:dependencies.base.requires
component-emitter	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "component-emitter": "^1.2.1",$/;"	s	object:dependencies.cache-base.requires
component-emitter	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "component-emitter": {$/;"	o	object:dependencies
componentWillMount	vim/.vim/plugged/vim-styled-components/examples/complex.js	/^  componentWillMount() {$/;"	m	class:AppClass
concat-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "concat-map": "0.0.1"$/;"	s	object:dependencies.brace-expansion.requires
concat-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "concat-map": {$/;"	o	object:dependencies
cond	vim/.vim/plugged/fzf/src/util/eventbox.go	/^	cond   *sync.Cond$/;"	m	struct:util.EventBox	typeref:typename:*sync.Cond
config_name	vim/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^                $config_name = $argv[$idx]$/;"	v
config_name	vim/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$config_name = '.editorconfig'$/;"	v
consoleDevice	vim/.vim/plugged/fzf/src/tui/light.go	/^const consoleDevice string = "\/dev\/tty"$/;"	c	package:tui	typeref:typename:string
consoleFlagsInput	vim/.vim/plugged/fzf/src/tui/light_windows.go	/^	consoleFlagsInput  = uint32(windows.ENABLE_VIRTUAL_TERMINAL_INPUT | windows.ENABLE_PROCESSED_IN/;"	v	package:tui
consoleFlagsOutput	vim/.vim/plugged/fzf/src/tui/light_windows.go	/^	consoleFlagsOutput = uint32(windows.ENABLE_VIRTUAL_TERMINAL_PROCESSING | windows.ENABLE_PROCESS/;"	v	package:tui
constant	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "constant": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
constrain	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) constrain() {$/;"	f	struct:fzf.Terminal
constructor	vim/.vim/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	m	class:AnonymousFunction272f78ae33e00.e
constructor	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	m	class:t
constructor	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "constructor": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
constructor	vim/.vim/plugged/vim-styled-components/examples/indent.js	/^  constructor(props) {$/;"	m	class:Test
content	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	p	class:dB.S
content-disposition	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "content-disposition": {$/;"	o	object:dependencies
convert-source-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "convert-source-map": "^1.4.0",$/;"	s	object:dependencies.@jest/transform.requires
convert-source-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "convert-source-map": "^1.6.0",$/;"	s	object:dependencies.v8-to-istanbul.requires
convert-source-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "convert-source-map": "^1.7.0",$/;"	s	object:dependencies.@babel/core.requires
convert-source-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "convert-source-map": {$/;"	o	object:dependencies
convertBoolToInt32	vim/.vim/plugged/fzf/src/util/atomicbool.go	/^func convertBoolToInt32(b bool) int32 {$/;"	f	package:util	typeref:typename:int32
coordinatorDelayMax	vim/.vim/plugged/fzf/src/constants.go	/^	coordinatorDelayMax  time.Duration = 100 * time.Millisecond$/;"	c	package:fzf	typeref:typename:time.Duration
coordinatorDelayStep	vim/.vim/plugged/fzf/src/constants.go	/^	coordinatorDelayStep time.Duration = 10 * time.Millisecond$/;"	c	package:fzf	typeref:typename:time.Duration
copy	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	m	class:Vf
copy-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "copy-descriptor": "^0.1.0",$/;"	s	object:dependencies.object-copy.requires
copy-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "copy-descriptor": {$/;"	o	object:dependencies
copySlice	vim/.vim/plugged/fzf/src/terminal.go	/^func copySlice(slice []rune) []rune {$/;"	f	package:fzf	typeref:typename:[]rune
count	vim/.vim/plugged/fzf/src/chunklist.go	/^	count int$/;"	m	struct:fzf.Chunk	typeref:typename:int
count	vim/.vim/plugged/fzf/src/merger.go	/^	count   int$/;"	m	struct:fzf.Merger	typeref:typename:int
count	vim/.vim/plugged/fzf/src/terminal.go	/^	count        int$/;"	m	struct:fzf.Terminal	typeref:typename:int
counts	vim/.vim/plugged/fzf/test/test_go.rb	/^          def counts$/;"	f	method:Tmux.until
cp	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
cprint2	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) cprint2(fg Color, bg Color, attr Attr, text string) {$/;"	f	struct:tui.LightWindow
createFile	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
create_file	vim/.vim/plugged/fzf/install	/^create_file() {$/;"	f
create_translation	vim/.vim/plugged/vim-translator/script/translator.py	/^    def create_translation(self, sl="auto", tl="auto", text=""):$/;"	m	class:BaseTranslator
create_vim	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^def create_vim(*initial_commands)$/;"	f
criterion	vim/.vim/plugged/fzf/src/options.go	/^type criterion int$/;"	t	package:fzf	typeref:typename:int
critical	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        "critical": {$/;"	o	object:defaults
cross-spawn	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "cross-spawn": "^7.0.0",$/;"	s	object:dependencies.jest-changed-files.dependencies.execa.requires
cross-spawn	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "cross-spawn": "^6.0.0",$/;"	s	object:dependencies.execa.requires
cross-spawn	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "cross-spawn": "^7.0.2",$/;"	s	object:dependencies.eslint.requires
cross-spawn	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "cross-spawn": {$/;"	o	object:dependencies.execa.dependencies
cross-spawn	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "cross-spawn": {$/;"	o	object:dependencies
cs	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
csi	vim/.vim/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) csi(code string) {$/;"	f	unknown:tui.LightRenderer
csi	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) csi(code string) {$/;"	f	struct:tui.LightWindow
csiColor	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) csiColor(fg Color, bg Color, attr Attr) bool {$/;"	f	struct:tui.LightWindow	typeref:typename:bool
css.validate	.config/nvim_copy/coc-settings.json	/^  "css.validate": false,$/;"	b
css.validate	vim/.vim/coc-settings.json	/^  "css.validate": false,$/;"	b
css_color#disable	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^function! css_color#disable()$/;"	f
css_color#dump_highlights	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^function! css_color#dump_highlights()$/;"	f
css_color#enable	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^function! css_color#enable()$/;"	f
css_color#extend	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^	function! css_color#extend(groups)$/;"	f
css_color#init	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^	function! css_color#init(type, keywords, groups)$/;"	f
css_color#init	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^function! css_color#init(type, keywords, groups)$/;"	f
css_color#reinit	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^function! css_color#reinit()$/;"	f
css_color#toggle	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^function! css_color#toggle()$/;"	f
cssom	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "cssom": "^0.4.4",$/;"	s	object:dependencies.jsdom.requires
cssom	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "cssom": "~0.3.6"$/;"	s	object:dependencies.cssstyle.requires
cssom	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "cssom": {$/;"	o	object:dependencies.cssstyle.dependencies
cssom	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "cssom": {$/;"	o	object:dependencies
cssstyle	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "cssstyle": "^2.3.0",$/;"	s	object:dependencies.jsdom.requires
cssstyle	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "cssstyle": {$/;"	o	object:dependencies
cu	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
curr_dir	vim/.vim/plugged/vim-translator/test/test_translator.py	/^curr_dir = os.path.dirname(curr_filename)$/;"	v
curr_filename	vim/.vim/plugged/vim-translator/test/test_translator.py	/^curr_filename = os.path.abspath(__file__)$/;"	v
current	vim/.vim/plugged/fzf/src/history.go	/^func (h *History) current() string {$/;"	f	struct:fzf.History	typeref:typename:string
current	vim/.vim/plugged/fzf/src/terminal.go	/^	current  bool$/;"	m	struct:fzf.itemLine	typeref:typename:bool
currentItem	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) currentItem() *Item {$/;"	f	struct:fzf.Terminal	typeref:typename:*Item
current_compiler	vim/.vim/plugged/typescript-vim/compiler/typescript.vim	/^let current_compiler = "typescript"$/;"	v
current_compiler	vim/.vim/plugged/vim-javascript/compiler/eslint.vim	/^let current_compiler = "eslint"$/;"	v
cursor	vim/.vim/plugged/fzf/src/history.go	/^	cursor   int$/;"	m	struct:fzf.History	typeref:typename:int
cursors	vim/.vim/plugged/fzf/src/merger.go	/^	cursors []int$/;"	m	struct:fzf.Merger	typeref:typename:[]int
cursors.cancelKey	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "cursors.cancelKey": {$/;"	o	object:properties
cursors.nextKey	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "cursors.nextKey": {$/;"	o	object:properties
cursors.previousKey	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "cursors.previousKey": {$/;"	o	object:properties
cv	vim/.vim/plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
cw	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
cwd	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "cwd": {$/;"	o	object:definitions.languageServerBase.properties
cwd	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "cwd": {},$/;"	o	object:definitions.languageServerCommand.properties
cwd	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "cwd": {},$/;"	o	object:definitions.languageServerModule.properties
cx	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
cx	vim/.vim/plugged/fzf/src/terminal.go	/^	cx           int$/;"	m	struct:fzf.Terminal	typeref:typename:int
cy	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
cy	vim/.vim/plugged/fzf/src/terminal.go	/^	cy           int$/;"	m	struct:fzf.Terminal	typeref:typename:int
cyan	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
cyanBright	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
cycle	vim/.vim/plugged/fzf/src/options.go	/^	cycle       bool$/;"	m	struct:fzf.previewOpts	typeref:typename:bool
cycle	vim/.vim/plugged/fzf/src/terminal.go	/^	cycle        bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
cycle	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^    "cycle": [$/;"	a
d	vim/.vim/autoload/plug.vim	/^      nnoremap <silent> <buffer> d :set opfunc=<sid>delete_op<cr>g@$/;"	m
d	vim/.vim/autoload/plug.vim	/^      xnoremap <silent> <buffer> d :<c-u>call <sid>delete_op(visualmode(), 1)<cr>$/;"	m
d	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
d	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunction272f78ae13000
d	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
d	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
d	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae2f400.s
d	vim/.vim/plugged/coc.nvim/build/index.js	/^`);return r.length?r[0].length:0});Ad.prototype.render;Ad.prototype.toString=function(){var r=""/;"	f	function:AnonymousFunction272f78ae1fa00
d	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:$d
d	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
d	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:AnonymousFunction272f78ae7400
d$	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
d0	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
d0e	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
d4	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
d5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
d6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
d7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
d8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
d9	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
dA	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
dB	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
dC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
dD	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
dG	vim/.vim/plugged/coc.nvim/build/index.js	/^`),s=n.length-(t.end.line-t.start.line+1);if(this.line=this.line+s,t.end.line==this.line){let o=/;"	f
dI	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
dL	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
dM	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	v
dO	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
dP	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
dS	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
dT	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
dV	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
dWe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
dY	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
da	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
dae	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
daemons	.config/openbox/menu.xml	/^<menu id="daemons" label="daemons">$/;"	i
darcula	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### darcula$/;"	S	chapter:Available Colorschemes
data-urls	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "data-urls": "^2.0.0",$/;"	s	object:dependencies.jsdom.requires
data-urls	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "data-urls": {$/;"	o	object:dependencies
date-format	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "date-format": "^2.1.0",$/;"	s	object:dependencies.streamroller.requires
date-format	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "date-format": "^3.0.0",$/;"	s	object:dependencies.log4js.requires
date-format	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "date-format": {$/;"	o	object:dependencies.streamroller.dependencies
date-format	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "date-format": {$/;"	o	object:dependencies
dd	vim/.vim/autoload/plug.vim	/^      nmap     <silent> <buffer> dd d_$/;"	m
dd	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
de	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
de64_args	vim/.vim/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^function de64_args($argv) {$/;"	f
debounce	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "debounce": {$/;"	o	object:dependencies
debug	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "debug": "4"$/;"	s	object:dependencies.agent-base.requires
debug	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "debug": "4"$/;"	s	object:dependencies.http-proxy-agent.requires
debug	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "debug": "4"$/;"	s	object:dependencies.https-proxy-agent.requires
debug	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "debug": "^2.2.0",$/;"	s	object:dependencies.snapdragon.requires
debug	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "debug": "^2.3.3",$/;"	s	object:dependencies.expand-brackets.requires
debug	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "debug": "^4.0.1",$/;"	s	object:dependencies.eslint.requires
debug	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "debug": "^4.1.0",$/;"	s	object:dependencies.@babel/core.requires
debug	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "debug": "^4.1.0",$/;"	s	object:dependencies.@babel/traverse.requires
debug	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "debug": "^4.1.1"$/;"	s	object:dependencies.@typescript-eslint/parser.requires
debug	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "debug": "^4.1.1",$/;"	s	object:dependencies.@eslint/eslintrc.requires
debug	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "debug": "^4.1.1",$/;"	s	object:dependencies.@typescript-eslint/eslint-plugin.requires
debug	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "debug": "^4.1.1",$/;"	s	object:dependencies.@typescript-eslint/typescript-estree.requires
debug	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "debug": "^4.1.1",$/;"	s	object:dependencies.istanbul-lib-source-maps.requires
debug	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "debug": "^4.1.1",$/;"	s	object:dependencies.log4js.requires
debug	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "debug": "^4.1.1",$/;"	s	object:dependencies.streamroller.requires
debug	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "debug": "^4.3.1",$/;"	s	object:dependencies.eslint-plugin-jsdoc.requires
debug	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "debug": {$/;"	o	object:dependencies.eslint-plugin-jsdoc.dependencies
debug	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "debug": {$/;"	o	object:dependencies.expand-brackets.dependencies
debug	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "debug": {$/;"	o	object:dependencies.snapdragon.dependencies
debug	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "debug": {$/;"	o	object:dependencies
debug	vim/.vim/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^    $global:debug="${DIR}\/${global:debug}"$/;"	v
debug	vim/.vim/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^$global:debug=$env:EDITORCONFIG_DEBUG  # Debug filename$/;"	v
debugV2	vim/.vim/plugged/fzf/src/algo/algo.go	/^func debugV2(T []rune, pattern []rune, F []int32, lastIdx int, H []int16, C []int16) {$/;"	f	package:algo
decamelize	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "decamelize": "^1.2.0"$/;"	s	object:dependencies.yargs-parser.requires
decamelize	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "decamelize": "^1.2.0",$/;"	s	object:dependencies.yargs.requires
decamelize	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "decamelize": {$/;"	o	object:dependencies
decimal.js	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "decimal.js": "^10.2.1",$/;"	s	object:dependencies.jsdom.requires
decimal.js	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "decimal.js": {$/;"	o	object:dependencies
decode-uri-component	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "decode-uri-component": "^0.2.0",$/;"	s	object:dependencies.source-map-resolve.requires
decode-uri-component	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "decode-uri-component": {$/;"	o	object:dependencies
decompress-response	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "decompress-response": {$/;"	o	object:dependencies
deep-extend	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "deep-extend": "^0.6.0",$/;"	s	object:dependencies.rc.requires
deep-extend	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "deep-extend": {$/;"	o	object:dependencies
deep-is	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "deep-is": "~0.1.3",$/;"	s	object:dependencies.escodegen.dependencies.optionator.requires
deep-is	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "deep-is": "^0.1.3",$/;"	s	object:dependencies.optionator.requires
deep-is	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "deep-is": {$/;"	o	object:dependencies
deepmerge	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "deepmerge": "^4.2.2",$/;"	s	object:dependencies.jest-config.requires
deepmerge	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "deepmerge": {$/;"	o	object:dependencies
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": "",$/;"	s	object:definitions.float.properties.title
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": "",$/;"	s	object:definitions.languageServerBase.properties.cwd
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": "",$/;"	s	object:definitions.languageServerCommand.properties.command
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": "",$/;"	s	object:definitions.languageServerModule.properties.module
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": "",$/;"	s	object:definitions.languageServerModule.properties.runtime
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": "127.0.0.1",$/;"	s	object:definitions.languageServerSocket.properties.host
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": "CocFloating",$/;"	s	object:definitions.float.properties.borderhighlight
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": "CocFloating",$/;"	s	object:definitions.float.properties.highlight
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": "ipc",$/;"	s	object:definitions.languageServerModule.properties.transport
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": "never",$/;"	s	object:definitions.languageServerBase.properties.revealOutputChannelOn
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": "off",$/;"	s	object:definitions.languageServerBase.properties.trace.server
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": "utf8",$/;"	s	object:definitions.languageServerBase.properties.stdioEncoding
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": 0,$/;"	n	object:definitions.float.properties.winblend
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": 0,$/;"	n	object:definitions.languageServerBase.properties.formatterPriority
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerBase.properties.additionalSchemes
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerBase.properties.filetypes
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerBase.properties.ignoredRootPaths
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerBase.properties.rootPatterns
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerCommand.properties.args
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerModule.properties.args
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": [],$/;"	a	object:definitions.languageServerModule.properties.execArgv
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.float.properties.border
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.float.properties.close
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.float.properties.shadow
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerBase.properties.disableCompletion
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerBase.properties.disableDiagnostics
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerBase.properties.disableDynamicRegister
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerBase.properties.disableSnippetCompletion
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerBase.properties.disableWorkspaceFolders
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerBase.properties.requireRootPattern
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerCommand.properties.detached
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": false,$/;"	b	object:definitions.languageServerCommand.properties.shell
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": null,$/;"	z	object:definitions.languageServerBase.properties.env
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": true$/;"	b	object:definitions.languageServerBase.properties.enable
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": true,$/;"	b	object:definitions.float.properties.focusable
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": true,$/;"	b	object:definitions.languageServerBase.properties.progressOnInitialization
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": {},$/;"	o	object:definitions.languageServerBase.properties.initializationOptions
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "default": {},$/;"	o	object:definitions.languageServerBase.properties.settings
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "default": { "type": "string" }$/;"	o	object:properties.suggest.completionItemKindLabels.properties
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": " "$/;"	s	object:properties.codeLens.subseparator
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": " "$/;"	s	object:properties.diagnostic.virtualTextPrefix
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": " \\\\ "$/;"	s	object:properties.diagnostic.virtualTextLineSeparator
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "",$/;"	s	object:properties.http.proxy
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "*",$/;"	s	object:properties.list.selectedSignText
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "+",$/;"	s	object:properties.tree.closedIcon
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "-",$/;"	s	object:properties.tree.openedIcon
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "10MB",$/;"	s	object:properties.coc.preferences.maxFileSize
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "<C-j>",$/;"	s	object:properties.list.nextKeymap
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "<C-j>",$/;"	s	object:properties.tree.key.selectNext
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "<C-k>",$/;"	s	object:properties.list.previousKeymap
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "<C-k>",$/;"	s	object:properties.tree.key.selectPrevious
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "<C-n>",$/;"	s	object:properties.cursors.nextKey
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "<C-p>",$/;"	s	object:properties.cursors.previousKey
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "<cr>",$/;"	s	object:properties.dialog.confirmKey
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "<cr>",$/;"	s	object:properties.tree.key.invoke
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "<esc>",$/;"	s	object:properties.cursors.cancelKey
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "<esc>",$/;"	s	object:properties.tree.key.close
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "<space>",$/;"	s	object:properties.tree.key.toggleSelection
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "<tab>",$/;"	s	object:properties.tree.key.actions
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": ">",$/;"	s	object:properties.list.indicator
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": ">>"$/;"	s	object:properties.diagnostic.errorSign
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": ">>"$/;"	s	object:properties.diagnostic.hintSign
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": ">>"$/;"	s	object:properties.diagnostic.infoSign
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "A"$/;"	s	object:properties.coc.source.around.shortcut
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "B"$/;"	s	object:properties.coc.source.buffer.shortcut
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "CocFloating",$/;"	s	object:properties.notification.highlightGroup
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "F"$/;"	s	object:properties.coc.source.file.shortcut
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "M",$/;"	s	object:properties.tree.key.collapseAll
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "SNIP",$/;"	s	object:properties.coc.preferences.snippetStatusText
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "Search",$/;"	s	object:properties.list.matchHighlightGroup
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "Search",$/;"	s	object:properties.list.previewHighlightGroup
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "[%source%code] [%severity] %message"$/;"	s	object:properties.diagnostic.format
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "always",$/;"	s	object:properties.diagnostic.enableMessage
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "always",$/;"	s	object:properties.suggest.autoTrigger
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "botright 30vs",$/;"	s	object:properties.callHierarchy.splitCommand
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "botright 30vs",$/;"	s	object:properties.outline.splitCommand
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "category",$/;"	s	object:properties.outline.sortBy
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "edit"$/;"	s	object:properties.coc.preferences.jumpCommand
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "edit",$/;"	s	object:properties.callHierarchy.openCommand
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "f",$/;"	s	object:properties.tree.key.activeFilter
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "float",$/;"	s	object:properties.diagnostic.messageTarget
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "float",$/;"	s	object:properties.signature.target
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "full"$/;"	s	object:properties.list.source.diagnostics.pathFormat
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "hint",$/;"	s	object:properties.diagnostic.level
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "length",$/;"	s	object:properties.suggest.defaultSortMethod
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "more",$/;"	s	object:properties.coc.preferences.messageLevel
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "never",$/;"	s	object:properties.coc.preferences.extensionUpdateCheck
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "npm",$/;"	s	object:properties.npm.binPath
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "preview",$/;"	s	object:properties.suggest.detailField
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "quickfix",$/;"	s	object:properties.coc.preferences.listOfWorkspaceEdit
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "t",$/;"	s	object:properties.tree.key.toggle
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "vsplit"$/;"	s	object:properties.refactor.openCommand
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "~",$/;"	s	object:properties.suggest.snippetIndicator
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "‣"$/;"	s	object:properties.codeLens.separator
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": "⚠"$/;"	s	object:properties.diagnostic.warningSign
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 1$/;"	n	object:properties.coc.source.around.priority
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 1$/;"	n	object:properties.coc.source.buffer.priority
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 1,$/;"	n	object:properties.notification.marginRight
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 1,$/;"	n	object:properties.notification.marginTop
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 1,$/;"	n	object:properties.outline.expandLevel
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 1,$/;"	n	object:properties.suggest.minTriggerInputLength
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 10$/;"	n	object:properties.coc.source.file.priority
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 10$/;"	n	object:properties.diagnostic.signPriority
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 10,$/;"	n	object:properties.list.height
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 10,$/;"	n	object:properties.notification.maxHeight
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 100$/;"	n	object:properties.suggest.detailMaxLength
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 100,$/;"	n	object:properties.list.interactiveDebounceTime
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 100,$/;"	n	object:properties.suggest.triggerCompletionWait
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 1000$/;"	n	object:properties.diagnostic.highlighLimit
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 1000$/;"	n	object:properties.diagnostic.highlightOffset
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 12,$/;"	n	object:properties.hover.previewMaxHeight
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 12,$/;"	n	object:properties.list.maxPreviewHeight
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 20,$/;"	n	object:properties.dialog.maxHeight
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 200$/;"	n	object:properties.diagnostic.messageDelay
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 200$/;"	n	object:properties.suggest.labelMaxLength
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 3$/;"	n	object:properties.diagnostic.virtualTextLines
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 3,$/;"	n	object:properties.refactor.afterContext
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 3,$/;"	n	object:properties.refactor.beforeContext
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 30,$/;"	n	object:properties.notification.minProgressWidth
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 30000,$/;"	n	object:properties.list.limitLines
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 50,$/;"	n	object:properties.suggest.maxCompleteItemCount
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 500,$/;"	n	object:properties.coc.preferences.willSaveHandlerTimeout
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 500,$/;"	n	object:properties.signature.triggerSignatureWait
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 5000,$/;"	n	object:properties.suggest.timeout
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 60,$/;"	n	object:properties.notification.maxWidth
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 80,$/;"	n	object:properties.dialog.maxWidth
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 900,$/;"	n	object:properties.list.signOffset
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": 99,$/;"	n	object:properties.suggest.languageSourcePriority
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": [" ", "(", "<", "{", "[", "\\r", "\\n"]$/;"	a	object:properties.suggest.invalidInsertCharacters
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": ["", "quickfix", "refactor"],$/;"	a	object:properties.outline.codeActionKinds
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": [".git", ".hg", ".projections.json"],$/;"	a	object:properties.coc.preferences.rootPatterns
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": [".ts", ".js"],$/;"	a	object:properties.coc.source.file.trimSameExts
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": ["\/", "\\\\"],$/;"	a	object:properties.coc.source.file.triggerCharacters
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": ["markdown", "log", "txt", "help"],$/;"	a	object:properties.workspace.ignoredFiletypes
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": [$/;"	a	object:properties.list.statusLineSegments
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.preferences.formatOnSaveFiletypes
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.preferences.formatOnTypeFiletypes
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.source.around.disableSyntaxes
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.source.buffer.disableSyntaxes
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.source.file.disableSyntaxes
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.coc.source.file.ignorePatterns
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.list.source.outline.ctagsFilestypes
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.list.source.symbols.excludes
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": [],$/;"	a	object:properties.workspace.bottomUpFiletypes
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.coc.preferences.currentFunctionSymbolAutoUpdate
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.coc.preferences.formatOnType
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.coc.preferences.useQuickfixForLocations
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.codeLens.enable
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.diagnostic.checkCurrentLine
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.diagnostic.displayByAle
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.diagnostic.refreshOnInsertMode
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.diagnostic.virtualText
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.signature.hideOnTextChange
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.asciiCharactersOnly
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.disableKind
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.disableMenu
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.disableMenuShortcut
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.enablePreselect
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.enablePreview
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.keepCompleteopt
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.numberSelect
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.preferCompleteThanJumpPlaceholder
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.removeDuplicateItems
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false$/;"	b	object:properties.suggest.triggerAfterInsertEnter
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false,$/;"	b	object:properties.coc.preferences.enableMessageDialog
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false,$/;"	b	object:properties.diagnostic.separateRelatedInformationAsDiagnostics
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false,$/;"	b	object:properties.list.alignColumns
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false,$/;"	b	object:properties.list.previewSplitRight
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false,$/;"	b	object:properties.outline.keepWindow
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false,$/;"	b	object:properties.suggest.acceptSuggestionOnCommitCharacter
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": false,$/;"	b	object:properties.suggest.echodocSupport
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": null$/;"	z	object:properties.coc.preferences.watchmanPath
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": null$/;"	z	object:properties.http.proxyAuthorization
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": null$/;"	z	object:properties.http.proxyCA
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": null,$/;"	z	object:properties.dialog.floatBorderHighlight
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": null,$/;"	z	object:properties.dialog.floatHighlight
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.bracketEnterImprove
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.colorSupport
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.enableFloatHighlight
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.enableMarkdown
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.excludeImageLinksInMarkdownDocument
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.floatActions
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.promptInput
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.promptWorkspaceEdit
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.semanticTokensHighlights
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.preferences.silentAutoupdate
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.source.around.enable
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.source.around.firstMatch
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.source.buffer.enable
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.source.buffer.firstMatch
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.coc.source.file.enable
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.diagnostic.autoRefresh
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.diagnostic.enable
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.diagnostic.locationlistUpdate
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.diagnostic.virtualTextCurrentLineOnly
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.http.proxyStrictSSL
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.list.source.diagnostics.includeCode
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.refactor.saveToFile
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.signature.enable
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.signature.preferShownAbove
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.suggest.fixInsertedWord
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.suggest.floatEnable
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.suggest.localityBonus
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.suggest.noselect
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true$/;"	b	object:properties.suggest.snippetsSupport
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.callHierarchy.enableTooltip
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.coc.source.buffer.ignoreGitignore
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.coc.source.file.ignoreHidden
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.diagnostic.enableHighlightLineNumber
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.diagnostic.enableSign
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.diagnostic.showDeprecated
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.diagnostic.showUnused
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.dialog.pickerButtonShortcut
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.dialog.pickerButtons
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.hover.autoHide
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.list.extendedSearchMode
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.outline.checkBufferSwitch
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.outline.followCursor
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.outline.showLineNumber
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": true,$/;"	b	object:properties.workspace.workspaceFolderCheckCwd
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": {}$/;"	o	object:properties.diagnostic.filetypeMap
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": {},$/;"	o	object:properties.languageserver
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": {},$/;"	o	object:properties.list.insertMappings
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": {},$/;"	o	object:properties.list.normalMappings
default	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "default": {},$/;"	o	object:properties.suggest.completionItemKindLabels
default	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let default = exists('&previewpopup') ? !empty(&previewpopup) : 0$/;"	v
defaultCommand	vim/.vim/plugged/fzf/src/constants.go	/^var defaultCommand string$/;"	v	package:fzf	typeref:typename:string
defaultEscDelay	vim/.vim/plugged/fzf/src/tui/light.go	/^	defaultEscDelay = 100$/;"	c	package:tui
defaultHeight	vim/.vim/plugged/fzf/src/tui/light.go	/^	defaultHeight = 24$/;"	c	package:tui
defaultHistoryMax	vim/.vim/plugged/fzf/src/constants.go	/^	defaultHistoryMax int = 1000$/;"	c	package:fzf	typeref:typename:int
defaultJumpLabels	vim/.vim/plugged/fzf/src/constants.go	/^	defaultJumpLabels string = "asdfghjklqwertyuiopzxcvbnm1234567890ASDFGHJKLQWERTYUIOPZXCVBNM`~;:,/;"	c	package:fzf	typeref:typename:string
defaultKeymap	vim/.vim/plugged/fzf/src/terminal.go	/^func defaultKeymap() map[tui.Event][]action {$/;"	f	package:fzf	typeref:typename:map[tui.Event][]action
defaultMargin	vim/.vim/plugged/fzf/src/options.go	/^func defaultMargin() [4]sizeSpec {$/;"	f	package:fzf	typeref:typename:[4]sizeSpec
defaultOptions	vim/.vim/plugged/fzf/src/options.go	/^func defaultOptions() *Options {$/;"	f	package:fzf	typeref:typename:*Options
defaultPort	vim/.vim/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	G	class:AnonymousFunction272f78ae33e00.e
defaultPort	vim/.vim/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	S	class:AnonymousFunction272f78ae33e00.e
defaultPreviewOpts	vim/.vim/plugged/fzf/src/options.go	/^func defaultPreviewOpts(command string) previewOpts {$/;"	f	package:fzf	typeref:typename:previewOpts
defaultTheme	vim/.vim/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) defaultTheme() *ColorTheme {$/;"	f	unknown:tui.LightRenderer	typeref:typename:*ColorTheme
defaultTheme	vim/.vim/plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) defaultTheme() *ColorTheme {$/;"	f	unknown:tui.LightRenderer	typeref:typename:*ColorTheme
defaultTheme	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) defaultTheme() *ColorTheme {$/;"	f	unknown:tui.FullscreenRenderer	typeref:typename:*ColorTheme
defaultWidth	vim/.vim/plugged/fzf/src/tui/light.go	/^	defaultWidth  = 80$/;"	c	package:tui
default_grep	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let default_grep = 'grep'$/;"	v
defaults	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^    "defaults": {$/;"	o
define-properties	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "define-properties": "^1.1.3"$/;"	s	object:dependencies.regexp.prototype.flags.requires
define-properties	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "define-properties": "^1.1.3"$/;"	s	object:dependencies.string.prototype.trimend.requires
define-properties	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "define-properties": "^1.1.3"$/;"	s	object:dependencies.string.prototype.trimstart.requires
define-properties	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "define-properties": "^1.1.3",$/;"	s	object:dependencies.object.assign.requires
define-properties	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "define-properties": "^1.1.3",$/;"	s	object:dependencies.promise.prototype.finally.requires
define-properties	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "define-properties": "^1.1.3",$/;"	s	object:dependencies.string.prototype.matchall.requires
define-properties	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "define-properties": {$/;"	o	object:dependencies
define-property	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "define-property": "^2.0.2",$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
define-property	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "define-property": "^0.2.5",$/;"	s	object:dependencies.class-utils.requires
define-property	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "define-property": "^0.2.5",$/;"	s	object:dependencies.expand-brackets.requires
define-property	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "define-property": "^0.2.5",$/;"	s	object:dependencies.object-copy.requires
define-property	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "define-property": "^0.2.5",$/;"	s	object:dependencies.snapdragon.requires
define-property	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "define-property": "^0.2.5",$/;"	s	object:dependencies.static-extend.requires
define-property	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "define-property": "^1.0.0",$/;"	s	object:dependencies.base.requires
define-property	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "define-property": "^1.0.0",$/;"	s	object:dependencies.extglob.requires
define-property	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "define-property": "^1.0.0",$/;"	s	object:dependencies.snapdragon-node.requires
define-property	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "define-property": "^2.0.2",$/;"	s	object:dependencies.nanomatch.requires
define-property	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "define-property": "^2.0.2",$/;"	s	object:dependencies.to-regex.requires
define-property	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "define-property": {$/;"	o	object:dependencies.base.dependencies
define-property	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "define-property": {$/;"	o	object:dependencies.class-utils.dependencies
define-property	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "define-property": {$/;"	o	object:dependencies.expand-brackets.dependencies
define-property	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "define-property": {$/;"	o	object:dependencies.extglob.dependencies
define-property	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "define-property": {$/;"	o	object:dependencies.object-copy.dependencies
define-property	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "define-property": {$/;"	o	object:dependencies.snapdragon-node.dependencies
define-property	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "define-property": {$/;"	o	object:dependencies.snapdragon.dependencies
define-property	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "define-property": {$/;"	o	object:dependencies.static-extend.dependencies
define-property	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "define-property": {$/;"	o	object:dependencies
definitions	vim/.vim/plugged/coc.nvim/data/schema.json	/^  "definitions": {$/;"	o
delChar	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) delChar() bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
delayed-stream	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "delayed-stream": "~1.0.0"$/;"	s	object:dependencies.combined-stream.requires
delayed-stream	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "delayed-stream": {$/;"	o	object:dependencies
delete	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
delete	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:Uz.o.u
deleteFile	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
delimNil	vim/.vim/plugged/fzf/src/reader.go	/^	delimNil bool$/;"	m	struct:fzf.Reader	typeref:typename:bool
delimiter	vim/.vim/plugged/fzf/src/pattern.go	/^	delimiter     Delimiter$/;"	m	struct:fzf.Pattern	typeref:typename:Delimiter
delimiter	vim/.vim/plugged/fzf/src/terminal.go	/^	delimiter    Delimiter$/;"	m	struct:fzf.Terminal	typeref:typename:Delimiter
delimiterRegexp	vim/.vim/plugged/fzf/src/options.go	/^func delimiterRegexp(str string) Delimiter {$/;"	f	package:fzf	typeref:typename:Delimiter
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dependencies": {$/;"	o	object:dependencies.has-values.dependencies.is-number
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dependencies": {$/;"	o	object:dependencies.sane.dependencies.braces
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dependencies": {$/;"	o	object:dependencies.sane.dependencies.fill-range
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dependencies": {$/;"	o	object:dependencies.sane.dependencies.is-number
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dependencies": {$/;"	o	object:dependencies.unset-value.dependencies.has-value
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.@babel/core
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.@babel/generator
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.@babel/helper-compilation-targets
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.@babel/highlight
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.@babel/traverse
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.@eslint/eslintrc
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.@istanbuljs/load-nyc-config
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.ansi-escapes
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.base
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.chalk
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.class-utils
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.cli-table
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.cssstyle
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.define-property
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.domexception
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.escodegen
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.eslint
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.eslint-plugin-jsdoc
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.eslint-utils
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.espree
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.esquery
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.esrecurse
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.execa
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.expand-brackets
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.expect
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.extend-shallow
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.extglob
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.flat-cache
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.has-values
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.is-accessor-descriptor
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.is-data-descriptor
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.is-descriptor
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.istanbul-lib-instrument
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.jest
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.jest-changed-files
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.jest-validate
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.jsdom
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.jsonfile
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.make-dir
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.mixin-deep
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.node-notifier
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.normalize-package-data
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.npm-run-path
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.object-copy
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.pretty-format
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.rc
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.read-pkg
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.resolve-cwd
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.sane
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.set-value
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.slice-ansi
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.snapdragon
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.snapdragon-node
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.snapdragon-util
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.stack-utils
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.static-extend
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.streamroller
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.string-width
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.table
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.to-object-path
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.tough-cookie
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.ts-jest
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.tsutils
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.unset-value
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.unzip-stream
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.v8-to-istanbul
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.vscode-languageserver
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dependencies": {$/;"	o	object:dependencies.wrap-ansi
dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^  "dependencies": {$/;"	o
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Absolute path of javascript file, should works in IPC mode"$/;"	s	object:definitions.languageServerModule.properties.module
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Absolute path of node runtime."$/;"	s	object:definitions.languageServerModule.properties.runtime
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Absolute root paths that language server should not use as rootPath, h/;"	s	object:definitions.languageServerBase.properties.ignoredRootPaths
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Additional uri schemes, default schemes including file & untitled.",$/;"	s	object:definitions.languageServerBase.properties.additionalSchemes
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Arguments of command",$/;"	s	object:definitions.languageServerCommand.properties.args
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Argv passed to node when using module, normally used for debugging, ex/;"	s	object:definitions.languageServerModule.properties.execArgv
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Background highlight group of float window."$/;"	s	object:definitions.float.properties.highlight
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Border highlight group of float window."$/;"	s	object:definitions.float.properties.borderhighlight
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Configure message level to show the output channel buffer",$/;"	s	object:definitions.languageServerBase.properties.revealOutputChannelOn
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Detach the languageserver process"$/;"	s	object:definitions.languageServerCommand.properties.detached
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Disable completion feature for this languageserver."$/;"	s	object:definitions.languageServerBase.properties.disableCompletion
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Disable completion snippet feature for this languageserver, the langua/;"	s	object:definitions.languageServerBase.properties.disableSnippetCompletion
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Disable dynamic registerCapability feature for this languageserver to /;"	s	object:definitions.languageServerBase.properties.disableDynamicRegister
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Disable handle diagnostics for this languageserver."$/;"	s	object:definitions.languageServerBase.properties.disableDiagnostics
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Disable workspaceFolders feature for this languageserver."$/;"	s	object:definitions.languageServerBase.properties.disableWorkspaceFolders
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Drop shadow effect by blending with the background, neovim only."$/;"	s	object:definitions.float.properties.shadow
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Enable focus by user actions (wincmds, mouse events), neovim only."$/;"	s	object:definitions.float.properties.focusable
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Enable progress report on languageserver initialize."$/;"	s	object:definitions.languageServerBase.properties.progressOnInitialization
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Enables pseudo-transparency by set 'winblend' option of window, neovim/;"	s	object:definitions.float.properties.winblend
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Encoding used for stdio of child process."$/;"	s	object:definitions.languageServerBase.properties.stdioEncoding
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Environment variables for child process."$/;"	s	object:definitions.languageServerBase.properties.env
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Executable in $PATH to start languageserver, should not used with modu/;"	s	object:definitions.languageServerCommand.properties.command
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Extra arguments of module",$/;"	s	object:definitions.languageServerModule.properties.args
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Host of server"$/;"	s	object:definitions.languageServerSocket.properties.host
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "If true, doesn't start server when root pattern not found."$/;"	s	object:definitions.languageServerBase.properties.requireRootPattern
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Maximum height of float window, include border."$/;"	s	object:definitions.float.properties.maxHeight
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Maximum width of float window, include border."$/;"	s	object:definitions.float.properties.maxWidth
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Port number of socket server"$/;"	s	object:definitions.languageServerSocket.properties.port
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Port number used when transport is 'socket'"$/;"	s	object:definitions.languageServerModule.properties.transportPort
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Priority of this languageserver's fomatter."$/;"	s	object:definitions.languageServerBase.properties.formatterPriority
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Root patterns used to resolve rootPath from current file, default to w/;"	s	object:definitions.languageServerBase.properties.rootPatterns
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Set to true to draw close icon"$/;"	s	object:definitions.float.properties.close
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Set to true to use borders."$/;"	s	object:definitions.float.properties.border
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Settings of languageserver"$/;"	s	object:definitions.languageServerBase.properties.settings
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Supported filetypes, add * in array for all filetypes.",$/;"	s	object:definitions.languageServerBase.properties.filetypes
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Title used by float window."$/;"	s	object:definitions.float.properties.title
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Trace level of communication between server and client"$/;"	s	object:definitions.languageServerBase.properties.trace.server
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Transport kind used by server, could be 'ipc', 'stdio', 'socket' and '/;"	s	object:definitions.languageServerModule.properties.transport
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Use shell for process"$/;"	s	object:definitions.languageServerCommand.properties.shell
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "Working directory of languageserver, absolute path or relative to work/;"	s	object:definitions.languageServerBase.properties.cwd
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "description": "initializationOptions passed to languageserver"$/;"	s	object:definitions.languageServerBase.properties.initializationOptions
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "A map between buffer filetype and the filetype assigned to diagnostics. To/;"	s	object:properties.diagnostic.filetypeMap
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Add preview option to completeopt, default: false.",$/;"	s	object:properties.suggest.enablePreview
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "An array of statusline segments that will be used to draw the status line /;"	s	object:properties.list.statusLineSegments
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Automatically hide hover float window on CursorMove or InsertEnter."$/;"	s	object:properties.hover.autoHide
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Automatically update the value of b:coc_current_function on CursorHold eve/;"	s	object:properties.coc.preferences.currentFunctionSymbolAutoUpdate
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Boost suggestions that appear closer to the cursor position.",$/;"	s	object:properties.suggest.localityBonus
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "CA (file) to use as Certificate Authority",$/;"	s	object:properties.http.proxyCA
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Closed icon of tree view."$/;"	s	object:properties.tree.closedIcon
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Command or absolute path to npm or yarn."$/;"	s	object:properties.npm.binPath
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Command used for location jump, like goto definition, goto references etc./;"	s	object:properties.coc.preferences.jumpCommand
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Configure float window style of diagnostic message.",$/;"	s	object:properties.diagnostic.floatConfig
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Configure float window style of hover documents.",$/;"	s	object:properties.hover.floatConfig
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Configure float window style of signature documents.",$/;"	s	object:properties.signature.floatConfig
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Configure style of documentation window for complete item.",$/;"	s	object:properties.suggest.floatConfig
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Confirm completion instead of jump to next placeholder when completion is /;"	s	object:properties.suggest.preferCompleteThanJumpPlaceholder
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Confirm key for confirm selection used by menu and picker, you can always /;"	s	object:properties.dialog.confirmKey
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Controls whether suggestions should be accepted on commit characters. For /;"	s	object:properties.suggest.acceptSuggestionOnCommitCharacter
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Controls whether the proxy server certificate should be verified against t/;"	s	object:properties.http.proxyStrictSSL
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Custom keymappings on insert mode."$/;"	s	object:properties.list.insertMappings
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Custom keymappings on normal mode."$/;"	s	object:properties.list.normalMappings
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Debouce time for input change on interactive mode."$/;"	s	object:properties.list.interactiveDebounceTime
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Decide how the filepath is shown in the list.",$/;"	s	object:properties.list.source.diagnostics.pathFormat
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Default sorting behavior for suggested completion items.",$/;"	s	object:properties.suggest.defaultSortMethod
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Define the diagnostic format that shown in float window or echoed, availab/;"	s	object:properties.diagnostic.format
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Diagnostic message target.",$/;"	s	object:properties.diagnostic.messageTarget
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Dictionary of languageservers, key is used as id of languageserver.",$/;"	s	object:properties.languageserver
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Disable shortcut of completion source in menu.",$/;"	s	object:properties.suggest.disableMenuShortcut
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Enable automatically refresh diagnostics, use diagnosticRefresh action whe/;"	s	object:properties.diagnostic.autoRefresh
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Enable codeLens feature, require neovim with set virtual text feature.",$/;"	s	object:properties.codeLens.enable
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Enable color highlight if language server support it.",$/;"	s	object:properties.coc.preferences.colorSupport
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Enable diagnostic refresh on insert mode, default false.",$/;"	s	object:properties.diagnostic.refreshOnInsertMode
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Enable extended search mode which allows multiple search patterns delimite/;"	s	object:properties.list.extendedSearchMode
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Enable floating window for documentation when possible.",$/;"	s	object:properties.suggest.floatEnable
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Enable highlight for floating window.",$/;"	s	object:properties.coc.preferences.enableFloatHighlight
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Enable highlighting line numbers for diagnostics, only works with neovim a/;"	s	object:properties.diagnostic.enableHighlightLineNumber
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Enable messages shown in notification dialog."$/;"	s	object:properties.coc.preferences.enableMessageDialog
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Enable preselect feature of LSP, only works on neovim",$/;"	s	object:properties.suggest.enablePreselect
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Enable semanticTokens highlight if language server support it.",$/;"	s	object:properties.coc.preferences.semanticTokensHighlights
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Enable signature help when trigger character typed, require restart servic/;"	s	object:properties.signature.enable
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Enable signs for diagnostics."$/;"	s	object:properties.diagnostic.enableSign
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Enable tooltip to show relative filepath of call hierarchy."$/;"	s	object:properties.callHierarchy.enableTooltip
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Exclude image links from markdown text in float window.",$/;"	s	object:properties.coc.preferences.excludeImageLinksInMarkdownDocument
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Expand level of tree nodes."$/;"	s	object:properties.outline.expandLevel
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Filetypes that should be ignored for resolve workspace folder.",$/;"	s	object:properties.workspace.ignoredFiletypes
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Filetypes that should have workspace folder should resolved from base dire/;"	s	object:properties.workspace.bottomUpFiletypes
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Filetypes that should run format on save.",$/;"	s	object:properties.coc.preferences.formatOnSaveFiletypes
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Filetypes that should run format on typing. Only take effect when `coc.pre/;"	s	object:properties.coc.preferences.formatOnTypeFiletypes
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Filetypes that should use ctags for outline instead of language server.",$/;"	s	object:properties.list.source.outline.ctagsFilestypes
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Filter code actions in actions menu by kinds.",$/;"	s	object:properties.outline.codeActionKinds
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Filter complete items by first letter strict match.",$/;"	s	object:properties.coc.source.around.firstMatch
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Filter complete items by first letter strict match.",$/;"	s	object:properties.coc.source.buffer.firstMatch
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Height of split list window."$/;"	s	object:properties.list.height
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Hide signature float window when text changed on insert mode.",$/;"	s	object:properties.signature.hideOnTextChange
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Highlight group for border of dialog window\/popup, default to 'CocFloatin/;"	s	object:properties.dialog.floatBorderHighlight
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Highlight group for dialog window\/popup, default to 'CocFloating'"$/;"	s	object:properties.dialog.floatHighlight
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Highlight group of notification dialog."$/;"	s	object:properties.notification.highlightGroup
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Highlight group used for highlight the range in preview window."$/;"	s	object:properties.list.previewHighlightGroup
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Highlight group used for matched texts in list window."$/;"	s	object:properties.list.matchHighlightGroup
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "How long to wait (in milliseconds) before displaying the diagnostic messag/;"	s	object:properties.diagnostic.messageDelay
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "How should completion be triggered",$/;"	s	object:properties.suggest.autoTrigger
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Ignore completion for hidden files"$/;"	s	object:properties.coc.source.file.ignoreHidden
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Ignore git ignored files for buffer words"$/;"	s	object:properties.coc.source.buffer.ignoreGitignore
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Ignore patterns of matcher",$/;"	s	object:properties.coc.source.file.ignorePatterns
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Improve enter inside bracket `<> {} [] ()` by add new empty line below and/;"	s	object:properties.coc.preferences.bracketEnterImprove
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Input number to select complete item, works on neovim >= 0.4.0 only.",$/;"	s	object:properties.suggest.numberSelect
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Interval for check extension update, could be daily, weekly, never",$/;"	s	object:properties.coc.preferences.extensionUpdateCheck
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Invalid character for strip valid word when inserting text of complete ite/;"	s	object:properties.suggest.invalidInsertCharacters
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Jump back to original window after outline is shown."$/;"	s	object:properties.outline.keepWindow
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Key used for cancel cursors session."$/;"	s	object:properties.cursors.cancelKey
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Key used for jump to next cursors position. "$/;"	s	object:properties.cursors.nextKey
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Key used for jump to previous cursors position."$/;"	s	object:properties.cursors.previousKey
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Key used for select next line on insert mode."$/;"	s	object:properties.list.nextKeymap
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Key used for select previous line on insert mode."$/;"	s	object:properties.list.previousKeymap
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Limit count for highlighted diagnostics, too many diagnostic highlights co/;"	s	object:properties.diagnostic.highlighLimit
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Limit lines for list buffer."$/;"	s	object:properties.list.limitLines
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "List should contains changed locations after workspace edit, default to vi/;"	s	object:properties.coc.preferences.listOfWorkspaceEdit
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Make inserted word replace word characters after cursor position.",$/;"	s	object:properties.suggest.fixInsertedWord
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Margin right for notification dialog."$/;"	s	object:properties.notification.marginRight
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Margin top for notification dialog."$/;"	s	object:properties.notification.marginTop
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Max height for preview window of list."$/;"	s	object:properties.list.maxPreviewHeight
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Max height of preview window for hover."$/;"	s	object:properties.hover.previewMaxHeight
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Max items count for source priority bigger than or equal to 90."$/;"	s	object:properties.suggest.highPrioritySourceLimit
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Max items count for source priority lower than 90."$/;"	s	object:properties.suggest.lowPrioritySourceLimit
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Max length of abbr that shown as label of complete item.",$/;"	s	object:properties.suggest.labelMaxLength
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Max length of detail that should be shown in popup menu.",$/;"	s	object:properties.suggest.detailMaxLength
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Maximum content height of notification dialog."$/;"	s	object:properties.notification.maxHeight
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Maximum content width of notification dialog."$/;"	s	object:properties.notification.maxWidth
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Maximum file size in bytes that coc.nvim should handle, default '10MB'"$/;"	s	object:properties.coc.preferences.maxFileSize
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Maximum height of dialog window."$/;"	s	object:properties.dialog.maxHeight
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Maximum number of complete items shown in vim"$/;"	s	object:properties.suggest.maxCompleteItemCount
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Maximum width of dialog window."$/;"	s	object:properties.dialog.maxWidth
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Message level for filter echoed messages, could be 'more', 'warning' and '/;"	s	object:properties.coc.preferences.messageLevel
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Minimum width of progress notification."$/;"	s	object:properties.notification.minProgressWidth
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Mininal input length for trigger completion, default 1"$/;"	s	object:properties.suggest.minTriggerInputLength
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Not make vim select first item on completion start",$/;"	s	object:properties.suggest.noselect
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Not open split window with update status when performing auto update.",$/;"	s	object:properties.coc.preferences.silentAutoupdate
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Offset number of buffer.addHighlight, neovim only.",$/;"	s	object:properties.diagnostic.highlightOffset
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Only show virtualText diagnostic on current cursor line",$/;"	s	object:properties.diagnostic.virtualTextCurrentLineOnly
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Open command for callHierarchy tree view."$/;"	s	object:properties.callHierarchy.openCommand
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Open command for refactor window.",$/;"	s	object:properties.refactor.openCommand
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Opend icon of tree view."$/;"	s	object:properties.tree.openedIcon
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Patterns of minimatch for filepath to execlude from symbols list.",$/;"	s	object:properties.list.source.symbols.excludes
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Print num lines of leading context before each match."$/;"	s	object:properties.refactor.beforeContext
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Print num lines of trailing context after each match."$/;"	s	object:properties.refactor.afterContext
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Priority of diagnostic signs, default to 10",$/;"	s	object:properties.diagnostic.signPriority
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Priority of language sources."$/;"	s	object:properties.suggest.languageSourcePriority
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Prompt confirm from user when apply workspace edit for unloaded files.",$/;"	s	object:properties.coc.preferences.promptWorkspaceEdit
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Recreate outline view after user changed to another buffer on current tab./;"	s	object:properties.outline.checkBufferSwitch
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Remove completion items with duplicated word for all sources, snippet item/;"	s	object:properties.suggest.removeDuplicateItems
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Remove kind field from vim complete item.",$/;"	s	object:properties.suggest.disableKind
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Remove menu field from vim complete item.",$/;"	s	object:properties.suggest.disableMenu
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Reveal item in outline tree on cursor hold."$/;"	s	object:properties.outline.followCursor
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Root patterns to resolve workspaceFolder from parent folders of opened fil/;"	s	object:properties.coc.preferences.rootPatterns
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Save to file when write refactor buffer with ':noa wa' command, set to fal/;"	s	object:properties.refactor.saveToFile
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Separate related information as diagnostics."$/;"	s	object:properties.diagnostic.separateRelatedInformationAsDiagnostics
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Separator text for codeLens in virtual text",$/;"	s	object:properties.codeLens.separator
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Set custom labels to completion items' kinds.",$/;"	s	object:properties.suggest.completionItemKindLabels
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Set to false to disable diagnostic display",$/;"	s	object:properties.diagnostic.enable
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Set to false to disable float\/popup support for actions menu, won't work /;"	s	object:properties.coc.preferences.floatActions
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Set to false to disable snippets support of completion.",$/;"	s	object:properties.suggest.snippetsSupport
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Set to true to enable formatting on typing",$/;"	s	object:properties.coc.preferences.formatOnType
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Show buttons for picker dialog window\/popup."$/;"	s	object:properties.dialog.pickerButtons
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Show diagnostics with deprecated tag."$/;"	s	object:properties.diagnostic.showDeprecated
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Show diagnostics with unused tag."$/;"	s	object:properties.diagnostic.showUnused
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Show line number of symbols."$/;"	s	object:properties.outline.showLineNumber
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Show shortcut in buttons of picker dialog window\/popup, used when dialog./;"	s	object:properties.dialog.pickerButtonShortcut
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Show signature help float window above cursor when possible, require resta/;"	s	object:properties.signature.preferShownAbove
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Sign offset of list, should be different from other plugins."$/;"	s	object:properties.list.signOffset
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Sign text for selected lines."$/;"	s	object:properties.list.selectedSignText
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Sort method for symbols.",$/;"	s	object:properties.outline.sortBy
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Subseparator between codeLenses in virtual text",$/;"	s	object:properties.codeLens.subseparator
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Suggest ASCII characters only",$/;"	s	object:properties.suggest.asciiCharactersOnly
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Target of signature help, use float when possible by default.",$/;"	s	object:properties.signature.target
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Target to show hover information, default is floating window when possible/;"	s	object:properties.hover.target
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Tell the language server that markdown text format is supported, note that/;"	s	object:properties.coc.preferences.enableMarkdown
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Text of error sign",$/;"	s	object:properties.diagnostic.errorSign
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Text of hint sign",$/;"	s	object:properties.diagnostic.hintSign
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Text of info sign",$/;"	s	object:properties.diagnostic.infoSign
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Text of warning sign",$/;"	s	object:properties.diagnostic.warningSign
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Text shown in statusline to indicate snippet session is activated."$/;"	s	object:properties.coc.preferences.snippetStatusText
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "The character used as first character in prompt line"$/;"	s	object:properties.list.indicator
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "The character used in abbr of complete item to indicate the item could be /;"	s	object:properties.suggest.snippetIndicator
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "The number of non empty lines from a diagnostic to display",$/;"	s	object:properties.diagnostic.virtualTextLines
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "The prefix added virtual text diagnostics",$/;"	s	object:properties.diagnostic.virtualTextPrefix
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "The proxy setting to use. If not set, will be inherited from the `http_pro/;"	s	object:properties.http.proxy
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "The text that will mark a line end from the diagnostic message",$/;"	s	object:properties.diagnostic.virtualTextLineSeparator
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "The value to send as the `Proxy-Authorization` header for every network re/;"	s	object:properties.http.proxyAuthorization
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Timeout for completion, in miliseconds."$/;"	s	object:properties.suggest.timeout
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Timeout for trigger signature help, in miliseconds."$/;"	s	object:properties.signature.triggerSignatureWait
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Trigger completion after InsertEnter, auto trigger should be 'always' to e/;"	s	object:properties.suggest.triggerAfterInsertEnter
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Trigger key active filter."$/;"	s	object:properties.tree.key.activeFilter
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Trigger key to collapse all tree node."$/;"	s	object:properties.tree.key.collapseAll
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Trigger key to dispose the tree and close tree window."$/;"	s	object:properties.tree.key.close
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Trigger key to invoke actions."$/;"	s	object:properties.tree.key.actions
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Trigger key to invoke default command of current node or selection."$/;"	s	object:properties.tree.key.invoke
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Trigger key to select next item during filter."$/;"	s	object:properties.tree.key.selectNext
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Trigger key to select previous item during filter."$/;"	s	object:properties.tree.key.selectPrevious
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Trigger key to select\/unselect item"$/;"	s	object:properties.tree.key.toggleSelection
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Trigger key to toggle expand state of tree node, does nothing with leaf no/;"	s	object:properties.tree.key.toggle
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Trim same extension on file completion",$/;"	s	object:properties.coc.source.file.trimSameExts
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Update locationlist on diagnostics change, only works with locationlist op/;"	s	object:properties.diagnostic.locationlistUpdate
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Use Ale for display diagnostics in vim, will disable coc for display diagn/;"	s	object:properties.diagnostic.displayByAle
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Use NeoVim virtual text to display diagnostics",$/;"	s	object:properties.diagnostic.virtualText
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Use prompt buffer in float window for user input.",$/;"	s	object:properties.coc.preferences.promptInput
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Use vim's quickfix list for jump locations,\\n need restart on change.",$/;"	s	object:properties.coc.preferences.useQuickfixForLocations
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Use vsplit for preview window."$/;"	s	object:properties.list.previewSplitRight
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Used for filter diagnostics by diagnostic severity.",$/;"	s	object:properties.diagnostic.level
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Wait time between text change and completion start, cancel completion when/;"	s	object:properties.suggest.triggerCompletionWait
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "When enabled, add function signature to user_data.signature to support ech/;"	s	object:properties.suggest.echodocSupport
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "When enabled, completeopt is not overridden, auto completion will be disab/;"	s	object:properties.suggest.keepCompleteopt
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "When enabled, show all diagnostics of current line if there are none at th/;"	s	object:properties.diagnostic.checkCurrentLine
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "When to enable show messages of diagnostics.",$/;"	s	object:properties.diagnostic.enableMessage
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Where to show the detail text of CompleteItem from LS.",$/;"	s	object:properties.suggest.detailField
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Whether the cwd directory should be checked first when resolving workspace/;"	s	object:properties.workspace.workspaceFolderCheckCwd
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Whether to align lists in columns, default: `false`"$/;"	s	object:properties.list.alignColumns
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Whether to show the diagnostic code in the list.",$/;"	s	object:properties.list.source.diagnostics.includeCode
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Will save handler timeout"$/;"	s	object:properties.coc.preferences.willSaveHandlerTimeout
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Window split command used by callHierarchy tree view."$/;"	s	object:properties.callHierarchy.splitCommand
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "Window split command used by outline."$/;"	s	object:properties.outline.splitCommand
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "description": "executable path for https:\/\/facebook.github.io\/watchman\/, detected fro/;"	s	object:properties.coc.preferences.watchmanPath
description	vim/.vim/plugged/coc.nvim/data/schema.json	/^  "description": "Configuration file for coc.nvim",$/;"	s
deselectItem	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) deselectItem(item *Item) {$/;"	f	struct:fzf.Terminal
deselectItemChanged	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) deselectItemChanged(item *Item) bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
destroy	vim/.vim/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	m	class:AnonymousFunction272f78ae33e00.e
detached	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "detached": {$/;"	o	object:definitions.languageServerCommand.properties
detail	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78ae12100.e.c
detect-newline	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "detect-newline": "^3.0.0"$/;"	s	object:dependencies.jest-docblock.requires
detect-newline	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "detect-newline": {$/;"	o	object:dependencies
deus	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### deus$/;"	S	chapter:Available Colorschemes
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^              "dev": true,$/;"	b	object:dependencies.has-values.dependencies.is-number.dependencies.kind-of
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^              "dev": true,$/;"	b	object:dependencies.sane.dependencies.braces.dependencies.extend-shallow
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^              "dev": true,$/;"	b	object:dependencies.sane.dependencies.fill-range.dependencies.extend-shallow
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^              "dev": true,$/;"	b	object:dependencies.sane.dependencies.is-number.dependencies.kind-of
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^              "dev": true,$/;"	b	object:dependencies.unset-value.dependencies.has-value.dependencies.isobject
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.@babel/core.dependencies.semver
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.@babel/core.dependencies.source-map
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.@babel/generator.dependencies.source-map
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.@babel/helper-compilation-targets.dependencies.semver
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.@babel/highlight.dependencies.color-name
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.@babel/highlight.dependencies.has-flag
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.@babel/traverse.dependencies.globals
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.@eslint/eslintrc.dependencies.ignore
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.@istanbuljs/load-nyc-config.dependencies.resolve-from
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.ansi-escapes.dependencies.type-fest
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.cssstyle.dependencies.cssom
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.domexception.dependencies.webidl-conversions
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.escodegen.dependencies.estraverse
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.escodegen.dependencies.prelude-ls
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.eslint-utils.dependencies.eslint-visitor-keys
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.eslint.dependencies.ignore
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.espree.dependencies.eslint-visitor-keys
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.esquery.dependencies.estraverse
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.esrecurse.dependencies.estraverse
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.execa.dependencies.path-key
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.execa.dependencies.semver
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.execa.dependencies.shebang-regex
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.expand-brackets.dependencies.ms
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.flat-cache.dependencies.flatted
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.is-descriptor.dependencies.kind-of
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.istanbul-lib-instrument.dependencies.semver
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.jest-changed-files.dependencies.is-stream
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.jest-validate.dependencies.camelcase
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.jsdom.dependencies.acorn
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.make-dir.dependencies.semver
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.normalize-package-data.dependencies.semver
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.npm-run-path.dependencies.path-key
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.read-pkg.dependencies.type-fest
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.resolve-cwd.dependencies.resolve-from
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.slice-ansi.dependencies.color-name
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.snapdragon.dependencies.ms
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.snapdragon.dependencies.source-map
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.stack-utils.dependencies.escape-string-regexp
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.table.dependencies.ansi-regex
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.table.dependencies.emoji-regex
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.tough-cookie.dependencies.universalify
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.ts-jest.dependencies.yargs-parser
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.tsutils.dependencies.tslib
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.unset-value.dependencies.has-values
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.v8-to-istanbul.dependencies.source-map
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.vscode-languageserver.dependencies.vscode-jsonrpc
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true$/;"	b	object:dependencies.vscode-languageserver.dependencies.vscode-languageserver-types
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.@babel/highlight.dependencies.ansi-styles
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.@babel/highlight.dependencies.chalk
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.@babel/highlight.dependencies.color-convert
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.@babel/highlight.dependencies.supports-color
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.base.dependencies.define-property
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.base.dependencies.is-accessor-descriptor
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.base.dependencies.is-data-descriptor
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.base.dependencies.is-descriptor
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.chalk.dependencies.ansi-styles
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.class-utils.dependencies.define-property
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.define-property.dependencies.is-accessor-descriptor
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.define-property.dependencies.is-data-descriptor
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.define-property.dependencies.is-descriptor
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.escodegen.dependencies.levn
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.escodegen.dependencies.optionator
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.escodegen.dependencies.type-check
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.eslint-plugin-jsdoc.dependencies.debug
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.eslint-plugin-jsdoc.dependencies.semver
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.execa.dependencies.cross-spawn
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.execa.dependencies.shebang-command
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.execa.dependencies.which
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.expand-brackets.dependencies.debug
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.expand-brackets.dependencies.define-property
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.expand-brackets.dependencies.extend-shallow
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.expect.dependencies.ansi-styles
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.extend-shallow.dependencies.is-extendable
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.extglob.dependencies.define-property
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.extglob.dependencies.extend-shallow
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.extglob.dependencies.is-accessor-descriptor
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.extglob.dependencies.is-data-descriptor
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.extglob.dependencies.is-descriptor
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.has-values.dependencies.is-number
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.has-values.dependencies.kind-of
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.is-accessor-descriptor.dependencies.kind-of
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.is-data-descriptor.dependencies.kind-of
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.jest-changed-files.dependencies.execa
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.jest-changed-files.dependencies.get-stream
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.jest-changed-files.dependencies.npm-run-path
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.jest.dependencies.jest-cli
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.mixin-deep.dependencies.is-extendable
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.node-notifier.dependencies.uuid
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.object-copy.dependencies.define-property
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.object-copy.dependencies.kind-of
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.pretty-format.dependencies.ansi-styles
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.sane.dependencies.anymatch
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.sane.dependencies.braces
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.sane.dependencies.fill-range
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.sane.dependencies.is-number
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.sane.dependencies.micromatch
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.sane.dependencies.normalize-path
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.sane.dependencies.to-regex-range
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.set-value.dependencies.extend-shallow
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.slice-ansi.dependencies.ansi-styles
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.slice-ansi.dependencies.color-convert
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.snapdragon-node.dependencies.define-property
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.snapdragon-node.dependencies.is-accessor-descriptor
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.snapdragon-node.dependencies.is-data-descriptor
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.snapdragon-node.dependencies.is-descriptor
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.snapdragon-util.dependencies.kind-of
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.snapdragon.dependencies.debug
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.snapdragon.dependencies.define-property
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.snapdragon.dependencies.extend-shallow
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.static-extend.dependencies.define-property
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.table.dependencies.string-width
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.table.dependencies.strip-ansi
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.to-object-path.dependencies.kind-of
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.unset-value.dependencies.has-value
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.vscode-languageserver.dependencies.vscode-languageserver-protocol
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "dev": true,$/;"	b	object:dependencies.wrap-ansi.dependencies.ansi-styles
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@babel/compat-data
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@babel/helper-plugin-utils
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@babel/helper-validator-identifier
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@babel/helper-validator-option
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@babel/parser
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@bcoe/v8-coverage
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@istanbuljs/schema
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@nodelib/fs.stat
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/cli-table
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/debounce
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/events
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/istanbul-lib-coverage
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/json-schema
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/marked
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/minimatch
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/node
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/normalize-package-data
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/prettier
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/semver
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/stack-utils
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/uuid
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/which
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@types/yargs-parser
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.@typescript-eslint/types
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.abab
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.acorn
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.acorn-jsx
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.acorn-walk
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.ansi-colors
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.arr-diff
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.arr-flatten
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.arr-union
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.array-union
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.array-unique
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.assign-symbols
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.astral-regex
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.asynckit
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.atob
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.binary-extensions
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.browser-process-hrtime
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.buffer-from
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.callsites
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.camelcase
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.caniuse-lite
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.char-regex
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.ci-info
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.cjs-module-lexer
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.co
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.collect-v8-coverage
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.color-name
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.colorette
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.colors
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.comment-parser
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.component-emitter
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.copy-descriptor
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.cssom
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.decamelize
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.decimal.js
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.decode-uri-component
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.deep-is
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.deepmerge
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.delayed-stream
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.detect-newline
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.diff-sequences
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.electron-to-chromium
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.emittery
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.esbuild
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.escalade
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.eslint-visitor-keys
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.esprima
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.estraverse
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.esutils
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.exec-sh
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.exit
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.fast-deep-equal
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.fast-json-stable-stringify
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.fast-levenshtein
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.for-in
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.functional-red-black-tree
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.gensync
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.get-caller-file
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.get-package-type
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.get-value
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.has-flag
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.hosted-git-info
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.html-escaper
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.human-signals
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.ignore
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.imurmurhash
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-arrayish
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-buffer
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-extendable
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-extglob
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-fullwidth-code-point
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-generator-fn
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-number
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-potential-custom-element-name
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-stream
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-typedarray
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.is-windows
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.isobject
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.istanbul-lib-coverage
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.jest-get-type
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.jest-pnp-resolver
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.jest-regex-util
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.js-tokens
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.jsdoctypeparser
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.jsesc
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.json-parse-even-better-errors
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.json-schema-traverse
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.json-stable-stringify-without-jsonify
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.kind-of
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.kleur
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.leven
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.lines-and-columns
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.lodash
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.lodash.memoize
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.make-error
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.map-cache
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.merge-stream
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.merge2
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.mime-db
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.mimic-fn
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.natural-compare
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.nice-try
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.node-modules-regexp
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.node-releases
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.normalize-path
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.nwsapi
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.p-each-series
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.p-finally
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.p-try
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.parse5
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.pascalcase
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.path-exists
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.path-key
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.path-parse
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.path-type
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.picomatch
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.posix-character-classes
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.prelude-ls
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.progress
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.psl
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.punycode
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.queue-microtask
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.react-is
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.regexpp
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.regextras
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.remove-trailing-separator
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.repeat-element
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.repeat-string
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.require-directory
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.require-main-filename
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.resolve-from
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.resolve-url
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.ret
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.reusify
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.rsvp
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.safer-buffer
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.set-blocking
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.shebang-regex
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.signal-exit
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.sisteransi
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.slash
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.source-map
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.source-map-url
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.spdx-exceptions
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.spdx-license-ids
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.sprintf-js
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.strip-bom
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.strip-eof
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.strip-final-newline
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.strip-json-comments
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.symbol-tree
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.text-table
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.throat
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.tmpl
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.to-fast-properties
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.type-detect
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.type-fest
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.typescript
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.urix
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.use
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.v8-compile-cache
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.webidl-conversions
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.whatwg-mimetype
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.which-module
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.word-wrap
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.ws
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.xml-name-validator
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.xmlchars
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true$/;"	b	object:dependencies.y18n
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/code-frame
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/core
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/generator
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/helper-compilation-targets
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/helper-function-name
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/helper-get-function-arity
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/helper-member-expression-to-functions
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/helper-module-imports
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/helper-module-transforms
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/helper-optimise-call-expression
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/helper-replace-supers
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/helper-simple-access
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/helper-split-export-declaration
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/helpers
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/highlight
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/plugin-syntax-async-generators
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/plugin-syntax-bigint
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/plugin-syntax-class-properties
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/plugin-syntax-import-meta
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/plugin-syntax-json-strings
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/plugin-syntax-logical-assignment-operators
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/plugin-syntax-nullish-coalescing-operator
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/plugin-syntax-numeric-separator
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/plugin-syntax-object-rest-spread
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/plugin-syntax-optional-catch-binding
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/plugin-syntax-optional-chaining
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/plugin-syntax-top-level-await
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/template
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/traverse
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@babel/types
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@cnakazawa/watch
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@eslint/eslintrc
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@istanbuljs/load-nyc-config
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@jest/console
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@jest/core
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@jest/environment
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@jest/fake-timers
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@jest/globals
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@jest/reporters
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@jest/source-map
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@jest/test-result
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@jest/test-sequencer
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@jest/transform
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@jest/types
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@nodelib/fs.scandir
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@nodelib/fs.walk
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@sinonjs/commons
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@sinonjs/fake-timers
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/babel__core
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/babel__generator
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/babel__template
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/babel__traverse
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/fb-watchman
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/fs-extra
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/glob
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/graceful-fs
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/istanbul-lib-report
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/istanbul-reports
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/jest
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/minipass
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/mkdirp
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/tar
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@types/yargs
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@typescript-eslint/eslint-plugin
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@typescript-eslint/experimental-utils
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@typescript-eslint/parser
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@typescript-eslint/scope-manager
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@typescript-eslint/typescript-estree
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.@typescript-eslint/visitor-keys
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.acorn-globals
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.ajv
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.ansi-escapes
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.anymatch
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.argparse
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.babel-jest
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.babel-plugin-istanbul
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.babel-plugin-jest-hoist
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.babel-preset-current-node-syntax
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.babel-preset-jest
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.base
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.braces
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.browserslist
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.bs-logger
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.cache-base
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.capture-exit
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.chalk
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.chokidar
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.class-utils
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.cliui
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.collection-visit
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.color-convert
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.combined-stream
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.convert-source-map
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.cross-spawn
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.cssstyle
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.data-urls
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.define-property
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.dir-glob
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.doctrine
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.domexception
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.end-of-stream
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.enquirer
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.error-ex
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.escodegen
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.eslint
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.eslint-plugin-jest
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.eslint-plugin-jsdoc
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.eslint-scope
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.eslint-utils
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.espree
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.esquery
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.esrecurse
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.execa
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.expand-brackets
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.expect
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.extend-shallow
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.extglob
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.fast-glob
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.fastq
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.file-entry-cache
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.fill-range
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.find-up
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.flat-cache
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.form-data
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.fragment-cache
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.fsevents
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.get-stream
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.glob-parent
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.globals
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.globby
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.growly
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.has-value
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.has-values
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.html-encoding-sniffer
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.iconv-lite
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.import-fresh
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.import-local
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-accessor-descriptor
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-binary-path
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-ci
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-core-module
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-data-descriptor
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-descriptor
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-docker
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-glob
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-plain-object
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.is-wsl
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.istanbul-lib-instrument
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.istanbul-lib-report
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.istanbul-lib-source-maps
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.istanbul-reports
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-changed-files
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-config
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-diff
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-docblock
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-each
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-environment-jsdom
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-environment-node
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-haste-map
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-jasmine2
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-leak-detector
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-matcher-utils
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-message-util
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-mock
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-resolve
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-resolve-dependencies
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-runner
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-runtime
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-serializer
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-snapshot
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-util
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-validate
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-watcher
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jest-worker
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.js-yaml
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.jsdom
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.json5
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.levn
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.locate-path
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.lru-cache
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.make-dir
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.makeerror
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.map-visit
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.micromatch
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.mime-types
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.mixin-deep
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.nanomatch
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.node-notifier
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.normalize-package-data
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.npm-run-path
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.object-copy
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.object-visit
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.object.pick
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.onetime
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.optionator
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.p-limit
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.p-locate
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.parent-module
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.parse-json
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.pirates
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.pkg-dir
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.pretty-format
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.prompts
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.pump
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.read-pkg
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.read-pkg-up
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.readdirp
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.regex-not
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.resolve
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.resolve-cwd
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.rimraf
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.run-parallel
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.safe-regex
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.sane
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.saxes
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.set-value
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.shebang-command
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.shellwords
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.slice-ansi
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.snapdragon
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.snapdragon-node
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.snapdragon-util
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.source-map-resolve
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.source-map-support
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.spdx-correct
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.spdx-expression-parse
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.split-string
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.stack-utils
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.static-extend
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.string-length
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.supports-color
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.supports-hyperlinks
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.table
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.terminal-link
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.test-exclude
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.to-object-path
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.to-regex
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.to-regex-range
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.tough-cookie
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.tr46
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.ts-jest
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.tsutils
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.type-check
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.typedarray-to-buffer
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.union-value
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.unset-value
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.uri-js
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.v8-to-istanbul
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.validate-npm-package-license
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.vscode-languageserver
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.w3c-hr-time
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.w3c-xmlserializer
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.walker
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.whatwg-encoding
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.whatwg-url
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.wrap-ansi
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.write-file-atomic
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.yargs
dev	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "dev": true,$/;"	b	object:dependencies.yargs-parser
devPrefixes	vim/.vim/plugged/fzf/src/tui/ttyname_unix.go	/^var devPrefixes = [...]string{"\/dev\/pts\/", "\/dev\/"}$/;"	v	package:tui
development	.config/openbox/menu.xml	/^<menu id="development" label="development">$/;"	i
dfe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
dg	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	f
dge	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
dh	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
di	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	v
diagnostic.autoRefresh	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.autoRefresh": {$/;"	o	object:properties
diagnostic.checkCurrentLine	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.checkCurrentLine": {$/;"	o	object:properties
diagnostic.displayByAle	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.displayByAle": {$/;"	o	object:properties
diagnostic.enable	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.enable": {$/;"	o	object:properties
diagnostic.enableHighlightLineNumber	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.enableHighlightLineNumber": {$/;"	o	object:properties
diagnostic.enableMessage	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.enableMessage": {$/;"	o	object:properties
diagnostic.enableSign	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.enableSign": {$/;"	o	object:properties
diagnostic.errorSign	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.errorSign": {$/;"	o	object:properties
diagnostic.filetypeMap	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.filetypeMap": {$/;"	o	object:properties
diagnostic.floatConfig	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.floatConfig": {$/;"	o	object:properties
diagnostic.format	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.format": {$/;"	o	object:properties
diagnostic.highlighLimit	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.highlighLimit": {$/;"	o	object:properties
diagnostic.highlightOffset	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.highlightOffset": {$/;"	o	object:properties
diagnostic.hintSign	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.hintSign": {$/;"	o	object:properties
diagnostic.infoSign	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.infoSign": {$/;"	o	object:properties
diagnostic.level	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.level": {$/;"	o	object:properties
diagnostic.locationlistUpdate	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.locationlistUpdate": {$/;"	o	object:properties
diagnostic.messageDelay	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.messageDelay": {$/;"	o	object:properties
diagnostic.messageTarget	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.messageTarget": {$/;"	o	object:properties
diagnostic.refreshOnInsertMode	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.refreshOnInsertMode": {$/;"	o	object:properties
diagnostic.separateRelatedInformationAsDiagnostics	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.separateRelatedInformationAsDiagnostics": {$/;"	o	object:properties
diagnostic.showDeprecated	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.showDeprecated": {$/;"	o	object:properties
diagnostic.showUnused	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.showUnused": {$/;"	o	object:properties
diagnostic.signPriority	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.signPriority": {$/;"	o	object:properties
diagnostic.virtualText	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.virtualText": {$/;"	o	object:properties
diagnostic.virtualTextCurrentLineOnly	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.virtualTextCurrentLineOnly": {$/;"	o	object:properties
diagnostic.virtualTextLineSeparator	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.virtualTextLineSeparator": {$/;"	o	object:properties
diagnostic.virtualTextLines	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.virtualTextLines": {$/;"	o	object:properties
diagnostic.virtualTextPrefix	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.virtualTextPrefix": {$/;"	o	object:properties
diagnostic.warningSign	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "diagnostic.warningSign": {$/;"	o	object:properties
diagnostics	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78ae12300.e.s
dialog.confirmKey	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "dialog.confirmKey": {$/;"	o	object:properties
dialog.floatBorderHighlight	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "dialog.floatBorderHighlight": {$/;"	o	object:properties
dialog.floatHighlight	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "dialog.floatHighlight": {$/;"	o	object:properties
dialog.maxHeight	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "dialog.maxHeight": {$/;"	o	object:properties
dialog.maxWidth	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "dialog.maxWidth": {$/;"	o	object:properties
dialog.pickerButtonShortcut	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "dialog.pickerButtonShortcut": {$/;"	o	object:properties
dialog.pickerButtons	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "dialog.pickerButtons": {$/;"	o	object:properties
did_javascript_syn_inits	vim/.vim/plugged/vim-javascript/extras/flow.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_javascript_syn_inits	vim/.vim/plugged/vim-javascript/extras/jsdoc.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_javascript_syn_inits	vim/.vim/plugged/vim-javascript/syntax/javascript.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_typescript_syn_inits	vim/.vim/plugged/typescript-vim/syntax/typescript.vim	/^    let did_typescript_syn_inits = 1$/;"	v
diff-sequences	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "diff-sequences": "^26.6.2",$/;"	s	object:dependencies.jest-diff.requires
diff-sequences	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "diff-sequences": {$/;"	o	object:dependencies
dim	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.modifier
dir-glob	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "dir-glob": "^3.0.1",$/;"	s	object:dependencies.globby.requires
dir-glob	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "dir-glob": {$/;"	o	object:dependencies
disableCompletion	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "disableCompletion": {$/;"	o	object:definitions.languageServerBase.properties
disableCompletion	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "disableCompletion": {},$/;"	o	object:definitions.languageServerCommand.properties
disableCompletion	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "disableCompletion": {},$/;"	o	object:definitions.languageServerModule.properties
disableCompletion	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "disableCompletion": {},$/;"	o	object:definitions.languageServerSocket.properties
disableDiagnostics	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "disableDiagnostics": {$/;"	o	object:definitions.languageServerBase.properties
disableDiagnostics	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "disableDiagnostics": {},$/;"	o	object:definitions.languageServerCommand.properties
disableDiagnostics	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "disableDiagnostics": {},$/;"	o	object:definitions.languageServerModule.properties
disableDiagnostics	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "disableDiagnostics": {},$/;"	o	object:definitions.languageServerSocket.properties
disableDynamicRegister	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "disableDynamicRegister": {$/;"	o	object:definitions.languageServerBase.properties
disableDynamicRegister	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "disableDynamicRegister": {},$/;"	o	object:definitions.languageServerCommand.properties
disableDynamicRegister	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "disableDynamicRegister": {},$/;"	o	object:definitions.languageServerModule.properties
disableDynamicRegister	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "disableDynamicRegister": {},$/;"	o	object:definitions.languageServerSocket.properties
disableSnippetCompletion	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "disableSnippetCompletion": {$/;"	o	object:definitions.languageServerBase.properties
disableSnippetCompletion	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "disableSnippetCompletion": {},$/;"	o	object:definitions.languageServerCommand.properties
disableSnippetCompletion	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "disableSnippetCompletion": {},$/;"	o	object:definitions.languageServerModule.properties
disableSnippetCompletion	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "disableSnippetCompletion": {},$/;"	o	object:definitions.languageServerSocket.properties
disableWorkspaceFolders	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "disableWorkspaceFolders": {$/;"	o	object:definitions.languageServerBase.properties
disableWorkspaceFolders	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "disableWorkspaceFolders": {},$/;"	o	object:definitions.languageServerCommand.properties
disableWorkspaceFolders	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "disableWorkspaceFolders": {},$/;"	o	object:definitions.languageServerModule.properties
disableWorkspaceFolders	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "disableWorkspaceFolders": {},$/;"	o	object:definitions.languageServerSocket.properties
displayWidth	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) displayWidth(runes []rune) int {$/;"	f	struct:fzf.Terminal	typeref:typename:int
displayWidth	vim/.vim/plugged/fzf/src/tui/light.go	/^	displayWidth int$/;"	m	struct:tui.wrappedLine	typeref:typename:int
displayWidthWithLimit	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) displayWidthWithLimit(runes []rune, prefixWidth int, limit int) int {$/;"	f	struct:fzf.Terminal	typeref:typename:int
dispose	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	m	class:AnonymousFunction272f78ae9900.e
dj	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
dle	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
dm	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
dme	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
dnf	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^    "dnf": {$/;"	o
docker	vim/.vim/plugged/fzf/Makefile	/^docker:$/;"	t
docker-test	vim/.vim/plugged/fzf/Makefile	/^docker-test:$/;"	t
doctrine	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "doctrine": "^3.0.0",$/;"	s	object:dependencies.eslint.requires
doctrine	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "doctrine": {$/;"	o	object:dependencies
domexception	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "domexception": "^2.0.1",$/;"	s	object:dependencies.jsdom.requires
domexception	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "domexception": {$/;"	o	object:dependencies
doubleClickDuration	vim/.vim/plugged/fzf/src/tui/tui.go	/^	doubleClickDuration = 500 * time.Millisecond$/;"	c	package:tui
down	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1e100.i
download	vim/.vim/plugged/fzf/install	/^download() {$/;"	f
download	vim/.vim/plugged/fzf/install.ps1	/^function download {$/;"	f
dp	vim/.vim/plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	f
dr	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
drawBorder	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) drawBorder() {$/;"	f	struct:tui.LightWindow
drawBorder	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) drawBorder() {$/;"	f	struct:tui.TcellWindow
drawBorderAround	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) drawBorderAround() {$/;"	f	struct:tui.LightWindow
drawBorderHorizontal	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) drawBorderHorizontal(top, bottom bool) {$/;"	f	struct:tui.LightWindow
drawBorderVertical	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) drawBorderVertical(left, right bool) {$/;"	f	struct:tui.LightWindow
ds	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
du	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
dupeTheme	vim/.vim/plugged/fzf/src/options.go	/^func dupeTheme(theme *tui.ColorTheme) *tui.ColorTheme {$/;"	f	package:fzf	typeref:typename:*tui.ColorTheme
dw	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
dx	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
dy	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
dynamicStyle	vim/.vim/plugged/vim-styled-components/examples/issue-56.ts	/^const dynamicStyle = (props: any) => css`$/;"	C
dz	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
e	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f	function:AnonymousFunction272f78ae3000
e	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f	function:AnonymousFunction272f78ae3200
e	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f	function:Uq
e	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	c
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunction272f78ae13c00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunction272f78ae14400
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunction272f78ae17c00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunction272f78ae17d00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunction272f78ae18200
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunction272f78ae18300
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunction272f78ae18400
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunction272f78ae19200
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunction272f78ae1c900
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae10000
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae10100
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae10a00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae10b00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae10c00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae10d00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae10f00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae11000
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae11400
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae11600
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae11700
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae11800
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae11900
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae11a00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae11b00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae11d00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae12000
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae12100
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae12300
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae12400
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae12500
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae12600
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae12700
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae12800
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aeea00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aeeb00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aeec00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aeed00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aeee00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aeef00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aef000
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aef200
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aef300
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aef600
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aef700
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aef800
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aef900
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aefa00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aefb00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aefc00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aefd00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aefe00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aeff00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f	function:AnonymousFunction272f78ae25900
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	c	class:pK
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:Y9
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c	class:AnonymousFunction272f78ae2f400.t
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae2ef00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae33b00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:h.scan
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	c	class:AnonymousFunction272f78ae33e00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c	class:BW
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c	class:jW
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunction272f78ae29800
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	c	class:Uoe
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f	function:AnonymousFunction272f78ae9500
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f	function:AnonymousFunction272f78ae9600
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	c	class:LK
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	f	function:AnonymousFunction272f78ae12900
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	c	class:AnonymousFunction272f78ae9900
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f	function:AnonymousFunction272f78ae9700
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f	function:AnonymousFunction272f78ae9b00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f	function:AnonymousFunction272f78ae9d00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f	function:AnonymousFunction272f78ae9e00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:AnonymousFunction272f78ae9f00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:AnonymousFunction272f78aea000
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:AnonymousFunction272f78aea400
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:AnonymousFunction272f78aea600
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:AnonymousFunction272f78aea800
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:AnonymousFunction272f78aeac00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:AnonymousFunction272f78aead00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:AnonymousFunction272f78aeae00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:AnonymousFunction272f78aeaf00
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:AnonymousFunction272f78aeb000
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:AnonymousFunction272f78ae21500
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c	class:see
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:cQ
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:hA
e	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:oee
e	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f	function:L9
e4	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
e5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
e6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
e7	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
e8	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
e9	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
eB	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
eC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
eD	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
eE	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
eF	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
eG	vim/.vim/plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
eN	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
eS	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
eU	vim/.vim/plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
eV	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
eZ	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
e_	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
ea	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
eachLine	vim/.vim/plugged/fzf/src/terminal.go	/^type eachLine struct {$/;"	s	package:fzf
eae	vim/.vim/plugged/coc.nvim/build/index.js	/^`+e+"$2$3")}function m$(r){return" ".repeat(r.length)}function eae(r,e){return p$(e,r)?e:m$(d0)+/;"	f
editorconfig	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    augroup editorconfig$/;"	a
editorconfig#AddNewHook	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig.vim	/^function! editorconfig#AddNewHook(func) " {{{1$/;"	f
editorconfig#ApplyHooks	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig.vim	/^function! editorconfig#ApplyHooks(config) abort " {{{1$/;"	f
editorconfig-core-test	vim/.vim/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^project(editorconfig-core-test NONE)$/;"	p
editorconfig-core-vimscript	vim/.vim/plugged/editorconfig-vim/tests/core/CMakeLists.txt	/^project(editorconfig-core-vimscript NONE)$/;"	p
editorconfig_core#currbuf_cli	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core.vim	/^function! editorconfig_core#currbuf_cli(names, job) " out_name, in_name, ...$/;"	f
editorconfig_core#fnmatch#fnmatch	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! editorconfig_core#fnmatch#fnmatch(name, path, pattern)$/;"	f
editorconfig_core#fnmatch#fnmatchcase	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! editorconfig_core#fnmatch#fnmatchcase(name, path, pattern)$/;"	f
editorconfig_core#fnmatch#translate	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! editorconfig_core#fnmatch#translate(pat, ...)$/;"	f
editorconfig_core#handler#get_configurations	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/handler.vim	/^function! editorconfig_core#handler#get_configurations(job)$/;"	f
editorconfig_core#ini#read_ini_file	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^function! editorconfig_core#ini#read_ini_file(config_filename, target_filename)$/;"	f
editorconfig_core#util#Separator	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/util.vim	/^function! editorconfig_core#util#Separator()$/;"	f
editorconfig_core#util#is_win	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/util.vim	/^function! editorconfig_core#util#is_win()$/;"	f
editorconfig_core#util#path_join	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/util.vim	/^function! editorconfig_core#util#path_join(a, b)$/;"	f
editorconfig_core#util#strip	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/util.vim	/^function! editorconfig_core#util#strip(s)$/;"	f
editorconfig_core#version	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core.vim	/^function! editorconfig_core#version()$/;"	f
editorconfig_dosini	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^augroup editorconfig_dosini$/;"	a
editorconfig_trim_trailing_whitespace	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    augroup editorconfig_trim_trailing_whitespace$/;"	a
edits	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:r.getTextEditChange.s
eee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
ef	vim/.vim/plugged/coc.nvim/build/index.js	/^`),s=n.length-(t.end.line-t.start.line+1);if(this.line=this.line+s,t.end.line==this.line){let o=/;"	v
eg	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
ege	vim/.vim/plugged/coc.nvim/build/index.js	/^`+n+"\\n```"),r.push({content:n,filetype:t}))}function ege(r){return r?typeof r.filetype=="strin/;"	f
eie	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	f
ej	vim/.vim/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:o}}function QB(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	v
el	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
ele	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
electron-to-chromium	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "electron-to-chromium": "^1.3.723",$/;"	s	object:dependencies.browserslist.requires
electron-to-chromium	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "electron-to-chromium": {$/;"	o	object:dependencies
ellipsis	vim/.vim/plugged/fzf/src/terminal.go	/^const ellipsis string = ".."$/;"	c	package:fzf	typeref:typename:string
em	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
eme	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
emit	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:AnonymousFunction272f78ae7400.t
emit	vim/.vim/plugged/far.vim/rplugin/python3/far/__init__.py	/^        def emit(self, record):$/;"	m	class:NeoVimLoggerHandler
emittery	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "emittery": "^0.7.1",$/;"	s	object:dependencies.jest-runner.requires
emittery	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "emittery": {$/;"	o	object:dependencies
emmet-vim	vim/.vim/plugged/vim-vue-plugin/README.md	/^### emmet-vim$/;"	S	section:vim-vue-plugin [![Build Status][12]](https://travis-ci.com/leafOfTree/vim-vue-plugin)""Context-based behavior
emoji-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "emoji-regex": "^7.0.1",$/;"	s	object:dependencies.table.dependencies.string-width.requires
emoji-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "emoji-regex": "^8.0.0",$/;"	s	object:dependencies.string-width.requires
emoji-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "emoji-regex": {$/;"	o	object:dependencies.table.dependencies
emoji-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "emoji-regex": {$/;"	o	object:dependencies
emptyLine	vim/.vim/plugged/fzf/src/terminal.go	/^var emptyLine = itemLine{}$/;"	v	package:fzf
en	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
enable	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "enable": {$/;"	o	object:definitions.languageServerBase.properties
enable	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "enable": {},$/;"	o	object:definitions.languageServerCommand.properties
enable	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "enable": {},$/;"	o	object:definitions.languageServerModule.properties
enable	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "enable": {},$/;"	o	object:definitions.languageServerSocket.properties
enabled	vim/.vim/plugged/fzf/src/terminal.go	/^	enabled    bool$/;"	m	struct:fzf.previewer	typeref:typename:bool
encodePlaceholder	vim/.vim/plugged/fzf/src/terminal_test.go	/^func (flags placeholderFlags) encodePlaceholder() string {$/;"	f	unknown:fzf.placeholderFlags	typeref:typename:string
encoding	vim/.vim/plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	p	class:vY.i
end	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:o
end	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	p	class:Lae.a
end	vim/.vim/plugged/fzf/src/tokenizer.go	/^	end   int$/;"	m	struct:fzf.Range	typeref:typename:int
end-of-stream	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "end-of-stream": "^1.1.0",$/;"	s	object:dependencies.pump.requires
end-of-stream	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "end-of-stream": {$/;"	o	object:dependencies
endLine	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78aef200.e.l
enquirer	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "enquirer": "^2.3.5",$/;"	s	object:dependencies.eslint.requires
enquirer	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "enquirer": {$/;"	o	object:dependencies
enum	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "enum": ["info", "warn", "error", "never"]$/;"	a	object:definitions.languageServerBase.properties.revealOutputChannelOn
enum	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "enum": ["ipc", "stdio", "socket", "pipe"]$/;"	a	object:definitions.languageServerModule.properties.transport
enum	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "enum": ["off", "messages", "verbose"],$/;"	a	object:definitions.languageServerBase.properties.trace.server
enum	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "enum": [$/;"	a	object:properties.coc.preferences.jumpCommand.anyOf.0
enum	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "enum": ["", "quickfix", "refactor", "source"]$/;"	a	object:properties.outline.codeActionKinds.items
enum	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "enum": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
enum	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["abbr", "menu", "preview"]$/;"	a	object:properties.suggest.detailField
enum	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "jump", "never"]$/;"	a	object:properties.diagnostic.enableMessage
enum	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["always", "trigger", "none"]$/;"	a	object:properties.suggest.autoTrigger
enum	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["daily", "weekly", "never"]$/;"	a	object:properties.coc.preferences.extensionUpdateCheck
enum	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["echo", "float"]$/;"	a	object:properties.diagnostic.messageTarget
enum	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["float", "echo"]$/;"	a	object:properties.signature.target
enum	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["full", "short", "filename", "hidden"],$/;"	a	object:properties.list.source.diagnostics.pathFormat
enum	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["hint", "information", "warning", "error"]$/;"	a	object:properties.diagnostic.level
enum	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["length", "alphabetical", "none"]$/;"	a	object:properties.suggest.defaultSortMethod
enum	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["more", "warning", "error"]$/;"	a	object:properties.coc.preferences.messageLevel
enum	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["position", "name", "category"]$/;"	a	object:properties.outline.sortBy
enum	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["preview", "echo", "float"]$/;"	a	object:properties.hover.target
enum	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "enum": ["quickfix", "location", "none"]$/;"	a	object:properties.coc.preferences.listOfWorkspaceEdit
enumMember	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "enumMember": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
env	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "env": {$/;"	o	object:definitions.languageServerBase.properties
env	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "env": {},$/;"	o	object:definitions.languageServerCommand.properties
env	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "env": {},$/;"	o	object:definitions.languageServerModule.properties
eo	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
eo	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
ep	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
ep_out	vim/.vim/plugged/editorconfig-vim/tests/core/tests/cmake/runandsort.cmake	/^        set(ep_out "${ep_stderr}")$/;"	v	function:run_and_sort
ep_out	vim/.vim/plugged/editorconfig-vim/tests/core/tests/cmake/runandsort.cmake	/^        set(ep_out "${ep_stdout}")$/;"	v	function:run_and_sort
eq	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
equals	vim/.vim/plugged/fzf/src/ansi.go	/^func (s *ansiState) equals(t *ansiState) bool {$/;"	f	struct:fzf.ansiState	typeref:typename:bool
er	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
ere	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
err	vim/.vim/plugged/fzf/src/terminal.go	/^	err  error$/;"	m	struct:fzf.eachLine	typeref:typename:error
error	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	p	class:Il.K.Yt
error-ex	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "error-ex": "^1.3.1",$/;"	s	object:dependencies.parse-json.requires
error-ex	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "error-ex": {$/;"	o	object:dependencies
errorExit	vim/.vim/plugged/fzf/src/options.go	/^func errorExit(msg string) {$/;"	f	package:fzf
errorExit	vim/.vim/plugged/fzf/src/tui/tui.go	/^func errorExit(message string) {$/;"	f	package:tui
es-abstract	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "es-abstract": "^1.17.0-next.0",$/;"	s	object:dependencies.promise.prototype.finally.requires
es-abstract	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "es-abstract": "^1.18.0-next.1",$/;"	s	object:dependencies.string.prototype.matchall.requires
es-abstract	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "es-abstract": {$/;"	o	object:dependencies
es-to-primitive	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "es-to-primitive": "^1.2.1",$/;"	s	object:dependencies.es-abstract.requires
es-to-primitive	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "es-to-primitive": {$/;"	o	object:dependencies
esbuild	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "esbuild": {$/;"	o	object:dependencies
escDelay	vim/.vim/plugged/fzf/src/tui/light.go	/^	escDelay      int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
escPollInterval	vim/.vim/plugged/fzf/src/tui/light.go	/^	escPollInterval = 5$/;"	c	package:tui
escSequence	vim/.vim/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) escSequence(sz *int) Event {$/;"	f	struct:tui.LightRenderer	typeref:typename:Event
escalade	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "escalade": "^3.1.1",$/;"	s	object:dependencies.browserslist.requires
escalade	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "escalade": {$/;"	o	object:dependencies
escape-string-regexp	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "escape-string-regexp": "^1.0.5",$/;"	s	object:dependencies.@babel/highlight.dependencies.chalk.requires
escape-string-regexp	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "escape-string-regexp": "^1.0.5",$/;"	s	object:dependencies.cli-table.dependencies.chalk.requires
escape-string-regexp	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "escape-string-regexp": "^2.0.0"$/;"	s	object:dependencies.stack-utils.requires
escape-string-regexp	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "escape-string-regexp": {$/;"	o	object:dependencies.stack-utils.dependencies
escape-string-regexp	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "escape-string-regexp": {$/;"	o	object:dependencies
escapedColon	vim/.vim/plugged/fzf/src/options.go	/^	escapedColon = 0$/;"	c	package:fzf
escapedComma	vim/.vim/plugged/fzf/src/options.go	/^	escapedComma = 1$/;"	c	package:fzf
escapedPlus	vim/.vim/plugged/fzf/src/options.go	/^	escapedPlus  = 2$/;"	c	package:fzf
escodegen	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "escodegen": "^2.0.0",$/;"	s	object:dependencies.jsdom.requires
escodegen	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "escodegen": {$/;"	o	object:dependencies
eslint	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "eslint": {$/;"	o	object:dependencies
eslint-plugin-jest	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "eslint-plugin-jest": {$/;"	o	object:dependencies
eslint-plugin-jsdoc	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "eslint-plugin-jsdoc": {$/;"	o	object:dependencies
eslint-scope	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "eslint-scope": "^5.0.0",$/;"	s	object:dependencies.@typescript-eslint/experimental-utils.requires
eslint-scope	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "eslint-scope": "^5.1.1",$/;"	s	object:dependencies.eslint.requires
eslint-scope	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "eslint-scope": {$/;"	o	object:dependencies
eslint-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "eslint-utils": "^2.0.0"$/;"	s	object:dependencies.@typescript-eslint/experimental-utils.requires
eslint-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "eslint-utils": "^2.1.0",$/;"	s	object:dependencies.eslint.requires
eslint-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "eslint-utils": {$/;"	o	object:dependencies
eslint-visitor-keys	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "eslint-visitor-keys": "^1.1.0"$/;"	s	object:dependencies.eslint-utils.requires
eslint-visitor-keys	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "eslint-visitor-keys": "^1.3.0"$/;"	s	object:dependencies.espree.requires
eslint-visitor-keys	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "eslint-visitor-keys": "^2.0.0"$/;"	s	object:dependencies.@typescript-eslint/visitor-keys.requires
eslint-visitor-keys	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "eslint-visitor-keys": "^2.0.0",$/;"	s	object:dependencies.eslint.requires
eslint-visitor-keys	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "eslint-visitor-keys": {$/;"	o	object:dependencies.eslint-utils.dependencies
eslint-visitor-keys	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "eslint-visitor-keys": {$/;"	o	object:dependencies.espree.dependencies
eslint-visitor-keys	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "eslint-visitor-keys": {$/;"	o	object:dependencies
eslint.autoFixOnSave	.config/nvim_copy/coc-settings.json	/^  "eslint.autoFixOnSave": true,$/;"	b
eslint.autoFixOnSave	vim/.vim/coc-settings.json	/^  "eslint.autoFixOnSave": true,$/;"	b
eslint.probe	.config/nvim_copy/coc-settings.json	/^  "eslint.probe": ["javascript", "javascriptreact", "typescript", "typescriptreact", "html", "vu/;"	a
eslint.probe	vim/.vim/coc-settings.json	/^  "eslint.probe": ["javascript", "javascriptreact", "typescript", "typescriptreact", "html", "vu/;"	a
espree	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "espree": "^7.3.0",$/;"	s	object:dependencies.@eslint/eslintrc.requires
espree	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "espree": "^7.3.1",$/;"	s	object:dependencies.eslint.requires
espree	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "espree": {$/;"	o	object:dependencies
esprima	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "esprima": "^4.0.0"$/;"	s	object:dependencies.js-yaml.requires
esprima	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "esprima": "^4.0.1",$/;"	s	object:dependencies.escodegen.requires
esprima	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "esprima": {$/;"	o	object:dependencies
esquery	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "esquery": "^1.2.0",$/;"	s	object:dependencies.eslint.requires
esquery	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "esquery": {$/;"	o	object:dependencies
esrecurse	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "esrecurse": "^4.3.0",$/;"	s	object:dependencies.eslint-scope.requires
esrecurse	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "esrecurse": {$/;"	o	object:dependencies
estraverse	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "estraverse": "^4.1.1"$/;"	s	object:dependencies.eslint-scope.requires
estraverse	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "estraverse": "^5.1.0"$/;"	s	object:dependencies.esquery.requires
estraverse	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "estraverse": "^5.2.0"$/;"	s	object:dependencies.esrecurse.requires
estraverse	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "estraverse": "^5.2.0",$/;"	s	object:dependencies.escodegen.requires
estraverse	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "estraverse": {$/;"	o	object:dependencies.escodegen.dependencies
estraverse	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "estraverse": {$/;"	o	object:dependencies.esquery.dependencies
estraverse	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "estraverse": {$/;"	o	object:dependencies.esrecurse.dependencies
estraverse	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "estraverse": {$/;"	o	object:dependencies
esutils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "esutils": "^2.0.2"$/;"	s	object:dependencies.doctrine.requires
esutils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "esutils": "^2.0.2",$/;"	s	object:dependencies.escodegen.requires
esutils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "esutils": "^2.0.2",$/;"	s	object:dependencies.eslint.requires
esutils	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "esutils": {$/;"	o	object:dependencies
et	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f	function:AnonymousFunction272f78ae1f300
et	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f	function:Wq
eu	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	f
ev	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	f
evaluateScrollOffset	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) evaluateScrollOffset(list []*Item, height int) int {$/;"	f	struct:fzf.Terminal	typeref:typename:int
event	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "event": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
event	vim/.vim/plugged/fzf/src/reader.go	/^	event    int32$/;"	m	struct:fzf.Reader	typeref:typename:int32
event-lite	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "event-lite": "^0.1.1",$/;"	s	object:dependencies.msgpack-lite.requires
event-lite	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "event-lite": {$/;"	o	object:dependencies
eventBox	vim/.vim/plugged/fzf/src/matcher.go	/^	eventBox       *util.EventBox$/;"	m	struct:fzf.Matcher	typeref:typename:*util.EventBox
eventBox	vim/.vim/plugged/fzf/src/reader.go	/^	eventBox *util.EventBox$/;"	m	struct:fzf.Reader	typeref:typename:*util.EventBox
eventBox	vim/.vim/plugged/fzf/src/terminal.go	/^	eventBox     *util.EventBox$/;"	m	struct:fzf.Terminal	typeref:typename:*util.EventBox
events	vim/.vim/plugged/fzf/src/util/eventbox.go	/^	events Events$/;"	m	struct:util.EventBox	typeref:typename:Events
ew	vim/.vim/plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
ex	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	v
exampleCSS	vim/.vim/plugged/vim-styled-components/examples/issue-56.ts	/^const exampleCSS = css`$/;"	C
exception_ignore	vim/.vim/plugged/far.vim/rplugin/python3/far/sources/far_glob.py	/^def exception_ignore(ignore_rules_origin):$/;"	f
exec	vim/.vim/plugged/fzf/src/reader.go	/^	exec     *exec.Cmd$/;"	m	struct:fzf.Reader	typeref:typename:*exec.Cmd
exec-sh	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "exec-sh": "^0.3.2",$/;"	s	object:dependencies.@cnakazawa/watch.requires
exec-sh	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "exec-sh": "^0.3.2",$/;"	s	object:dependencies.sane.requires
exec-sh	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "exec-sh": {$/;"	o	object:dependencies
execArgv	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "execArgv": {$/;"	o	object:definitions.languageServerModule.properties
execa	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "execa": "^1.0.0",$/;"	s	object:dependencies.sane.requires
execa	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "execa": "^4.0.0",$/;"	s	object:dependencies.jest-changed-files.requires
execa	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "execa": {$/;"	o	object:dependencies.jest-changed-files.dependencies
execa	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "execa": {$/;"	o	object:dependencies
executeCommand	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) executeCommand(template string, forcePlus bool, background bool) {$/;"	f	struct:fzf.Terminal
executeRegexp	vim/.vim/plugged/fzf/src/options.go	/^var executeRegexp *regexp.Regexp$/;"	v	package:fzf	typeref:typename:*regexp.Regexp
executing	vim/.vim/plugged/fzf/src/terminal.go	/^	executing    *util.AtomicBool$/;"	m	struct:fzf.Terminal	typeref:typename:*util.AtomicBool
exit	.config/openbox/menu.xml	/^<menu id="exit" label="exit x11">$/;"	i
exit	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "exit": "^0.1.2",$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
exit	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "exit": "^0.1.2",$/;"	s	object:dependencies.@jest/core.requires
exit	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "exit": "^0.1.2",$/;"	s	object:dependencies.@jest/reporters.requires
exit	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "exit": "^0.1.2",$/;"	s	object:dependencies.jest-runner.requires
exit	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "exit": "^0.1.2",$/;"	s	object:dependencies.jest-runtime.requires
exit	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "exit": {$/;"	o	object:dependencies
exitCancel	vim/.vim/plugged/fzf/src/constants.go	/^	exitCancel    = -1$/;"	c	package:fzf
exitError	vim/.vim/plugged/fzf/src/constants.go	/^	exitError     = 2$/;"	c	package:fzf
exitInterrupt	vim/.vim/plugged/fzf/src/constants.go	/^	exitInterrupt = 130$/;"	c	package:fzf
exitNoMatch	vim/.vim/plugged/fzf/src/constants.go	/^	exitNoMatch   = 1$/;"	c	package:fzf
exitOk	vim/.vim/plugged/fzf/src/constants.go	/^	exitOk        = 0$/;"	c	package:fzf
expand-brackets	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "expand-brackets": "^2.1.4",$/;"	s	object:dependencies.extglob.requires
expand-brackets	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "expand-brackets": {$/;"	o	object:dependencies
expect	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "expect": "^26.6.2"$/;"	s	object:dependencies.@jest/globals.requires
expect	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "expect": "^26.6.2",$/;"	s	object:dependencies.jest-jasmine2.requires
expect	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "expect": "^26.6.2",$/;"	s	object:dependencies.jest-snapshot.requires
expect	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "expect": {$/;"	o	object:dependencies
expect	vim/.vim/plugged/fzf/src/terminal.go	/^	expect       map[tui.Event]string$/;"	m	struct:fzf.Terminal	typeref:typename:map[tui.Event]string
ext	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
extend-shallow	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "extend-shallow": "^2.0.1",$/;"	s	object:dependencies.sane.dependencies.braces.requires
extend-shallow	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "extend-shallow": "^2.0.1",$/;"	s	object:dependencies.sane.dependencies.fill-range.requires
extend-shallow	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "extend-shallow": "^3.0.2",$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
extend-shallow	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "extend-shallow": {$/;"	o	object:dependencies.sane.dependencies.braces.dependencies
extend-shallow	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "extend-shallow": {$/;"	o	object:dependencies.sane.dependencies.fill-range.dependencies
extend-shallow	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "extend-shallow": "^2.0.1",$/;"	s	object:dependencies.expand-brackets.requires
extend-shallow	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "extend-shallow": "^2.0.1",$/;"	s	object:dependencies.extglob.requires
extend-shallow	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "extend-shallow": "^2.0.1",$/;"	s	object:dependencies.set-value.requires
extend-shallow	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "extend-shallow": "^2.0.1",$/;"	s	object:dependencies.snapdragon.requires
extend-shallow	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "extend-shallow": "^3.0.0"$/;"	s	object:dependencies.split-string.requires
extend-shallow	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "extend-shallow": "^3.0.2",$/;"	s	object:dependencies.nanomatch.requires
extend-shallow	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "extend-shallow": "^3.0.2",$/;"	s	object:dependencies.regex-not.requires
extend-shallow	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "extend-shallow": "^3.0.2",$/;"	s	object:dependencies.to-regex.requires
extend-shallow	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "extend-shallow": {$/;"	o	object:dependencies.expand-brackets.dependencies
extend-shallow	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "extend-shallow": {$/;"	o	object:dependencies.extglob.dependencies
extend-shallow	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "extend-shallow": {$/;"	o	object:dependencies.set-value.dependencies
extend-shallow	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "extend-shallow": {$/;"	o	object:dependencies.snapdragon.dependencies
extend-shallow	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "extend-shallow": {$/;"	o	object:dependencies
extended	vim/.vim/plugged/fzf/src/pattern.go	/^	extended      bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
extendedMatch	vim/.vim/plugged/fzf/src/pattern.go	/^func (p *Pattern) extendedMatch(item *Item, withPos bool, slab *util.Slab) ([]Offset, int, *[]in/;"	f	struct:fzf.Pattern	typeref:typename:([]Offset, int, *[]int)
extglob	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "extglob": "^2.0.4",$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
extglob	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "extglob": {$/;"	o	object:dependencies
extra_info	vim/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^                $extra_info = $argv[$idx]$/;"	v
extra_info	vim/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$extra_info = ''$/;"	v
extractColor	vim/.vim/plugged/fzf/src/ansi.go	/^func extractColor(str string, state *ansiState, proc func(string, *ansiState) bool) (string, *[]/;"	f	package:fzf	typeref:typename:(string, *[]ansiOffset, *ansiState)
ey	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
f	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
f	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
f	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunction272f78ae13000
f	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	c
f	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
f	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
f	vim/.vim/plugged/coc.nvim/build/index.js	/^`);return r.length?r[0].length:0});Ad.prototype.render;Ad.prototype.toString=function(){var r=""/;"	f	function:AnonymousFunction272f78ae1fa00
f	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:r.read
f$	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
f0	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
f1	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	v
f5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
f6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
f7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
f8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
f9	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
fA	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
fB	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
fC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
fD	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
fE	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
fF	vim/.vim/plugged/coc.nvim/build/index.js	/^`}debug(e,...t){tF!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	v
fG	vim/.vim/plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
fK	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
fR	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
fTe	vim/.vim/plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
fV	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
fW	vim/.vim/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	v
fX	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
fa	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
fae	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
fail	vim/.vim/plugged/fzf/bin/fzf-tmux	/^fail() {$/;"	f
failed	vim/.vim/plugged/fzf/src/terminal.go	/^	failed       *string$/;"	m	struct:fzf.Terminal	typeref:typename:*string
far#CheckFarWindowsToResizeHandler	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#CheckFarWindowsToResizeHandler(timer) abort$/;"	f
far#FarArgsComplete	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#FarArgsComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FarComplete	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#FarComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FarFileMaskComplete	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#FarFileMaskComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FarReplaceComplete	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#FarReplaceComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FarSearchComplete	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#FarSearchComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FardoComplete	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#FardoComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FarundoComplete	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#FarundoComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FindArgsComplete	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#FindArgsComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FindComplete	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#FindComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#ModePromptComplete	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#ModePromptComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#RefarComplete	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#RefarComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#apply_default_mappings	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#apply_default_mappings() abort "{{{$/;"	f
far#change_collapse_all	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#change_collapse_all(cmode) abort "{{{$/;"	f
far#change_collapse_under_cursor	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#change_collapse_under_cursor(cmode) abort "{{{$/;"	f
far#change_collapse_under_selection	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#change_collapse_under_selection(cmode) abort range "{{{$/;"	f
far#change_exclude_all	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#change_exclude_all(cmode) abort "{{{$/;"	f
far#change_exclude_under_cursor	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#change_exclude_under_cursor(cmode) abort "{{{$/;"	f
far#change_exclude_under_selection	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#change_exclude_under_selection(cmode) abort range "{{{$/;"	f
far#close_far_buff	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#close_far_buff() abort range "{{{$/;"	f
far#close_preview_window	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#close_preview_window() abort "{{{$/;"	f
far#executors#basic#execute	vim/.vim/plugged/far.vim/autoload/far/executors/basic.vim	/^function! far#executors#basic#execute(exec_ctx, callback) abort$/;"	f
far#executors#nvim#callback	vim/.vim/plugged/far.vim/autoload/far/executors/nvim.vim	/^function! far#executors#nvim#callback(result, ctx_idx) abort$/;"	f
far#executors#nvim#execute	vim/.vim/plugged/far.vim/autoload/far/executors/nvim.vim	/^function! far#executors#nvim#execute(exec_ctx, callback) abort$/;"	f
far#executors#py3#execute	vim/.vim/plugged/far.vim/autoload/far/executors/py3.vim	/^function! far#executors#py3#execute(exec_ctx, callback) abort$/;"	f
far#find	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#find(far_params, xargs) "{{{$/;"	f
far#jump_buffer_under_cursor	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#jump_buffer_under_cursor() abort "{{{$/;"	f
far#mode_prompt_close	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#mode_prompt_close() abort "{{{$/;"	f
far#mode_prompt_get_item	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#mode_prompt_get_item(item_name, default_item, complete_list) abort "{{{$/;"	f
far#mode_prompt_open	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#mode_prompt_open() abort "{{{$/;"	f
far#refind	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#refind(range, xargs) abort "{{{$/;"	f
far#replace	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#replace(xargs) abort "{{{$/;"	f
far#rpc#invoke	vim/.vim/plugged/far.vim/autoload/far/rpc.vim	/^function! far#rpc#invoke(imports, evalstr) abort "{{{$/;"	f
far#rpc#nvim_invoke	vim/.vim/plugged/far.vim/autoload/far/rpc.vim	/^function! far#rpc#nvim_invoke(execlist) abort "{{{$/;"	f
far#scroll_preview_window	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#scroll_preview_window(steps) abort "{{{$/;"	f
far#set_mappings	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#set_mappings(map, act_func_ref) abort "{{{$/;"	f
far#show_preview_window_under_cursor	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#show_preview_window_under_cursor() abort "{{{$/;"	f
far#sources#qf#search	vim/.vim/plugged/far.vim/autoload/far/sources/qf.vim	/^function! far#sources#qf#search(ctx, fargs, cmdargs) abort "{{{$/;"	f
far#tools#centrify_text	vim/.vim/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#centrify_text(text, width, val_col) abort "{{{$/;"	f
far#tools#cut_text_middle	vim/.vim/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#cut_text_middle(text, width) abort "{{{$/;"	f
far#tools#echo_err	vim/.vim/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#echo_err(msg) abort "{{{$/;"	f
far#tools#echo_msg	vim/.vim/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#echo_msg(msg) abort "{{{$/;"	f
far#tools#echo_warn	vim/.vim/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#echo_warn(msg) abort "{{{$/;"	f
far#tools#ftlookup	vim/.vim/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#ftlookup(ext) abort "{{{$/;"	f
far#tools#isdebug	vim/.vim/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#isdebug()$/;"	f
far#tools#log	vim/.vim/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#log(msg)$/;"	f
far#tools#matchcnt	vim/.vim/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#matchcnt(pat, exp) abort "{{{$/;"	f
far#tools#replace	vim/.vim/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#replace(text, str, repl) "{{{$/;"	f
far#tools#setdefault	vim/.vim/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#setdefault(var, val) abort "{{{$/;"	f
far#tools#split_layout	vim/.vim/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#split_layout(smode, bname, width, height) abort "{{{$/;"	f
far#tools#splitcmd	vim/.vim/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#splitcmd(cmdline) "{{{$/;"	f
far#tools#splitcmdshell	vim/.vim/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#splitcmdshell(cmdline)$/;"	f
far#tools#undo_nextnr	vim/.vim/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#undo_nextnr() "{{{$/;"	f
far#tools#visualtext	vim/.vim/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#visualtext(...) "{{{$/;"	f
far#tools#win_layout	vim/.vim/plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#win_layout(win_params, param_prefix, fname) abort "{{{$/;"	f
far#undo	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! far#undo(xargs) abort "{{{$/;"	f
far.vim - Find And Replace Vim plugin	vim/.vim/plugged/far.vim/README.md	/^# far.vim - Find And Replace Vim plugin$/;"	c
far_glob	vim/.vim/plugged/far.vim/rplugin/python3/far/sources/far_glob.py	/^def far_glob(root, rules, ignore_rules):$/;"	f
faraugroup	vim/.vim/plugged/far.vim/autoload/far.vim	/^augroup faraugroup "{{{$/;"	a
fast-deep-equal	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "fast-deep-equal": "^3.1.1",$/;"	s	object:dependencies.ajv.requires
fast-deep-equal	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "fast-deep-equal": {$/;"	o	object:dependencies
fast-diff	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "fast-diff": {$/;"	o	object:dependencies
fast-glob	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "fast-glob": "^3.1.1",$/;"	s	object:dependencies.globby.requires
fast-glob	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "fast-glob": {$/;"	o	object:dependencies
fast-json-stable-stringify	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "fast-json-stable-stringify": "2.x"$/;"	s	object:dependencies.bs-logger.requires
fast-json-stable-stringify	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "fast-json-stable-stringify": "2.x",$/;"	s	object:dependencies.ts-jest.requires
fast-json-stable-stringify	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "fast-json-stable-stringify": "^2.0.0",$/;"	s	object:dependencies.@jest/transform.requires
fast-json-stable-stringify	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "fast-json-stable-stringify": "^2.0.0",$/;"	s	object:dependencies.ajv.requires
fast-json-stable-stringify	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "fast-json-stable-stringify": {$/;"	o	object:dependencies
fast-levenshtein	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "fast-levenshtein": "~2.0.6",$/;"	s	object:dependencies.escodegen.dependencies.optionator.requires
fast-levenshtein	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "fast-levenshtein": "^2.0.6",$/;"	s	object:dependencies.optionator.requires
fast-levenshtein	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "fast-levenshtein": {$/;"	o	object:dependencies
fastq	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "fastq": "^1.6.0"$/;"	s	object:dependencies.@nodelib/fs.walk.requires
fastq	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "fastq": {$/;"	o	object:dependencies
fb-watchman	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "fb-watchman": "^2.0.0",$/;"	s	object:dependencies.jest-haste-map.requires
fb-watchman	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "fb-watchman": "^2.0.0",$/;"	s	object:dependencies.sane.requires
fb-watchman	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "fb-watchman": {$/;"	o	object:dependencies
fd	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
fd	vim/.vim/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) fd() int {$/;"	f	unknown:tui.LightRenderer	typeref:typename:int
feed	vim/.vim/plugged/fzf/src/reader.go	/^func (r *Reader) feed(src io.Reader) {$/;"	f	struct:fzf.Reader
ff	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
ffe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
fg	vim/.vim/plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	f
fg	vim/.vim/plugged/fzf/src/ansi.go	/^	fg   tui.Color$/;"	m	struct:fzf.ansiState	typeref:typename:tui.Color
fg	vim/.vim/plugged/fzf/src/tui/light.go	/^	fg       Color$/;"	m	struct:tui.LightWindow	typeref:typename:Color
fg	vim/.vim/plugged/fzf/src/tui/tui.go	/^	fg   Color$/;"	m	struct:tui.ColorPair	typeref:typename:Color
fg	vim/.vim/plugged/iceberg-dark/.tmux/iceberg.tmux.conf	/^set -g message-command-style "fg=#c6c8d1,bg=#2e3244"$/;"	k
fg	vim/.vim/plugged/iceberg-dark/.tmux/iceberg.tmux.conf	/^set -g message-style "fg=#c6c8d1,bg=#2e3244"$/;"	k
fg	vim/.vim/plugged/iceberg-dark/.tmux/iceberg.tmux.conf	/^set -g pane-active-border-style "fg=#454b68"$/;"	k
fg	vim/.vim/plugged/iceberg-dark/.tmux/iceberg.tmux.conf	/^set -g pane-border-style "fg=#2e3244"$/;"	k
fg	vim/.vim/plugged/iceberg-dark/.tmux/iceberg.tmux.conf	/^setw -g window-status-activity-style "none,fg=#454b68,bg=#1e2132"$/;"	k
fg	vim/.vim/plugged/iceberg-dark/.tmux/iceberg.tmux.conf	/^setw -g window-status-style "none,fg=#c6c8d1,bg=#1e2132"$/;"	k
fg	vim/.vim/plugged/iceberg-dark/.tmux/iceberg_minimal.tmux.conf	/^set -g pane-active-border-style "fg=#6b7089"$/;"	k
fg	vim/.vim/plugged/iceberg-dark/.tmux/iceberg_minimal.tmux.conf	/^set -g pane-border-style "fg=#6b7089"$/;"	k
fg	vim/.vim/plugged/iceberg-dark/.tmux/iceberg_minimal.tmux.conf	/^set -g status-right-style "fg=#6b7089"$/;"	k
fg	vim/.vim/plugged/iceberg-dark/.tmux/iceberg_minimal.tmux.conf	/^set -g window-status-style "fg=#6b7089"$/;"	k
fg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^            "fg": "#0f1117",$/;"	s	object:battery.charged
fg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^            "fg": "#0f1117",$/;"	s	object:battery.charging
fg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^            "fg": "#0f1117",$/;"	s	object:defaults.critical
fg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^            "fg": "#0f1117",$/;"	s	object:defaults.warning
fg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^            "fg": "#b4be82",$/;"	s	object:apt.good
fg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^            "fg": "#b4be82",$/;"	s	object:dnf.good
fg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^            "fg": "#b4be82",$/;"	s	object:pacman.good
fg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        { "fg": "#d2d4de", "bg": "#161821" },$/;"	s	object:cycle.0
fg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        { "fg": "#d2d4de", "bg": "#1e212d" }$/;"	s	object:cycle.6
fg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        { "fg": "#d2d4de", "bg": "#262939" },$/;"	s	object:cycle.1
fg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        { "fg": "#d2d4de", "bg": "#262939" },$/;"	s	object:cycle.5
fg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        { "fg": "#d2d4de", "bg": "#353a50" },$/;"	s	object:cycle.2
fg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        { "fg": "#d2d4de", "bg": "#353a50" },$/;"	s	object:cycle.4
fg	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        { "fg": "#d2d4de", "bg": "#454b68" },$/;"	s	object:cycle.3
fge	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
fi	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
field	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "field": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
file	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:r
file	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "file": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
file	vim/.vim/plugged/fzf/src/terminal.go	/^	file          bool$/;"	m	struct:fzf.placeholderFlags	typeref:typename:bool
file-entry-cache	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "file-entry-cache": "^6.0.0",$/;"	s	object:dependencies.eslint.requires
file-entry-cache	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "file-entry-cache": {$/;"	o	object:dependencies
files	vim/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$files=@()$/;"	v
filetypedetect	vim/.vim/autoload/plug.vim	/^        augroup filetypedetect$/;"	a
filetypes	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "filetypes": {$/;"	o	object:definitions.languageServerBase.properties
filetypes	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "filetypes": {},$/;"	o	object:definitions.languageServerCommand.properties
filetypes	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "filetypes": {},$/;"	o	object:definitions.languageServerModule.properties
filetypes	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "filetypes": {},$/;"	o	object:definitions.languageServerSocket.properties
fill	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) fill(str string, onMove func()) FillReturn {$/;"	f	struct:tui.LightWindow	typeref:typename:FillReturn
fill	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func fill(x, y, w, h int, n ColorPair, r rune) {$/;"	f	package:tui
fill-range	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "fill-range": "^4.0.0",$/;"	s	object:dependencies.sane.dependencies.braces.requires
fill-range	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "fill-range": "^7.0.1"$/;"	s	object:dependencies.braces.requires
fill-range	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "fill-range": {$/;"	o	object:dependencies.sane.dependencies
fill-range	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "fill-range": {$/;"	o	object:dependencies
fillString	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) fillString(text string, pair ColorPair) FillReturn {$/;"	f	struct:tui.TcellWindow	typeref:typename:FillReturn
filled	vim/.vim/plugged/fzf/src/terminal.go	/^	filled   bool$/;"	m	struct:fzf.previewed	typeref:typename:bool
fin	vim/.vim/plugged/fzf/src/reader.go	/^func (r *Reader) fin(success bool) {$/;"	f	struct:fzf.Reader
finChan	vim/.vim/plugged/fzf/src/reader.go	/^	finChan  chan bool$/;"	m	struct:fzf.Reader	typeref:typename:chan bool
final	vim/.vim/plugged/fzf/src/matcher.go	/^	final      bool$/;"	m	struct:fzf.MatchRequest	typeref:typename:bool
final	vim/.vim/plugged/fzf/src/merger.go	/^	final   bool$/;"	m	struct:fzf.Merger	typeref:typename:bool
final	vim/.vim/plugged/fzf/src/terminal.go	/^	final      bool$/;"	m	struct:fzf.previewer	typeref:typename:bool
find-up	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "find-up": "^4.0.0"$/;"	s	object:dependencies.pkg-dir.requires
find-up	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "find-up": "^4.1.0",$/;"	s	object:dependencies.@istanbuljs/load-nyc-config.requires
find-up	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "find-up": "^4.1.0",$/;"	s	object:dependencies.read-pkg-up.requires
find-up	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "find-up": "^4.1.0",$/;"	s	object:dependencies.yargs.requires
find-up	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "find-up": {$/;"	o	object:dependencies
findFirstMatch	vim/.vim/plugged/fzf/src/terminal.go	/^func findFirstMatch(pattern string, str string) int {$/;"	f	package:fzf	typeref:typename:int
findLastMatch	vim/.vim/plugged/fzf/src/terminal.go	/^func findLastMatch(pattern string, str string) int {$/;"	f	package:fzf	typeref:typename:int
findOffset	vim/.vim/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) findOffset() (row int, col int) {$/;"	f	unknown:tui.LightRenderer	typeref:typename:(row int, col int)
findOffset	vim/.vim/plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) findOffset() (row int, col int) {$/;"	f	unknown:tui.LightRenderer	typeref:typename:(row int, col int)
firstKey	vim/.vim/plugged/fzf/src/options.go	/^func firstKey(keymap map[tui.Event]string) tui.Event {$/;"	f	package:fzf	typeref:typename:tui.Event
fish	vim/.vim/plugged/fzf/test/test_go.rb	/^    def fish$/;"	S	class:Shell
fj	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
flags	vim/.vim/plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	p	class:vY.i
flat-cache	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "flat-cache": "^3.0.4"$/;"	s	object:dependencies.file-entry-cache.requires
flat-cache	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "flat-cache": {$/;"	o	object:dependencies
flatted	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "flatted": "^2.0.1",$/;"	s	object:dependencies.log4js.requires
flatted	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "flatted": "^3.1.0",$/;"	s	object:dependencies.flat-cache.requires
flatted	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "flatted": {$/;"	o	object:dependencies.flat-cache.dependencies
flatted	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "flatted": {$/;"	o	object:dependencies
float	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "float": {$/;"	o	object:definitions
float32	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
float64	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
flush	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:c
flush	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:h
flush	vim/.vim/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) flush() {$/;"	f	unknown:tui.LightRenderer
fme	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
fn	vim/.vim/plugged/coc.nvim/build/index.js	/^`),_.log(`Received request '${P.method} - (${P.id})'.`,z)}else to("receive-request",P)}function /;"	f
fn	vim/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$fn=[System.IO.Path]::GetTempFileName();$/;"	v
focus	vim/.vim/plugged/fzf/test/test_go.rb	/^  def focus$/;"	f	class:Tmux
focusable	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "focusable": {$/;"	o	object:definitions.float.properties
focusable	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "focusable": {},$/;"	o	object:properties.diagnostic.floatConfig.properties
focusable	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "focusable": {},$/;"	o	object:properties.hover.floatConfig.properties
focusable	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "focusable": {},$/;"	o	object:properties.signature.floatConfig.properties
focusable	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "focusable": {},$/;"	o	object:properties.suggest.floatConfig.properties
folder	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "folder": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
follow	vim/.vim/plugged/fzf/src/options.go	/^	follow      bool$/;"	m	struct:fzf.previewOpts	typeref:typename:bool
follow-redirects	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "follow-redirects": {$/;"	o	object:dependencies
following	vim/.vim/plugged/fzf/src/terminal.go	/^	following  bool$/;"	m	struct:fzf.previewer	typeref:typename:bool
for-in	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "for-in": "^1.0.2",$/;"	s	object:dependencies.mixin-deep.requires
for-in	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "for-in": {$/;"	o	object:dependencies
forEach	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	m	class:Array
forceBlack	vim/.vim/plugged/fzf/src/tui/light.go	/^	forceBlack    bool$/;"	m	struct:tui.LightRenderer	typeref:typename:bool
forceBlack	vim/.vim/plugged/fzf/src/tui/tui.go	/^	forceBlack   bool$/;"	m	struct:tui.FullscreenRenderer	typeref:typename:bool
form-data	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "form-data": "^3.0.0",$/;"	s	object:dependencies.jsdom.requires
form-data	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "form-data": {$/;"	o	object:dependencies
formatterPriority	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "formatterPriority": {$/;"	o	object:definitions.languageServerBase.properties
formatterPriority	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "formatterPriority": {},$/;"	o	object:definitions.languageServerCommand.properties
formatterPriority	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "formatterPriority": {},$/;"	o	object:definitions.languageServerModule.properties
formatterPriority	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "formatterPriority": {},$/;"	o	object:definitions.languageServerSocket.properties
forward	vim/.vim/plugged/fzf/src/pattern.go	/^	forward       bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
fp	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
fr	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
fragment-cache	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "fragment-cache": "^0.2.1",$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
fragment-cache	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "fragment-cache": "^0.2.1",$/;"	s	object:dependencies.extglob.requires
fragment-cache	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "fragment-cache": "^0.2.1",$/;"	s	object:dependencies.nanomatch.requires
fragment-cache	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "fragment-cache": {$/;"	o	object:dependencies
freeSocket	vim/.vim/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	m	class:AnonymousFunction272f78ae33e00.e
friendly_name	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^  let friendly_name = FriendlyName(test)$/;"	v
friendly_name	vim/.vim/plugged/vim-rooter/test/runner.vim	/^  let friendly_name = substitute(test[5:-3], '_', ' ', 'g')$/;"	v
from	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:r
fs	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	c
fs	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
fs-extra	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "fs-extra": "^8.1.0"$/;"	s	object:dependencies.streamroller.requires
fs-extra	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "fs-extra": {$/;"	o	object:dependencies.streamroller.dependencies
fs-extra	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "fs-extra": {$/;"	o	object:dependencies
fs-minipass	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "fs-minipass": "^2.0.0",$/;"	s	object:dependencies.tar.requires
fs-minipass	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "fs-minipass": {$/;"	o	object:dependencies
fs.realpath	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "fs.realpath": "^1.0.0",$/;"	s	object:dependencies.glob.requires
fs.realpath	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "fs.realpath": {$/;"	o	object:dependencies
fsevents	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "fsevents": "^2.1.2",$/;"	s	object:dependencies.jest-haste-map.requires
fsevents	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "fsevents": "~2.1.2",$/;"	s	object:dependencies.chokidar.requires
fsevents	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "fsevents": {$/;"	o	object:dependencies
fu	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
fugitive	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#Autowrite	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Autowrite() abort$/;"	f
fugitive#BlameComplete	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BlameComplete(A, L, P) abort$/;"	f
fugitive#BlameFileType	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BlameFileType() abort$/;"	f
fugitive#BlameSyntax	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BlameSyntax() abort$/;"	f
fugitive#BrowseCommand	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BrowseCommand(line1, count, range, bang, mods, arg, ...) abort$/;"	f
fugitive#BufReadCmd	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufReadCmd(...) abort$/;"	f
fugitive#BufReadStatus	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufReadStatus(...) abort$/;"	f
fugitive#BufWriteCmd	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufWriteCmd(...) abort$/;"	f
fugitive#CanDiffoff	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CanDiffoff(buf) abort$/;"	f
fugitive#CanPty	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CanPty() abort$/;"	f
fugitive#Cd	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cd(path, ...) abort$/;"	f
fugitive#CdComplete	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CdComplete(A, L, P) abort$/;"	f
fugitive#Cfile	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cfile() abort$/;"	f
fugitive#Command	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Command(line1, line2, range, bang, mods, arg) abort$/;"	f
fugitive#CommitComplete	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CommitComplete(A, L, P, ...) abort$/;"	f
fugitive#CommonDir	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CommonDir(dir) abort$/;"	f
fugitive#Complete	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Complete(lead, ...) abort$/;"	f
fugitive#CompleteForWorkingDir	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompleteForWorkingDir(A, L, P, ...) abort$/;"	f
fugitive#CompleteObject	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompleteObject(base, ...) abort$/;"	f
fugitive#CompletePath	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompletePath(base, ...) abort$/;"	f
fugitive#Config	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Config(...) abort$/;"	f
fugitive#ConfigGetAll	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ConfigGetAll(name, ...) abort$/;"	f
fugitive#ConfigGetRegexp	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ConfigGetRegexp(pattern, ...) abort$/;"	f
fugitive#Cwindow	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cwindow() abort$/;"	f
fugitive#DeleteCommand	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#DeleteCommand(line1, line2, range, bang, mods, arg, ...) abort$/;"	f
fugitive#DidChange	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#DidChange(...) abort$/;"	f
fugitive#DiffClose	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#DiffClose() abort$/;"	f
fugitive#Diffsplit	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Diffsplit(autodir, keepfocus, mods, arg, ...) abort$/;"	f
fugitive#EditComplete	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#EditComplete(A, L, P) abort$/;"	f
fugitive#EfmDir	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#EfmDir(...) abort$/;"	f
fugitive#Execute	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Execute(...) abort$/;"	f
fugitive#Expand	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Expand(object) abort$/;"	f
fugitive#ExpireConfig	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ExpireConfig(...) abort$/;"	f
fugitive#FetchComplete	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FetchComplete(A, L, P, ...) abort$/;"	f
fugitive#FileReadCmd	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FileReadCmd(...) abort$/;"	f
fugitive#FileWriteCmd	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FileWriteCmd(...) abort$/;"	f
fugitive#Find	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Find(object, ...) abort$/;"	f
fugitive#Foldtext	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Foldtext() abort$/;"	f
fugitive#GX	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GX() abort$/;"	f
fugitive#GitVersion	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GitVersion(...) abort$/;"	f
fugitive#GrepCommand	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GrepCommand(line1, line2, range, bang, mods, arg) abort$/;"	f
fugitive#GrepComplete	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GrepComplete(A, L, P) abort$/;"	f
fugitive#Head	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Head(...) abort$/;"	f
fugitive#Init	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Init() abort$/;"	f
fugitive#LogCommand	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#LogCommand(line1, count, range, bang, mods, args, type) abort$/;"	f
fugitive#LogComplete	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#LogComplete(A, L, P) abort$/;"	f
fugitive#MapCfile	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MapCfile(...) abort$/;"	f
fugitive#MapJumps	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MapJumps(...) abort$/;"	f
fugitive#MergeComplete	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MergeComplete(A, L, P, ...) abort$/;"	f
fugitive#MessageCfile	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MessageCfile() abort$/;"	f
fugitive#MoveCommand	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MoveCommand(line1, line2, range, bang, mods, arg, ...) abort$/;"	f
fugitive#Object	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Object(...) abort$/;"	f
fugitive#Open	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Open(cmd, bang, mods, arg, ...) abort$/;"	f
fugitive#PagerFor	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PagerFor(argv, ...) abort$/;"	f
fugitive#Path	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Path(url, ...) abort$/;"	f
fugitive#PathComplete	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PathComplete(...) abort$/;"	f
fugitive#PorcelainCfile	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PorcelainCfile() abort$/;"	f
fugitive#Prepare	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Prepare(...) abort$/;"	f
fugitive#PrepareDirEnvGitFlagsArgs	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PrepareDirEnvGitFlagsArgs(...) abort$/;"	f
fugitive#PrepareJob	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PrepareJob(...) abort$/;"	f
fugitive#PullComplete	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PullComplete(A, L, P, ...) abort$/;"	f
fugitive#PushComplete	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PushComplete(A, L, P, ...) abort$/;"	f
fugitive#ReadCommand	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReadCommand(line1, count, range, bang, mods, arg, ...) abort$/;"	f
fugitive#ReadComplete	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReadComplete(A, L, P) abort$/;"	f
fugitive#Real	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Real(url) abort$/;"	f
fugitive#RebaseComplete	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RebaseComplete(A, L, P, ...) abort$/;"	f
fugitive#ReloadStatus	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReloadStatus(...) abort$/;"	f
fugitive#Remote	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Remote(...) abort$/;"	f
fugitive#RemoteHttpHeaders	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RemoteHttpHeaders(remote) abort$/;"	f
fugitive#RemoteUrl	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RemoteUrl(...) abort$/;"	f
fugitive#RemoveCommand	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RemoveCommand(line1, line2, range, bang, mods, arg, ...) abort$/;"	f
fugitive#RenameCommand	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RenameCommand(line1, line2, range, bang, mods, arg, ...) abort$/;"	f
fugitive#RenameComplete	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RenameComplete(A,L,P) abort$/;"	f
fugitive#Result	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Result(...) abort$/;"	f
fugitive#Resume	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Resume() abort$/;"	f
fugitive#RevParse	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RevParse(rev, ...) abort$/;"	f
fugitive#RevertComplete	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RevertComplete(A, L, P, ...) abort$/;"	f
fugitive#ShellCommand	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ShellCommand(...) abort$/;"	f
fugitive#SourceCmd	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#SourceCmd(...) abort$/;"	f
fugitive#SshConfig	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#SshConfig(host, ...) abort$/;"	f
fugitive#SshHostAlias	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#SshHostAlias(authority) abort$/;"	f
fugitive#Statusline	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Statusline(...) abort$/;"	f
fugitive#Wait	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Wait(job_or_jobs, ...) abort$/;"	f
fugitive#WqCommand	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#WqCommand(...) abort$/;"	f
fugitive#WriteCommand	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#WriteCommand(line1, line2, range, bang, mods, arg, ...) abort$/;"	f
fugitive#buffer	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#delete	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#delete(url, ...) abort$/;"	f
fugitive#detect	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#detect(path) abort$/;"	f
fugitive#extract_git_dir	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#filereadable	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#filereadable(url) abort$/;"	f
fugitive#filewritable	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#filewritable(url) abort$/;"	f
fugitive#foldtext	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#getfperm	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getfperm(url) abort$/;"	f
fugitive#getfsize	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getfsize(url) abort$/;"	f
fugitive#getftime	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getftime(url) abort$/;"	f
fugitive#getftype	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getftype(url) abort$/;"	f
fugitive#glob	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#glob(url, ...) abort$/;"	f
fugitive#head	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#head(...) abort$/;"	f
fugitive#is_git_dir	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#isdirectory	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#isdirectory(url) abort$/;"	f
fugitive#readfile	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#readfile(url, ...) abort$/;"	f
fugitive#repo	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#repo(...) abort$/;"	f
fugitive#resolve	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#resolve(url) abort$/;"	f
fugitive#setfperm	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#setfperm(url, perm) abort$/;"	f
fugitive#simplify	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#simplify(url) abort$/;"	f
fugitive#statusline	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#statusline(...) abort$/;"	f
fugitive#writefile	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#writefile(lines, url, ...) abort$/;"	f
fugitive.vim	vim/.vim/plugged/vim-fugitive/README.markdown	/^# fugitive.vim$/;"	c
fugitive_blame	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_diff	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_dummy_events	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_dummy_events$/;"	a
fugitive_job	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_job$/;"	a
fugitive_status	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_temp	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_temp$/;"	a
fullscreen	vim/.vim/plugged/fzf/src/terminal.go	/^	fullscreen   bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
fullscreen	vim/.vim/plugged/fzf/src/tui/light.go	/^	fullscreen    bool$/;"	m	struct:tui.LightRenderer	typeref:typename:bool
function	.ctags.d/vue.ctags	/^--regex-vue=\/^function +([a-zA-Z_][a-zA-Z0-9_]*)\/\\1\/f,function\/{scope=ref}$/;"	k	langdef:vue
function	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "function": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
function-bind	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "function-bind": "^1.1.1"$/;"	s	object:dependencies.has.requires
function-bind	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "function-bind": "^1.1.1"$/;"	s	object:dependencies.promise.prototype.finally.requires
function-bind	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "function-bind": "^1.1.1",$/;"	s	object:dependencies.call-bind.requires
function-bind	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "function-bind": "^1.1.1",$/;"	s	object:dependencies.es-abstract.requires
function-bind	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "function-bind": "^1.1.1",$/;"	s	object:dependencies.get-intrinsic.requires
function-bind	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "function-bind": "^1.1.1",$/;"	s	object:dependencies.unbox-primitive.requires
function-bind	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "function-bind": {$/;"	o	object:dependencies
functional-red-black-tree	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "functional-red-black-tree": "^1.0.1",$/;"	s	object:dependencies.@typescript-eslint/eslint-plugin.requires
functional-red-black-tree	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "functional-red-black-tree": "^1.0.1",$/;"	s	object:dependencies.eslint.requires
functional-red-black-tree	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "functional-red-black-tree": {$/;"	o	object:dependencies
fuzzy	vim/.vim/plugged/fzf/src/pattern.go	/^	fuzzy         bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
fuzzyAlgo	vim/.vim/plugged/fzf/src/pattern.go	/^	fuzzyAlgo     algo.Algo$/;"	m	struct:fzf.Pattern	typeref:typename:algo.Algo
fv	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
fw	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
fx	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	v
fy	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
fzf	vim/.vim/plugged/fzf/main.go	/^	fzf "github.com\/junegunn\/fzf\/src"$/;"	P	package:github.com/junegunn/fzf/src
fzf	vim/.vim/plugged/fzf/man/man1/fzf.1	/^.TH fzf 1 "Nov 2021" "fzf 0.28.0" "fzf - a command-line fuzzy finder"$/;"	t
fzf	vim/.vim/plugged/fzf/src/ansi.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/ansi_test.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/cache.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/cache_test.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/chunklist.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/chunklist_test.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/constants.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/core.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/history.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/history_test.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/item.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/item_test.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/matcher.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/merger.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/merger_test.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/options.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/options_test.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/pattern.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/pattern_test.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/reader.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/reader_test.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/result.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/result_others.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/result_test.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/result_x86.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/terminal.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/terminal_test.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/terminal_unix.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/terminal_windows.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/tokenizer.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/src/tokenizer_test.go	/^package fzf$/;"	p
fzf	vim/.vim/plugged/fzf/test/test_go.rb	/^  def fzf(*opts)$/;"	f	class:TestBase
fzf :heart: vim	vim/.vim/plugged/fzf.vim/README.md	/^fzf :heart: vim$/;"	c
fzf inside terminal buffer	vim/.vim/plugged/fzf/README-VIM.md	/^### fzf inside terminal buffer$/;"	S	section:FZF Vim integration""Tips
fzf!	vim/.vim/plugged/fzf/test/test_go.rb	/^  def fzf!(*opts)$/;"	f	class:TestBase
fzf#complete	vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^function! fzf#complete(...)$/;"	f
fzf#exec	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! fzf#exec(...)$/;"	f
fzf#install	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! fzf#install()$/;"	f
fzf#run	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! fzf#run(...) abort$/;"	f
fzf#shellescape	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! fzf#shellescape(arg, ...)$/;"	f
fzf#vim#_buflisted_sorted	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_buflisted_sorted()$/;"	f
fzf#vim#_format_buffer	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_format_buffer(b)$/;"	f
fzf#vim#_lines	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_lines(all)$/;"	f
fzf#vim#_recent_files	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_recent_files()$/;"	f
fzf#vim#_uniq	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_uniq(list)$/;"	f
fzf#vim#ag	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#ag(query, ...)$/;"	f
fzf#vim#ag_raw	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#ag_raw(command_suffix, ...)$/;"	f
fzf#vim#buffer_commits	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_commits(...) range$/;"	f
fzf#vim#buffer_lines	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_lines(...)$/;"	f
fzf#vim#buffer_tags	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_tags(query, ...)$/;"	f
fzf#vim#buffers	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffers(...)$/;"	f
fzf#vim#colors	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#colors(...)$/;"	f
fzf#vim#command_history	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#command_history(...)$/;"	f
fzf#vim#commands	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#commands(...)$/;"	f
fzf#vim#commits	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#commits(...) range$/;"	f
fzf#vim#complete	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#complete(...)$/;"	f
fzf#vim#complete#buffer_line	vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#buffer_line(...)$/;"	f
fzf#vim#complete#line	vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#line(...)$/;"	f
fzf#vim#complete#path	vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#path(command, ...)$/;"	f
fzf#vim#complete#word	vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#word(...)$/;"	f
fzf#vim#files	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#files(dir, ...)$/;"	f
fzf#vim#filetypes	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#filetypes(...)$/;"	f
fzf#vim#gitfiles	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#gitfiles(args, ...)$/;"	f
fzf#vim#grep	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#grep(grep_command, has_column, ...)$/;"	f
fzf#vim#helptags	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#helptags(...)$/;"	f
fzf#vim#history	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#history(...)$/;"	f
fzf#vim#lines	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#lines(...)$/;"	f
fzf#vim#locate	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#locate(query, ...)$/;"	f
fzf#vim#maps	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#maps(mode, ...)$/;"	f
fzf#vim#marks	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#marks(...)$/;"	f
fzf#vim#search_history	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#search_history(...)$/;"	f
fzf#vim#snippets	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#snippets(...)$/;"	f
fzf#vim#tags	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#tags(query, ...)$/;"	f
fzf#vim#windows	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#windows(...)$/;"	f
fzf#vim#with_preview	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#with_preview(...)$/;"	f
fzf#wrap	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! fzf#wrap(...)$/;"	f
fzf-cd-widget	vim/.vim/plugged/fzf/shell/key-bindings.zsh	/^fzf-cd-widget() {$/;"	f
fzf-completion	vim/.vim/plugged/fzf/shell/completion.zsh	/^fzf-completion() {$/;"	f
fzf-file-widget	vim/.vim/plugged/fzf/shell/key-bindings.bash	/^fzf-file-widget() {$/;"	f
fzf-file-widget	vim/.vim/plugged/fzf/shell/key-bindings.zsh	/^fzf-file-widget() {$/;"	f
fzf-history-widget	vim/.vim/plugged/fzf/shell/key-bindings.zsh	/^fzf-history-widget() {$/;"	f
fzf-tmux	vim/.vim/plugged/fzf/man/man1/fzf-tmux.1	/^.TH fzf-tmux 1 "Nov 2021" "fzf 0.28.0" "fzf-tmux - open fzf in tmux split pane"$/;"	t
fzf.on_exit	vim/.vim/plugged/fzf/plugin/fzf.vim	/^      function! fzf.on_exit(job_id, exit_status, event) dict$/;"	f
fzf.on_exit	vim/.vim/plugged/fzf/plugin/fzf.vim	/^  function! fzf.on_exit(id, code, ...)$/;"	f
fzf.switch_back	vim/.vim/plugged/fzf/plugin/fzf.vim	/^  function! fzf.switch_back(inplace)$/;"	f
fzf_base	vim/.vim/plugged/fzf/install.ps1	/^$fzf_base=Split-Path -Parent $MyInvocation.MyCommand.Definition$/;"	v
fzf_buffers	vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^augroup fzf_buffers$/;"	a
fzf_popd	vim/.vim/plugged/fzf/plugin/fzf.vim	/^augroup fzf_popd$/;"	a
fzf_swap	vim/.vim/plugged/fzf/plugin/fzf.vim	/^    augroup fzf_swap$/;"	a
g	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
g	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
g	vim/.vim/plugged/coc.nvim/build/index.js	/^`+p(e.style.border,n.left)),A+=M.join(p(e.style.border,n.middle))+p(e.style.border,n.right)}),p(/;"	f	function:AnonymousFunction272f78ae1fa00
g	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:$d
g	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
g	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:a
g	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f	function:L9
g$	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
g0	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
g4	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
g5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
g6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
g7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
g8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
g9	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
g:	vim/.vim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^            let g:[newname] = g:[key]$/;"	v
g:EditorConfig_disable_rules	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_disable_rules = []$/;"	v
g:EditorConfig_exclude_patterns	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_exclude_patterns = []$/;"	v
g:EditorConfig_exec_path	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_exec_path = ''$/;"	v
g:EditorConfig_max_line_indicator	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_max_line_indicator = 'line'$/;"	v
g:EditorConfig_preserve_formatoptions	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_preserve_formatoptions = 0$/;"	v
g:EditorConfig_verbose	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let g:EditorConfig_verbose = 0$/;"	v
g:__fzf_command	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^    let g:__fzf_command = "normal ".prefix.item."\\<cr>"$/;"	v
g:__gutentags_vim_is_leaving	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^    let g:__gutentags_vim_is_leaving = 1$/;"	v
g:__gutentags_vim_is_leaving	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:__gutentags_vim_is_leaving = 0$/;"	v
g:_fugitive_last_job	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^  let g:_fugitive_last_job = a:state$/;"	v
g:_plug_bang	vim/.vim/autoload/plug.vim	/^    let g:_plug_bang = (s:is_win && has('gui_running') ? 'silent ' : '').'!'.escape(cmd, '#!%')$/;"	v
g:airline#themes#iceberg#palette	vim/.vim/plugged/iceberg.vim/autoload/airline/themes/iceberg.vim	/^let g:airline#themes#iceberg#palette = s:build_palette()$/;"	v
g:airline#themes#iceberg#palette	vim/.vim/plugged/iceberg.vim/src/template-airline.vim	/^let g:airline#themes#iceberg#palette = s:build_palette()$/;"	v
g:airline#themes#icebergDark#palette	vim/.vim/plugged/iceberg-dark/autoload/airline/themes/icebergDark.vim	/^let g:airline#themes#icebergDark#palette = s:build_palette()$/;"	v
g:autoloaded_fugitive	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let g:autoloaded_fugitive = 1$/;"	v
g:autoloaded_rhubarb	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^let g:autoloaded_rhubarb = 1$/;"	v
g:autoloaded_twiggy	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let g:autoloaded_twiggy = 1$/;"	v
g:b	vim/.vim/plugged/vim-translator/autoload/translator/window/float.vim	/^  let g:b = bottomline$/;"	v
g:closetag_filenames	.config/nvim_copy/init.vim	/^let g:closetag_filenames = '*.html,*.xhtml,*.jsx,*.tsx,*.vue'$/;"	v
g:closetag_filenames	vim/.vim/plugged/vim-closetag/plugin/closetag.vim	/^    let g:closetag_filenames = substitute(g:closetag_filenames, '\\s*,\\s\\+', ',', 'g')$/;"	v
g:closetag_filenames	vim/.vimrc	/^let g:closetag_filenames = '*.html,*.xhtml,*.jsx,*.tsx,*.vue'$/;"	v
g:closetag_filetypes	vim/.vim/plugged/vim-closetag/plugin/closetag.vim	/^    let g:closetag_filetypes = substitute(g:closetag_filetypes, '\\s*,\\s\\+', ',', 'g')$/;"	v
g:closetag_xhtml_filenames	vim/.vim/plugged/vim-closetag/plugin/closetag.vim	/^    let g:closetag_xhtml_filenames = substitute(g:closetag_xhtml_filenames, '\\s*,\\s\\+', ',', /;"	v
g:closetag_xhtml_filetypes	vim/.vim/plugged/vim-closetag/plugin/closetag.vim	/^    let g:closetag_xhtml_filetypes = substitute(g:closetag_xhtml_filetypes, '\\s*,\\s\\+', ',', /;"	v
g:coc#_context	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^    let g:coc#_context = {'start': 0, 'preselect': -1,'candidates': []}$/;"	v
g:coc#_context	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^  let g:coc#_context = {$/;"	v
g:coc#_context	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^let g:coc#_context = {'start': 0, 'preselect': -1,'candidates': []}$/;"	v
g:coc_enabled	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^  let g:coc_enabled = 0$/;"	v
g:coc_enabled	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^  let g:coc_enabled = 1$/;"	v
g:coc_global_extensions	.config/nvim_copy/init.vim	/^  let g:coc_global_extensions += ['coc-eslint']$/;"	v
g:coc_global_extensions	.config/nvim_copy/init.vim	/^  let g:coc_global_extensions += ['coc-prettier']$/;"	v
g:coc_global_extensions	.config/nvim_copy/init.vim	/^let g:coc_global_extensions = [$/;"	v
g:coc_global_extensions	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^let g:coc_global_extensions = get(g:, 'coc_global_extensions', [])$/;"	v
g:coc_global_extensions	vim/.vimrc	/^  let g:coc_global_extensions += ['coc-eslint']$/;"	v
g:coc_global_extensions	vim/.vimrc	/^  let g:coc_global_extensions += ['coc-prettier']$/;"	v
g:coc_global_extensions	vim/.vimrc	/^let g:coc_global_extensions = [$/;"	v
g:coc_last_float_win	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^  let g:coc_last_float_win = winid$/;"	v
g:coc_last_hover_message	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^  let g:coc_last_hover_message = a:msg$/;"	v
g:coc_selected_text	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^let g:coc_selected_text = ''$/;"	v
g:coc_service_initialized	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^let g:coc_service_initialized = 0$/;"	v
g:coc_user_config	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^  let g:coc_user_config[a:section] = a:value$/;"	v
g:coc_user_config	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^let g:coc_user_config = get(g:, 'coc_user_config', {})$/;"	v
g:coc_vim_commands	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^let g:coc_vim_commands = []$/;"	v
g:colors_name	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^let g:colors_name = 'iceberg'$/;"	v
g:colors_name	vim/.vim/plugged/iceberg.vim/src/template.vim	/^let g:colors_name = 'iceberg'$/;"	v
g:did_coc_loaded	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^let g:did_coc_loaded = 1$/;"	v
g:dispatch_compilers	vim/.vim/plugged/vim-rhubarb/plugin/rhubarb.vim	/^  let g:dispatch_compilers = {}$/;"	v
g:dispatch_compilers	vim/.vim/plugged/vim-rhubarb/plugin/rhubarb.vim	/^let g:dispatch_compilers['hub'] = 'git'$/;"	v
g:editorconfig_core_vimscript_debug	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core.vim	/^        let g:editorconfig_core_vimscript_debug = 1$/;"	v
g:editorconfig_core_vimscript_debug	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core.vim	/^    let g:editorconfig_core_vimscript_debug = 0$/;"	v
g:editorconfig_core_vimscript_debug	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^    let g:editorconfig_core_vimscript_debug = 0$/;"	v
g:editorconfig_core_vimscript_debug	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^    let g:editorconfig_core_vimscript_debug = 0$/;"	v
g:far#check_windows_to_resize_timer	vim/.vim/plugged/far.vim/autoload/far.vim	/^    let g:far#check_windows_to_resize_timer =$/;"	v
g:far#default_file_mask	vim/.vim/plugged/far.vim/plugin/far.vim	/^    let g:far#default_file_mask = file_mask$/;"	v
g:far#executors#nvim#context_idx	vim/.vim/plugged/far.vim/autoload/far/executors/nvim.vim	/^    let g:far#executors#nvim#context_idx += 1$/;"	v
g:far#executors#nvim#context_idx	vim/.vim/plugged/far.vim/autoload/far/executors/nvim.vim	/^let g:far#executors#nvim#context_idx = 0$/;"	v
g:far#executors#nvim#contexts	vim/.vim/plugged/far.vim/autoload/far/executors/nvim.vim	/^    let g:far#executors#nvim#contexts[ctx_idx] = ctx$/;"	v
g:far#executors#nvim#contexts	vim/.vim/plugged/far.vim/autoload/far/executors/nvim.vim	/^let g:far#executors#nvim#contexts = {}$/;"	v
g:far#file_mask_history	vim/.vim/plugged/far.vim/autoload/far.vim	/^let g:far#file_mask_history = []$/;"	v
g:far#mapping	vim/.vim/plugged/far.vim/autoload/far.vim	/^        let g:far#mapping[key] = get(g:far#mapping, key,$/;"	v
g:far#mapping	vim/.vim/plugged/far.vim/autoload/far.vim	/^    let g:far#mapping = s:default_mapping$/;"	v
g:far#mode_open	vim/.vim/plugged/far.vim/autoload/far.vim	/^                let g:far#mode_open['case_sensitive'] = ! g:far#mode_open['case_sensitive']$/;"	v
g:far#mode_open	vim/.vim/plugged/far.vim/autoload/far.vim	/^                let g:far#mode_open['regex'] = ! g:far#mode_open['regex']$/;"	v
g:far#mode_open	vim/.vim/plugged/far.vim/autoload/far.vim	/^                let g:far#mode_open['substitute'] = ! g:far#mode_open['substitute']$/;"	v
g:far#mode_open	vim/.vim/plugged/far.vim/autoload/far.vim	/^                let g:far#mode_open['word'] = ! g:far#mode_open['word']$/;"	v
g:far#mode_open	vim/.vim/plugged/far.vim/plugin/far.vim	/^    let g:far#mode_open['substitute'] = a:substitute_open$/;"	v
g:far#prompt_mapping	vim/.vim/plugged/far.vim/autoload/far.vim	/^        let g:far#prompt_mapping[key] = get(g:far#prompt_mapping, key,$/;"	v
g:far#prompt_mapping	vim/.vim/plugged/far.vim/autoload/far.vim	/^    let g:far#prompt_mapping = s:default_prompt_mapping$/;"	v
g:far#repl_history	vim/.vim/plugged/far.vim/autoload/far.vim	/^let g:far#repl_history = []$/;"	v
g:far#search_history	vim/.vim/plugged/far.vim/autoload/far.vim	/^let g:far#search_history = []$/;"	v
g:far#show_prompt_key	vim/.vim/plugged/far.vim/autoload/far.vim	/^    let g:far#show_prompt_key=1$/;"	v
g:fugitive_browse_handlers	vim/.vim/plugged/vim-rhubarb/plugin/rhubarb.vim	/^  let g:fugitive_browse_handlers = []$/;"	v
g:fugitive_event	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^      let g:fugitive_event = a:state.git_dir$/;"	v
g:fugitive_event	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^    let g:fugitive_event = dir$/;"	v
g:fugitive_result	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^      let g:fugitive_result = a:dir$/;"	v
g:fugitive_result	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^      let g:fugitive_result = a:state$/;"	v
g:fugitive_summary_format	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:fzf#vim#buffers	vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^  let g:fzf#vim#buffers = {}$/;"	v
g:fzf_action	.config/nvim_copy/init.vim	/^let g:fzf_action = {$/;"	v
g:fzf_action	vim/.vimrc	/^let g:fzf_action = {$/;"	v
g:fzf_buffers_jump	.config/nvim_copy/init.vim	/^let g:fzf_buffers_jump = 1$/;"	v
g:fzf_buffers_jump	vim/.vimrc	/^let g:fzf_buffers_jump = 1$/;"	v
g:fzf_layout	.config/nvim_copy/init.vim	/^let g:fzf_layout = { 'down': '~40%' }$/;"	v
g:fzf_layout	vim/.vimrc	/^let g:fzf_layout = { 'down': '~40%' }$/;"	v
g:gitgutter_async	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^    let g:gitgutter_async = async$/;"	v
g:gitgutter_async	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_async                        = get(g:, 'gitgutter_async', 1)$/;"	v
g:gitgutter_close_preview_on_escape	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_close_preview_on_escape      = get(g:, 'gitgutter_close_preview_on_escape', 0)$/;"	v
g:gitgutter_diff_args	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_diff_args                    = get(g:, 'gitgutter_diff_args', '')$/;"	v
g:gitgutter_diff_base	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_diff_base                    = get(g:, 'gitgutter_diff_base', '')$/;"	v
g:gitgutter_diff_relative_to	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_diff_relative_to             = get(g:, 'gitgutter_diff_relative_to', 'index')$/;"	v
g:gitgutter_enabled	vim/.vim/plugged/far.vim/autoload/far.vim	/^        let g:gitgutter_enabled = 0$/;"	v
g:gitgutter_enabled	vim/.vim/plugged/far.vim/autoload/far.vim	/^        let g:gitgutter_enabled = old_gitgutter_enabled$/;"	v
g:gitgutter_enabled	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^  let g:gitgutter_enabled = 0$/;"	v
g:gitgutter_enabled	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^  let g:gitgutter_enabled = 1$/;"	v
g:gitgutter_enabled	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_enabled = get(g:, 'gitgutter_enabled', 1)$/;"	v
g:gitgutter_git_args	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_git_args                     = get(g:, 'gitgutter_git_args', '')$/;"	v
g:gitgutter_git_executable	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_git_executable = get(g:, 'gitgutter_git_executable', 'git')$/;"	v
g:gitgutter_grep	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^      let g:gitgutter_grep .= ' --color=never'$/;"	v
g:gitgutter_grep	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^    let g:gitgutter_grep = ''$/;"	v
g:gitgutter_grep	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_grep = get(g:, 'gitgutter_grep', default_grep)$/;"	v
g:gitgutter_highlight_linenrs	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^  let g:gitgutter_highlight_linenrs = 0$/;"	v
g:gitgutter_highlight_linenrs	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^  let g:gitgutter_highlight_linenrs = 1$/;"	v
g:gitgutter_highlight_linenrs	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_highlight_linenrs = get(g:, 'gitgutter_highlight_linenrs', 0)$/;"	v
g:gitgutter_highlight_lines	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^  let g:gitgutter_highlight_lines = 0$/;"	v
g:gitgutter_highlight_lines	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^  let g:gitgutter_highlight_lines = 1$/;"	v
g:gitgutter_highlight_lines	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_highlight_lines   = get(g:, 'gitgutter_highlight_lines', 0)$/;"	v
g:gitgutter_hook_context	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^    let g:gitgutter_hook_context = {'bufnr': a:bufnr}$/;"	v
g:gitgutter_log	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_log                          = get(g:, 'gitgutter_log', 0)$/;"	v
g:gitgutter_map_keys	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_map_keys                     = get(g:, 'gitgutter_map_keys', 1)$/;"	v
g:gitgutter_max_signs	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_max_signs = get(g:, 'gitgutter_max_signs', -1)$/;"	v
g:gitgutter_max_signs	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_max_signs = get(g:, 'gitgutter_max_signs', 500)$/;"	v
g:gitgutter_preview_win_floating	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_preview_win_floating = get(g:, 'gitgutter_preview_win_floating', 1)$/;"	v
g:gitgutter_preview_win_floating	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_preview_win_floating = get(g:, 'gitgutter_preview_win_floating', default)$/;"	v
g:gitgutter_preview_win_location	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_preview_win_location = get(g:, 'gitgutter_preview_win_location', 'bo')$/;"	v
g:gitgutter_set_sign_backgrounds	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_set_sign_backgrounds = get(g:, 'gitgutter_set_sign_backgrounds', 0)$/;"	v
g:gitgutter_show_msg_on_hunk_jumping	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_show_msg_on_hunk_jumping     = get(g:, 'gitgutter_show_msg_on_hunk_jumping', 1)$/;"	v
g:gitgutter_sign_added	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_added           = get(g:, 'gitgutter_sign_added', '+')$/;"	v
g:gitgutter_sign_allow_clobber	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_sign_allow_clobber = 1$/;"	v
g:gitgutter_sign_allow_clobber	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_allow_clobber   = get(g:, 'gitgutter_sign_allow_clobber', 0)$/;"	v
g:gitgutter_sign_modified	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_modified        = get(g:, 'gitgutter_sign_modified', '~')$/;"	v
g:gitgutter_sign_modified_removed	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_modified_removed        = get(g:, 'gitgutter_sign_modified_removed', '~_')$/;"	v
g:gitgutter_sign_priority	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_priority     = get(g:, 'gitgutter_sign_priority', 10)$/;"	v
g:gitgutter_sign_priority	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^  let g:gitgutter_sign_priority = 10$/;"	v
g:gitgutter_sign_priority	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^  let g:gitgutter_sign_priority = 5$/;"	v
g:gitgutter_sign_removed	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_removed         = get(g:, 'gitgutter_sign_removed', '_')$/;"	v
g:gitgutter_sign_removed_above_and_below	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_removed_above_and_below = get(g:, 'gitgutter_sign_removed_above_and_below',/;"	v
g:gitgutter_sign_removed_first_line	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_sign_removed_first_line = get(g:, 'gitgutter_sign_removed_first_line', '_^')$/;"	v
g:gitgutter_sign_removed_first_line	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_sign_removed_first_line = get(g:, 'gitgutter_sign_removed_first_line', '‾')$/;"	v
g:gitgutter_signs	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^  let g:gitgutter_signs = 0$/;"	v
g:gitgutter_signs	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^  let g:gitgutter_signs = 1$/;"	v
g:gitgutter_signs	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_signs             = get(g:, 'gitgutter_signs', 1)$/;"	v
g:gitgutter_terminal_reports_focus	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_terminal_reports_focus       = get(g:, 'gitgutter_terminal_reports_focus', 1)$/;"	v
g:gitgutter_use_location_list	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_use_location_list            = get(g:, 'gitgutter_use_location_list', 0)$/;"	v
g:github_password	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^      let g:github_password = FugitiveConfigGet('github.password', '')$/;"	v
g:github_password	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^    let g:github_password = $GITHUB_PASSWORD$/;"	v
g:github_user	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^      let g:github_user = $LOGNAME$/;"	v
g:github_user	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^      let g:github_user = FugitiveConfigGet('github.user', '')$/;"	v
g:github_user	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^    let g:github_user = $GITHUB_USER$/;"	v
g:golden_ratio_exclude_nonmodifiable	vim/.vim/plugged/golden-ratio/plugin/golden_ratio.vim	/^  let g:golden_ratio_exclude_nonmodifiable = 0$/;"	v
g:golden_ratio_wrap_ignored	vim/.vim/plugged/golden-ratio/plugin/golden_ratio.vim	/^  let g:golden_ratio_wrap_ignored = 0$/;"	v
g:gutentags_add_ctrlp_root_markers	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_ctrlp_root_markers = get(g:, 'gutentags_add_ctrlp_root_markers', 1)$/;"	v
g:gutentags_add_default_project_roots	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_default_project_roots = get(g:, 'gutentags_add_default_project_roots', 1)$/;"	v
g:gutentags_auto_add_cscope	vim/.vim/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_auto_add_cscope = 1$/;"	v
g:gutentags_auto_add_gtags_cscope	vim/.vim/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_auto_add_gtags_cscope = 1$/;"	v
g:gutentags_background_update	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_background_update = get(g:, 'gutentags_background_update', 1)$/;"	v
g:gutentags_cache_dir	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = ''$/;"	v
g:gutentags_cache_dir	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':p')$/;"	v
g:gutentags_cache_dir	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':s?[\/\\\\]$??')$/;"	v
g:gutentags_cscope_build_inverted_index	vim/.vim/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_build_inverted_index = 0$/;"	v
g:gutentags_cscope_executable	vim/.vim/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_executable = 'cscope'$/;"	v
g:gutentags_ctags_auto_set_tags	vim/.vim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_auto_set_tags = get(g:, 'gutentags_ctags_auto_set_tags', 1)$/;"	v
g:gutentags_ctags_check_tagfile	vim/.vim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_check_tagfile = get(g:, 'gutentags_ctags_check_tagfile', 0)$/;"	v
g:gutentags_ctags_exclude	vim/.vim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude = get(g:, 'gutentags_ctags_exclude', [])$/;"	v
g:gutentags_ctags_exclude_wildignore	vim/.vim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude_wildignore = get(g:, 'gutentags_ctags_exclude_wildignore', 1)$/;"	v
g:gutentags_ctags_executable	.config/nvim_copy/init.vim	/^let g:gutentags_ctags_executable = 'uctags'$/;"	v
g:gutentags_ctags_executable	vim/.vim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_executable = get(g:, 'gutentags_ctags_executable', 'ctags')$/;"	v
g:gutentags_ctags_executable	vim/.vimrc	/^let g:gutentags_ctags_executable = 'uctags'$/;"	v
g:gutentags_ctags_extra_args	vim/.vim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_extra_args = get(g:, 'gutentags_ctags_extra_args', [])$/;"	v
g:gutentags_ctags_options_file	vim/.vim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_options_file = get(g:, 'gutentags_ctags_options_file', '.gutctags')$/;"	v
g:gutentags_ctags_post_process_cmd	vim/.vim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_post_process_cmd = get(g:, 'gutentags_ctags_post_process_cmd', '')$/;"	v
g:gutentags_ctags_tagfile	vim/.vim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_tagfile = get(g:, 'gutentags_ctags_tagfile', 'tags')$/;"	v
g:gutentags_debug	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_debug = get(g:, 'gutentags_debug', 0)$/;"	v
g:gutentags_define_advanced_commands	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_define_advanced_commands = get(g:, 'gutentags_define_advanced_commands', 0)$/;"	v
g:gutentags_enabled	vim/.vim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^            let g:gutentags_enabled = 0$/;"	v
g:gutentags_enabled	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_enabled = get(g:, 'gutentags_enabled', 1)$/;"	v
g:gutentags_exclude_filetypes	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_filetypes = get(g:, 'gutentags_exclude_filetypes', [])$/;"	v
g:gutentags_exclude_project_root	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_project_root = get(g:, 'gutentags_exclude_project_root', ['\/usr\/local'/;"	v
g:gutentags_fake	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_fake = a:1$/;"	v
g:gutentags_fake	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^    let g:gutentags_fake = !g:gutentags_fake$/;"	v
g:gutentags_fake	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_fake = get(g:, 'gutentags_fake', 0)$/;"	v
g:gutentags_file_list_command	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_file_list_command = get(g:, 'gutentags_file_list_command', '')$/;"	v
g:gutentags_generate_on_empty_buffer	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_empty_buffer = get(g:, 'gutentags_generate_on_empty_buffer', 0)$/;"	v
g:gutentags_generate_on_missing	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_missing = get(g:, 'gutentags_generate_on_missing', 1)$/;"	v
g:gutentags_generate_on_new	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_new = get(g:, 'gutentags_generate_on_new', 1)$/;"	v
g:gutentags_generate_on_write	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_write = get(g:, 'gutentags_generate_on_write', 1)$/;"	v
g:gutentags_gtags_cscope_executable	vim/.vim/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_cscope_executable = 'gtags-cscope'$/;"	v
g:gutentags_gtags_dbpath	vim/.vim/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_dbpath = ''$/;"	v
g:gutentags_gtags_executable	vim/.vim/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_executable = 'gtags'$/;"	v
g:gutentags_gtags_options_file	vim/.vim/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_options_file = '.gutgtags'$/;"	v
g:gutentags_init_user_func	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_init_user_func = get(g:, 'gutentags_init_user_func', $/;"	v
g:gutentags_modules	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_modules = get(g:, 'gutentags_modules', ['ctags'])$/;"	v
g:gutentags_pause_after_update	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_pause_after_update = get(g:, 'gutentags_pause_after_update', 0)$/;"	v
g:gutentags_plat_dir	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . "\\\\plat\\\\win32\\\\"$/;"	v
g:gutentags_plat_dir	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . '\/plat\/unix\/'$/;"	v
g:gutentags_project_info	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_info = get(g:, 'gutentags_project_info', [])$/;"	v
g:gutentags_project_root	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_project_root += ['.git', '.hg', '.svn', '.bzr', '_darcs', '_FOSSIL_', '.fslc/;"	v
g:gutentags_project_root	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root = get(g:, 'gutentags_project_root', [])$/;"	v
g:gutentags_project_root_finder	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root_finder = get(g:, 'gutentags_project_root_finder', '')$/;"	v
g:gutentags_project_roots	.config/nvim_copy/init.vim	/^let g:gutentags_project_roots = ['.git', 'package.json', 'composer.json']$/;"	v
g:gutentags_project_roots	vim/.vimrc	/^let g:gutentags_project_roots = ['.git', 'package.json', 'composer.json']$/;"	v
g:gutentags_res_dir	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . "\\\\res\\\\"$/;"	v
g:gutentags_res_dir	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . '\/res\/'$/;"	v
g:gutentags_resolve_symlinks	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_resolve_symlinks = get(g:, 'gutentags_resolve_symlinks', 0)$/;"	v
g:gutentags_scopefile	vim/.vim/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_scopefile = 'cscope.out'$/;"	v
g:gutentags_script_ext	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.cmd'$/;"	v
g:gutentags_script_ext	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.sh'$/;"	v
g:gutentags_trace	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^            let g:gutentags_trace = l:prev_trace$/;"	v
g:gutentags_trace	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = 1$/;"	v
g:gutentags_trace	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = a:1$/;"	v
g:gutentags_trace	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^        let g:gutentags_trace = l:trace_backup$/;"	v
g:gutentags_trace	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^    let g:gutentags_trace = !g:gutentags_trace$/;"	v
g:gutentags_trace	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_trace = get(g:, 'gutentags_trace', 0)$/;"	v
g:gutentags_use_jobs	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_use_jobs = get(g:, 'gutentags_use_jobs', has('job'))$/;"	v
g:h	vim/.vim/plugged/vim-translator/autoload/translator/window/float.vim	/^  let g:h = a:height$/;"	v
g:io_fugitive	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^let g:io_fugitive = {$/;"	v
g:l	vim/.vim/plugged/vim-translator/autoload/translator/window/float.vim	/^    let g:l = a:lines$/;"	v
g:languagetool_disable_rules	.config/nvim_copy/init.vim	/^let g:languagetool_disable_rules='WHITESPACE_RULE,EN_QUOTES,ARROWS,DASH_RULE'$/;"	v
g:languagetool_disable_rules	vim/.vimrc	/^let g:languagetool_disable_rules='WHITESPACE_RULE,EN_QUOTES,ARROWS,DASH_RULE'$/;"	v
g:languagetool_enable_rules	.config/nvim_copy/init.vim	/^let g:languagetool_enable_rules='PASSIVE_VOICE'$/;"	v
g:languagetool_enable_rules	vim/.vimrc	/^let g:languagetool_enable_rules='PASSIVE_VOICE'$/;"	v
g:languagetool_jar	.config/nvim_copy/init.vim	/^let g:languagetool_jar='$HOME\/LanguageTool-5.4\/languagetool-commandline.jar'$/;"	v
g:languagetool_jar	vim/.vimrc	/^let g:languagetool_jar='$HOME\/LanguageTool-5.4\/languagetool-commandline.jar'$/;"	v
g:lasttab	.config/nvim_copy/init.vim	/^let g:lasttab = 1$/;"	v
g:lasttab	vim/.vimrc	/^let g:lasttab = 1$/;"	v
g:lightline	.config/nvim_copy/lightline.vim	/^let g:lightline = {$/;"	v
g:lightline	vim/.vim/lightline.vim	/^let g:lightline = {$/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/autocmd.vim	/^  let g:lightline = {}$/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/concatenate.vim	/^  let g:lightline = { 'subseparator': { 'left': '>', 'right': '<' } }$/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom' } }$/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom' }, 'component_type': { 'custom': /;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'Custom', 'modified': 'Modified' } }$/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'NotFound' } }$/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'NotFound' }, 'component_type': { 'custom'/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/expand.vim	/^  let g:lightline = { 'component_expand': { 'custom': 'g:lightline.Custom' } }$/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/expand.vim	/^  let g:lightline = {}$/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/highlight.vim	/^  let g:lightline = { 'component_type': { 'error': 'error', 'warning': 'warning' } }$/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/highlight.vim	/^  let g:lightline = {$/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/highlight.vim	/^  let g:lightline = {}$/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/link.vim	/^  let g:lightline = { 'component_type': { 'error': 'error', 'warning': 'warning' } }$/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/link.vim	/^  let g:lightline = {$/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/link.vim	/^  let g:lightline = {}$/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/mode.vim	/^  let g:lightline = { 'mode_map': { 'n': 'N' } }$/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/mode.vim	/^  let g:lightline = {}$/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'custom' ] }, 'tab_component': { 'custom': 'custom' }/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'custom' ] }, 'tab_component_function': { 'custom': '/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'custom', 'filename' ], 'inactive': [ 'custom', 'cust/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'tabnum', 'custom' ], 'inactive': [ 'tabnum', 'custom/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'tabnum', 'custom', 'filename' ], 'inactive': [ 'tabn/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = { 'tab': { 'active': [ 'tabnum', 'filename' ], 'inactive': [ 'filename' ] } /;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/onetab.vim	/^  let g:lightline = {}$/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/popup.vim	/^  let g:lightline = {}$/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/quickfix.vim	/^  let g:lightline = {}$/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component': { 'custom1': 'custom1', 'custom2': 'custom2', 'custom3': 'cus/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_expand': { 'custom1': 'Custom1' }, 'component_function': { 'cus/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_expand': { 'custom1': 'Custom1', 'custom2': 'Custom2' }, 'compo/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_expand': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custom3/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1' } }$/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2' } }$/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2' }, 'com/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom1': 'Custom1', 'custom2': 'Custom2', 'custo/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^  let g:lightline = { 'component_function': { 'custom2': 'Custom2' } }$/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/tabline.vim	/^  let g:lightline = { 'enable': { 'tabline': 0 } }$/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/tabline.vim	/^  let g:lightline = { 'enable': { 'tabline': 1 } }$/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/tabline.vim	/^  let g:lightline = {}$/;"	v
g:lightline	vim/.vim/plugged/lightline.vim/test/toggle.vim	/^  let g:lightline = {}$/;"	v
g:lightline	vim/.vim/plugged/vim-lightline-coc/autoload/lightline/coc.vim	/^  let g:lightline = get(g:, 'lightline', {})$/;"	v
g:lightline	vim/.vim/plugged/vim-lightline-coc/autoload/lightline/coc.vim	/^  let g:lightline[a:scope] = get(g:lightline, a:scope, {})$/;"	v
g:lightline	vim/.vim/plugged/vim-lightline-coc/autoload/lightline/coc.vim	/^  let g:lightline[a:scope][a:name] =  get(g:lightline[a:scope], a:name, a:value)$/;"	v
g:lightline#colorscheme#16color#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let g:lightline#colorscheme#16color#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#OldHope#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let g:lightline#colorscheme#OldHope#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#PaperColor#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor.vim	/^  let g:lightline#colorscheme#PaperColor#palette = g:lightline#colorscheme#PaperColor_dark#palet/;"	v
g:lightline#colorscheme#PaperColor#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor.vim	/^  let g:lightline#colorscheme#PaperColor#palette = g:lightline#colorscheme#PaperColor_light#pale/;"	v
g:lightline#colorscheme#PaperColor_dark#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let g:lightline#colorscheme#PaperColor_dark#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#PaperColor_light#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let g:lightline#colorscheme#PaperColor_light#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let g:lightline#colorscheme#Tomorrow#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let g:lightline#colorscheme#Tomorrow_Night#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Blue#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Blue#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Bright#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Bright#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Eighties#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Eighties#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#apprentice#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let g:lightline#colorscheme#apprentice#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#ayu_dark#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let g:lightline#colorscheme#ayu_dark#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#ayu_light#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let g:lightline#colorscheme#ayu_light#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#ayu_mirage#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let g:lightline#colorscheme#ayu_mirage#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#darcula#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let g:lightline#colorscheme#darcula#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#default#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/default.vim	/^let g:lightline#colorscheme#default#palette = g:lightline#colorscheme#powerline#palette$/;"	v
g:lightline#colorscheme#deus#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let g:lightline#colorscheme#deus#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#iceberg#palette	vim/.vim/plugged/iceberg.vim/autoload/lightline/colorscheme/iceberg.vim	/^let g:lightline#colorscheme#iceberg#palette = s:build_palette()$/;"	v
g:lightline#colorscheme#iceberg#palette	vim/.vim/plugged/iceberg.vim/src/template-lightline.vim	/^let g:lightline#colorscheme#iceberg#palette = s:build_palette()$/;"	v
g:lightline#colorscheme#icebergDark#palette	vim/.vim/plugged/iceberg-dark/autoload/lightline/colorscheme/icebergDark.vim	/^let g:lightline#colorscheme#icebergDark#palette = s:build_palette()$/;"	v
g:lightline#colorscheme#jellybeans#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let g:lightline#colorscheme#jellybeans#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#landscape#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let g:lightline#colorscheme#landscape#palette = s:p$/;"	v
g:lightline#colorscheme#materia#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let g:lightline#colorscheme#materia#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#material#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let g:lightline#colorscheme#material#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#molokai#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let g:lightline#colorscheme#molokai#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#nord#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let g:lightline#colorscheme#nord#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#one#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let g:lightline#colorscheme#one#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#powerline#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let g:lightline#colorscheme#powerline#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#powerlineish#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let g:lightline#colorscheme#powerlineish#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#selenized_black#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let g:lightline#colorscheme#selenized_black#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#selenized_dark#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let g:lightline#colorscheme#selenized_dark#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#selenized_light#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let g:lightline#colorscheme#selenized_light#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#selenized_white#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let g:lightline#colorscheme#selenized_white#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#seoul256#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let g:lightline#colorscheme#seoul256#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#simpleblack#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let g:lightline#colorscheme#simpleblack#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#solarized#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let g:lightline#colorscheme#solarized#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#srcery_drk#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let g:lightline#colorscheme#srcery_drk#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#wombat#palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let g:lightline#colorscheme#wombat#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:loaded_EditorConfig	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^let g:loaded_EditorConfig = 1$/;"	v
g:loaded_commentary	vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^let g:loaded_commentary = 1$/;"	v
g:loaded_far	vim/.vim/plugged/far.vim/plugin/far.vim	/^let g:loaded_far = 0$/;"	v
g:loaded_fugitive	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_fzf	vim/.vim/plugged/fzf/plugin/fzf.vim	/^let g:loaded_fzf = 1$/;"	v
g:loaded_fzf_vim	vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^let g:loaded_fzf_vim = 1$/;"	v
g:loaded_gitgutter	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:loaded_gitgutter = 1$/;"	v
g:loaded_golden_ratio	vim/.vim/plugged/golden-ratio/plugin/golden_ratio.vim	/^let g:loaded_golden_ratio = 1$/;"	v
g:loaded_gutentags	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^let g:loaded_gutentags = 1$/;"	v
g:loaded_languagetool	vim/.vim/plugged/vim-LanguageTool/plugin/LanguageTool.vim	/^let g:loaded_languagetool = "1"$/;"	v
g:loaded_lightline	vim/.vim/plugged/lightline.vim/plugin/lightline.vim	/^let g:loaded_lightline = 1$/;"	v
g:loaded_matchtagalways	vim/.vim/plugged/MatchTagAlways/plugin/MatchTagAlways.vim	/^let g:loaded_matchtagalways = 1$/;"	v
g:loaded_plug	vim/.vim/autoload/plug.vim	/^let g:loaded_plug = 1$/;"	v
g:loaded_rhubarb	vim/.vim/plugged/vim-rhubarb/plugin/rhubarb.vim	/^let g:loaded_rhubarb = 1$/;"	v
g:loaded_rooter	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^let g:loaded_rooter = 1$/;"	v
g:loaded_translator	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^let g:loaded_translator= 1$/;"	v
g:loaded_twiggy	vim/.vim/plugged/vim-twiggy/plugin/twiggy.vim	/^let g:loaded_twiggy = 1$/;"	v
g:mapleader	.config/nvim_copy/init.vim	/^let g:mapleader=','$/;"	v
g:mapleader	vim/.vimrc	/^let g:mapleader=','$/;"	v
g:mta_filetypes	.config/nvim_copy/init.vim	/^let g:mta_filetypes = {$/;"	v
g:mta_filetypes	vim/.vim/plugged/MatchTagAlways/plugin/MatchTagAlways.vim	/^let g:mta_filetypes =$/;"	v
g:mta_filetypes	vim/.vimrc	/^let g:mta_filetypes = {$/;"	v
g:mta_set_default_matchtag_color	vim/.vim/plugged/MatchTagAlways/plugin/MatchTagAlways.vim	/^let g:mta_set_default_matchtag_color =$/;"	v
g:mta_use_matchparen_group	vim/.vim/plugged/MatchTagAlways/plugin/MatchTagAlways.vim	/^let g:mta_use_matchparen_group =$/;"	v
g:multi_cursor_normal_maps	vim/.vim/plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let g:multi_cursor_normal_maps =$/;"	v
g:multi_cursor_start_word_key	vim/.vim/plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^    let g:multi_cursor_start_word_key = g:multi_cursor_next_key$/;"	v
g:multi_cursor_visual_maps	vim/.vim/plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let g:multi_cursor_visual_maps =$/;"	v
g:netrw_banner	.config/nvim_copy/init.vim	/^let g:netrw_banner = 0$/;"	v
g:netrw_banner	vim/.vimrc	/^let g:netrw_banner = 0$/;"	v
g:plug_home	vim/.vim/autoload/plug.vim	/^  let g:plug_home = home$/;"	v
g:plugs	vim/.vim/autoload/plug.vim	/^    let g:plugs[name] = spec$/;"	v
g:plugs	vim/.vim/autoload/plug.vim	/^  let g:plugs = {}$/;"	v
g:plugs_order	vim/.vim/autoload/plug.vim	/^  let g:plugs_order = []$/;"	v
g:plugs_order	vim/.vim/autoload/plug.vim	/^  let g:plugs_order = get(g:, 'plugs_order', keys(g:plugs))$/;"	v
g:qf_disable_statusline	vim/.vim/plugged/lightline.vim/plugin/lightline.vim	/^let g:qf_disable_statusline = 1$/;"	v
g:rooter_cd_cmd	.config/nvim_copy/init.vim	/^let g:rooter_cd_cmd = 'cd'$/;"	v
g:rooter_cd_cmd	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_cd_cmd = 'cd'$/;"	v
g:rooter_cd_cmd	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_cd_cmd = 'lcd'$/;"	v
g:rooter_cd_cmd	vim/.vimrc	/^let g:rooter_cd_cmd = 'cd'$/;"	v
g:rooter_change_directory_for_non_project_files	.config/nvim_copy/init.vim	/^let g:rooter_change_directory_for_non_project_files = 'home'$/;"	v
g:rooter_change_directory_for_non_project_files	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_change_directory_for_non_project_files = ''$/;"	v
g:rooter_change_directory_for_non_project_files	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_change_directory_for_non_project_files = ''$/;"	v
g:rooter_change_directory_for_non_project_files	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_change_directory_for_non_project_files = 'current'$/;"	v
g:rooter_change_directory_for_non_project_files	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_change_directory_for_non_project_files = 'home'$/;"	v
g:rooter_change_directory_for_non_project_files	vim/.vimrc	/^let g:rooter_change_directory_for_non_project_files = 'home'$/;"	v
g:rooter_manual_only	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_manual_only = !g:rooter_manual_only$/;"	v
g:rooter_manual_only	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_manual_only = 0$/;"	v
g:rooter_patterns	.config/nvim_copy/init.vim	/^let g:rooter_patterns = ['.git', 'package.json', 'composer.json']$/;"	v
g:rooter_patterns	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_patterns = ['.git', '_darcs', '.hg', '.bzr', '.svn', 'Makefile', 'package.json']$/;"	v
g:rooter_patterns	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['!^project', '*.txt']$/;"	v
g:rooter_patterns	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['!_git']$/;"	v
g:rooter_patterns	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['**\/bar.txt']$/;"	v
g:rooter_patterns	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['*.z']$/;"	v
g:rooter_patterns	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['=foo foo\/']$/;"	v
g:rooter_patterns	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['>a']$/;"	v
g:rooter_patterns	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['_git\/']$/;"	v
g:rooter_patterns	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['bar']$/;"	v
g:rooter_patterns	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['foo\\ foo\/bar.txt']$/;"	v
g:rooter_patterns	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_patterns = ['x?z']$/;"	v
g:rooter_patterns	vim/.vimrc	/^let g:rooter_patterns = ['.git', 'package.json', 'composer.json']$/;"	v
g:rooter_resolve_links	.config/nvim_copy/init.vim	/^let g:rooter_resolve_links = 1$/;"	v
g:rooter_resolve_links	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_resolve_links = 0$/;"	v
g:rooter_resolve_links	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_resolve_links = 0$/;"	v
g:rooter_resolve_links	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_resolve_links = 1$/;"	v
g:rooter_resolve_links	vim/.vimrc	/^let g:rooter_resolve_links = 1$/;"	v
g:rooter_silent_chdir	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_silent_chdir = 0$/;"	v
g:rooter_silent_chdir	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_silent_chdir = 0$/;"	v
g:rooter_targets	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^  let g:rooter_targets = '\/,*'$/;"	v
g:rooter_targets	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_targets = '*.txt'$/;"	v
g:rooter_targets	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_targets = '\/'$/;"	v
g:rooter_targets	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_targets = '\/,*.txt,*.z'$/;"	v
g:rooter_use_lcd	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^  let g:rooter_use_lcd = 0$/;"	v
g:terminal_ansi_colors	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_ansi_colors = ['#1e2132', '#e27878', '#b4be82', '#e2a478', '#84a0c6', '#a093c/;"	v
g:terminal_ansi_colors	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_ansi_colors = ['#dcdfe7', '#cc517a', '#668e3d', '#c57339', '#2d539e', '#7759b/;"	v
g:terminal_color_0	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_0 = '#1e2132'$/;"	v
g:terminal_color_0	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_0 = '#dcdfe7'$/;"	v
g:terminal_color_1	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_1 = '#cc517a'$/;"	v
g:terminal_color_1	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_1 = '#e27878'$/;"	v
g:terminal_color_10	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_10 = '#598030'$/;"	v
g:terminal_color_10	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_10 = '#c0ca8e'$/;"	v
g:terminal_color_11	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_11 = '#b6662d'$/;"	v
g:terminal_color_11	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_11 = '#e9b189'$/;"	v
g:terminal_color_12	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_12 = '#22478e'$/;"	v
g:terminal_color_12	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_12 = '#91acd1'$/;"	v
g:terminal_color_13	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_13 = '#6845ad'$/;"	v
g:terminal_color_13	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_13 = '#ada0d3'$/;"	v
g:terminal_color_14	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_14 = '#327698'$/;"	v
g:terminal_color_14	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_14 = '#95c4ce'$/;"	v
g:terminal_color_15	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_15 = '#262a3f'$/;"	v
g:terminal_color_15	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_15 = '#d2d4de'$/;"	v
g:terminal_color_2	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_2 = '#668e3d'$/;"	v
g:terminal_color_2	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_2 = '#b4be82'$/;"	v
g:terminal_color_3	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_3 = '#c57339'$/;"	v
g:terminal_color_3	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_3 = '#e2a478'$/;"	v
g:terminal_color_4	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_4 = '#2d539e'$/;"	v
g:terminal_color_4	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_4 = '#84a0c6'$/;"	v
g:terminal_color_5	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_5 = '#7759b4'$/;"	v
g:terminal_color_5	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_5 = '#a093c7'$/;"	v
g:terminal_color_6	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_6 = '#3f83a6'$/;"	v
g:terminal_color_6	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_6 = '#89b8c2'$/;"	v
g:terminal_color_7	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_7 = '#33374c'$/;"	v
g:terminal_color_7	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_7 = '#c6c8d1'$/;"	v
g:terminal_color_8	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_8 = '#6b7089'$/;"	v
g:terminal_color_8	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_8 = '#8389a3'$/;"	v
g:terminal_color_9	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_9 = '#cc3768'$/;"	v
g:terminal_color_9	vim/.vim/plugged/iceberg.vim/colors/iceberg.vim	/^    let g:terminal_color_9 = '#e98989'$/;"	v
g:test_user_autocmd	vim/.vim/plugged/vim-rooter/test/test_rooter.vim	/^  let g:test_user_autocmd = 0$/;"	v
g:testname	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^let g:testname = expand('%')$/;"	v
g:testname	vim/.vim/plugged/vim-rooter/test/runner.vim	/^let g:testname = expand('%')$/;"	v
g:translator_default_engines	.config/nvim_copy/init.vim	/^let g:translator_default_engines = ['bing', 'google']$/;"	v
g:translator_default_engines	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^  let g:translator_default_engines = get(g:, 'translator_default_engines', ['bing', 'google', 'h/;"	v
g:translator_default_engines	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^  let g:translator_default_engines = get(g:, 'translator_default_engines', ['google'])$/;"	v
g:translator_default_engines	vim/.vimrc	/^let g:translator_default_engines = ['bing', 'google']$/;"	v
g:translator_history_enable	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^let g:translator_history_enable          = get(g:, 'translator_history_enable', v:false)$/;"	v
g:translator_proxy_url	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^let g:translator_proxy_url               = get(g:, 'translator_proxy_url', '')$/;"	v
g:translator_source_lang	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^let g:translator_source_lang             = get(g:, 'translator_source_lang', 'auto')$/;"	v
g:translator_status	vim/.vim/plugged/vim-translator/autoload/translator/job.vim	/^  let g:translator_status = ''$/;"	v
g:translator_status	vim/.vim/plugged/vim-translator/autoload/translator/job.vim	/^  let g:translator_status = 'translating'$/;"	v
g:translator_status	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^let g:translator_status = ''$/;"	v
g:translator_target_lang	.config/nvim_copy/init.vim	/^let g:translator_target_lang = 'en'$/;"	v
g:translator_target_lang	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^let g:translator_target_lang             = get(g:, 'translator_target_lang', 'zh')$/;"	v
g:translator_target_lang	vim/.vimrc	/^let g:translator_target_lang = 'en'$/;"	v
g:translator_translate_shell_options	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^let g:translator_translate_shell_options = get(g:, 'translator_translate_shell_options', [])$/;"	v
g:translator_window_borderchars	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^let g:translator_window_borderchars      = get(g:, 'translator_window_borderchars', ['─', '│/;"	v
g:translator_window_max_height	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^let g:translator_window_max_height       = get(g:, 'translator_window_max_height', 999)$/;"	v
g:translator_window_max_width	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^let g:translator_window_max_width        = get(g:, 'translator_window_max_width', 999)$/;"	v
g:translator_window_type	vim/.vim/plugged/vim-translator/plugin/translator.vim	/^let g:translator_window_type             = get(g:, 'translator_window_type', 'popup')$/;"	v
g:twiggy_adapt_columns	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let g:twiggy_adapt_columns          = get(g:,'twiggy_adapt_columns',          0                 /;"	v
g:twiggy_close_on_fugitive_cmd	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let g:twiggy_close_on_fugitive_cmd  = get(g:,'twiggy_close_on_fugitive_cmd',  0                 /;"	v
g:twiggy_enable_quickhelp	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let g:twiggy_enable_quickhelp       = get(g:,'twiggy_enable_quickhelp',       1                 /;"	v
g:twiggy_enable_remote_delete	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let g:twiggy_enable_remote_delete   = get(g:,'twiggy_enable_remote_delete',   0                 /;"	v
g:twiggy_git_log_command	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^      let g:twiggy_git_log_command  = 'GV'$/;"	v
g:twiggy_git_log_command	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^      let g:twiggy_git_log_command = 'Gitv'$/;"	v
g:twiggy_git_log_command	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let g:twiggy_git_log_command        = get(g:,'twiggy_git_log_command',        ''                /;"	v
g:twiggy_group_locals_by_slash	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^      let g:twiggy_group_locals_by_slash = g:twiggy_group_locals_by_slash ? 0 : 1$/;"	v
g:twiggy_group_locals_by_slash	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let g:twiggy_group_locals_by_slash  = get(g:,'twiggy_group_locals_by_slash',  1                 /;"	v
g:twiggy_group_remotes_by_slash	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^      let g:twiggy_group_remotes_by_slash = g:twiggy_group_remotes_by_slash ? 0 : 1$/;"	v
g:twiggy_group_remotes_by_slash	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let g:twiggy_group_remotes_by_slash = get(g:,'twiggy_group_remotes_by_slash', 0                 /;"	v
g:twiggy_local_branch_sort	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let g:twiggy_local_branch_sort      = get(g:,'twiggy_local_branch_sort',      'alpha'           /;"	v
g:twiggy_local_branch_sorts	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let g:twiggy_local_branch_sorts     = get(g:,'twiggy_local_branch_sorts',     ['alpha', 'date', /;"	v
g:twiggy_num_columns	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let g:twiggy_num_columns            = get(g:,'twiggy_num_columns',            31                /;"	v
g:twiggy_num_rows	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let g:twiggy_num_rows               = get(g:,'twiggy_num_rows',               31                /;"	v
g:twiggy_prompted_force_push	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let g:twiggy_prompted_force_push    = get(g:,'twiggy_prompted_force_push',    1                 /;"	v
g:twiggy_refresh_buffers	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let g:twiggy_refresh_buffers        = get(g:,'twiggy_refresh_buffers',        1                 /;"	v
g:twiggy_remote_branch_sort	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let g:twiggy_remote_branch_sort     = get(g:,'twiggy_remote_branch_sort',     'alpha'           /;"	v
g:twiggy_remote_branch_sorts	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let g:twiggy_remote_branch_sorts    = get(g:,'twiggy_remote_branch_sorts',    ['alpha', 'date'] /;"	v
g:twiggy_set_upstream	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let g:twiggy_set_upstream           = get(g:,'twiggy_set_upstream',           1                 /;"	v
g:twiggy_show_full_ui	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let g:twiggy_show_full_ui           = get(g:,'twiggy_show_full_ui',           g:twiggy_enable_qu/;"	v
g:twiggy_split_direction	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let g:twiggy_split_direction        = get(g:,'twiggy_split_direction',        'vertical'        /;"	v
g:twiggy_split_position	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let g:twiggy_split_position         = get(g:,'twiggy_split_position',         ''                /;"	v
g:twiggy_use_dispatch	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let g:twiggy_use_dispatch           = get(g:,'twiggy_use_dispatch',           exists('g:loaded_d/;"	v
g:typescript_compiler_binary	vim/.vim/plugged/typescript-vim/compiler/typescript.vim	/^  let g:typescript_compiler_binary = "tsc"$/;"	v
g:typescript_compiler_options	vim/.vim/plugged/typescript-vim/compiler/typescript.vim	/^  let g:typescript_compiler_options = ""$/;"	v
g:virtual_scriptnames	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^    let g:virtual_scriptnames = {}$/;"	v
g:virtual_scriptnames	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^  let g:virtual_scriptnames[temp] = amatch$/;"	v
gB	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
gC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
gD	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
gG	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
gH	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
gL	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^    nnoremap <buffer> gL :exec ':' . g:twiggy_git_log_command . ' ' . <SID>branch_under_cursor()/;"	m
gN	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
gQ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
gV	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
gW	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
gX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
gY	vim/.vim/plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	f
gZ	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
gae	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
games	.config/openbox/menu.xml	/^<menu id="games" label="games">$/;"	i
gb	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^    nnoremap <silent> <buffer> gb :GBrowse<cr>$/;"	m
gb	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <silent> <buffer> gb   :call <sid>gbrowse()<cr>$/;"	m
gc	vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^  nmap gc  <Plug>Commentary$/;"	m
gc	vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^  omap gc  <Plug>Commentary$/;"	m
gc	vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^  xmap gc  <Plug>Commentary$/;"	m
gcc	vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^  nmap gcc <Plug>CommentaryLine$/;"	m
gcu	vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^  nmap gcu <Plug>Commentary<Plug>Commentary$/;"	m
gd	.config/nvim_copy/init.vim	/^nmap <silent> gd <Plug>(coc-definition)$/;"	m
gd	vim/.vimrc	/^nmap <silent> gd <Plug>(coc-definition)$/;"	m
gee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
gen	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^  def gen( column ):$/;"	f	function:LocationsOfEnclosingTags_CursorInTagFull_test	file:
gen	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^  def gen( column ):$/;"	f	function:LocationsOfEnclosingTags_UnbalancedOpeningTagFull_test	file:
genericTemplateString	vim/.vim/plugged/vim-styled-components/examples/apis.js	/^const genericTemplateString = `$/;"	C
gensync	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "gensync": "^1.0.0-beta.2",$/;"	s	object:dependencies.@babel/core.requires
gensync	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "gensync": {$/;"	o	object:dependencies
get-caller-file	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "get-caller-file": "^2.0.1",$/;"	s	object:dependencies.yargs.requires
get-caller-file	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "get-caller-file": {$/;"	o	object:dependencies
get-intrinsic	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "get-intrinsic": "^1.0.2"$/;"	s	object:dependencies.call-bind.requires
get-intrinsic	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "get-intrinsic": "^1.0.2",$/;"	s	object:dependencies.side-channel.requires
get-intrinsic	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "get-intrinsic": "^1.1.0",$/;"	s	object:dependencies.internal-slot.requires
get-intrinsic	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "get-intrinsic": "^1.1.1",$/;"	s	object:dependencies.es-abstract.requires
get-intrinsic	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "get-intrinsic": {$/;"	o	object:dependencies
get-package-type	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "get-package-type": "^0.1.0",$/;"	s	object:dependencies.@istanbuljs/load-nyc-config.requires
get-package-type	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "get-package-type": {$/;"	o	object:dependencies
get-stream	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "get-stream": "^5.0.0",$/;"	s	object:dependencies.jest-changed-files.dependencies.execa.requires
get-stream	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "get-stream": "^4.0.0",$/;"	s	object:dependencies.execa.requires
get-stream	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "get-stream": {$/;"	o	object:dependencies.jest-changed-files.dependencies
get-stream	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "get-stream": {$/;"	o	object:dependencies
get-value	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "get-value": "^2.0.3",$/;"	s	object:dependencies.unset-value.dependencies.has-value.requires
get-value	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "get-value": "^2.0.6",$/;"	s	object:dependencies.cache-base.requires
get-value	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "get-value": "^2.0.6",$/;"	s	object:dependencies.has-value.requires
get-value	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "get-value": "^2.0.6",$/;"	s	object:dependencies.union-value.requires
get-value	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "get-value": {$/;"	o	object:dependencies
getBytes	vim/.vim/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) getBytes() []byte {$/;"	f	struct:tui.LightRenderer	typeref:typename:[]byte
getBytesInternal	vim/.vim/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) getBytesInternal(buffer []byte, nonblock bool) []byte {$/;"	f	struct:tui.LightRenderer	typeref:typename:[]byte
getEnv	vim/.vim/plugged/fzf/src/tui/light.go	/^func getEnv(name string, defaultValue int) int {$/;"	f	package:tui	typeref:typename:int
getLineOffsets	vim/.vim/plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	m	class:r
getLineOffsets	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	m	class:r
getPadding	vim/.vim/plugged/vim-styled-components/examples/issue-33.js	/^function getPadding() {$/;"	f
getRegex	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	p	class:Zse.t
getText	vim/.vim/plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	m	class:r
getText	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	m	class:r
getTextEditChange	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
get_alternative	vim/.vim/plugged/vim-translator/script/translator.py	/^    def get_alternative(self, resp):$/;"	m	class:GoogleTranslator
get_detail	vim/.vim/plugged/vim-translator/script/translator.py	/^    def get_detail(self, resp):$/;"	m	class:GoogleTranslator
get_dictionary	vim/.vim/plugged/vim-translator/script/translator.py	/^    def get_dictionary(self, sl, tl, text):$/;"	m	class:SdcvShell
get_dir	vim/.vim/plugged/editorconfig-vim/tests/core/editorconfig	/^function get_dir()$/;"	f
get_explains	vim/.vim/plugged/vim-translator/script/translator.py	/^    def get_explains(self, html):$/;"	m	class:BingDict
get_explains	vim/.vim/plugged/vim-translator/script/translator.py	/^    def get_explains(self, html):$/;"	m	class:HaiciDict
get_explains	vim/.vim/plugged/vim-translator/script/translator.py	/^    def get_explains(self, obj):$/;"	m	class:BaicizhanTranslator
get_explains	vim/.vim/plugged/vim-translator/script/translator.py	/^    def get_explains(self, obj):$/;"	m	class:GoogleTranslator
get_explains	vim/.vim/plugged/vim-translator/script/translator.py	/^    def get_explains(self, obj):$/;"	m	class:ICibaTranslator
get_explains	vim/.vim/plugged/vim-translator/script/translator.py	/^    def get_explains(self, obj):$/;"	m	class:YoudaoTranslator
get_file_content	vim/.vim/plugged/vim-multiple-cursors/spec/benchmark_spec.rb	/^def get_file_content()$/;"	f
get_file_content	vim/.vim/plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def get_file_content()$/;"	f
get_paraphrase	vim/.vim/plugged/vim-translator/script/translator.py	/^    def get_paraphrase(self, obj):$/;"	m	class:GoogleTranslator
get_paraphrase	vim/.vim/plugged/vim-translator/script/translator.py	/^    def get_paraphrase(self, obj):$/;"	m	class:ICibaTranslator
get_paraphrase	vim/.vim/plugged/vim-translator/script/translator.py	/^    def get_paraphrase(self, obj):$/;"	m	class:YoudaoTranslator
get_phonetic	vim/.vim/plugged/vim-translator/script/translator.py	/^    def get_phonetic(self, html):$/;"	m	class:BingDict
get_phonetic	vim/.vim/plugged/vim-translator/script/translator.py	/^    def get_phonetic(self, html):$/;"	m	class:HaiciDict
get_phonetic	vim/.vim/plugged/vim-translator/script/translator.py	/^    def get_phonetic(self, obj):$/;"	m	class:BaicizhanTranslator
get_phonetic	vim/.vim/plugged/vim-translator/script/translator.py	/^    def get_phonetic(self, obj):$/;"	m	class:GoogleTranslator
get_phonetic	vim/.vim/plugged/vim-translator/script/translator.py	/^    def get_phonetic(self, obj):$/;"	m	class:ICibaTranslator
get_url	vim/.vim/plugged/vim-translator/script/translator.py	/^    def get_url(self, sl, tl, qry):$/;"	m	class:GoogleTranslator
getch	vim/.vim/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) getch(nonblock bool) (int, bool) {$/;"	f	unknown:tui.LightRenderer	typeref:typename:(int, bool)
getch	vim/.vim/plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) getch(nonblock bool) (int, bool) {$/;"	f	unknown:tui.LightRenderer	typeref:typename:(int, bool)
gfe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
gg	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
gg	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^    nnoremap <buffer> <silent> gg    :normal! 2gg<CR>$/;"	m
gg	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^    nnoremap <buffer> <silent> gg    :normal! 4gg<CR>$/;"	m
gge	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
gh	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
gi	.config/nvim_copy/init.vim	/^nmap <silent> gi <Plug>(coc-implementation)$/;"	m
gi	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
gi	vim/.vimrc	/^nmap <silent> gi <Plug>(coc-implementation)$/;"	m
gie	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
gitgutter	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^augroup gitgutter$/;"	a
gitgutter#all	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#all(force) abort$/;"	f
gitgutter#async#available	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#available()$/;"	f
gitgutter#async#execute	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#execute(cmd, bufnr, handler) abort$/;"	f
gitgutter#buffer_disable	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#buffer_disable() abort$/;"	f
gitgutter#buffer_enable	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#buffer_enable() abort$/;"	f
gitgutter#buffer_toggle	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#buffer_toggle() abort$/;"	f
gitgutter#debug#debug	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#debug()$/;"	f
gitgutter#debug#log	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#log(message, ...) abort$/;"	f
gitgutter#diff#handler	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#handler(bufnr, diff) abort$/;"	f
gitgutter#diff#hunk_diff	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#hunk_diff(bufnr, full_diff, ...)$/;"	f
gitgutter#diff#parse_diff	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_diff(diff) abort$/;"	f
gitgutter#diff#parse_hunk	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_hunk(line) abort$/;"	f
gitgutter#diff#process_hunks	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_hunks(bufnr, hunks) abort$/;"	f
gitgutter#diff#run_diff	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#run_diff(bufnr, from, preserve_full_diff) abort$/;"	f
gitgutter#diff_highlight#common_prefix	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^  function! gitgutter#diff_highlight#common_prefix(a, b)$/;"	f
gitgutter#diff_highlight#common_suffix	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^  function! gitgutter#diff_highlight#common_suffix(a, b, start)$/;"	f
gitgutter#diff_highlight#lcs	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^  function! gitgutter#diff_highlight#lcs(s1, s2)$/;"	f
gitgutter#diff_highlight#process	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! gitgutter#diff_highlight#process(hunk_body)$/;"	f
gitgutter#diff_highlight#split	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^  function! gitgutter#diff_highlight#split(str, delimiter)$/;"	f
gitgutter#disable	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#disable() abort$/;"	f
gitgutter#enable	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#enable() abort$/;"	f
gitgutter#fold#disable	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#disable()$/;"	f
gitgutter#fold#enable	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#enable()$/;"	f
gitgutter#fold#foldtext	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#foldtext()$/;"	f
gitgutter#fold#is_changed	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#is_changed()$/;"	f
gitgutter#fold#level	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#level(lnum)$/;"	f
gitgutter#fold#toggle	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#toggle()$/;"	f
gitgutter#highlight#define_highlights	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_highlights() abort$/;"	f
gitgutter#highlight#define_sign_text_highlights	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_text_highlights() abort$/;"	f
gitgutter#highlight#define_signs	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_signs() abort$/;"	f
gitgutter#highlight#line_disable	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_disable() abort$/;"	f
gitgutter#highlight#line_enable	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_enable() abort$/;"	f
gitgutter#highlight#line_toggle	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_toggle() abort$/;"	f
gitgutter#highlight#linenr_disable	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#linenr_disable() abort$/;"	f
gitgutter#highlight#linenr_enable	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#linenr_enable() abort$/;"	f
gitgutter#highlight#linenr_toggle	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#linenr_toggle() abort$/;"	f
gitgutter#hunk#close_hunk_preview_window	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#close_hunk_preview_window()$/;"	f
gitgutter#hunk#cursor_in_hunk	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#cursor_in_hunk(hunk) abort$/;"	f
gitgutter#hunk#fix_file_references	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^  function! gitgutter#hunk#fix_file_references(filepath, hunk_diff)$/;"	f
gitgutter#hunk#hunks	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#hunks(bufnr) abort$/;"	f
gitgutter#hunk#in_hunk	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#in_hunk(lnum)$/;"	f
gitgutter#hunk#increment_lines_added	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_added(bufnr, count) abort$/;"	f
gitgutter#hunk#increment_lines_modified	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_modified(bufnr, count) abort$/;"	f
gitgutter#hunk#increment_lines_removed	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_removed(bufnr, count) abort$/;"	f
gitgutter#hunk#is_preview_window_open	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function gitgutter#hunk#is_preview_window_open()$/;"	f
gitgutter#hunk#next_hunk	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#next_hunk(count) abort$/;"	f
gitgutter#hunk#prev_hunk	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#prev_hunk(count) abort$/;"	f
gitgutter#hunk#preview	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#preview() abort$/;"	f
gitgutter#hunk#reset	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#reset(bufnr) abort$/;"	f
gitgutter#hunk#set_hunks	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#set_hunks(bufnr, hunks) abort$/;"	f
gitgutter#hunk#stage	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#stage(...) abort$/;"	f
gitgutter#hunk#summary	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#summary(bufnr) abort$/;"	f
gitgutter#hunk#text_object	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#text_object(inner) abort$/;"	f
gitgutter#hunk#undo	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#undo() abort$/;"	f
gitgutter#process_buffer	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#process_buffer(bufnr, force) abort$/;"	f
gitgutter#quickfix	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#quickfix(current_file)$/;"	f
gitgutter#setup_maps	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#setup_maps()$/;"	f
gitgutter#sign#clear_signs	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#clear_signs(bufnr) abort$/;"	f
gitgutter#sign#disable	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#disable() abort$/;"	f
gitgutter#sign#enable	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#enable() abort$/;"	f
gitgutter#sign#reset	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#reset()$/;"	f
gitgutter#sign#toggle	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#toggle() abort$/;"	f
gitgutter#sign#update_signs	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#update_signs(bufnr, modified_lines) abort$/;"	f
gitgutter#toggle	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#toggle() abort$/;"	f
gitgutter#utility#cd_cmd	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#cd_cmd(bufnr, cmd) abort$/;"	f
gitgutter#utility#extension	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#extension(bufnr) abort$/;"	f
gitgutter#utility#file	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#file(bufnr)$/;"	f
gitgutter#utility#get_diff_base	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#get_diff_base(bufnr)$/;"	f
gitgutter#utility#getbufvar	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#getbufvar(buffer, varname, ...)$/;"	f
gitgutter#utility#has_repo_path	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#has_repo_path(bufnr)$/;"	f
gitgutter#utility#is_active	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#is_active(bufnr) abort$/;"	f
gitgutter#utility#repo_path	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#repo_path(bufnr, shellesc) abort$/;"	f
gitgutter#utility#set_repo_path	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#set_repo_path(bufnr, continuation) abort$/;"	f
gitgutter#utility#setbufvar	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#setbufvar(buffer, varname, val)$/;"	f
gitgutter#utility#shellescape	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#shellescape(arg) abort$/;"	f
gitgutter#utility#supports_overscore_sign	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#supports_overscore_sign()$/;"	f
gitgutter#utility#system	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#system(cmd, ...) abort$/;"	f
gitgutter#utility#warn	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn(message) abort$/;"	f
gitgutter#utility#warn_once	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn_once(bufnr, message, key) abort$/;"	f
gitgutter#utility#windows	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#windows()$/;"	f
gitgutter_hunk_preview	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^  augroup gitgutter_hunk_preview$/;"	a
give	vim/.vim/plugged/fzf/src/terminal_test.go	/^	give$/;"	M	struct:fzf.testCase	typeref:typename:give
give	vim/.vim/plugged/fzf/src/terminal_test.go	/^type give struct {$/;"	s	package:fzf
gj	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
gl	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^    nnoremap <buffer> gl :exec ':' . g:twiggy_git_log_command . ' ' . <SID>branch_under_cursor()/;"	m
glob	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "glob": "^7.1.1",$/;"	s	object:dependencies.jest-config.requires
glob	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "glob": "^7.1.2",$/;"	s	object:dependencies.@jest/reporters.requires
glob	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "glob": "^7.1.3"$/;"	s	object:dependencies.rimraf.requires
glob	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "glob": "^7.1.3",$/;"	s	object:dependencies.jest-runtime.requires
glob	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "glob": "^7.1.4",$/;"	s	object:dependencies.test-exclude.requires
glob	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "glob": {$/;"	o	object:dependencies
glob-parent	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "glob-parent": "^5.0.0",$/;"	s	object:dependencies.eslint.requires
glob-parent	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "glob-parent": "^5.1.0",$/;"	s	object:dependencies.fast-glob.requires
glob-parent	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "glob-parent": "~5.1.0",$/;"	s	object:dependencies.chokidar.requires
glob-parent	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "glob-parent": {$/;"	o	object:dependencies
glob_rules	vim/.vim/plugged/far.vim/rplugin/python3/far/sources/far_glob.py	/^def glob_rules(root, rules):$/;"	f
globals	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "globals": "^11.1.0"$/;"	s	object:dependencies.@babel/traverse.requires
globals	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "globals": "^12.1.0",$/;"	s	object:dependencies.@eslint/eslintrc.requires
globals	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "globals": "^12.1.0",$/;"	s	object:dependencies.eslint.requires
globals	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "globals": {$/;"	o	object:dependencies.@babel/traverse.dependencies
globals	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "globals": {$/;"	o	object:dependencies
globby	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "globby": "^11.0.1",$/;"	s	object:dependencies.@typescript-eslint/typescript-estree.requires
globby	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "globby": {$/;"	o	object:dependencies
gm	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
gme	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	f
go	vim/.vim/plugged/fzf/test/test_go.rb	/^  def go(args)$/;"	f	class:Tmux
goe	vim/.vim/plugged/coc.nvim/build/index.js	/^]`).replace("lheading",he.lheading).replace("blockquote"," {0,3}>").replace("|fences","").replac/;"	f
good	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        "good": {$/;"	o	object:apt
good	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        "good": {$/;"	o	object:dnf
good	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        "good": {$/;"	o	object:pacman
gp	vim/.vim/plugged/coc.nvim/build/index.js	/^`),s=n.length-(t.end.line-t.start.line+1);if(this.line=this.line+s,t.end.line==this.line){let o=/;"	v
gq	vim/.vim/plugged/coc.nvim/build/index.js	/^`}strong(e){return"<strong>"+e+"<\/strong>"}em(e){return"<em>"+e+"<\/em>"}codespan(e){return"<co/;"	v
gq	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <buffer> gq :tabclose<cr>$/;"	m
gq	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <silent> <buffer> <nowait> gq :$wincmd w <bar> close<cr>$/;"	m
gr	.config/nvim_copy/init.vim	/^nmap <silent> gr <Plug>(coc-references)$/;"	m
gr	vim/.vimrc	/^nmap <silent> gr <Plug>(coc-references)$/;"	m
graceful-fs	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "graceful-fs": "^4.1.6"$/;"	s	object:dependencies.streamroller.dependencies.jsonfile.requires
graceful-fs	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "graceful-fs": "^4.2.0",$/;"	s	object:dependencies.streamroller.dependencies.fs-extra.requires
graceful-fs	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
graceful-fs	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.1.6",$/;"	s	object:dependencies.jsonfile.requires
graceful-fs	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.0",$/;"	s	object:dependencies.fs-extra.requires
graceful-fs	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4"$/;"	s	object:dependencies.jest-serializer.requires
graceful-fs	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.@jest/core.requires
graceful-fs	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.@jest/reporters.requires
graceful-fs	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.@jest/source-map.requires
graceful-fs	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.@jest/test-sequencer.requires
graceful-fs	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.@jest/transform.requires
graceful-fs	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.babel-jest.requires
graceful-fs	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.jest-config.requires
graceful-fs	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.jest-haste-map.requires
graceful-fs	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.jest-message-util.requires
graceful-fs	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.jest-resolve.requires
graceful-fs	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.jest-runner.requires
graceful-fs	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.jest-runtime.requires
graceful-fs	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.jest-snapshot.requires
graceful-fs	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "graceful-fs": "^4.2.4",$/;"	s	object:dependencies.jest-util.requires
graceful-fs	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "graceful-fs": {$/;"	o	object:dependencies
graphics	.config/openbox/menu.xml	/^<menu id="graphics" label="graphics">$/;"	i
graphql#has_syntax_group	vim/.vim/plugged/vim-graphql/autoload/graphql.vim	/^function! graphql#has_syntax_group(group) abort$/;"	f
graphql#javascript_tags	vim/.vim/plugged/vim-graphql/autoload/graphql.vim	/^function! graphql#javascript_tags() abort$/;"	f
green	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
greenBright	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
growly	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "growly": "^1.3.0",$/;"	s	object:dependencies.node-notifier.requires
growly	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "growly": {$/;"	o	object:dependencies
gse	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
gu	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
guess	vim/.vim/plugged/far.vim/test/guess.py	/^    guess = int(raw_input('Take a guess: '))$/;"	v
guesses_made	vim/.vim/plugged/far.vim/test/guess.py	/^guesses_made = 0$/;"	v
gutentags#add_job	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#add_job(module, tags_file, data) abort$/;"	f
gutentags#build_default_job_options	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#build_default_job_options(module) abort$/;"	f
gutentags#chdir	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#chdir(path)$/;"	f
gutentags#cscope#generate	vim/.vim/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#cscope#init	vim/.vim/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#init(project_root) abort$/;"	f
gutentags#cscope#on_job_exit	vim/.vim/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#ctags#generate	vim/.vim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#ctags#init	vim/.vim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#init(project_root) abort$/;"	f
gutentags#ctags#on_job_exit	vim/.vim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#on_job_exit(job, exit_val) abort$/;"	f
gutentags#default_get_project_root	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_get_project_root(path) abort$/;"	f
gutentags#default_stderr_cb	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_stderr_cb(chan, msg) abort$/;"	f
gutentags#default_stdout_cb	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_stdout_cb(chan, msg) abort$/;"	f
gutentags#error	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#error(message)$/;"	f
gutentags#fake	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#fake(...)$/;"	f
gutentags#find_job_index_by_data	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_data(module, data) abort$/;"	f
gutentags#find_job_index_by_tags_file	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_tags_file(module, tags_file) abort$/;"	f
gutentags#get_cachefile	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_cachefile(root_dir, filename) abort$/;"	f
gutentags#get_job_data	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_data(module, job_idx) abort$/;"	f
gutentags#get_job_tags_file	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_tags_file(module, job_idx) abort$/;"	f
gutentags#get_plat_file	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_plat_file(filename) abort$/;"	f
gutentags#get_project_file_list_cmd	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_file_list_cmd(path) abort$/;"	f
gutentags#get_project_info	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_info(path) abort$/;"	f
gutentags#get_project_root	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_root(path) abort$/;"	f
gutentags#get_res_file	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_res_file(filename) abort$/;"	f
gutentags#gtags_cscope#generate	vim/.vim/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#gtags_cscope#init	vim/.vim/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#init(project_root) abort$/;"	f
gutentags#gtags_cscope#on_job_exit	vim/.vim/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#inprogress	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#inprogress()$/;"	f
gutentags#is_path_rooted	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#is_path_rooted(path) abort$/;"	f
gutentags#make_args	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#make_args(cmd) abort$/;"	f
gutentags#normalizepath	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#normalizepath(path)$/;"	f
gutentags#on_vim_leave_pre	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#on_vim_leave_pre() abort$/;"	f
gutentags#remove_job	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job(module, job_idx) abort$/;"	f
gutentags#remove_job_by_data	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job_by_data(module, data) abort$/;"	f
gutentags#rescan	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#rescan(...)$/;"	f
gutentags#setup_gutentags	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#setup_gutentags() abort$/;"	f
gutentags#shellslash	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#shellslash(path)$/;"	f
gutentags#start_job	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#start_job(cmd, opts) abort$/;"	f
gutentags#statusline	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline(...) abort$/;"	f
gutentags#statusline_cb	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline_cb(fmt_cb, ...) abort$/;"	f
gutentags#stripslash	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#stripslash(path)$/;"	f
gutentags#throw	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#throw(message)$/;"	f
gutentags#toggletrace	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#toggletrace(...)$/;"	f
gutentags#trace	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#trace(message, ...)$/;"	f
gutentags#validate_cmd	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#validate_cmd(cmd) abort$/;"	f
gutentags#warning	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#warning(message)$/;"	f
gutentags_detect	vim/.vim/plugged/vim-gutentags/plugin/gutentags.vim	/^augroup gutentags_detect$/;"	a
gv	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
gv#sha	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! gv#sha(...)$/;"	f
gv#shellwords	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! gv#shellwords(arg)$/;"	f
gv.vim	vim/.vim/plugged/gv.vim/README.md	/^gv.vim$/;"	c
gw	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
gx	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
gy	.config/nvim_copy/init.vim	/^nmap <silent> gy <Plug>(coc-type-definition)$/;"	m
gy	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
gy	vim/.vimrc	/^nmap <silent> gy <Plug>(coc-type-definition)$/;"	m
h	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
h	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
h	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
h	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}function h(y,S){var w=[],_=0;if(!Array.isArray(y)&&typeof y=="object"){var L=Object.keys(y)[0/;"	f	function:AnonymousFunction272f78ae1fa00
h	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:$d
h	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
h$	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
h0	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
h5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
h6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
h6e	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
h7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
h8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
h9	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
hA	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
hB	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
hBe	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
hC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
hD	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
hF	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}catch(t){uc.error("Send error:",e)}}redraw(e=!1){this.send(["redraw",e?"force":""])}command(e/;"	v
hG	vim/.vim/plugged/coc.nvim/build/index.js	/^`),s=n.length-(t.end.line-t.start.line+1);if(this.line=this.line+s,t.end.line==this.line){let o=/;"	f
hMe	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
hN	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
hO	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
hQ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
hR	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
hV	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
hW	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
hY	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
ha	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
hae	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
has	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "has": "^1.0.3"$/;"	s	object:dependencies.is-core-module.requires
has	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "has": "^1.0.3",$/;"	s	object:dependencies.es-abstract.requires
has	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "has": "^1.0.3",$/;"	s	object:dependencies.get-intrinsic.requires
has	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "has": "^1.0.3",$/;"	s	object:dependencies.internal-slot.requires
has	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "has": {$/;"	o	object:dependencies
has-bigints	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "has-bigints": "^1.0.1",$/;"	s	object:dependencies.unbox-primitive.requires
has-bigints	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "has-bigints": {$/;"	o	object:dependencies
has-flag	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "has-flag": "^3.0.0"$/;"	s	object:dependencies.@babel/highlight.dependencies.supports-color.requires
has-flag	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "has-flag": "^3.0.0"$/;"	s	object:dependencies.cli-table.dependencies.supports-color.requires
has-flag	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "has-flag": "^4.0.0"$/;"	s	object:dependencies.supports-color.requires
has-flag	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "has-flag": "^4.0.0",$/;"	s	object:dependencies.supports-hyperlinks.requires
has-flag	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "has-flag": {$/;"	o	object:dependencies.@babel/highlight.dependencies
has-flag	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "has-flag": {$/;"	o	object:dependencies.cli-table.dependencies
has-flag	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "has-flag": {$/;"	o	object:dependencies
has-symbols	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "has-symbols": "^1.0.1"$/;"	s	object:dependencies.get-intrinsic.requires
has-symbols	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "has-symbols": "^1.0.1",$/;"	s	object:dependencies.object.assign.requires
has-symbols	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "has-symbols": "^1.0.1",$/;"	s	object:dependencies.string.prototype.matchall.requires
has-symbols	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "has-symbols": "^1.0.2"$/;"	s	object:dependencies.is-regex.requires
has-symbols	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "has-symbols": "^1.0.2"$/;"	s	object:dependencies.is-symbol.requires
has-symbols	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "has-symbols": "^1.0.2",$/;"	s	object:dependencies.es-abstract.requires
has-symbols	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "has-symbols": "^1.0.2",$/;"	s	object:dependencies.unbox-primitive.requires
has-symbols	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "has-symbols": {$/;"	o	object:dependencies
has-value	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "has-value": "^0.3.1",$/;"	s	object:dependencies.unset-value.requires
has-value	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "has-value": "^1.0.0",$/;"	s	object:dependencies.cache-base.requires
has-value	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "has-value": {$/;"	o	object:dependencies.unset-value.dependencies
has-value	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "has-value": {$/;"	o	object:dependencies
has-values	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "has-values": "^0.1.4",$/;"	s	object:dependencies.unset-value.dependencies.has-value.requires
has-values	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "has-values": "^1.0.0",$/;"	s	object:dependencies.has-value.requires
has-values	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "has-values": {$/;"	o	object:dependencies.unset-value.dependencies
has-values	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "has-values": {$/;"	o	object:dependencies
hasPreviewAction	vim/.vim/plugged/fzf/src/terminal.go	/^func hasPreviewAction(opts *Options) bool {$/;"	f	package:fzf	typeref:typename:bool
hasPreviewFlags	vim/.vim/plugged/fzf/src/terminal.go	/^func hasPreviewFlags(template string) (slot bool, plus bool, query bool) {$/;"	f	package:fzf	typeref:typename:(slot bool, plus bool, query bool)
hasPreviewWindow	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) hasPreviewWindow() bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
hasPreviewer	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) hasPreviewer() bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
hash	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:jW.e
hc	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	v
hd	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
header	vim/.vim/plugged/fzf/src/terminal.go	/^	header       []string$/;"	m	struct:fzf.Terminal	typeref:typename:[]string
header0	vim/.vim/plugged/fzf/src/terminal.go	/^	header0      []string$/;"	m	struct:fzf.Terminal	typeref:typename:[]string
headerFirst	vim/.vim/plugged/fzf/src/terminal.go	/^	headerFirst  bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
headerLines	vim/.vim/plugged/fzf/src/options.go	/^	headerLines int$/;"	m	struct:fzf.previewOpts	typeref:typename:int
headerLines	vim/.vim/plugged/fzf/src/terminal.go	/^	headerLines  int$/;"	m	struct:fzf.Terminal	typeref:typename:int
headers	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:$T.c
headers	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:AnonymousFunction272f78ae2c000.o
health#coc#check	vim/.vim/plugged/coc.nvim/autoload/health/coc.vim	/^function! health#coc#check() abort$/;"	f
health#translator#check	vim/.vim/plugged/vim-translator/autoload/health/translator.vim	/^function! health#translator#check() abort$/;"	f
hee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
height	vim/.vim/plugged/fzf/src/tui/light.go	/^	height        int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
height	vim/.vim/plugged/fzf/src/tui/light.go	/^	height   int$/;"	m	struct:tui.LightWindow	typeref:typename:int
height	vim/.vim/plugged/fzf/src/tui/tcell.go	/^	height      int$/;"	m	struct:tui.TcellWindow	typeref:typename:int
help	vim/.vim/plugged/fzf/bin/fzf-tmux	/^help() {$/;"	f
help	vim/.vim/plugged/fzf/install	/^help() {$/;"	f
help	vim/.vim/plugged/fzf/src/options.go	/^func help(code int) {$/;"	f	package:fzf
help	vim/.vim/plugged/fzf/uninstall	/^help() {$/;"	f
here	vim/.vim/plugged/editorconfig-vim/tests/core/editorconfig.bat	/^set here=%~dp0$/;"	v
hfe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
hg	vim/.vim/plugged/coc.nvim/build/index.js	/^`),o=i.line==r.start.line?i.character-r.start.character:i.character,a=A$(s,i.line-r.start.line,o/;"	v
hge	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
hh	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
hi	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
hidden	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.modifier
hidden	vim/.vim/plugged/fzf/src/options.go	/^	hidden      bool$/;"	m	struct:fzf.previewOpts	typeref:typename:bool
hie	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
highlight	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "highlight": {$/;"	o	object:definitions.float.properties
highlight	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "highlight": {},$/;"	o	object:properties.diagnostic.floatConfig.properties
highlight	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "highlight": {},$/;"	o	object:properties.hover.floatConfig.properties
highlight	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "highlight": {},$/;"	o	object:properties.signature.floatConfig.properties
highlight	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "highlight": {},$/;"	o	object:properties.suggest.floatConfig.properties
history	vim/.vim/plugged/fzf/src/terminal.go	/^	history      *History$/;"	m	struct:fzf.Terminal	typeref:typename:*History
hj	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
hje	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
hle	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
hm	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
hme	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
hn	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
hoe	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
horizontal	vim/.vim/plugged/fzf/src/tui/tui.go	/^	horizontal  rune$/;"	m	struct:tui.BorderStyle	typeref:typename:rune
host	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:eme.n
host	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "host": {$/;"	o	object:definitions.languageServerSocket.properties
hosted-git-info	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "hosted-git-info": "^2.1.4",$/;"	s	object:dependencies.normalize-package-data.requires
hosted-git-info	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "hosted-git-info": {$/;"	o	object:dependencies
hostname	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:$T.c
hostname	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:jW.e
hover.autoHide	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "hover.autoHide": {$/;"	o	object:properties
hover.floatConfig	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "hover.floatConfig": {$/;"	o	object:properties
hover.previewMaxHeight	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "hover.previewMaxHeight": {$/;"	o	object:properties
hover.target	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "hover.target": {$/;"	o	object:properties
hp	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let f of this._placeholders)if(f.index==o&&f.id<s&&f.line==e.range.start.line){let d=thi/;"	v
hr	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
href	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:jW.e
hs	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
hscroll	vim/.vim/plugged/fzf/src/terminal.go	/^	hscroll      bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
hscrollOff	vim/.vim/plugged/fzf/src/terminal.go	/^	hscrollOff   int$/;"	m	struct:fzf.Terminal	typeref:typename:int
ht	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
html-encoding-sniffer	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "html-encoding-sniffer": "^2.0.1",$/;"	s	object:dependencies.jsdom.requires
html-encoding-sniffer	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "html-encoding-sniffer": {$/;"	o	object:dependencies
html-escaper	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "html-escaper": "^2.0.0",$/;"	s	object:dependencies.istanbul-reports.requires
html-escaper	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "html-escaper": {$/;"	o	object:dependencies
html_unescape	vim/.vim/plugged/vim-translator/script/translator.py	/^    def html_unescape(self, text):$/;"	m	class:BaseTranslator
http-proxy-agent	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "http-proxy-agent": "^4.0.1",$/;"	s	object:dependencies.jsdom.requires
http-proxy-agent	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "http-proxy-agent": {$/;"	o	object:dependencies
http.proxy	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "http.proxy": {$/;"	o	object:properties
http.proxyAuthorization	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "http.proxyAuthorization": {$/;"	o	object:properties
http.proxyCA	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "http.proxyCA": {$/;"	o	object:properties
http.proxyStrictSSL	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "http.proxyStrictSSL": {$/;"	o	object:properties
http_get	vim/.vim/plugged/vim-translator/script/translator.py	/^    def http_get(self, url, data=None, header=None):$/;"	m	class:BaseTranslator
http_post	vim/.vim/plugged/vim-translator/script/translator.py	/^    def http_post(self, url, data=None, header=None):$/;"	m	class:BaseTranslator
https-proxy-agent	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "https-proxy-agent": "^5.0.0",$/;"	s	object:dependencies.jsdom.requires
https-proxy-agent	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "https-proxy-agent": {$/;"	o	object:dependencies
human-signals	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "human-signals": "^1.1.1",$/;"	s	object:dependencies.jest-changed-files.dependencies.execa.requires
human-signals	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "human-signals": {$/;"	o	object:dependencies
hw	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
hx	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	v
hy	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
i	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f	function:W7
i	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f	function:eZ
i	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	c	class:AnonymousFunction272f78ae1e100
i	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
i	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	c	class:AnonymousFunction272f78ae1c500.AnonymousFunction272f78ae1c600
i	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunction272f78ae13000
i	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aef900
i	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aefc00
i	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:AnonymousFunction272f78ae0a00
i	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:X9
i	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:Y9
i	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunction272f78ae2b900
i	vim/.vim/plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	f	function:AnonymousFunction272f78ae12900
i	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:AnonymousFunction272f78ae21500
i	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:AnonymousFunction272f78ae7400
i	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:oee
i	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	c	class:q0
i	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:Oae
i	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:Rg
i	vim/.vim/plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	c	class:vY
i	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
i	vim/.vim/plugged/vim-css-color/tests/example.css	/^i { background: #359 }$/;"	s
i	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^      let i += 1$/;"	v
i	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^    let i = 0$/;"	v
i$	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
i0	vim/.vim/plugged/coc.nvim/build/index.js	/^`}strong(e){return"<strong>"+e+"<\/strong>"}em(e){return"<em>"+e+"<\/em>"}codespan(e){return"<co/;"	v
i2e	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
i5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
i6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
i9	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
iB	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
iC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
iD	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
iF	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
iG	vim/.vim/plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
iQ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
iR	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
iU	vim/.vim/plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
iV	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
iVe	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
i_	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
ia	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
iae	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}function iae(r,e,t){return p$(e,r)?{num:t+1,line:e.replace(d0,g$(t+1))}:{num:t,line:m$(g$(t))/;"	f
ic	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^    omap <buffer> ic <Plug>(GitGutterTextObjectInnerPending)$/;"	m
ic	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^    xmap <buffer> ic <Plug>(GitGutterTextObjectInnerVisual)$/;"	m
iceberg#palette#dark#create	vim/.vim/plugged/iceberg.vim/autoload/iceberg/palette/dark.vim	/^function! iceberg#palette#dark#create() abort$/;"	f
iceberg#palette#light#create	vim/.vim/plugged/iceberg.vim/autoload/iceberg/palette/light.vim	/^function! iceberg#palette#light#create() abort$/;"	f
iceberg-dark	vim/.vim/plugged/iceberg-dark/README.md	/^# iceberg-dark$/;"	c
icons	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^    "icons": [ "awesome-fonts" ],$/;"	a
iconv-lite	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "iconv-lite": "0.4.24"$/;"	s	object:dependencies.whatwg-encoding.requires
iconv-lite	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "iconv-lite": {$/;"	o	object:dependencies
id	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	p	class:Il.K.Yt
id	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	p	class:Il.ce.Yt
id	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	p	class:Il.z.Yt
idx	vim/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$idx = 0$/;"	v
ie	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
iee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
ieee754	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ieee754": "^1.1.8",$/;"	s	object:dependencies.msgpack-lite.requires
ieee754	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "ieee754": {$/;"	o	object:dependencies
ig	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
ige	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
ignore	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ignore": "^4.0.6",$/;"	s	object:dependencies.@eslint/eslintrc.requires
ignore	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ignore": "^4.0.6",$/;"	s	object:dependencies.eslint.requires
ignore	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ignore": "^5.1.4",$/;"	s	object:dependencies.globby.requires
ignore	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ignore": {$/;"	o	object:dependencies.@eslint/eslintrc.dependencies
ignore	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ignore": {$/;"	o	object:dependencies.eslint.dependencies
ignore	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "ignore": {$/;"	o	object:dependencies
ignore	vim/.vim/plugged/fzf/src/util/eventbox.go	/^	ignore map[EventType]bool$/;"	m	struct:util.EventBox	typeref:typename:map[EventType]bool
ignoredRootPaths	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "ignoredRootPaths": {$/;"	o	object:definitions.languageServerBase.properties
ignoredRootPaths	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "ignoredRootPaths": {},$/;"	o	object:definitions.languageServerCommand.properties
ignoredRootPaths	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "ignoredRootPaths": {},$/;"	o	object:definitions.languageServerModule.properties
ignoredRootPaths	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "ignoredRootPaths": {},$/;"	o	object:definitions.languageServerSocket.properties
ii	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
ij	vim/.vim/plugged/coc.nvim/build/index.js	/^`:"")}get lineCount(){return this.lines.length+(this.eol?1:0)}getText(e){if(e){let t=this.offset/;"	v
ik	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
ile	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
im	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
ime	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
import-fresh	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "import-fresh": "^3.0.0",$/;"	s	object:dependencies.eslint.requires
import-fresh	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "import-fresh": "^3.2.1",$/;"	s	object:dependencies.@eslint/eslintrc.requires
import-fresh	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "import-fresh": {$/;"	o	object:dependencies
import-local	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "import-local": "^3.0.2",$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
import-local	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "import-local": "^3.0.2",$/;"	s	object:dependencies.jest.requires
import-local	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "import-local": {$/;"	o	object:dependencies
imurmurhash	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "imurmurhash": "^0.1.4",$/;"	s	object:dependencies.eslint.requires
imurmurhash	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "imurmurhash": "^0.1.4",$/;"	s	object:dependencies.write-file-atomic.requires
imurmurhash	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "imurmurhash": {$/;"	o	object:dependencies
inBytes	vim/.vim/plugged/fzf/src/util/chars.go	/^	inBytes         bool$/;"	m	struct:util.Chars	typeref:typename:bool
inHandle	vim/.vim/plugged/fzf/src/tui/light.go	/^	inHandle        uintptr$/;"	m	struct:tui.LightRenderer	typeref:typename:uintptr
index	vim/.vim/plugged/fzf/src/matcher.go	/^	index   int$/;"	m	struct:fzf.partialResult	typeref:typename:int
indexAt	vim/.vim/plugged/fzf/src/algo/algo.go	/^func indexAt(index int, max int, forward bool) int {$/;"	f	package:algo	typeref:typename:int
inflight	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "inflight": "^1.0.4",$/;"	s	object:dependencies.glob.requires
inflight	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "inflight": {$/;"	o	object:dependencies
infoDefault	vim/.vim/plugged/fzf/src/options.go	/^	infoDefault infoStyle = iota$/;"	c	package:fzf	typeref:type:infoStyle
infoHidden	vim/.vim/plugged/fzf/src/options.go	/^	infoHidden$/;"	c	package:fzf
infoInline	vim/.vim/plugged/fzf/src/options.go	/^	infoInline$/;"	c	package:fzf
infoStyle	vim/.vim/plugged/fzf/src/options.go	/^type infoStyle int$/;"	t	package:fzf	typeref:typename:int
infoStyle	vim/.vim/plugged/fzf/src/terminal.go	/^	infoStyle    infoStyle$/;"	m	struct:fzf.Terminal	typeref:typename:infoStyle
inherits	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "inherits": "2",$/;"	s	object:dependencies.glob.requires
inherits	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "inherits": {$/;"	o	object:dependencies
ini	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ini": "~1.3.0",$/;"	s	object:dependencies.rc.requires
ini	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "ini": {$/;"	o	object:dependencies
init	vim/.vim/plugged/fzf/src/constants.go	/^func init() {$/;"	f	package:fzf
init	vim/.vim/plugged/fzf/src/options.go	/^func init() {$/;"	f	package:fzf
init	vim/.vim/plugged/fzf/src/pattern.go	/^func init() {$/;"	f	package:fzf
init	vim/.vim/plugged/fzf/src/pattern_test.go	/^func init() {$/;"	f	package:fzf
init	vim/.vim/plugged/fzf/src/terminal.go	/^func init() {$/;"	f	package:fzf
init	vim/.vim/plugged/fzf/src/tui/tui.go	/^func init() {$/;"	f	package:tui
initChanges	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
initDelay	vim/.vim/plugged/fzf/src/terminal.go	/^	initDelay    time.Duration$/;"	m	struct:fzf.Terminal	typeref:typename:time.Duration
initDocumentChanges	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
initFunc	vim/.vim/plugged/fzf/src/terminal.go	/^	initFunc     func()$/;"	m	struct:fzf.Terminal	typeref:typename:func()
initPalette	vim/.vim/plugged/fzf/src/tui/tui.go	/^func initPalette(theme *ColorTheme) {$/;"	f	package:tui
initPlatform	vim/.vim/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) initPlatform() error {$/;"	f	unknown:tui.LightRenderer	typeref:typename:error
initPlatform	vim/.vim/plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) initPlatform() error {$/;"	f	unknown:tui.LightRenderer	typeref:typename:error
initScreen	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (r *FullscreenRenderer) initScreen() {$/;"	f	unknown:tui.FullscreenRenderer
initTheme	vim/.vim/plugged/fzf/src/tui/tui.go	/^func initTheme(theme *ColorTheme, baseTheme *ColorTheme, forceBlack bool) {$/;"	f	package:tui
initialDelay	vim/.vim/plugged/fzf/src/constants.go	/^	initialDelay      = 20 * time.Millisecond$/;"	c	package:fzf
initialDelayTac	vim/.vim/plugged/fzf/src/constants.go	/^	initialDelayTac   = 100 * time.Millisecond$/;"	c	package:fzf
initializationOptions	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "initializationOptions": {$/;"	o	object:definitions.languageServerBase.properties
initializationOptions	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "initializationOptions": {},$/;"	o	object:definitions.languageServerCommand.properties
initializationOptions	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "initializationOptions": {},$/;"	o	object:definitions.languageServerModule.properties
initializationOptions	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "initializationOptions": {},$/;"	o	object:definitions.languageServerSocket.properties
initialize	vim/.vim/plugged/fzf/test/test_go.rb	/^  def initialize(shell = :bash)$/;"	f	class:Tmux
input	vim/.vim/plugged/fzf/src/terminal.go	/^	input        []rune$/;"	m	struct:fzf.Terminal	typeref:typename:[]rune
insert	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
install	vim/.vim/plugged/fzf/Makefile	/^install: bin\/fzf$/;"	t
int16	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
int32	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
int64	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
int64-buffer	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "int64-buffer": "^0.1.9",$/;"	s	object:dependencies.msgpack-lite.requires
int64-buffer	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "int64-buffer": {$/;"	o	object:dependencies
int8	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^              "integrity": "sha1-8GVWEJaj8dou9GJy+BXIQNh+DIk=",$/;"	s	object:dependencies.unset-value.dependencies.has-value.dependencies.isobject
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^              "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",$/;"	s	object:dependencies.has-values.dependencies.is-number.dependencies.kind-of
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^              "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",$/;"	s	object:dependencies.sane.dependencies.is-number.dependencies.kind-of
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^              "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",$/;"	s	object:dependencies.sane.dependencies.braces.dependencies.extend-shallow
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^              "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",$/;"	s	object:dependencies.sane.dependencies.fill-range.dependencies.extend-shallow
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-1USBHUKPmOsGpj3EAtJAPDKMOPc=",$/;"	s	object:dependencies.sane.dependencies.fill-range
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-2kL0l0DAtC2yypcoVxyxkMmO\/qM=",$/;"	s	object:dependencies.execa.dependencies.shebang-regex
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-GrKLVW4Zg2Oowab35vogE3\/mrtk=",$/;"	s	object:dependencies.sane.dependencies.normalize-path
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-IIE989cSkosgc3hpGkUGb65y3Vc=",$/;"	s	object:dependencies.has-values.dependencies.kind-of
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-IZMqVJ9eUv\/ZqCf1cOBL5iqX2lQ=",$/;"	s	object:dependencies.escodegen.dependencies.prelude-ls
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",$/;"	s	object:dependencies.has-values.dependencies.is-number
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=",$/;"	s	object:dependencies.sane.dependencies.is-number
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",$/;"	s	object:dependencies.is-accessor-descriptor.dependencies.kind-of
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",$/;"	s	object:dependencies.is-data-descriptor.dependencies.kind-of
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",$/;"	s	object:dependencies.object-copy.dependencies.kind-of
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",$/;"	s	object:dependencies.snapdragon-util.dependencies.kind-of
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=",$/;"	s	object:dependencies.to-object-path.dependencies.kind-of
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-OwmSTt+fCDwEkP3UwLxEIeBHZO4=",$/;"	s	object:dependencies.escodegen.dependencies.levn
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-PFMZQukIwml8DsNEhYwobHygpgo="$/;"	s	object:dependencies.rc.dependencies.strip-json-comments
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-QRyttXTFoUDTpLGRDUDYDMn0C0A=",$/;"	s	object:dependencies.execa.dependencies.path-key
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-QRyttXTFoUDTpLGRDUDYDMn0C0A=",$/;"	s	object:dependencies.npm-run-path.dependencies.path-key
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-RKrGW2lbAzmJaMOfNj\/uXer98eo=",$/;"	s	object:dependencies.execa.dependencies.shebang-command
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",$/;"	s	object:dependencies.expand-brackets.dependencies.extend-shallow
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",$/;"	s	object:dependencies.extglob.dependencies.extend-shallow
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",$/;"	s	object:dependencies.set-value.dependencies.extend-shallow
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=",$/;"	s	object:dependencies.snapdragon.dependencies.extend-shallow
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",$/;"	s	object:dependencies.expand-brackets.dependencies.ms
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=",$/;"	s	object:dependencies.snapdragon.dependencies.ms
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-WITKtRLPHTVeP7eE8wgEsrUg23I=",$/;"	s	object:dependencies.escodegen.dependencies.type-check
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-bWHeldkd\/Km5oCCJrThL\/49it3E=",$/;"	s	object:dependencies.unset-value.dependencies.has-values
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm\/sOY=",$/;"	s	object:dependencies.base.dependencies.define-property
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm\/sOY=",$/;"	s	object:dependencies.extglob.dependencies.define-property
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-dp66rz9KY6rTr56NMEybvnm\/sOY=",$/;"	s	object:dependencies.snapdragon-node.dependencies.define-property
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-ex9YutpiyoJ+wKIHgCVlSEWZXh8=",$/;"	s	object:dependencies.unset-value.dependencies.has-value
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-fIDBe53+vlmeJzZ+DU3VWQFB2zg=",$/;"	s	object:dependencies.sane.dependencies.to-regex-range
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-h3Gq4HmbZAdrdmQPygWPnBDjPss=",$/;"	s	object:dependencies.streamroller.dependencies.jsonfile
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w=",$/;"	s	object:dependencies.@babel/core.dependencies.source-map
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w=",$/;"	s	object:dependencies.@babel/generator.dependencies.source-map
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w=",$/;"	s	object:dependencies.snapdragon.dependencies.source-map
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU="$/;"	s	object:dependencies.cli-table.dependencies.color-name
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=",$/;"	s	object:dependencies.@babel/highlight.dependencies.color-name
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=",$/;"	s	object:dependencies.slice-ansi.dependencies.color-name
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0="$/;"	s	object:dependencies.cli-table.dependencies.has-flag
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-tdRU3CGZriJWmfNGfloH87lVuv0=",$/;"	s	object:dependencies.@babel/highlight.dependencies.has-flag
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",$/;"	s	object:dependencies.class-utils.dependencies.define-property
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",$/;"	s	object:dependencies.expand-brackets.dependencies.define-property
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",$/;"	s	object:dependencies.object-copy.dependencies.define-property
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",$/;"	s	object:dependencies.snapdragon.dependencies.define-property
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=",$/;"	s	object:dependencies.static-extend.dependencies.define-property
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-+IW9pACdk3XWmmTXG8m3upGUJst5XRGzxMRjXzAuJ1XnIFNvfhjjIuYkDvysnPQ7q/;"	s	object:dependencies.escodegen.dependencies.optionator
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX/;"	s	object:dependencies.node-notifier.dependencies.uuid
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-1apePfXM1UOSqw0o9IiFAovVz9M5S1Dg+4TrDwfMewQ6p\/rmMueb7tWZjQ1rx4Lo/;"	s	object:dependencies.table.dependencies.ansi-regex
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9/;"	s	object:dependencies.base.dependencies.is-descriptor
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9/;"	s	object:dependencies.define-property.dependencies.is-descriptor
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9/;"	s	object:dependencies.extglob.dependencies.is-descriptor
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9/;"	s	object:dependencies.snapdragon-node.dependencies.is-descriptor
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-5teOsQWABXHHBFP9y3skS5P3d\/WfWXpv3FUpy+LorMrNYaT9pI4oLMQX7jzQ2Kkl/;"	s	object:dependencies.sane.dependencies.anymatch
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-6J72N8UNa462wa\/KFODt\/PJ3IU60SDpC3QXC1Hjc1BXXpfL2C9R5+AU7jhe0F6G/;"	s	object:dependencies.eslint-utils.dependencies.eslint-visitor-keys
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-6J72N8UNa462wa\/KFODt\/PJ3IU60SDpC3QXC1Hjc1BXXpfL2C9R5+AU7jhe0F6G/;"	s	object:dependencies.espree.dependencies.eslint-visitor-keys
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-BxbNGGNm0RyRYvUdHpIwv9IWzeM9XClbOxwoATuFdOE7ZE6wHL+HQ5T8hoPM+zHvm/;"	s	object:dependencies.escodegen.dependencies.estraverse
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-BxbNGGNm0RyRYvUdHpIwv9IWzeM9XClbOxwoATuFdOE7ZE6wHL+HQ5T8hoPM+zHvm/;"	s	object:dependencies.esquery.dependencies.estraverse
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-BxbNGGNm0RyRYvUdHpIwv9IWzeM9XClbOxwoATuFdOE7ZE6wHL+HQ5T8hoPM+zHvm/;"	s	object:dependencies.esrecurse.dependencies.estraverse
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-CkCj6giN3S+n9qrYiBTX5gystlENnRW5jZeNLHpe6aue+SrHcG5VYwujhW9s4dY31/;"	s	object:dependencies.v8-to-istanbul.dependencies.source-map
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-CwBLREIQ7LvYFB0WyRvwhq5N5qPhc6PMjD6bYggFlI5YyDgl+0vxq5VHbMOFqLg7h/;"	s	object:dependencies.table.dependencies.emoji-regex
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-DuRs1gKbBqsMKIZlrffwlug8MHkcnpjs5VPmL1PAh+mA30U0DTotfDZ0d2UUsXpPm/;"	s	object:dependencies.table.dependencies.strip-ansi
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-FiNkvbeHzB\/syOjIUxFDCnhSfzAL8R5vs40MgLFBorXACCOAEaWu0gRZl14vG8MR/;"	s	object:dependencies.ts-jest.dependencies.yargs-parser
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-GF9noBSa9t08pSyl3CY4frMrqp+aQXFGFkf5hEPbh\/pIUFYWMK6ZLTfbmadxJVcJ/;"	s	object:dependencies.jest.dependencies.jest-cli
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112\/TZmHx/;"	s	object:dependencies.execa.dependencies.which
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-LFZ6WMB3iPezQAU9OnGoERzcIVKhcs0OLfD\/NHcqSj3g1wgxuLUL5kSlZbbjFySQ/;"	s	object:dependencies.vscode-languageserver.dependencies.vscode-languageserver-protocol
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-MWikgl9n9M3w+bpsY3He8L+w9eF9338xRl8IAO5viDizwSzziFEyUzo2xrrloB64A/;"	s	object:dependencies.sane.dependencies.micromatch
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-Mti+f9lpJNcwF4tWV8\/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+I/;"	s	object:dependencies.@babel/highlight.dependencies.chalk
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-Mti+f9lpJNcwF4tWV8\/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+I/;"	s	object:dependencies.cli-table.dependencies.chalk
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-NGEErnH6F2vUuXDh+OlbcKW7\/wOcfdRHaZ7VWtqCztfHri\/++YKmP51OdWeGPuq/;"	s	object:dependencies.is-descriptor.dependencies.kind-of
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-NKmAlESf6jMGym1++R0Ra7wvhV+wFW63FaSOFPwRahvea0gMUcGUhVeAg\/0BC0wi/;"	s	object:dependencies.unzip-stream.dependencies.mkdirp
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-PoeGJYh8HK4BTO\/a9Tf6ZG3veo\/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5/;"	s	object:dependencies.eslint-plugin-jsdoc.dependencies.semver
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G\/SHH/;"	s	object:dependencies.@babel/highlight.dependencies.color-convert
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G\/SHH/;"	s	object:dependencies.cli-table.dependencies.color-convert
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G\/SHH/;"	s	object:dependencies.slice-ansi.dependencies.color-convert
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZm/;"	s	object:dependencies.@babel/highlight.dependencies.supports-color
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZm/;"	s	object:dependencies.cli-table.dependencies.supports-color
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC\/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP/;"	s	object:dependencies.jest-changed-files.dependencies.npm-run-path
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW\/Vu0miy5YoWvbV345Hau/;"	s	object:dependencies.stack-utils.dependencies.escape-string-regexp
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-VGzh06oynbYa6JbTKUbxOEZN7CYEtWhN7DK5wfzUpeCJl8X8xZX39g2PVfpqXrIEd/;"	s	object:dependencies.vscode-languageserver.dependencies.vscode-languageserver-types
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm\/u+NqfsAxEpWO0Pf9sq8\/e94WxxOpPKx9FR1FlyC/;"	s	object:dependencies.@babel/highlight.dependencies.ansi-styles
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm\/u+NqfsAxEpWO0Pf9sq8\/e94WxxOpPKx9FR1FlyC/;"	s	object:dependencies.cli-table.dependencies.ansi-styles
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm\/u+NqfsAxEpWO0Pf9sq8\/e94WxxOpPKx9FR1FlyC/;"	s	object:dependencies.slice-ansi.dependencies.ansi-styles
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-VlZwKPCkYKxQgeSbH5EyngOmRp7Ww7I9rQLERETtf5ofd9pGeswWiOtogpEO850jz/;"	s	object:dependencies.domexception.dependencies.webidl-conversions
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-WOBp\/EEGUiIsJSp7wcv\/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCm/;"	s	object:dependencies.@babel/traverse.dependencies.globals
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-XCoy+WlUr7d1+Z8GgSuXmpuUFC9fOhRXglJMx+dwLKTkL44Cjd4W1Z5P+BQZpr+cR/;"	s	object:dependencies.jest-changed-files.dependencies.is-stream
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-Xni35NKzjgMrwevysHTCArtLDpPvye8zV\/0E4EyYn43P7\/7qvQwPh9BGkHewbMu/;"	s	object:dependencies.tsutils.dependencies.tslib
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-aNdbnj9P8PjdXU4ybaWLK2IF3jc\/EoDYbC7AazW6to3TRsfXxscC9UXOB5iDiEQr/;"	s	object:dependencies.sane.dependencies.braces
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul\/6WlbVge9bhM74OpNP/;"	s	object:dependencies.extend-shallow.dependencies.is-extendable
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul\/6WlbVge9bhM74OpNP/;"	s	object:dependencies.mixin-deep.dependencies.is-extendable
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-b0tGHbfegbhPJpxpiBPU2sCkigAqtM9O121le6bbOlgyV+NyGyCmVfJ6QW9eRjz8C/;"	s	object:dependencies.cssstyle.dependencies.cssom
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m\/NwnDocOVruQFS1\/veMgdzuPcnOM34M6Cwx/;"	s	object:dependencies.@babel/core.dependencies.semver
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m\/NwnDocOVruQFS1\/veMgdzuPcnOM34M6Cwx/;"	s	object:dependencies.@babel/helper-compilation-targets.dependencies.semver
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m\/NwnDocOVruQFS1\/veMgdzuPcnOM34M6Cwx/;"	s	object:dependencies.istanbul-lib-instrument.dependencies.semver
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-b39TBaTSfV6yBrapU89p5fKekE2m\/NwnDocOVruQFS1\/veMgdzuPcnOM34M6Cwx/;"	s	object:dependencies.make-dir.dependencies.semver
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm\//;"	s	object:dependencies.expand-brackets.dependencies.debug
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm\//;"	s	object:dependencies.snapdragon.dependencies.debug
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-bYQuGLeFxhkxNOF3rcMtiZxvCBAquGzZm6oWA1oZ0g2THUzivaRhv8uOhdr19Lmoo/;"	s	object:dependencies.streamroller.dependencies.date-format
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-c7wVvbw3f37nuobQNtgsgG9POC9qMbNuMQmTCqZv23b6MIz0fcYpBiOlv9gEN\/hd/;"	s	object:dependencies.jest-validate.dependencies.camelcase
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-cyFDKrqc\/YdcWFniJhzI42+AzS+gNwmUzOSFcRCQYwySuBBBy\/KjuxWLZ\/FHEH/;"	s	object:dependencies.@eslint/eslintrc.dependencies.ignore
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-cyFDKrqc\/YdcWFniJhzI42+AzS+gNwmUzOSFcRCQYwySuBBBy\/KjuxWLZ\/FHEH/;"	s	object:dependencies.eslint.dependencies.ignore
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpw/;"	s	object:dependencies.eslint-plugin-jsdoc.dependencies.debug
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-eTVLrBSt7fjbDygz805pMnstIs2VTBNkRm0qxZd+M7A5XDdxVRWO5MxGBXZhjY4cq/;"	s	object:dependencies.execa.dependencies.cross-spawn
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-hAZsKq7Yy11Zu1DE0OzWjw7nnLZmJZYTDZZyEFHZdUhV8FkH5MCfoU1XMaxXovpyW/;"	s	object:dependencies.jsonfile.dependencies.universalify
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-j5W0\/\/W7f8UxAn8hXVnwG8tLwdiUy4FJLcSupCg6maBYZDpyBvTApK7KyuI4bKj/;"	s	object:dependencies.jest-changed-files.dependencies.execa
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRF/;"	s	object:dependencies.base.dependencies.is-data-descriptor
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRF/;"	s	object:dependencies.define-property.dependencies.is-data-descriptor
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRF/;"	s	object:dependencies.extglob.dependencies.is-data-descriptor
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRF/;"	s	object:dependencies.snapdragon-node.dependencies.is-data-descriptor
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK/;"	s	object:dependencies.base.dependencies.is-accessor-descriptor
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK/;"	s	object:dependencies.define-property.dependencies.is-accessor-descriptor
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK/;"	s	object:dependencies.extglob.dependencies.is-accessor-descriptor
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK/;"	s	object:dependencies.snapdragon-node.dependencies.is-accessor-descriptor
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-nBF+F1rAZVCu\/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP\/QwPNZHnOlwbTk/;"	s	object:dependencies.jest-changed-files.dependencies.get-stream
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-nkiNDGI+Ytp7uj1lxHXddXCoEunhcry1D+KmVHBfUUgWT9jMF8ZJyH5KQObdF+OGA/;"	s	object:dependencies.vscode-languageserver.dependencies.vscode-jsonrpc
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-q+MB8nYR1KDLrgr4G5yemftpMC7\/QLqVndBmEEdqzmNj5dcFOO4Oo8qlwZE3ULT3/;"	s	object:dependencies.read-pkg.dependencies.type-fest
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTm/;"	s	object:dependencies.@istanbuljs/load-nyc-config.dependencies.resolve-from
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTm/;"	s	object:dependencies.resolve-cwd.dependencies.resolve-from
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5/;"	s	object:dependencies.streamroller.dependencies.universalify
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5/;"	s	object:dependencies.tough-cookie.dependencies.universalify
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-sauaDf\/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7Qz/;"	s	object:dependencies.execa.dependencies.semver
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-sauaDf\/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7Qz/;"	s	object:dependencies.normalize-package-data.dependencies.semver
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea\/M0Q7+T374Jp1aUiyUl0GKxp/;"	s	object:dependencies.ansi-escapes.dependencies.type-fest
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-tqPKHZ5CaBJw0Xmy0ZZvLs1qTV+BNFSyvn77ASXkpBNfIRk8ev26fKrD9iLGwGA9z/;"	s	object:dependencies.jsdom.dependencies.acorn
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-vafcv6KjVZKSgz06oM\/H6GDBrAtz8vdhQakGjFIvNrHA6y3HCF1CInLy+QLq8dTJ/;"	s	object:dependencies.table.dependencies.string-width
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9/;"	s	object:dependencies.streamroller.dependencies.fs-extra
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-zAoAQiudy+r5SvnSw3KJy5os\/oRJYHzrzja\/tBDqrZtNhUw8bt6y8OBzMWcjWr+/;"	s	object:dependencies.flat-cache.dependencies.flatted
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDoh/;"	s	object:dependencies.chalk.dependencies.ansi-styles
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDoh/;"	s	object:dependencies.expect.dependencies.ansi-styles
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDoh/;"	s	object:dependencies.pretty-format.dependencies.ansi-styles
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDoh/;"	s	object:dependencies.wrap-ansi.dependencies.ansi-styles
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+K/;"	s	object:dependencies.string-width.dependencies.is-fullwidth-code-point
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-1kYQdP6\/7HHn4VI1dhoyml3HxSA=",$/;"	s	object:dependencies.arr-diff
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-2Klr13\/Wjfd5OnMDajug1UBdR3s="$/;"	s	object:dependencies.concat-map
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-2e8H3Od7mQK4o6j6SzHD4\/fm6Ho=",$/;"	s	object:dependencies.which-module
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-2pN\/emLiH+wf0Y1Js1wpNQZ6bHI=",$/;"	s	object:dependencies.urix
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-3BXKHGcjh8p2vTesCjlbogQqLCg=",$/;"	s	object:dependencies.get-value
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-3F5pjL0HkmW8c+A3doGk5Og\/YW4=",$/;"	s	object:dependencies.to-fast-properties
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-3TxQsm8FnyXn7e42REGDWOKprYk=",$/;"	s	object:dependencies.msgpack-lite
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-3zrhmayt+31ECqrgsp4icrJOxhk=",$/;"	s	object:dependencies.delayed-stream
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-45sJrqne+Gao8gbiiK9jkZuuOcQ=",$/;"	s	object:dependencies.arr-union
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-4BpckQnyr3lmDk6LlYd5AYT1qWw=",$/;"	s	object:dependencies.makeerror
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-5HnICFjfDBsR3dppQPlgEfzaSpo=",$/;"	s	object:dependencies.is-typedarray
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-6PvzdNxVb\/iUehDcsFctYz8s+hA="$/;"	s	object:dependencies.isexe
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-6zkTMzRYd1y4TNGh+uBiEGu4dUU=",$/;"	s	object:dependencies.decode-uri-component
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-7Nyo8TFE5mDxtb1B8S80edmN+48=",$/;"	s	object:dependencies.map-visit
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-7uuINC+tvoAnwPNq2pIaE+b5YgY="$/;"	s	object:dependencies.rfc-3986
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-8QdIy+dq+WS3yWyTxrzCivEgwIE=",$/;"	s	object:dependencies.growly
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-95xEk68MU3e1n+OdOV5BBC3QRbs=",$/;"	s	object:dependencies.object-visit
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-9lNNFRSCabIDUue+4m9QH5oZEpA=",$/;"	s	object:dependencies.decamelize
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-AerA\/jta9xoqbAL+q7jB\/vfgDqs=",$/;"	s	object:dependencies.posix-character-classes
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-BF+XgtARrppoA93TgrJDkrPYkPc=",$/;"	s	object:dependencies.set-blocking
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw=",$/;"	s	object:dependencies.sprintf-js
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-BjJjj42HfMghB9MKD\/8aF8uhzQw=",$/;"	s	object:dependencies.exit
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-C17mSDiOLIYCgueT8YVv7D8wG1Y=",$/;"	s	object:dependencies.is-data-descriptor
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-EtSj3U5o4Lec6428hBc66A2RykQ=",$/;"	s	object:dependencies.is-stream
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18="$/;"	s	object:dependencies.path-is-absolute
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-FQStJSMVjKpA20onh8sBQRmU6k8="$/;"	s	object:dependencies.fs.realpath
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-G2HAViGQqN\/2rjuyzwIAyhMLhtQ="$/;"	s	object:dependencies.escape-string-regexp
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-GLKB2lhbHFxR3vJMkw7SmgvmsXc=",$/;"	s	object:dependencies.has-value
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-GwqzvVU7Kg1jmdKcDj6gslIHgyc=",$/;"	s	object:dependencies.functional-red-black-tree
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-HADHQ7QzzQpOgHWPe2SldEDZ\/wA=",$/;"	s	object:dependencies.lines-and-columns
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-I2QN17QtAEM5ERQIIOXPRA5SHdE=",$/;"	s	object:dependencies.tmpl
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-J3siiofZWtd30HwTgyAiQGpHNCM="$/;"	s	object:dependencies.int64-buffer
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-Jqcarwc7OfshJxcnRhMcJwQCjbg=",$/;"	s	object:dependencies.extend-shallow
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-KXWIt7Dn4KwI4E5nL4XB9JmeF68=",$/;"	s	object:dependencies.to-object-path
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-L3+bj9ENZ3JisYqITijRlhjgKPs=",$/;"	s	object:dependencies.walker
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-LGN\/53yJOv0qZj\/iGqkIAGjiBSo=",$/;"	s	object:dependencies.resolve-url
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-NDcSHbL+Za8LoIC34ahjb2MsypE=",$/;"	s	object:dependencies.isuri
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-NakjLfo11wZ7TLLd8jV7GHFTbF8=",$/;"	s	object:dependencies.npm-run-path
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-P7z7FbiZpEEjs0ttzBi3JDNqLK4=",$/;"	s	object:dependencies.p-finally
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-PYpcZog6FqMMqGQ+hR8Zuqd5eRc=",$/;"	s	object:dependencies.fast-levenshtein
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-QKNmnzsHfR6UPURinhV91IAjvy4=",$/;"	s	object:dependencies.safe-regex
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-QpD60n8T6Jvn8zeZxrxaCr\/\/DRk=",$/;"	s	object:dependencies.fragment-cache
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-S8A3PBZLwykbTTaMgpzxqApZ3KA=",$/;"	s	object:dependencies.collection-visit
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=",$/;"	s	object:dependencies.inflight
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-Sr6\/7tdUHywnrPspvbvRXI1bpPc=",$/;"	s	object:dependencies.natural-compare
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8=",$/;"	s	object:dependencies.isobject
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-WDsap3WWHUsROsF9nFC6753Xa9E=",$/;"	s	object:dependencies.once
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-WWZ\/QfrdTyDMvCu5a41Pf3jsA2c=",$/;"	s	object:dependencies.assign-symbols
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-XqtQsor+WAdNDVgpE4iCi15fvJg=",$/;"	s	object:dependencies.chainsaw
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-YICcOcv\/VTNyJv1eC1IPNB8ftcY=",$/;"	s	object:dependencies.static-extend
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-YrEQ4omkcUGOPsNqYX1HLjAd\/Ik=",$/;"	s	object:dependencies.is-extendable
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-Z29us8OZl8LuGsOpJP1hJHSPV40=",$/;"	s	object:dependencies.copy-descriptor
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-bqa989hTrlTMuOR7+gvz+QMfsYQ=",$/;"	s	object:dependencies.co
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-cXuPIgzAu3tE5AUUwisui7xw2Lk="$/;"	s	object:dependencies.traverse
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-d8mYQFJ6qOyxqLppe4BkWnqSap0=",$/;"	s	object:dependencies.is-arrayish
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-f17oI66AUgfACvLfSoTsP8+lcLQ=",$/;"	s	object:dependencies.text-table
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-fn2Fi3gb18mRpBupde04EnVOmYw=",$/;"	s	object:dependencies.object-copy
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-g3aHP30jNRef+x5vw6jtDfyKtVk=",$/;"	s	object:dependencies.unset-value
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-gQaNKVqBQuwKxybG4iAMMPttXoA=",$/;"	s	object:dependencies.for-in
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-h6EKxMFpS9Lhy\/U1kaZhQftd10c=",$/;"	s	object:dependencies.object.pick
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-h6kGXNs1XTGC2PlM4RGIuCXGijs="$/;"	s	object:dependencies.node-int64
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-jGStX9MNqxyXbiNE\/+f3kqam30I=",$/;"	s	object:dependencies.require-directory
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-jZ2+KJZKSsVxLpExZCEHxx6Q7EA=",$/;"	s	object:dependencies.node-modules-regexp
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-jcrkcOHIirwtYA\/\/Sndihtp15jc=",$/;"	s	object:dependencies.repeat-string
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-khi5srkoojixPcT7a21XbyMUU+o=",$/;"	s	object:dependencies.imurmurhash
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-lbC2P+whRmGab+V\/51Yo1aOe\/k8=",$/;"	s	object:dependencies.has-values
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-n2BVO8XOjDOG87VTz\/R0Yq3sqnk=",$/;"	s	object:dependencies.binary
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-nbe1lJatPzz+8wp1FC0tkwrXJlE=",$/;"	s	object:dependencies.json-stable-stringify-without-jsonify
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=",$/;"	s	object:dependencies.is-fullwidth-code-point
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-qIwCU1eR8C7TfHahueqXc8gz+MI=",$/;"	s	object:dependencies.is-extglob
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-qJS3XUvE9s1nnvMkSp\/Y9Gri1Cg=",$/;"	s	object:dependencies.array-unique
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-qeEss66Nh2cn7u84Q\/igiXtcmNY=",$/;"	s	object:dependencies.is-accessor-descriptor
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-s2PlXoAGym\/iF4TS2yK9FdeRfxQ=",$/;"	s	object:dependencies.pascalcase
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-s2nW+128E+7PUk+RsHD+7cNXzzQ=",$/;"	s	object:dependencies.deep-is
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-skV5w77U1tOWru5tmorn9Ugqt7s="$/;"	s	object:dependencies.buffers
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-t3c14xXOMPa27\/D4OwQVGiJEliI=",$/;"	s	object:dependencies.expand-brackets
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8="$/;"	s	object:dependencies.wrappy
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-u0P\/VZim6wXYm1n80SnJgzE2Br8=",$/;"	s	object:dependencies.strip-eof
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="$/;"	s	object:dependencies.isarray
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-vMbEmkKihA7Zl\/Mj6tpezRguC\/4=",$/;"	s	object:dependencies.lodash.memoize
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-wkvOKig62tW8P1jg1IJJuSN52O8=",$/;"	s	object:dependencies.remove-trailing-separator
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-wyq9C9ZSXZsFFkW7TyasXcmKDb8=",$/;"	s	object:dependencies.map-cache
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha1-x57Zf380y48robyXkLzDZkdLS3k=",$/;"	s	object:dependencies.asynckit
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-+Ryf6g3BKoRc7jfp7ad8tM4TtMiaWvbF\/1\/sQcZPkkS7ag3D5nMBCe2UfOTONtAkaG0/;"	s	object:dependencies.astral-regex
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-+a9MPUQrNGRrGU630OGbYVQ+11iOIovjCkqxajPa9w57Sd5ruK8WQNsslzpa0x\/QJqC8/;"	s	object:dependencies.vscode-languageserver-types
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-+bT2uH4E5LGE7h\/n3evcS\/sQlJXCpIp6ym8OWJ5eV6+67Dsql\/LaaT7qJBAt2rzfoa/;"	s	object:dependencies.levn
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-+l6rNN5fYHNhZZy41RXsYptCjA2Igmq4EG7kZAYFQI1E1VTXarr6ZPXBg6eq7Y6eK4FEh/;"	s	object:dependencies.string-length
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-+nVsLKlcUCeMzD2ufHEYuJ9a2ovstb6Dp52A5VsoKxDXgvE051XgHI\/33I1EymwkRGQk/;"	s	object:dependencies.@types/semver
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-+q\/t7Ekv1EDY2l6Gda6LLiX14rU9TV20Wa3ofeQmwPFZbOMo9DXrLbOjFaaclkXKWidI/;"	s	object:dependencies.at-least-node
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-+ufuXprtQ1D1iZTO\/K9+EBRn+qPWMJjZSw\/S0KlFrxCw4tkrzv9grgpDHkY9MeQTjTY/;"	s	object:dependencies.@babel/helpers
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x\/oI/;"	s	object:dependencies.end-of-stream
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-0JV5+SOCQkIdzjBK9buARcV804Ddu7A0Qet6sHi3FimE9ne6m4BGQZfRn+NZiXbBk4F4X/;"	s	object:dependencies.is-bigint
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-0Xv+xcmkTsOZdIF4yCnd7RkOOyfyqPaqJ7RZFKnwdxfDbkN3eAAE9sHl8zJFqBz4Vhxol/;"	s	object:dependencies.@types/tar
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-0b4HOimQHj9nXNEAA7zWwMM91Zhhba3pspja6sQbgTpynOJf+bkjBnfybNYzbpLbnwXnb/;"	s	object:dependencies.tar
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-0fr\/mIH1dlO+x7TlcMy+bIDqKPsw\/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6F/;"	s	object:dependencies.type-detect
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXa/;"	s	object:dependencies.@bcoe/v8-coverage
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-0rSmRBzXgDzIsD6mGdJgevzgezI534Cer5L\/vyMX0kHzT\/jiB43jRhd9YUlMGYLQy2z/;"	s	object:dependencies.eslint-visitor-keys
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-14Uleatt7jdzefLPYM3KLcnUl1ZNikaKq34enpb5XG9i81JpppDb5muZvonvKyrl7ftEH/;"	s	object:dependencies.@jest/fake-timers
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-15Ih7phfcdP5YxqiB+iDtLoaTz4Nd35+IiAv0kQ5FNKHzXgdWqPoTIqEDDJmXceQt4JZk/;"	s	object:dependencies.tr46
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-1nh45deeb5olNY7eX82BkPO7SSxR5SSYJiPTrTdFUVYwAl8CKMA5N9PjTYkHiRjisVcxc/;"	s	object:dependencies.nice-try
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-1vinpnX\/ZERcmE443i3SZTmU5DF0rPO9DrL4I2iVAllhxzCM9SzPlHnz19fsZB78htkK/;"	s	object:dependencies.cli-table
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-2AlqgYnVPOc9WDyWu7S5DJaEZsfk6dNh\/neatQ3IHUW4QLutM\/VPSH9lG7bif+XjFWc/;"	s	object:dependencies.marked
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-2DtFcgT68wiTTiwZ2hNdJfcHNke9XOfnwmBRWXhmeKM8rF0TGwmC\/Qto3S7RoZKp5cil/;"	s	object:dependencies.fast-glob
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-2NxwbF\/hZ0KpepYN0cNbo+FN6XoK7GaHlQhgx\/hIZl6Va0bF45RQOOwhLIy8lQDbuCi/;"	s	object:dependencies.eslint-scope
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-2gdzbKUuqtQ3lYNrUTQYoClPhm7oQu4UdpSZMp1\/DGgkHBT8E2Z1l0yMdb6D4zNAxwDi/;"	s	object:dependencies.is-string
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-2z6JzQvZRa9A2Y7xC6dQQm4FSTSTNWjKIYYTt4246eMTJmIo0Q+ZyOsU66X8lxK1AbB92/;"	s	object:dependencies.is-negative-zero
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-37RSHht+gzzgYeobbG+KWryeAW8J33Nhr69cjTqSYymXVZEN9NbRYWoYlRtDhHKPVT1Fy/;"	s	object:dependencies.@types/yargs-parser
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-39nnKffWz8xN1BU\/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515/;"	s	object:dependencies.estraverse
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-3MqfYKj2lLzdMSf8ZIZE\/V+Zuy+BgD6f164e8K2w7dgnpKArBDerGYpM46IYYcjnkdPN/;"	s	object:dependencies.define-properties
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo\/TlYz6eQi/;"	s	object:dependencies.gensync
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-3lFWKbLxJm34QxyVNNCgXX1u4o\/RV0myvA2y2Bxm46iGIjKlaY0own9gIckbjZJPn+Wa/;"	s	object:dependencies.ts-jest
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpW/;"	s	object:dependencies.balanced-match
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv\/41Sn2emQ0dycQW4uZXLejwKv/;"	s	object:dependencies.yallist
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-3xurFv5tEgii33Zi8Jtp55wEIILR9eh34FAW00PZf+JnSsTmV\/ioewSgQl97JHvgjoRG/;"	s	object:dependencies.strip-bom
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvN/;"	s	object:dependencies.is-number
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-48ql1CLL59aKbU94Y88Xgb2VFy7a95ykGRbJJaaVv+LX5U8wFpLfiGXJJGUozsmA1oEh\//;"	s	object:dependencies.@babel/helper-member-expression-to-functions
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-4FJkXzKXEDB1snCFZlLP4gpC3JILicCpGbzG9f9G7tGqGCzETQ2hWPrcinA9oU4wtf2bi/;"	s	object:dependencies.convert-source-map
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-4cVvR2\/1B693IuOvSI20xqqa\/+bl7lqAMR59R4iu39R9aOX8\/JoYY1sFaNvUMyMBGn/;"	s	object:dependencies.@babel/helper-module-imports
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-4dbzIzqvjtgiM5rw1k5rEHtBANKmdudhGyBEajN01fEyhaAIhsoKNy6y7+IN93IfpFtwY/;"	s	object:dependencies.type-fest
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-4tzD0mF8iSiMiNs30BiLO3EpfGLZUT2MSX\/G+o7ZywDzliWQ3OPtTZ0PTC3B3ca1UAf4/;"	s	object:dependencies.w3c-xmlserializer
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-5G0tKtBTFImOqDnLB2hG6Bp2qcKEFduo4tZu9MT\/H6NQv\/ghhy30o55ufafxJ\/LdH7/;"	s	object:dependencies.is-glob
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-5LBh1Tls8c9xgGjw3QrMwETmTMVk0oFgvrFSvWx62llR2hcEInrKNZ2GZCCuuy2lvWrdl/;"	s	object:dependencies.saxes
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-5O7H5c\/7YlojphYNrK02LlDIV2GNPYisKwHm2QTKjNZeEzezCbwYs9swJySv2UfPMyZ0/;"	s	object:dependencies.@jest/test-result
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-5T6P4xPgpp0YDFvSWwEZ4NoE3aM4QBQXDzmVbraCkFj8zHM+mba8SyqB5DbZWyR7mYHo6/;"	s	object:dependencies.base
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB\/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKD/;"	s	object:dependencies.jsonfile
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-5kvd38wZpqGY4yP\/6W3qhYX6Hz0NwUbijVsX2rxczpY6OXaMxh0+5E5uLJKVFwaBM7PJ/;"	s	object:dependencies.@typescript-eslint/types
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-5l4VyZR86LZ\/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB\/c0GUsH+y39UfCi3dz/;"	s	object:dependencies.run-parallel
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-5tK7EtrZ0N+OLFMthtqOj4fI2Jeb88C4CAZPu25LDVUgXJ0A3Js4PMGqrn0JU1W0Mh1\//;"	s	object:dependencies.ci-info
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-6564t0m0fuQMnockqBv7wJxo9T5C2V9JpYXyNScfRDPVLusOQQhkpMGrFC17QbiolraQ1/;"	s	object:dependencies.ansi-styles
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li\/Hx6tyK0NEb+2GCy/;"	s	object:dependencies.to-regex-range
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-6A2fkfq1rfeQZjxrZJGerpLCTHRNEBiSgnu0+obeJpEPZRUooHgsizvzv0ZjJwOz3iWIH/;"	s	object:dependencies.is-core-module
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E\/91/;"	s	object:dependencies.@babel/plugin-syntax-optional-catch-binding
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2P/;"	s	object:dependencies.normalize-path
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-6fPc+R4ihwqP6N\/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS\//;"	s	object:dependencies.strip-json-comments
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-6m+9Z3Gv9wN0WFVasqjCL\/06+EFCMTqDEUl\/b87HYK2rAPTyfz4ZIuSlPhY51PIQRWx/;"	s	object:dependencies.jest-diff
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-6sXEzV5+I5j8Bmq9\/vUphGRM\/RJNT9SCURJLjwfOg51heRtguGWDzcaBlgAzKhQa0EV/;"	s	object:dependencies.supports-hyperlinks
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShW/;"	s	object:dependencies.shebang-regex
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-74RlY5FCnhq4jRxVUPKDaRwrVNXMqsGsiW6AJw4XK8hmtm10wC0ypZBLw5IIp85NZMr91/;"	s	object:dependencies.optionator
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-7AeGuCYNGmycyQbCqd\/3PWH4eOoX\/OiCa0uphp57NVTeAGdJGaAliecxwBDHYQCIvrW/;"	s	object:dependencies.pretty-format
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-7Eczs8gIPDrVzT+EksYBcupqMyxSHXXrHOLRRxU2\/DicV8789MRBRR8+Hc2uWzUupOs4/;"	s	object:dependencies.fastq
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-7FEjbrx5SL9cWvXioDbnlYTppcZGuCY6ow3\/D5vMggb2Ywgu4dMrpTJX0JdQAIcRRUEl/;"	s	object:dependencies.@babel/helper-simple-access
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-7Gps\/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs\/cpyJJ3CVIVpH/;"	s	object:dependencies.file-entry-cache
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-7O+FbCihrB5WGbFYesctwmTKae6rOiIzmz1icreWJ+0aA7LJfuqhEso2T9ncpcFtzMQtz/;"	s	object:dependencies.call-bind
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa\/XMrSbdmg3r2Xnaidz9/;"	s	object:dependencies.progress
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4\/\/DL+icEBfc0U7qJCisqrTsKT/;"	s	object:dependencies.error-ex
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s/;"	s	object:dependencies.uri-js
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-85Ltnm7HlB\/KesBUuALwQ68YTU72w9H2xW9FjZ1eL1U3lhtefjjl5c2MiUbpXt\/i6La/;"	s	object:dependencies.@jest/globals
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-8TEXQxlldWAuIODdukIb+TR5s+9Ds40eSJrw+1iDDA9IFORPjMELarNQE3myz5XIkWWpd/;"	s	object:dependencies.vscode-uri
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-8oDqyLC7eD4HM307boe2QWKyuzdzWBj56xI\/imSl2cpL+U3tCMaTAkMJ4ee5JBZ\/FsO/;"	s	object:dependencies.@types/which
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe\/WZkoIzjn\/3TGDwtOCYtXGxA3O8tPzpc/;"	s	object:dependencies.merge2
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-9H6YdfkcK\/uOnY\/K7\/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsS/;"	s	object:dependencies.@babel/plugin-syntax-numeric-separator
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-9IK9EadsbHo6jLWIpxpR6pL0sazTXV6+SQv25ZB+F7Bj9mJNaOc4nCRabwd5M\/JwmUa8/;"	s	object:dependencies.abab
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-9QNk5KwDF+Bvz+PyObkmSYjI5ksVUYtjW7AU22r2NKcfLJcXp96hkDWU3+XndOsUb+AQ9/;"	s	object:dependencies.symbol-tree
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-9YXf6xtW+qzQ+hcMQXx95MOvfqXFgsKDZodX3qZB0x2n5Z94ioetIITsBtvJbiOyxa\/6/;"	s	object:dependencies.regextras
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-9\/hlOBkQl2l\/PLHJx6JjoDF6xPKcJEsUlWKb23rKE7KzeDqUZKXKNMW27KIue5JMdBV/;"	s	object:dependencies.expect
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-9o5UecI3GhkpM6DrXr69PblIuWxPKk9Y0jHBRhdocZ2y7YECBFCsHm79Pr3OyR2AvjhDk/;"	s	object:dependencies.browser-process-hrtime
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-9tZvz7AiR3PEDNGiV9vIouQ\/EAcqMXFmkcA1CDFTwOB98OZVDL0PH9glHotf5Ugp6GCO/;"	s	object:dependencies.istanbul-reports
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-A2HuJWl2opDH0EafgdjwEw7HysI8ff\/n4lW4QEVBCUXFk9QeGecBWv0Deph0UmLe3tTN/;"	s	object:dependencies.promise.prototype.finally
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-A5CUptxDsvxKJEU3yO6DuWBSJz\/qizqzJKOMIfUJHETbBw\/sFaDxgd6fxm1ewUaM0jZ/;"	s	object:dependencies.xml-name-validator
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-A81F9pDwyS7yM\/\/KwbCSDqy3Uj4NMIurtplxphWxoYtNPov7cJsDkAFNNyVlIZ3jwGy/;"	s	object:dependencies.@babel/plugin-syntax-top-level-await
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-A8OG5SR\/ij3SsJdWDJdkkSYUjQdCUx6APQXem0SaEePBSRg4eymGYwBkKo1Y6DU+af\//;"	s	object:dependencies.emittery
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-AF55rZXpe7trmEylbaE1Gv54wn6rwU03aptvRoVIGP8YykoSxqdVLV1TfwflBCE\/QtHm/;"	s	object:dependencies.babel-plugin-istanbul
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-AKcdTnFSWATd5\/GCPRxr2ChwIJ85CeyrEyjRHlKxQ56d4XJMGym0uAiKn0xbLOGOl3+y/;"	s	object:dependencies.cache-base
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9\/Sr/;"	s	object:dependencies.glob-parent
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-AZL67abkUzIuvcHqk7c09cezpGNcxUxU4Ioi\/05xHk4DQeTkWmGYftIE6ctU6AEt+Gn4/;"	s	object:dependencies.cssstyle
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Al2P394dx+kXCl61fhrrZ1FTI7qsRDIUiVSuN6rTwss6lUn8uVO2+nnF4AvO0ug8vMsy3/;"	s	object:dependencies.@typescript-eslint/scope-manager
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Ao2jlksPEUGCEXBvJz5e2MuDpYUtxXgtUk45cg0g5Mmy4f0j7bQuDlOlqBMgKGRl9dZAK/;"	s	object:dependencies.@types/fb-watchman
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ArliyUsWDUqEGfWcmzpGUzNfLxTdTp6WU4IuP6QFSp9gGfWS6boxFCkJSJ\/L4+RG8z\//;"	s	object:dependencies.@babel/parser
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-AuvKTrTfQNYNIctbR1K\/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz/;"	s	object:dependencies.strip-ansi
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Auw9a4AxqWpa9GUfj370BMPzzyncfBABW8Mab7BGWBYDj4Isgq+cDKtx0i6u9jcX9pQDn/;"	s	object:dependencies.fsevents
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-AvHcyZ5JnSfq3ioSyjrBkH9yW4m7Ayk8\/9My\/DD9onKeu\/94fwrMocemO2QAJFAlnn/;"	s	object:dependencies.write-file-atomic
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-BJ3jwPQu1jeynJ5BrjLuGfK\/UJu6uwHxJ\/di7sanqmUmxzmyIcd3vz58PMR7wpi8k3i/;"	s	object:dependencies.@typescript-eslint/parser
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjE/;"	s	object:dependencies.which
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-BMpfD7PpiETpBl\/A6S498BaIJ6Y\/ABT93ETbby2fP00v4EbvPBXWEoaR1UBPKs3iR53/;"	s	object:dependencies.ignore
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-BTIhocbPBSrRmHxOAJFtR18oLhxTtAFDAvL8hY1S3iU8k+E60W\/YFs4jrixGzQjMpF4q/;"	s	object:dependencies.@nodelib/fs.walk
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-BWICuzzDvDoH54NHKCseDanAhE3CeDorgDL5MT6LMXXj2WCnd9UC2szdk4AWLfjdgNBCX/;"	s	object:dependencies.globals
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-BXgQl9kf4WTCPCCpmFGoJkz\/+uhvm7h7PFKUYxh7qarQd3ER33vHG\/\/qaE8eN25l07/;"	s	object:dependencies.istanbul-lib-instrument
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-BdWQhoVJkp6nVjB7nkFWcn43dkprYauqtk++Py2eaf\/GRDFm5BxRqEIZCiHlZUGAVmtw/;"	s	object:dependencies.@babel/helper-optimise-call-expression
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzh/;"	s	object:dependencies.strip-final-newline
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-C\/CPBqKWnvdcxqIARxyOh4v1UUEOCHpgDa0WYgpKDFMszcrPcffg5uhwSgPCLD2WWxmq/;"	s	object:dependencies.is-symbol
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-D5JbOMBIR\/TVZkubHT+OyT2705QvogUW4IBn6nHd756OwieSF9aDYFj4dv6HHEVGYbHa/;"	s	object:dependencies.html-encoding-sniffer
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-DPSke0pXhTZgoF\/d+WSt2QaKMCFSfx7QegxEWT+JOuHF5aWrKEn0G+ztjuJg\/gG8\/I/;"	s	object:dependencies.uuid
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-DjEVzQNz5LICkzN0REdpD5prGoidvbdYk1BVgRUOINaWJP2t6avB27X1guXK1kXNrX0WM/;"	s	object:dependencies.@babel/helper-get-function-arity
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-DkPJKQeY6kKwmuMretBhr7G6Vodr7bFwDYTXIkfG1gjvNpaxBTQV3PbXg6bR1c1UP4jPO/;"	s	object:dependencies.fb-watchman
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-DpKm2Ui\/xN7\/HQKCtpZxoRWBhZ9Z0kqtygG8XCgNQ8ZlDnxuQmWhj566j8fN4Cu3\/J/;"	s	object:dependencies.validate-npm-package-license
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-DtM3g7juCXQxFVSNPNByEC2+NImtBuxQQvWlHunpJIS5Ocr0lG306cC7FCi7cEA0fzmyb/;"	s	object:dependencies.chokidar
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-DyFP3BM\/3YHTQOCUL\/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo/;"	s	object:dependencies.get-caller-file
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-E9JjhUgNzvuQ+vVAL21vlyfy12gP0GhazGgJC4h6qUt1jSdUXGWJ1wfu\/X7Sd8etSgxV/;"	s	object:dependencies.@jest/transform
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-EQyfIuO2hPDsX1L\/blblV+H7I0knhgAd82cVneCwcdND9B8AuCDuRcBH6yIcG4dFzlOU/;"	s	object:dependencies.prompts
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-EaObqwIvayI5a8dCzhFrjKzVwKLxjoG9T6Ppd5CEo07LRKfQ8Yokw54r5+Wq7FaBQ+yXR/;"	s	object:dependencies.@types/events
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-EfB5OHNYp1F4px\/LI\/FEnGylop7nOqkQ1LRzCM0KccA2U8tvV8w01KBv37LbO7nW4H+/;"	s	object:dependencies.@eslint/eslintrc
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-EkYm5BcKUGiduxzSt3Eppko+PiNWNEpa4ySk9vTC6wDsQJW9rHSa+UhGNJoRYp7bz6Ht1/;"	s	object:dependencies.https-proxy-agent
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ExO0774ikEObIAEV9kDo50o+79VCUdEB6n6lzKgGwupcVeRlhrj3qGAfwq8G6uBJjkqLr/;"	s	object:dependencies.content-disposition
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-EykJT\/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHT/;"	s	object:dependencies.has-flag
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-F+i2BKsFrH66iaUFc0woD8sLy8getkwTwtOBjvs56Cx4CgJDeKQeqfz8wAYiSb8JOprWh/;"	s	object:dependencies.is-docker
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-F+v2zxZgw\/fMwPz\/VUGIggG4ZndDsYy0vlpthi3tjmDZlcfbhN5mYW0evXUsBr2sUtu/;"	s	object:dependencies.electron-to-chromium
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-FJ3UgI4gIl+PHZm53knsuSFpE+nESMr7M4v9QcgB7S63Kj\/6WqMiFQJpBBYz1Pt+66bZ/;"	s	object:dependencies.deepmerge
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-FM3QwxV+TnZYQ2aRqhlKBMHxk10lTbMt3bBkMAp54ddrNeVSfcQYOOKuGuy3Ddrm38I04/;"	s	object:dependencies.mime-db
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-FM9nNUYrRBAELZQT3xeZQ7fmMOBg6nWNmJKTcgsJeaLstP\/UODVpGsr5OhXhhXg6f+qt/;"	s	object:dependencies.minimist
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8l/;"	s	object:dependencies.combined-stream
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-FWtleNAtZ\/Ki2qtqej2CXTOayOH9bHDQF+Q48VpWyDXjbYxA4Yz8iDB31zXOBUlOHHKi/;"	s	object:dependencies.to-regex
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-FtyOnWN\/wCHTVXOMwvSv26d+ko5vWlIDD6zoUJ7LW8vh+ZBC8QdljveRP+crNrtBwioE/;"	s	object:dependencies.snapdragon
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-GKNxVA7\/iuTnAqGADlTWX4tkhzxZKXp5fLJqKTlQLHkE65XDUKutZ3BHaJC5IGcper2t/;"	s	object:dependencies.comment-parser
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-GMat4EJ5161kIy2HevLlr4luNjBgvmj413KaQA7jt4V8B4RDsfpHk7WQ9GVqfYyyx8OS\//;"	s	object:dependencies.get-stream
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-GQ2EWRpQV8\/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl\/hC3vtHHBfGm2Ifi6qWV+coDGkr/;"	s	object:dependencies.parent-module
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8\/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOI/;"	s	object:dependencies.safe-buffer
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Gv3ZIs\/nA48\/Zvjrl34bf+oD76JHiGDUxNOVgUjh3j890sblXryjY4rss71fPtD\/nj/;"	s	object:dependencies.jest-regex-util
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkR/;"	s	object:dependencies.html-escaper
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-H8jvkz1O50L3dMZCsLqiuB2tA7muqbSg1AtGEkN0leAqGjsUzDJir3Zwr02BhqdcITPg3/;"	s	object:dependencies.jsonc-parser
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz\/cR5pf8r\/cR4Wq60sL\//;"	s	object:dependencies.array-union
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-HRDzbaKjC+AOWVXxAU\/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu\/Fr23Eiek/;"	s	object:dependencies.pkg-dir
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-HV1Cm0Q3ZrpCR93tkWOYiuYIgLxZXZFVG2VgK+MBWjUqZTundupbfx2aXarXuw5Ko5aMc/;"	s	object:dependencies.@babel/code-frame
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-HkGSK7CGAXncr8Qn\/0VqNtExEE+PHMWb+qlR1faHMao7ng6P3tAaoWWBMdva0gL5h4zp/;"	s	object:dependencies.@types/mkdirp
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-HnSYx1BsJ87\/p6swwzv+2v6B4X+uxUteoDfRxsAb1S1BePzQqOLevVmkdA15GHJVd9A9/;"	s	object:dependencies.event-lite
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Htz+RnsXWk5+P2slx5Jh3Q66vhQj1Cllm0zvnaY98+NFx+Dv2CF\/f5O\/t8x+KaNdrdI/;"	s	object:dependencies.source-map-resolve
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Hz\/mrNwitNRh\/HUAtM\/VT\/5VH+ygD6DV7mYKZAtHOrbs8U7lvPS6xf7EJKMF0uW1K/;"	s	object:dependencies.word-wrap
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-IY1R2i2aLsLr7Id3S6p2BA82GNWryt4oSvEXLAKc+L2zdi89dSkE8xC1C+0kpATG4JhBJ/;"	s	object:dependencies.@jest/console
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-IrlBhD9bm4bdYcS8xpWarazkKXlE7iYb1HzRuyBP114mIaj5DJPo11Us1HgH60dTt41TC/;"	s	object:dependencies.@typescript-eslint/visitor-keys
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-J1DcMe8UYTBSrKezuIUTUwjXsho29693unXM2YhJUTR2txK\/eG47bvNa\/wipPFmZFgr/;"	s	object:dependencies.is-callable
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-J6SDjUgDxQj5NusnOtdFxDwN\/+HWykR8GELwctJ7mdqhcyy1xEc4SRFHUXvxTp661YaV/;"	s	object:dependencies.regex-not
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-JKhqTOwSrqNA1NY5lSztJ1GrBiUodLMmIZuLiDaMRJ+itFd+ABVE8XBjOvIWL+rSqNDC7/;"	s	object:dependencies.y18n
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-JV\/yugV2uzW5iMRSiZAyDtQd+nxtUnjeLt0acNdw98kKLrvuRVyB80tsREOE7yvGVgal/;"	s	object:dependencies.ini
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX\/2o0L9UBw9O\/Y3o6wFw\/i9YLapc/;"	s	object:dependencies.rimraf
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-JZnDKK8B0RCDw84FNdDAIpZK+JuJw+s7Lz8nksI7SIuU3UXJJslUthsi+uWBUYOwPFwW7/;"	s	object:dependencies.xmlchars
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-JgdzOYZ\/qGaKTVkn5qEDV\/SXAh8KcyUVkCoSWGN8T3bwrgd6m+\/dJa2kVGi6RJYJgE/;"	s	object:dependencies.@babel/helper-compilation-targets
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-JiBdRBq91WlY7uRJ0ds7R+dU02i6LKi8r3BuQhNXn+kmeLN+EfHhfjqMRis1zJxnlu88h/;"	s	object:dependencies.regexp.prototype.flags
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Jo6dJ04CmSjuznwJSS3pUeWmd\/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fa/;"	s	object:dependencies.lru-cache
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-JoX0apGbHaUJBNl6yF+p6JAFYZ666\/hhCGKN5t9QFjbJQKUU\/g8MNbFDbvfrgKXvI1Q/;"	s	object:dependencies.ansi-colors
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-JvONPptw3GAQGXlVV2utDcHx0BiY34FupW\/kI6mZ5x06ER5DdPG\/tXWMVHjTNULF5uK/;"	s	object:dependencies.vscode-jsonrpc
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-JxHc1weCN68wRY0fhCoXpyK55m\/XPHafOmK4UWD7m2CI14GMcFypt4w\/0+NV5f\/ZMb/;"	s	object:dependencies.set-value
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-K0Ptm\/47OKfQRpNQ2J\/oIN\/3QYiK6FwW+eJbILhsdxh2WTLdl+30o8aGdTbm5Jbffp/;"	s	object:dependencies.acorn-jsx
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-KWYVV1c4i+jbMpaBC+U++4Va0cp8OisU185o73T1vo99hqi7w8tSJfUXYswwqqrjzwxa6/;"	s	object:dependencies.jest-worker
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-KaL7+6Fw6i5A2XSnsbhm\/6B+NuEA7TZ4vqxnd5tXz9sbKtrN9Srj8ab4vKVdK8YAqZO9/;"	s	object:dependencies.decimal.js
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Ki212dKK4ogX+xDo4CtOZBVIwhsKBEfsEEcwmJfLQzirgc2jIWdzg40Unxz\/HzEUqM1W/;"	s	object:dependencies.spdx-license-ids
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL\/oCFgn2NYXEtqP8\/L3pKapUA4G8cFVaoF3SU323CD4/;"	s	object:dependencies.esrecurse
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-KoK9ErH1MBlCPxV0VANkXW2\/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuG/;"	s	object:dependencies.@babel/plugin-syntax-optional-chaining
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRD/;"	s	object:dependencies.camelcase
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-L3hKV5R\/p5o81R7O02IGnwpDmkp6E982XhtbuwSe3O4qOtMMMtodicASA1Cny2U+aCXc/;"	s	object:dependencies.arr-flatten
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo\/k5YYdYgpY2\/2EsOsksJrq7lOHxryrVOn/;"	s	object:dependencies.path-parse
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-LFiNfRcSu7KK3evMyYOuCzv3L10TW7yC1G2\/+StMjK8Y6Vqd2MG7r\/Qjw4ghtuCOjFv/;"	s	object:dependencies.repeat-element
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-LOHxIOaPYdHlJRtCQfDIVZtfw\/ufM8+rVj649RIHzcm\/vGwQRXFt6OPqIFWsm2XEMrN/;"	s	object:dependencies.deep-extend
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-LSBS2LjbNBTf6287JEbEzvJgftkF5qFkmCo9hDRpAzKhUOlJ+hx8dd4USs00SgsUNwc46/;"	s	object:dependencies.has-bigints
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-LwZy+p3SFs1Pytd\/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69Tx/;"	s	object:dependencies.pump
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-LwaxwyZ72Lk7vZINtNNrywX0ZuLyStrdDtabefZKAY5ZGJhVtgdznluResxNmPitE0SAO/;"	s	object:dependencies.glob
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-M4yMwr6mAnQz76TbJm914+gPpB\/nCwvZbJU28cUD6dR004SAxDLOOSUaB1JDRqLtaOV\//;"	s	object:dependencies.whatwg-mimetype
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-M7LQ0bxarkxQoN+vz5aJPsLBn77n8QgTFmo8WK0\/44auK2xlCXrYcUxHFxgU7qW5Yzw\//;"	s	object:dependencies.babel-preset-current-node-syntax
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-MDW0fKfsn0OI7MS7Euz6h8HNDXVQ0gaM9uW6RjfDmd1DAFcaxX9OqIakHIqhbnmF08Cf2/;"	s	object:dependencies.jest-util
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-MKGMzyfeuutC\/ZJ1cba9NqcNpfeqMUcYmyF1ZFY6\/Cn7CNSAKx6a+s48sqLqyAiZuaP/;"	s	object:dependencies.colorette
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-MQcXEUbCKtEo7bhqEs6560Hyd4XaovZlO\/k9V3hjVUF\/zwW7KBVdSK4gIt\/bzwS9Mb/;"	s	object:dependencies.buffer-from
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo\/RPgnr1\/GGt+ic3iJTzQ8/;"	s	object:dependencies.emoji-regex
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-MZPUxrmFubI36XS1DI3qmI0YdN1gks62JtFZvxR67ljjSNCeK6U08Zx4msEWOXuofgqUt/;"	s	object:dependencies.@sinonjs/fake-timers
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Mc8jNuSFImQUIateBFwdOQcmC6Q5maU0VVvdC2R6XMb66\/VnT+7WS4D\/0EeNMZu1YOD/;"	s	object:dependencies.log4js
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-MdSJnBjl+bdwkLskZ3NGFp9YcXGx5ggLpQQPqtgakVhsWK0hTtNYhjpZLlWQTviGTvF8a/;"	s	object:dependencies.@types/babel__generator
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Mer\/f0KaATbjl8MCJ+0GEpNdqmnVmDYqCTJYTvoo7rqmRiDllmp2AYN+06F93nXcY3ur/;"	s	object:dependencies.jest-each
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Mgd2GdMVzY+x3IJ+oHnVM+KG3lA5c8tnabyJKmHSaG2kAGpudxuOf8ToDkhumF7UzME7D/;"	s	object:dependencies.minipass
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-MmnFaF7P8Sw\/WsselXtoexTUxPJGWupUDMTz0T76mWU+M61TXt213UBgxA\/idr7ZSCn/;"	s	object:dependencies.@chemzqm/neovim
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Mv\/TDa3nZ9sbc5soK+OoA74BsS3mL37yixCvUAQkiuA4Wz6YtwP\/K47n2rv2ovzHZvo/;"	s	object:dependencies.diff-sequences
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-NEYZ9Aeyj0i5rQqbq+tpIOom0YS1u2MVu6+euBsvpgIme+FOfRmoC4R5p0JiAUpaFvFy2/;"	s	object:dependencies.jest-validate
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe\/ZdlJy+J3uCpfa/;"	s	object:dependencies.require-main-filename
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-NTPErx4\/FiPCGScH7foPyr+\/1Dkzkni+rHiYHHoTjvwou7AQzJkNeD60A9CXRy+ZEN2/;"	s	object:dependencies.@types/babel__template
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-NYZlkZRydxw+YT56IlhIcS8PAhb+FEUiOzuhFTfqDyPmzAhRge6ua0dQYT\/Uh0t\/EDH/;"	s	object:dependencies.@babel/helper-function-name
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5\/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN/;"	s	object:dependencies.is-buffer
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Nmb6QXkELsuBr24CJSkilo6UHHgbekK5UiZgfE6UHD3Eb27YC6oD+bhcT+tJ6cl8dmsgd/;"	s	object:dependencies.extglob
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+Gjk/;"	s	object:dependencies.object-keys
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5/;"	s	object:dependencies.queue-microtask
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-NzNVhJDYpwceVVii8\/Hu6DKfD2G+NrQHlS\/V\/qgv763EYudVwEcMQNxd2lh+0VrUBy/;"	s	object:dependencies.split-string
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-O0DB1JC\/sPyZl7cIo78n5dR7eUSwwpYPiXRhTzNxZVAMUuB8vlnRFyLxdrVToks6XPLV/;"	s	object:dependencies.internal-slot
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-O27l4xaMYt\/RSQ5TR3vpWCAB5Kb\/czIcqUFOM\/C4fYcLnbZUc1PkjTAMjof2pBWaST/;"	s	object:dependencies.snapdragon-node
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-OBxYDA2ifZQ2e13cP82dWFMaCV9CGF8GzmN4fljBVw5O5wep0lu4gacm1OL6MjROoUnB8/;"	s	object:dependencies.string.prototype.matchall
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-OG79qm3AujAM9ImoqgWEY1xG4HX+Lw+yY6qZj9R1K2mhF5bEmQ849wvrb+4vt4jLMLzwX/;"	s	object:dependencies.streamroller
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-OLhxz05EzUtsAmOMzuupt1lHYXCNib0ECyuZ\/PZOx9TrZcC8vL0x+DUG3TL+GLX3yHG4/;"	s	object:dependencies.jest-snapshot
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-OPdCF6GsMIP+Az+aWfAAOEt2\/+iVDKE7oy6lJ098aoe59oAmK76qV6Gw60SbZ8jHuG2w/;"	s	object:dependencies.acorn-walk
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6\/Cy2/;"	s	object:dependencies.jsesc
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Ofn\/CTFzRGTTxwpNEs9PP93gXShHcTq255nzRYSKe8AkVpZY7e1fpmTfOyoIvjP5HG7Z/;"	s	object:dependencies.parse5
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH\/sqsWvhQ3vgwKFRR1Hpj/;"	s	object:dependencies.mimic-fn
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-OrOb32TeeambH6UrhtShmF7CRDqhL6\/5XpPNp2DuRH6+9QLw\/orhp72j87v8Qa1ScDk/;"	s	object:dependencies.semver
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-OrZaX2Mb+rJCpH\/6CpSqt9xFVpN++x01XnN2ie9g6P5\/3xelLAkXWVADpdz1IHD\/KF/;"	s	object:dependencies.resolve-cwd
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-OznJUda\/soKXv0XhpvzGWDnml4Qnwp16GN+D\/kZIdLsWoHj05kyu8Rm5kXmMef+rVJZ/;"	s	object:dependencies.@babel/helper-module-transforms
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-P43ePfOAIupkguHUycrc4qJ9kz8ZiuOUijaETwX7THt0Y\/GNK7v0aa8rY816xWjZ7rJd/;"	s	object:dependencies.anymatch
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENct/;"	s	object:dependencies.callsites
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-PO9t0697lNTmcEHH69mdtYiOIkkOlj9fySqfO3K1eCcdISevLAE0xY59VLLUj0SoiPiTX/;"	s	object:dependencies.babel-plugin-jest-hoist
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-PiT\/hQmTonHhl\/HFGN+Lx3JJUznrVYJ3+AQsnthneZbvW7x+f08Tk7yLJTLEOUvBTbd/;"	s	object:dependencies.capture-exit
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-PijRCG\/K3s3w1We6ynUKdxEc5AcuuH3NBmMDP8uvKVp6X43UY7NQlTzczakXP3DJR0F4/;"	s	object:dependencies.@types/prettier
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-PpOwAdQ\/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6/;"	s	object:dependencies.find-up
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-QCOllgZJtaUo9miYBcLChTUaHNjJF3PYs1VidD7AwiEj1kYxKeQTctLAezAOH5ZKRH0g2/;"	s	object:dependencies.es-to-primitive
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-QnZUISJJXyhyD6L1e5QwXDV\/A5i2W1\/gl6D6YMc8u0ncPepbv\/B4w3S+izVvtAg60m/;"	s	object:dependencies.@types/cli-table
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Qu+VC3EwYLldKa1fCxuuvULvSJOKEgk9pi8dZeCVK7TqBfUNTH4sFkk4joj8afVSfAYgJ/;"	s	object:dependencies.slice-ansi
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-R4nPAVTAU0B9D35\/Gk3uJf\/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2/;"	s	object:dependencies.p-try
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-R79ZZ\/0wAxKGu3oYMlz8jy\/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsb/;"	s	object:dependencies.p-locate
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-RDZ4Iz3QbtRWycd8bUEPxQsTlYazfYn\/h5R65Fc6gOfwozFhoImx+affzky\/FFBuqIS/;"	s	object:dependencies.jest-docblock
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-RHkBKtLWUVwd7SqRIvCZMEvAMoGUp0XU+seQiZejj0COz3RI3hWP4sCv3gZWWLjJTd7rG/;"	s	object:dependencies.form-data
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-RIdOzyoavK+hA18OGGWDqUTsCLhtA7IcZ\/6NCs4fFJaHBDab+pDDmDIByWFRQJq2Cd7r/;"	s	object:dependencies.psl
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-RJJrrySY7A8havqpGObOB4W92QXKJo63\/jFLLgpvOtsGUqbQZ9Sbgl35KMm1DjC6j7Av/;"	s	object:dependencies.@types/stack-utils
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-RRECPsj7iu\/xb5oKYcsFHSppFNnsj\/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpf/;"	s	object:dependencies.color-convert
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-RU0lI\/n95pMoUKu9v1BZP5MBcZuNSVJkMkAG2dJqC4z2GlkGUNeH68SuHuBKBD\/XFe+/;"	s	object:dependencies.is-number-object
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-RZNwNclF7+MS\/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFI/;"	s	object:dependencies.agent-base
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-RbzJvlNzmRq5c3O09UipeuXno4tA1FE6ikOjxZK0tuxVv3412l64l5t1W5pj4+rJq9vpk/;"	s	object:dependencies.@tootallnate/once
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Rd3se6QB+sO1TwqZjscQrurpEPIfO0\/yYnSin6Q\/rD3mOutHvUrCAhJub3r90uNb+SE/;"	s	object:dependencies.component-emitter
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2k/;"	s	object:dependencies.js-tokens
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-RkhPPp2zrqDAQA\/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1Dcp/;"	s	object:dependencies.@nodelib/fs.stat
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-RzaGXLNt+CW+T41h1zl6pGz3EaeVhYlK+rdAap+7DxW5kqsqePO8kRtWPaCiVqdhZc86E/;"	s	object:dependencies.unzip-stream
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-S5wqyz0DXnNJPd\/xfIzZ5Xnp1HrJWBczg8mMfMpN78OJ5eDxXyf+Ygld9wX1DnUWbIbh/;"	s	object:dependencies.jest-serializer
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-SEQu7vl8KjNL2eoGBLF3+wAjpsNfA9XMlXAYj\/3EdaNfAlxKthD1xjEQfGOUhllCGGJV/;"	s	object:dependencies.human-signals
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-SEYeGAIQIQX8NN6LDKprLjbrd5dARM5EXsd8GI\/A5l0apYI1fGMWgPHSe4ZKL4eozlAy/;"	s	object:dependencies.@types/glob
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-SbehVj+zL0QFTufW3HP\/Xvwr\/kFWw1sFMLCvmyJdp5Xegbo81sqA2tByWlyeryvSwWB/;"	s	object:dependencies.@types/debounce
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-TLz+x\/vEXm\/Y7P7wn1EJFNLxYpUD4TgMosxY6fAVJUnJMbupHBOncxyWUG9OpTaH9EB/;"	s	object:dependencies.detect-newline
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-TTlYpa+OL+vMMNG24xSlQGEJ3B\/RzEfUlLct7b5G\/ytav+wPrplCpVMFuwzXbkecJrb/;"	s	object:dependencies.ret
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-TopkMDmLzq8ngChwRlyjR6raKD6gMSae4JdYDB8bByKreQgG0RBTuKe9LRxW3wFtUnjxO/;"	s	object:dependencies.@babel/helper-validator-option
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-TpfaviN1R2pQWkIihlfEanwOXK0zcxrKEE4MlU6Tn7keoXdN6\/3gK\/xl0yEh8DOunn5/;"	s	object:dependencies.jest-get-type
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-TsdRgvBFHMyHOOzcP9S6QU0QQtjxlRpEYOy3mcCO5RgmC305ki42aSAmfZEMSSYBla2oZ/;"	s	object:dependencies.@babel/traverse
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-TxNb7YEUwkLXCQYeudi6lgQ\/SZrzNO4kMdlqVxaZPUIUjCv6iSSypUQX70kNBSERpQ8f/;"	s	object:dependencies.v8-to-istanbul
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Ty1vmF4NHJkolaEmdjtxTfSfkdb8Ywarwf63f+F8\/mDD1uLSSWDxDuMiZxiPhwunLrn9/;"	s	object:dependencies.jsdom
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-U9nH88a3fc\/ekCF1l0\/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m/;"	s	object:dependencies.reusify
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-UIcJDjX7IFkck7cSkNNyzIz5FyvpQfY7sdzVy+wkKN\/BLaD4DQ0ppXQrKePomCxTS7Rr/;"	s	object:dependencies.vscode-languageserver-textdocument
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Ug69mNOpfvKDAc2Q8DRpMjjzdtrnv9HcSMX+4VsZxD1aZ6ZzrIE7rlzXBtWTyhULSMKg0/;"	s	object:dependencies.read-pkg
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-UiUIqxMgRDET6eR+o5HbfRYP1l0hqkWOs7vNxC\/mggutCMUIhWMm8gAHb8tHlyfD3\/l/;"	s	object:dependencies.istanbul-lib-coverage
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz\/h0Plj6enJqjz1Zbq2l5Wa/;"	s	object:dependencies.source-map
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-V2hovdzFbOi77\/WajaSMXk2OLm+xNIeQdMMuB7icj7bk6zi2F8GGAxigcnDFpJHbNyNc/;"	s	object:dependencies.rfdc
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-V3ts7zMSu5lfiwWDVWzRDGIN+lnCEUdaXgtVHJgLb1rGaA6jMrtB9EmE7L18foXJIE8Un/;"	s	object:dependencies.@babel/helper-validator-identifier
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-VUJ49FC8U1OxwZLxIbTTrDvLnf\/6TDgxZcK8wxR8zs13xpx7xbG60ndBlhNrFi2EMuFR/;"	s	object:dependencies.signal-exit
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-V\/JgOLFCS+R6Vcq0slCuaeWEdNC3ouDlJMNIsacH2VtALiu9mV4LPrHc5cDl8k5aw6J8/;"	s	object:dependencies.fs-minipass
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-VjeHSlIzpv\/NyD3N0YuHfXOPDIixcA1q2ZV98wsMqcYlPmv2n3Yb2lYP9XMElnaFVXg5/;"	s	object:dependencies.@istanbuljs/load-nyc-config
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Vr64xFDT8w30wFll643e7cGrIkPEU50yIiI36OdSIDoSGguIeaLzBo0vpGvzo9RECUqq7/;"	s	object:dependencies.eslint
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Vs0hm0vPahPMYi9tDjtP66llufgO3ST16WXaSTtDGEl9cewAl3AibmxWw6TINOqHPT9z0/;"	s	object:dependencies.@types/babel__traverse
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-WKJob0P\/Em2csiVthsI68p6aGKTIcsfjH9Gsx1f0A3Italz43e3ho0geSAVsmj09RWOE/;"	s	object:dependencies.jest-watcher
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-WRoDn\/\/mXBiJ1H40rqa3vH0toePwSsGb45iInWlTySa+Uu4k3tYUSxa2v1KqAiLtvlr/;"	s	object:dependencies.mixin-deep
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-WjKPNJF79dtJAVniUlGGWHYGz2jWxT6VhN\/4m1NdkbZ2nOsEF+cI1Edgql5zCRhs\/Vs/;"	s	object:dependencies.graceful-fs
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55\/tb6DuqyF6pcQ5AbiHEshaDpY9v6/;"	s	object:dependencies.dir-glob
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Wm6ukoaOGJi\/73p\/cl2GvLjTI5JM1k\/O14isD73YML8StrH\/7\/lRFgmg8nICZgD3/;"	s	object:dependencies.atob
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Wonm7zOCIJzBGQdB+thsPar0kYuCIzYvxZwlBa87yi\/Mdjv7Tip2cyVbLj5o0cFPN4EV/;"	s	object:dependencies.source-map-support
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Wspk\/PqO+4W9qp5iUTJsa1B\/QrYn1keNCcEP5OvP7WBwT4KaDly0uONYmC6Xa3Z5Iqn/;"	s	object:dependencies.browserslist
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-WuNqLTbMI3tmfef2TKxlQmAiLHKtFhlsCZnPIpuv2Ow0RDVO8lfy1Opf4NUzlMXLjPl+M/;"	s	object:dependencies.pirates
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-X5eWTSXO\/BJmpdIKCRuKUgSCgAN0OwliVK3yPKbwIWU1Tdw5BRajxlzMidvh+gwko9Af/;"	s	object:dependencies.data-urls
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-XGZnNzm3QvgKxa8dpzyhFTHmpP3l5YNusmne07VUOXxou9CqUqYa\/HBy124RqtVh\/O2/;"	s	object:dependencies.mime-types
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-XRsRjdf+j5ml+y\/6GKHPZbrF\/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprV/;"	s	object:dependencies.punycode
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqd/;"	s	object:dependencies.type-check
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orG/;"	s	object:dependencies.@babel/plugin-syntax-object-rest-spread
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-YHlVIjP5nfEyjlrSr8t\/YdNfU\/1XEt7c5b4OxcXCjyRhjzLYu\/rO69\/WHPuYcbCWk/;"	s	object:dependencies.@jest/test-sequencer
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-YM4WIsmurrp0rHX6XiXQppqKB8Ne5ATiZLJe2+\/fkp9l9ExXFr43BbAbjZaVrpCT+tuP/;"	s	object:dependencies.eslint-plugin-jsdoc
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-YSCOwxvTYEIMSGaBQb5kDDsCopDdiUGsqpatp3fOlI4+2HQSkTmEVWnVuySdAC5EWCqSW/;"	s	object:dependencies.@babel/highlight
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7v/;"	s	object:dependencies.safer-buffer
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-YfJT7rkpQB0updsdHLGWrvhBJfcfzNNawYDNIyQXJz0IViGf75O8EBPKSdvw2rF+LGCsX/;"	s	object:dependencies.is-ci
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-YmhHDO4MzaDLB+M9ym\/mDA5z0naX8j7SIlT8f8z+I0VtzsRbekxEutHSme7NPS2qE8St/;"	s	object:dependencies.ws
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-Yqfm+XDx0+Prh3VSeEQCPU81yC+JWZ2pDPFSS4ZdpfZhp4MkFMaDC1UqseovEKwSUpnIL/;"	s	object:dependencies.@babel/plugin-syntax-import-meta
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-YvdtlVm9t3k777c5NPQIv6cxFFFapys25HiUmuSgHwIZhfifweR5c5Sf5nwE3MAbfu327/;"	s	object:dependencies.babel-preset-jest
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-YwYcCwAnNmOVsZ8mr3GfnzdXDAl4LaenZP5z+G0c8bzC9\/dugL8zRmxZzdoTl4IaS3Cr/;"	s	object:dependencies.@jest/source-map
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-YyFjePHHp1LzpzYcmgqkJ0nm0gg\/lJx2aZFzFy1S6eUqNjXsOqTK10zNRff2dNfssgok/;"	s	object:dependencies.jest-mock
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR\/g7rd0xUimYNlvZRE\/K2MgZTjWy725/;"	s	object:dependencies.is-binary-path
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ZOIzd8yVsQQA7j8GCSlPGXwg5PfmA1mrq0JP4nGhh54LaKN3xdai\/vHUDu74pKwV8Oxs/;"	s	object:dependencies.regexpp
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ZPafIPSwzUlAoWT8DKs1W2VyF2gOWthGd5NGFMsBcMMol+ZhK+EQY\/e6V96poa6PA\/B/;"	s	object:dependencies.@babel/helper-plugin-utils
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ZQl7LOWaF5ePqqcX4hLuv\/bLXYQNfNWw2c0\/yX\/TsPRKamzHcTGQnlCjHT3TsmkOUV/;"	s	object:dependencies.acorn-globals
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ZXRY4jNvVgSVQ8DL3LTcakaAtXwTVUxE81hslsyD2AtoXW\/wVob10HkOJ1X\/pAlcI7D/;"	s	object:dependencies.@istanbuljs/schema
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-\/5CMN3T0R4XTj4DcGaexo+roZSdSFW\/0AOOTROrjxzCG1wrWXEsGbRKevjlIL+ZDE4s/;"	s	object:dependencies.normalize-package-data
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-\/65lxR\/CuLJoOdzTjOTYUPWS7k5qzaWese4PObnWc6jwLryUrSa7DslYfaRXigh5\/x/;"	s	object:dependencies.vscode-languageserver
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-\/7xxiGA57xMo\/P2GVvdEumr8ONhFOhfgq2ihK3h1e6THqzTAkHbkXgB0xI9yeTfIUoH/;"	s	object:dependencies.@babel/template
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-\/\/88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBE/;"	s	object:dependencies.p-limit
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-\/b4ZVsG7Z5XVtIxs\/h9W8nvfLgSAyKYdtGWQLbqy6jA1icmgjf8WCoTKgeS4wy5tYaP/;"	s	object:dependencies.is-date-object
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-\/tTrYOC7PPI1nUAgx34hUpqXuyJG+DTHJTnIULG4rDygi4xu\/tfgmq1e1cIRwRzwZgo/;"	s	object:dependencies.spdx-exceptions
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-a+UqTh4kgZg\/SlGvfbzDHpgRu7AAQOmmqRHJnxhRZICKFUT91brVhNNt58CMWU9PsBbv/;"	s	object:dependencies.colors
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA\/R+UlWDzfnHFC/;"	s	object:dependencies.@babel/plugin-syntax-nullish-coalescing-operator
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-aW35yZM6Bb\/4oJlZncMH2LCoZtJXTRxES17vE3hoRiowU2kWHaJKFkSBDnDR+cm9J+9Q/;"	s	object:dependencies.decompress-response
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-abv\/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol\/doWcdA4ZqsWQ8ENrFKk/;"	s	object:dependencies.merge-stream
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-adbxcyWV46qiHyvSp50TKt05tB4tK3HcmF7\/nxfAdhnox83seTDbwnaqKO4sXRy7roHA/;"	s	object:dependencies.execa
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-aePbxDmcYW++PaqBsJ+HYUFwCdv4LVvdnhBy78E57PIor8\/OVvhMrADFFEDh8DHDFRv\//;"	s	object:dependencies.yargs
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc\/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAH/;"	s	object:dependencies.path-exists
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-anKkLmZZ+xm4p8JWBf4hElkM4XR+EZeA2M9BAkkTldmcyDY4mbdIJnRghDJH3Ov5ooY7\//;"	s	object:dependencies.@types/graceful-fs
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-aq6gF1BEKje4a9i9+5jimNFIpq4Q1WiwBToeRK5NvZBd\/TRsmW8BsJfOEGkr76TbOyPV/;"	s	object:dependencies.follow-redirects
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-atgKpRHnaA2OvByG\/HpGA4g6CSPS\/1LK0jK3gATJAoptC1ojltpmVlYC3TYgdmGp+GL/;"	s	object:dependencies.jest-runner
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-avDYr0SB3DwO9zsMov0gKCESFYqCnE4hq\/4z3TdUlukEy5t9C0YRq7HLrsN52NAcqXKa/;"	s	object:dependencies.is-descriptor
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ayCKvm\/phCGxOkYRSCM82iDwct8\/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/;"	s	object:dependencies.parse-json
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-b5lim54JOPN9HtzvK9HFXvBma\/rnfFeqsic0hSpjtDbVxR3dJKLc+KB4V6GgiGOvl7CY/;"	s	object:dependencies.whatwg-encoding
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+l/;"	s	object:dependencies.braces
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-bAxsR8BVfj60DWXHE3u30oHzfl4G7khkSuPW+qvpd7jFRHm7dLxOjUk1EHACJ\/hxLY8p/;"	s	object:dependencies.minizlib
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-bCYeRA2rVibKZd+s2625gGnGF\/t7DSqDs4dP7CrLA1m7jKWz6pps0LpYLJN8Q64HtmPK/;"	s	object:dependencies.is-potential-custom-element-name
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-bIomtDF5KGpdogkLd9VspvFzk9KfpyyGlS8YFVZl7TGPBHL5snIOnxeshwVgPteQ9b4Ey/;"	s	object:dependencies.chownr
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-bLGGlR1QxBcynn2d5YmDX4MGjlZvy2MRBDRNHLJ8VI6l6+9FUiyTFNJ0IveOSP0bcXgVD/;"	s	object:dependencies.sisteransi
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-bXdQWkECBUIAcCkeH1unwJLIpZYaa5VvuygSyS\/c2lf719mTKZDU5UdDRlpd01UjADgm/;"	s	object:dependencies.is-boolean-object
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2/;"	s	object:dependencies.ansi-regex
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-bn0S6flG\/j0xtQdz3hsjJ624h3W0r3llttBMfyHX3YrZ\/KtLYr15bjA0FXkgW7FpvrD/;"	s	object:dependencies.@babel/generator
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-bwZdv0AKLpplFY2KZRX6TvyuN7ojjr7lwkg6ml0roIy9YeuSr7JS372qlNW18UQYzgYK9/;"	s	object:dependencies.which-boxed-primitive
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-c16LpFRkR8vQXyHZ5nLpY35JZtzj1PQY1iZmesUbf1FZHbIupcWfjgOXBY9YHkLEQ6puz/;"	s	object:dependencies.istanbul-lib-source-maps
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-c3mAZEuK0lvBp8tmuL74XRKn1+y2dcwOUpH7x4WrF6gk1GIgiluDRgMYQtw2OFcBvAJWl/;"	s	object:dependencies.@types/istanbul-reports
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-cAGWPIyOHU6zlmg88jwm7VRyXnMN7iV68OGAbYDk\/Mh\/xC\/pzVPlQtY6ngoIH\/5\//;"	s	object:dependencies.test-exclude
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-cCDispWt5vHHtwMY2YrAQ4ibFkAL8RbH5YGBnZBc90MolvvfkkQcJro\/aZiAQUlQ3qgr/;"	s	object:dependencies.esquery
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-cMhu7c\/8rdhkHXWsY+osBhfSy0JikwpHK\/5+imo+LpeasTF8ouErHrlYkwT0++njiyu/;"	s	object:dependencies.readdirp
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-cOYcUWwhCuHCXi49RhFRCyJEK3iPj1Ziz9DpViV3tbZOwXD49QzIN3MpOLJNxh2qwq2lJ/;"	s	object:dependencies.spdx-correct
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-cPiFOTLUKvJFIg4SKVScy4ilPPW6rFgMgfuZJPNoDuMs3nC1HbMUycBoJw77xFIp6z1UJ/;"	s	object:dependencies.source-map-url
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-cTIB4yPYL\/Grw0EaSzASzg6bBy9gqCofvWN8okThAYIxKJZC+udlRAmGbM0XLeniEJSs/;"	s	object:dependencies.is-generator-fn
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-cbqHunsQWnJNE6KhVSMsMeH5H\/L9EpymbzqTQ3uLwNCLZ1Q481oWaofqH7nO6V07xlXw/;"	s	object:dependencies.spdx-expression-parse
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-chXa79rL\/UC2KlX17jo3vRGz0azaWEx5tGqZg5pO3NUyEJVB17dMruQlzCCOfUvElghK/;"	s	object:dependencies.has-symbols
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-cwESVXlO3url9YWlFW\/TA9cshCEhtu7IKJ\/p5soJ\/gGpj7vbvFrAY\/eIioQ6Dw23K/;"	s	object:dependencies.use
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-cxWFQVseBm6O9Gbw1IWb8r6OS4OhSt3hPZLkFApLjM8TEXROBuQGLAH2i2gZpcXdLBIrp/;"	s	object:dependencies.@types/json-schema
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-d5adCgRHB+NAme23hkiTkvpfZUDqoNtL2Sr2nZBJqSj3zyHLxsfFWsGQ2sK2z9aX6L1xk/;"	s	object:dependencies.@types/marked
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV\/4+/;"	s	object:dependencies.@babel/plugin-syntax-logical-assignment-operators
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-dNGGjzuEzCE3d5EPZQ\/QGtmlMotqnYWD\/QpCZ1UuZlrMAdhG5rldh0N0haCvhGnUkSe/;"	s	object:dependencies.eslint-plugin-jest
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU\/uBL\/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo/;"	s	object:dependencies.color-name
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-dcS1ul+9tmeD95T+x28\/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcr/;"	s	object:dependencies.kind-of
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6\/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXO/;"	s	object:dependencies.ieee754
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf/;"	s	object:dependencies.chalk
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-dm9s5Pw7Jc0GvMYbshN6zchCA9RgQlzzEZX3vylR9IqFfS8XciblUXOKfW6SiuJ0e13eD/;"	s	object:dependencies.flat-cache
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-e5mCJlSH7poANfC8z8S9s9S2IN5\/4Zb3aZ33f5s8YqoazCFzNLloLU8r5VCG+G7WoqLv/;"	s	object:dependencies.object-inspect
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX\/SVeJBDM\/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/;"	s	object:dependencies.esprima
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-eQ9qFW\/fhfGJF8WKHGEHZEyVWfZxrT+6CLIJGBcZPfxUh\/+BnEj+UCGYMlr9qZuX\/2/;"	s	object:dependencies.@types/uuid
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL/;"	s	object:dependencies.kleur
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-eXK1UInq2bPmjyX6e3VHIzMLobc4J94i4AWn+Hpq3OU5KkrRC96OAcR3PRJ\/pGu6m8TR/;"	s	object:dependencies.is-windows
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-easWIJXIw71B2RdR8kgqpjQrbMRWQBgiBwXYEhtGUTaX+doCjBheluShdDMeR8IMfJiTq/;"	s	object:dependencies.jest-haste-map
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ecNRHw4clCkowNOBJH1e77nvbPxHYnWIXMv1IAoG\/9+MYGkgoyr3Ppxr7XYFNL41V422/;"	s	object:dependencies.@types/fs-extra
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-eyTcpKOcamdhWJXj56DpQMo1ylSQpcGtGKXcU0Tb97+K56\/CF5amAqqqNj0+KvA0iw2y/;"	s	object:dependencies.date-format
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-f+8cldu7X\/y7RAJurMEJmdoKXGB\/X550w2Nr3tTbezL6RwEE\/iMcm+tZnXeoZtKuOq/;"	s	object:dependencies.json5
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5\/VKPp5tTpWIV4JHHZK1\/BxbFRtf\/siA2SWTe/;"	s	object:dependencies.has
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-f3qQ9oQy9j2AhBe\/H9VC91wLmKBCCU\/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xl/;"	s	object:dependencies.fast-deep-equal
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-f5j5b\/Gf71L+dbqxIpQ4Z2WlmI\/mPJ0fOkGGmFgtb6sAu97EPczzbS3\/tJKxmcYDj5/;"	s	object:dependencies.@types/normalize-package-data
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-fABclAX2QIEDmTMk6Yd7Muv1CzFLwWM4505nETzRHpP3br6jfahD9UUJkhnJ\/g2m7lwf/;"	s	object:dependencies.@typescript-eslint/eslint-plugin
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-fC6QCp7Sc5sX6g8Tvbmj4XUTbyrik0akgRy03yjXbQaBWWNWGE7SGtJk98m0N8nzegD\//;"	s	object:dependencies.@jest/types
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-fDS7szLcY9sCtIip8Fjry9oGf3I2ht\/QT21bAHm5Dmf0mD4X3ReNUf17y+bO6fR8WgbI/;"	s	object:dependencies.jest-changed-files
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-fKzAra0rGJUUBwGBgNkHZuToZcn+TtXHpeCgmkMJMMYx1sQDYaCSyjJBSCa2nH1DGm7s3/;"	s	object:dependencies.is-wsl
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-fcwX4mndzpLQKBS1DVYhGAcYaYt7vsHNIvQV+WXMvnow5cgjPphq5CaayLaGsjRdSCKZF/;"	s	object:dependencies.throat
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ffdmosjA807y7+lA1NM0jELARVmYul\/715xiILEjo3hBLPTcirgQNnXECn5g3mtR8TOL/;"	s	object:dependencies.globby
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVq/;"	s	object:dependencies.@babel/plugin-syntax-class-properties
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-fpoe2T0RbHwBTBUOftAfBPaDEi06ufaUai0mE6Yn1kacc3SnTErfb\/h+X94VXzI64rKF/;"	s	object:dependencies.nanomatch
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-fy+R77xWv0AiqfLl4nuGUlQ3\/6b5uNfQ4WAbGQVMYshCTCCPK9psC1nWh3XHuxGVCtlc/;"	s	object:dependencies.whatwg-url
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-g3FeP20LNwhALb\/6Cz6Dd4F2ngze0jz7tbzrD2wAV+o9FeNHe4rL+yK2md0J\/fiSf1s/;"	s	object:dependencies.make-dir
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz/;"	s	object:dependencies.slash
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-gDKb8aZMDeD\/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2B/;"	s	object:dependencies.path-type
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-gKXj5ALrKWQLsYG9jlTRmR\/xKluxHV+Z9QEwNIgCfM1\/uwPMCuzVVnh5mwTd+OuBZcw/;"	s	object:dependencies.ansi-escapes
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-gL\/\/fkxfWUsIlFL2Tl42Cl6+HFALEaB1FU76I\/Fy+oZjRreP7OPMXFlGbxM7NQsI0Z/;"	s	object:dependencies.stack-utils
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-gQxTNE\/GAfIIrmHLUE3oJyp5FO6HRBfhjnw4\/wMmA63ZGDJnWBmgY\/lyQBpnDUkGmA/;"	s	object:dependencies.bser
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-gXx7jAWpMddu0f7a+L+txMplp3FnHl53OhQIF9puXKq3hDGY\/GjH+MF04oWnV\/adPSC/;"	s	object:dependencies.@types/node
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-h2AatdwYH+JHiZpv7pt\/gSX1XoRGb7L\/qSIeuqA6GwYoF9w1vP1cw42TO0aI2pNyshR/;"	s	object:dependencies.nwsapi
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-h2bW53APG4HvkOnVMo8q3QXa6pcaNt1HkwVsOPMBV6LD\/q9oSpxNSYZQYkAnjdMjrJ86/;"	s	object:dependencies.@jest/reporters
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-h2iAoN838FqAFJY2\/qVpzFXy+EBxfVE220PalAqQLDVsFOHLJrZvut5puAbCdNv6WJk+/;"	s	object:dependencies.fs-extra
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI\/yqXiFR5md/;"	s	object:dependencies.is-plain-object
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-hhbzAgTIX8O7SHfp2c8\/kREfEn4qO\/9q8C9beyY6+tvZ87EpoZ3i1RIEvp27YBswnNb/;"	s	object:dependencies.sane
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-i2wXrWQNkH6JplJQGn3Rd2I4Pij8GdHkXwHMxm+zV5YG\/Jci+bCNrWZEWC4o+umiDkRr/;"	s	object:dependencies.@babel/compat-data
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-i4xlXpsVSMeKvg2cEKdfhh0H39qlJlP5Ex1yQxwF9ubahboQYMgTtz5oML35AVA3B4Eu+/;"	s	object:dependencies.jest-leak-detector
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-iBPtljfCNcTKNAto0KEtDfZ3qzjJvqE3aTGZsbhjSBlorqpXJlaWWtPO35D+ZImoC3KWe/;"	s	object:dependencies.collect-v8-coverage
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-iCuPHDFgrHX7H2vEI\/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187uf/;"	s	object:dependencies.brace-expansion
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+U/;"	s	object:dependencies.cross-spawn
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ixT2L5THXsApyiUPYKmW+2EHpXXe5Ii3M+f4e+aJFAHao5amFRW6J0OO6c\/LU8Be47ut/;"	s	object:dependencies.object.assign
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGSh/;"	s	object:dependencies.ajv
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-jB5AmTKOCSJIZ72sd78ECEhuPiDMKlQdDI\/4QRI6lzYATx5SSogS1oQA2AoPecRCknm3/;"	s	object:dependencies.@babel/core
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-jDctJ\/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7bl/;"	s	object:dependencies.binary-extensions
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-jgPqCruTlt3Kwqg5\/WVFyHIOJHsiAvhcp2qiR2QQstuG9yWox5+iHpU3ZrcBxW14T4fe/;"	s	object:dependencies.jest-environment-jsdom
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-jh6e984OBfvxS50tdY2nRZnoC5\/mLFKOREQfw8t5yytkoUsJRNxvI\/E39qu1sD0OtWI/;"	s	object:dependencies.string.prototype.trimstart
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-jrTA2jJIL6\/DAEILBEh2\/w9QxCuwmvNXIry39Ay\/HVfhE3o2yVV0U44blYkqdHA\/O/;"	s	object:dependencies.jsdoctypeparser
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-jwK2UV4cnPpbcG7+VRARKTZPUWowwXA8bzH5NP6ud0oeAxyYPuGZUAC7hMugpCdz4BeSZ/;"	s	object:dependencies.define-property
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX\/TJjGJZHuh9B2UxbsaEkmlEo9M/;"	s	object:dependencies.escalade
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-k0zdNgqWTGA6aeIRVpvfVob4fL52dTfaehylg0Y4UvSySvOq\/Y+BOyPrgpUrA7HylqvU/;"	s	object:dependencies.http-proxy-agent
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX\/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1\/y/;"	s	object:dependencies.shebang-command
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-kPKUrQtc8aYwBV7CqBg5pu+tmYXlvFlSFYn18ev4gPFtrRzB15N2gW\/Roew3187q2w2e/;"	s	object:dependencies.jest-jasmine2
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-kQ5JNTrbDv3Rp5X2n\/iUu37IJBDU2gsZ5R\/g1\/KHOOEc5IKfUFjXT6DENPGduh08I\//;"	s	object:dependencies.@types/yargs
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6\/8ij300KBWTJq32P\/dYeWTSwK41WyTxalN1eRmA5Z9U/;"	s	object:dependencies.esutils
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-kWWXztvZ5SBQV+eRgKFeh8q5sLuZY2+8WUIzlxWVTg+oGwY14qylx1KbKzHd8P6ZYkAg0/;"	s	object:dependencies.char-regex
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-kWZrnVM42QCiEA2Ig1bG8zjoIMOgxWwYCEeNdwY6Tv\/cOSeGpcoX4pXHfKUxNKVoArnr/;"	s	object:dependencies.get-intrinsic
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-k\/vGaX4\/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoI/;"	s	object:dependencies.inherits
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/;"	s	object:dependencies.onetime
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-l8lCEmLcLYZh4nbunNZvQCJc5pv7+RCwa8q\/LdUx8u7lsWvPDKmpodJAJNwkAhJC\/\//;"	s	object:dependencies.v8-compile-cache
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-lCj4aIs0xUefJFQnwwQv2Bxg7Omd6bgquZ6LGC+gGMh6\/s5qDVfjuCMlDmYQ15SLsWHd/;"	s	object:dependencies.@babel/types
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-lGS5PXGAzR4RF7V5+XObhqz2KZIDUA1yD0DG6pBVmy10eh0ZIXQImRuzocsI\/N2XZ1Gr/;"	s	object:dependencies.jest
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-lY1Q\/PiJGC2zOv\/z391WOTD+Z02bCgsFfvxoXXf6h7kv9o+WmsmzYqrAwY63sNgOxE4/;"	s	object:dependencies.picomatch
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT\/ZgrFbXlDNi/;"	s	object:dependencies.@babel/plugin-syntax-json-strings
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-lhd\/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8/;"	s	object:dependencies.fast-json-stable-stringify
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-llnc8vQgYcNqDrqRDXWwMr9i7rS5XFiCwvh6DTP7Jqa2mqpcCBBlpCbn+trkG0KNhPu\//;"	s	object:dependencies.jest-matcher-utils
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-lrzyR3N8sacTAMeonbqpnSka1dHNux2uk0qqDXVkMv2c\/A3wYnvQ4EXuI013Y6+gSKSC/;"	s	object:dependencies.jest-runtime
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-mAlWowT4A6h0TC9F+J5pdbEhjNiEMO+kqPKQ4sc3fVieKL71dEqfkKgtcFVSX3cjSBwYw/;"	s	object:dependencies.@typescript-eslint/experimental-utils
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-mHKK3iUXL+3UF6xL5k0PEhKRUBKPBCv\/+RkEOpjRWxxx27KKRBmmA60A9pgOUvMi8GKh/;"	s	object:dependencies.tsutils
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-mYtLl1xfZLi1m4RtQYlZgJUNQjl4ZxVnHzIR8nLLgi4q1YT8o\/WM+MK\/f8yfcc9s5Ir/;"	s	object:dependencies.debounce
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-mbKkMdQKsjX4BAL4bRYTj21edOf8cN7XHdYUJEe+Zn99hVEYcMvKPct1IqNe7+AZPirn8/;"	s	object:dependencies.snapdragon-util
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-mmHKys\/C8BFUGI+MAWNcSYoORYLMdPzjrknd2Vc+bUsjN5bXcr8EhrNB+UTqfL1y3I9c/;"	s	object:dependencies.escodegen
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-mxIDAb9Lsm6DoOJ7xH+5+X4y1LU\/4Hi50L9C5sIswK3JzULS4bwk1FvjdBgvYR4bzT4t/;"	s	object:dependencies.hosted-git-info
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-nFy+fHl28zUrRsCeMB61VDThV1pVTtlEokBRgqPrcT1JNq4yRNIyTHfyht6PqtUvY9Isu/;"	s	object:dependencies.@jest/environment
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-nQIr12dxV7SSxE6r6f1l3DtAeEYdsGpps13dR0TwJg1S8gyp4ZPgy3FZcHBgbiQqnoqST/;"	s	object:dependencies.es-abstract
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-nQn+hI3yp+oD0huYhKwvYI32+JFeq+XkNcD1GAo3Y\/MjxsfVGmrrzrnzjWiNY6f+pUCP/;"	s	object:dependencies.exec-sh
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-nQyp0o1\/mNdbTO1PO6kHkwSrmgZ0MT\/jCCpNiwbUjGoRN4dlBhqJtoQuCnEOKzgTVwg/;"	s	object:dependencies.acorn
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-nfMOlASu9OnRJo1mbEk2cz0D56a1MBNrJ7orjRZQG10XDyuvwksKbuXNp6qa+kbn839Hw/;"	s	object:dependencies.rsvp
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-o50j0JeToy\/4K6OZcaQmW6lyXXKhq7csREXcDwk2omFPJEwUNOVtJKvmDr9EI1fAJZUy/;"	s	object:dependencies.yargs-parser
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-o5Roy6tNG4SL\/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGv/;"	s	object:dependencies.argparse
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-oJP\/9NAdd9+x2Q+rfphB2RJCHjod70RcRLjosiPMMu5gjIfwVnOUGq2nbTjTUbmy0DJ\//;"	s	object:dependencies.node-notifier
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uh/;"	s	object:dependencies.path-key
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-okMH7OXXJ7YrN9Ok3\/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo\/QEZoqwZkYaIDk3jV/;"	s	object:dependencies.js-yaml
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-olV41bKSMm8BdnuMsewT4jqlZ8+3TCARAXjZGT9jcoSnrfUnRCqnMoF9XEeoWjbzObpqF/;"	s	object:dependencies.jest-pnp-resolver
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-p3pvU7r1MyyqbTk+WbNJIgJjG2VmTIaB10rI93LzVPrmDJKkzKYMtxxyAvQXR\/NS6otu/;"	s	object:dependencies.cssom
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-pRmzw\/XUcwXGpD9aI9q\/0XOwLNygjETJ8y0ao0wdqprrzDa4YnxLcz7fQRZr8voh8V1/;"	s	object:dependencies.micromatch
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-pVwUjJkxbhe4RY8QEWzN3vns2kqyuldKpxlxJlzEYfKSvY6\/bMvxoFrYYzUO1Gx28yKW/;"	s	object:dependencies.jest-resolve-dependencies
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw\/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XR/;"	s	object:dependencies.debug
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-pb\/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp\/+vgZqsCGJapvy8N3Q+/;"	s	object:dependencies.resolve-from
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-pd8DCoxmbgc7hyPKOvxtqNcjYoOsABPQdcCUjGp3d42VR2CX1ORhk2A87oqqu5R1kk+76/;"	s	object:dependencies.bs-logger
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-pjzuKtY64GYfWizNAJ0fr9VqttZkNiK2iS430LtIHzjBEr6bX8Am2zm4sW4Ro5wjWW5cA/;"	s	object:dependencies.get-package-type
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-pl4Q+GAVOHwvjrck6jKjvmGhnO3jHX\/xuB9d27f+EJZ\/6k+6nMuPjorrYp7s++bKKdA/;"	s	object:dependencies.babel-jest
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-plGgXAPfVKFoYfa9NpYDAkseG+g6Jr294RqeqcqDixSbU34MZVJRi\/P+7Y8GDpzkEwLa/;"	s	object:dependencies.@types/istanbul-lib-report
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-q5XPytqFEIKHkGdiMIrY10mvLRvnQh42\/+GoBlFW3b2LXLE2xxJpZFdm94we0BaoV3Rw/;"	s	object:dependencies.side-channel
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-qBIvFLGiBpLjfwmYAaHPXsn+ho5xZnGvyGvsarywGNc8VyQJUMHJ8OBKGGrPER0okBeMD/;"	s	object:dependencies.webidl-conversions
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-qOhPa\/Fj7s6TY8H8esGu5QNpMMQxz79h+urzrNYN6mn+9BnxlDGf5QZ+XeCDsxSjPqsS/;"	s	object:dependencies.class-utils
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl\/djYSu2OdQ2Pa302N4oq/;"	s	object:dependencies.fill-range
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-qSVXFz28HM7y+IWX6vLCsexdlvzT1PJNFSBuaQLQ5o0IEw8UDYW6\/2+eCMVyIsbM8CNL/;"	s	object:dependencies.is-regex
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO\/+Lwxc9+0q2wLyv4Dfvt80\/DPn2pq/;"	s	object:dependencies.supports-color
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-qsda+H8jTaUaN\/x5vzW2rzc+8Rw4TAQ\/4KjB46IwK5VH+IlVeeeje\/EoZRpiXvIqjF/;"	s	object:dependencies.leven
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-r5wGx7YeOwNWNlCA0wQ86zKyDLMQr+\/RB8xy74M4hTphfmjlijTSSXGuH8rnvKZnfT9i/;"	s	object:dependencies.flatted
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ\/SOIZwINatK9KY\/tf+Zrly/;"	s	object:dependencies.wrap-ansi
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-rGiLePzQ3AzwUshu2+Rn+UMFk0pHN58sOG+IaJbk5Jxuqo3NYO1U2\/MIR4S1sKgsoYSX/;"	s	object:dependencies.jest-message-util
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-rb6X1W158d7pRQBg5gkR8uPaSfiids68LTJQYOtEUhoJUWBdaQHsuT\/EUduxXYxcrt4r/;"	s	object:dependencies.universalify
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-s8UhlNe7vPKomQhC1qFelMokr\/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0g/;"	s	object:dependencies.make-error
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk\/RyaKWP0PTKyWtmLSM/;"	s	object:dependencies.ms
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-sOxsZOq25mT1wRsfHcbtkInS+Ek7Q8jCHUB0ZUTP0tc\/c41QHriU\/NunqMfCUWsL4H3/;"	s	object:dependencies.jest-resolve
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-scDPs+mELZgsFetTgBSsIxKGrlitn9t\/d2ecP+S1QSIGD+31fkMBEftLfOAX5k3tU06\//;"	s	object:dependencies.@types/jest
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-sz7iLqvVUg1gIedBOvlkxPlc8\/uVzyS5OwGz1cKjXzkl3FpL3al0crU8YGU1WoHkxn0W/;"	s	object:dependencies.@types/istanbul-lib-coverage
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-t5qdIj\/bCj2j7NFVHb2nFB4aUdfucDn3JRKgrZnplb8nieAirAzRSHP8uDEd+qV6ygzg/;"	s	object:dependencies.jest-config
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL\/cvv6HPE5VgvqCuAIDR0NgU52ds6/;"	s	object:dependencies.cliui
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uG/;"	s	object:dependencies.locate-path
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-tC7MKZIMRTYxQhrVAFoJq\/DlRwv1bnqA4\/S2r3+HuHibqvbrPcyf858lNzU7bFmy4mL/;"	s	object:dependencies.@typescript-eslint/typescript-estree
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-tCJDltF83htUtXx5NLcaDqRmknv652ZWCHyoTETf1CXYJdPC7nohZohjUgieXhv0hTJdR/;"	s	object:dependencies.@babel/helper-split-export-declaration
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-tHdtEpQCMrc1YLrMaqXXcj6AxhYi\/xgit6mZu1+EDWUn+qhUf8wMQoFIy9NXuq23zAwt/;"	s	object:dependencies.tough-cookie
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-tHq6qdbT9U1IRSGf14CL0pUlULksvY9OZ+5eEgl1N7t+OA3tGvNpxJCzuKQlsNgCVwbAs/;"	s	object:dependencies.@types/minimatch
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-tJfXmxMeWYnczCVs7XAEvIV7ieppALdyepWMkHkwciRpZraG\/xwT+s2JN8+pr1+8jCRf/;"	s	object:dependencies.union-value
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-tZU\/3NqK3dA5gpE1KtyiJUrEB0lxnGkMFHptJ7q6ewdZ8s12QrODwNbhIJStmJkd1QDX/;"	s	object:dependencies.unbox-primitive
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-thGloWsGH3SOxv1SoY7QojKi0tc+8FnOmiarEGMbd\/lar7QOEd3hvlx3Fp5y6FlDUGl9/;"	s	object:dependencies.typescript
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk\/eDlIXOhb2LHWoLpDF7TEHyl/;"	s	object:dependencies.@babel/plugin-syntax-async-generators
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-uW7fodD6pyW2FZNZnp\/Z3hvWKeEW1Y8R1+1CnErE8cXFXzl5blBOoVB41CvMer6P6Q0S/;"	s	object:dependencies.node-releases
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-uZtkfKblCEQtZKBF6EBXVZeQNl82yqtDQdv+eck8u7tdPxjLu2\/lp5\/uPW+um2tpuxI/;"	s	object:dependencies.tslib
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-uc2Vix1frTfnuzxxu1Hp4ktSvM3QaI4oXl4ZUqL1wjTu\/BGki9TrCWoqLTg\/drR1KwA/;"	s	object:dependencies.cjs-module-lexer
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-un0FmiRUQNr5PJqy9kP7c40F5BOfpGlYTrxonDChEZB7pzZxRNp\/bt+ymiy9\/npwXya/;"	s	object:dependencies.terminal-link
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVG/;"	s	object:dependencies.lodash
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-v3JCNCE64umkFpmkFGqzVKsOT0tN1Zr+ueqLZfpV1Ob8e+CEgPWa+OxCoGH3tnhimMKIa/;"	s	object:dependencies.espree
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL/;"	s	object:dependencies.iconv-lite
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-v9kIhKwjeZThiWrLmj0y17CWoyddASLj9O2yvbZkbvw\/N3rWOYy9zkV66ursAoVr0mV1/;"	s	object:dependencies.@cnakazawa/watch
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-vFwSUfQvqybiICwZY5+DAWIPLKsWO31Q91JSKl3UYv+K5c2QRPzn0qzec6QPu1Qc9eHYI/;"	s	object:dependencies.shellwords
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp\//;"	s	object:dependencies.mkdirp
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xr/;"	s	object:dependencies.import-fresh
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-vjL3+w0oulAVZ0hBHnxa\/Nm5TAurf9YLQJDhqRZyqb+VKGOB6LU8t9H1Nr5CIo16vh9X/;"	s	object:dependencies.import-local
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg\/WmIQ65qoWWhcGKf\/b5eplkkarX0m9z8ppCat4mlOqUsW/;"	s	object:dependencies.prelude-ls
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm\/NOTo0KG7HYHU7/;"	s	object:dependencies.@nodelib/fs.scandir
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-vxENKWBo928ErLiT\/uUv8Sl2EoC5cF3cZzCTc8hDEh9ZAZ75xblJCr72NeJo74lxWaGo/;"	s	object:dependencies.esbuild
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-w2GsyukL62IJnlaff\/nRegPQR94C\/XXamvMWmSHRJ4y7Ts\/4ocGRmTHvOs8PSE6pB3/;"	s	object:dependencies.react-is
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-w94dQYoauyvlDc43XnGB8lU3Zt713vNChgt4EWwhXAP2XkBvndfxF0AgIqKOOasjPIPzj/;"	s	object:dependencies.eslint-utils
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-wENBPt4ySzg4ybFQW2TT1zMQucPK95HSh\/nq2CFTZVOGut2+pQvSsgtda4d26YrYcr06/;"	s	object:dependencies.resolve
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-wcdi+uAKzfiGT2abPpKZ0hSU1rGQjUQnLvtY5MpQ7QCTahD3VODhcu4wcfY1YtkGaDD5y/;"	s	object:dependencies.istanbul-lib-report
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-wmEc8m4fjnob4gt5riFRtTu\/6+4rSe12TpAELNSqHMfF3IqnA+CH37USM6\/YR3qRZv7/;"	s	object:dependencies.table
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-wnTnFlG+YxQm3vDxpGE57Pj0srRU4sHE\/mDkt1qv2YJJSeUAec2ma4WLUnUPeKjyrfnt/;"	s	object:dependencies.@babel/plugin-syntax-bigint
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-wuzZksN4w4kyfoOv\/dlpov4NOunwutLA\/q7uc00xU02ZyUY+aoM5PWIXEKBMnm0NHd4/;"	s	object:dependencies.@types/minipass
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-xJuoT5+L99XlZ8twedaRf6Ax2TgQVxvgZOYoPKqZufmJib0tL2tegPBOZb1pVNgIhlqDl/;"	s	object:dependencies.fast-diff
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU\/Jxzk629Brsab\/mM/;"	s	object:dependencies.json-schema-traverse
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-xkNcLAn\/wZaX14RPlwizcKicDk9G3F8m2nU3L7Ukm5zBgTwiT0wsoFAHx9Jq56fJA1z\//;"	s	object:dependencies.@sinonjs/commons
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-xvV1kKbhfUqFVuZ8Cyo+JPpipAHHAV3kcDBftiduK8EICXmTFddryy3P7NfZt8Pv37rA9/;"	s	object:dependencies.@jest/core
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-xyFwyhro\/JEof6Ghe2iz2NcXoj2sloNsWr\/XsERDK\/oiPCfaNhl5ONfp+jQdAZRQQ0/;"	s	object:dependencies.json-parse-even-better-errors
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-y3bGgqKj3QBdxLbLkomlohkvsA8gdAiUQlSBJnBhfn+BPxg4bc62d8TcBW15wavDfgexC/;"	s	object:dependencies.rc
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-y9xCjw1P23Awk8EvTpcyL2NIr1j7wJ39f+k6lvRnSMz+mz9CGz9NYPelDk42kOz6+ql8x/;"	s	object:dependencies.string.prototype.trimend
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfa/;"	s	object:dependencies.function-bind
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4h/;"	s	object:dependencies.minimatch
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7Uadd/;"	s	object:dependencies.doctrine
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-ycIL2+1V32th+8scbpTvyHNaHe02z0sjgh91XXjAk+ZeXoPN4Z46DVUnzdso0aX4KckKw/;"	s	object:dependencies.p-each-series
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-yjNnPr315\/FjS4zIsUxYguYUPP2e1NK4d7E7ZOLiyYCcbFBiTMyID+2wvm2w6+pZ\/od/;"	s	object:dependencies.enquirer
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-yxJ2mFy\/sibVQlu5qHjOkf9J3K6zgmCxgJ94u2EdvDOV09H+32LtRswEcUsmUWN72pVL/;"	s	object:dependencies.domexception
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-z0yWI+4FDrrweS8Zmt4Ej5HdJmky15+L2e6Wgn3+iK5fWzb6T3fhNFq2+MeTRb064c6Wr/;"	s	object:dependencies.mimic-response
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-z8P5DvDNjKDoFIHK7q8r8lackT6l+jo\/Ye3HOle7l9nICP9lf1Ci25fy9vHd0JOWewkI/;"	s	object:dependencies.w3c-hr-time
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-zGZJzzBUVDo\/eV6KgbE0f0ZI7dInEYvo12Rb70uNQDshC3SkRMb67ja0GgRHZgAX3Za6/;"	s	object:dependencies.@types/babel__core
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-zK0TB7Xd6JpCLmlLmufqykGE+\/TlOePD6qKClNW7hHDKFh\/J7\/7gCWGR7joEQEW1bK/;"	s	object:dependencies.read-pkg-up
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-zUz5JD+tgqtuDjMhwIg5uFVV3dtqZ9yQJlZVfq4I01\/K5Paj5UHj7VyrQOJvzawSVlKp/;"	s	object:dependencies.string-width
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-zWEwIVqnzPkSAXOUlQnPW2oKoYb2aLQ4Q5ejdjBcnH63rfypaW34CxaeBn1VMya2XaEU3/;"	s	object:dependencies.caniuse-lite
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-zZ7uHCWlxfEAAOVDYQpEf\/uyi1dmeC7fX4nCf2iz9drnCwi1zvwXL3HwWWNXUQEJ1k23/;"	s	object:dependencies.@babel/helper-replace-supers
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-zauLjrfCG+xvoyaqLoV8bLVXXNGC4JqlxFCutSDWA6fJrTo2ZuvLYTqZ7aHBLZSMOopbz/;"	s	object:dependencies.bytes
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-zdu8XMNEDepKKR+XYOXAVPtWui0ly0NtohUscw+UmaHiAWT8hrV1rr\/\/H6V+0DvJ3OQ/;"	s	object:dependencies.typedarray-to-buffer
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-zhtMio3Exty18dy8ee8eJ9kjnRyZC1N4C1Nt\/VShN1apyXc8rWGtJ9lI7vqiWcyyXS4B/;"	s	object:dependencies.jest-environment-node
integrity	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "integrity": "sha512-zrMuwHOAQRhjDSnflWdJG+O2ztMWss8GqUUB8dXLR\/FPenwkiBNkMIJJYfSN6sgskvsF/;"	s	object:dependencies.vscode-languageserver-protocol
interface	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "interface": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
internal-slot	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "internal-slot": "^1.0.2",$/;"	s	object:dependencies.string.prototype.matchall.requires
internal-slot	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "internal-slot": {$/;"	o	object:dependencies
internet	.config/openbox/menu.xml	/^<menu id="internet" label="internet">$/;"	i
interpretCode	vim/.vim/plugged/fzf/src/ansi.go	/^func interpretCode(ansiCode string, prevState *ansiState) ansiState {$/;"	f	package:fzf	typeref:typename:ansiState
into	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:h
inv	vim/.vim/plugged/fzf/src/pattern.go	/^	inv           bool$/;"	m	struct:fzf.term	typeref:typename:bool
inverse	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.modifier
io	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
ip	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
ipe	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
ir	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
ire	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
is-accessor-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-accessor-descriptor": "^1.0.0",$/;"	s	object:dependencies.base.dependencies.is-descriptor.requires
is-accessor-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-accessor-descriptor": "^1.0.0",$/;"	s	object:dependencies.define-property.dependencies.is-descriptor.requires
is-accessor-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-accessor-descriptor": "^1.0.0",$/;"	s	object:dependencies.extglob.dependencies.is-descriptor.requires
is-accessor-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-accessor-descriptor": "^1.0.0",$/;"	s	object:dependencies.snapdragon-node.dependencies.is-descriptor.requires
is-accessor-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-accessor-descriptor": "^0.1.6",$/;"	s	object:dependencies.is-descriptor.requires
is-accessor-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-accessor-descriptor": {$/;"	o	object:dependencies.base.dependencies
is-accessor-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-accessor-descriptor": {$/;"	o	object:dependencies.define-property.dependencies
is-accessor-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-accessor-descriptor": {$/;"	o	object:dependencies.extglob.dependencies
is-accessor-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-accessor-descriptor": {$/;"	o	object:dependencies.snapdragon-node.dependencies
is-accessor-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-accessor-descriptor": {$/;"	o	object:dependencies
is-arrayish	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-arrayish": "^0.2.1"$/;"	s	object:dependencies.error-ex.requires
is-arrayish	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-arrayish": {$/;"	o	object:dependencies
is-bigint	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-bigint": "^1.0.1",$/;"	s	object:dependencies.which-boxed-primitive.requires
is-bigint	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-bigint": {$/;"	o	object:dependencies
is-binary-path	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-binary-path": "~2.1.0",$/;"	s	object:dependencies.chokidar.requires
is-binary-path	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-binary-path": {$/;"	o	object:dependencies
is-boolean-object	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-boolean-object": "^1.1.0",$/;"	s	object:dependencies.which-boxed-primitive.requires
is-boolean-object	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-boolean-object": {$/;"	o	object:dependencies
is-buffer	vim/.vim/plugged/coc.nvim/package-lock.json	/^                "is-buffer": "^1.1.5"$/;"	s	object:dependencies.has-values.dependencies.is-number.dependencies.kind-of.requires
is-buffer	vim/.vim/plugged/coc.nvim/package-lock.json	/^                "is-buffer": "^1.1.5"$/;"	s	object:dependencies.sane.dependencies.is-number.dependencies.kind-of.requires
is-buffer	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-buffer": "^1.1.5"$/;"	s	object:dependencies.has-values.dependencies.kind-of.requires
is-buffer	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-buffer": "^1.1.5"$/;"	s	object:dependencies.is-accessor-descriptor.dependencies.kind-of.requires
is-buffer	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-buffer": "^1.1.5"$/;"	s	object:dependencies.is-data-descriptor.dependencies.kind-of.requires
is-buffer	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-buffer": "^1.1.5"$/;"	s	object:dependencies.object-copy.dependencies.kind-of.requires
is-buffer	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-buffer": "^1.1.5"$/;"	s	object:dependencies.snapdragon-util.dependencies.kind-of.requires
is-buffer	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-buffer": "^1.1.5"$/;"	s	object:dependencies.to-object-path.dependencies.kind-of.requires
is-buffer	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-buffer": {$/;"	o	object:dependencies
is-callable	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-callable": "^1.1.4",$/;"	s	object:dependencies.es-to-primitive.requires
is-callable	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-callable": "^1.2.3",$/;"	s	object:dependencies.es-abstract.requires
is-callable	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-callable": {$/;"	o	object:dependencies
is-ci	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-ci": "^2.0.0",$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
is-ci	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-ci": "^2.0.0",$/;"	s	object:dependencies.jest-util.requires
is-ci	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-ci": {$/;"	o	object:dependencies
is-core-module	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-core-module": "^2.2.0",$/;"	s	object:dependencies.resolve.requires
is-core-module	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-core-module": {$/;"	o	object:dependencies
is-data-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-data-descriptor": "^1.0.0",$/;"	s	object:dependencies.base.dependencies.is-descriptor.requires
is-data-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-data-descriptor": "^1.0.0",$/;"	s	object:dependencies.define-property.dependencies.is-descriptor.requires
is-data-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-data-descriptor": "^1.0.0",$/;"	s	object:dependencies.extglob.dependencies.is-descriptor.requires
is-data-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-data-descriptor": "^1.0.0",$/;"	s	object:dependencies.snapdragon-node.dependencies.is-descriptor.requires
is-data-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-data-descriptor": "^0.1.4",$/;"	s	object:dependencies.is-descriptor.requires
is-data-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-data-descriptor": {$/;"	o	object:dependencies.base.dependencies
is-data-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-data-descriptor": {$/;"	o	object:dependencies.define-property.dependencies
is-data-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-data-descriptor": {$/;"	o	object:dependencies.extglob.dependencies
is-data-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-data-descriptor": {$/;"	o	object:dependencies.snapdragon-node.dependencies
is-data-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-data-descriptor": {$/;"	o	object:dependencies
is-date-object	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-date-object": "^1.0.1",$/;"	s	object:dependencies.es-to-primitive.requires
is-date-object	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-date-object": {$/;"	o	object:dependencies
is-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-descriptor": "^0.1.0"$/;"	s	object:dependencies.class-utils.dependencies.define-property.requires
is-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-descriptor": "^0.1.0"$/;"	s	object:dependencies.expand-brackets.dependencies.define-property.requires
is-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-descriptor": "^0.1.0"$/;"	s	object:dependencies.object-copy.dependencies.define-property.requires
is-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-descriptor": "^0.1.0"$/;"	s	object:dependencies.snapdragon.dependencies.define-property.requires
is-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-descriptor": "^0.1.0"$/;"	s	object:dependencies.static-extend.dependencies.define-property.requires
is-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-descriptor": "^1.0.0"$/;"	s	object:dependencies.base.dependencies.define-property.requires
is-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-descriptor": "^1.0.0"$/;"	s	object:dependencies.extglob.dependencies.define-property.requires
is-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-descriptor": "^1.0.0"$/;"	s	object:dependencies.snapdragon-node.dependencies.define-property.requires
is-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-descriptor": "^1.0.2",$/;"	s	object:dependencies.define-property.requires
is-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-descriptor": {$/;"	o	object:dependencies.base.dependencies
is-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-descriptor": {$/;"	o	object:dependencies.define-property.dependencies
is-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-descriptor": {$/;"	o	object:dependencies.extglob.dependencies
is-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-descriptor": {$/;"	o	object:dependencies.snapdragon-node.dependencies
is-descriptor	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-descriptor": {$/;"	o	object:dependencies
is-docker	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-docker": "^2.0.0"$/;"	s	object:dependencies.is-wsl.requires
is-docker	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-docker": {$/;"	o	object:dependencies
is-extendable	vim/.vim/plugged/coc.nvim/package-lock.json	/^                "is-extendable": "^0.1.0"$/;"	s	object:dependencies.sane.dependencies.braces.dependencies.extend-shallow.requires
is-extendable	vim/.vim/plugged/coc.nvim/package-lock.json	/^                "is-extendable": "^0.1.0"$/;"	s	object:dependencies.sane.dependencies.fill-range.dependencies.extend-shallow.requires
is-extendable	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-extendable": "^0.1.0"$/;"	s	object:dependencies.expand-brackets.dependencies.extend-shallow.requires
is-extendable	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-extendable": "^0.1.0"$/;"	s	object:dependencies.extglob.dependencies.extend-shallow.requires
is-extendable	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-extendable": "^0.1.0"$/;"	s	object:dependencies.set-value.dependencies.extend-shallow.requires
is-extendable	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-extendable": "^0.1.0"$/;"	s	object:dependencies.snapdragon.dependencies.extend-shallow.requires
is-extendable	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-extendable": "^0.1.1",$/;"	s	object:dependencies.set-value.requires
is-extendable	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-extendable": "^0.1.1",$/;"	s	object:dependencies.union-value.requires
is-extendable	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-extendable": "^1.0.1"$/;"	s	object:dependencies.extend-shallow.requires
is-extendable	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-extendable": "^1.0.1"$/;"	s	object:dependencies.mixin-deep.requires
is-extendable	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-extendable": {$/;"	o	object:dependencies.extend-shallow.dependencies
is-extendable	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-extendable": {$/;"	o	object:dependencies.mixin-deep.dependencies
is-extendable	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-extendable": {$/;"	o	object:dependencies
is-extglob	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-extglob": "^2.1.1"$/;"	s	object:dependencies.is-glob.requires
is-extglob	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-extglob": {$/;"	o	object:dependencies
is-fullwidth-code-point	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-fullwidth-code-point": "^2.0.0",$/;"	s	object:dependencies.table.dependencies.string-width.requires
is-fullwidth-code-point	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-fullwidth-code-point": "^2.0.0"$/;"	s	object:dependencies.slice-ansi.requires
is-fullwidth-code-point	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-fullwidth-code-point": "^3.0.0",$/;"	s	object:dependencies.string-width.requires
is-fullwidth-code-point	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-fullwidth-code-point": {$/;"	o	object:dependencies.string-width.dependencies
is-fullwidth-code-point	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-fullwidth-code-point": {$/;"	o	object:dependencies
is-generator-fn	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-generator-fn": "^2.0.0",$/;"	s	object:dependencies.jest-jasmine2.requires
is-generator-fn	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-generator-fn": {$/;"	o	object:dependencies
is-glob	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-glob": "^4.0.0",$/;"	s	object:dependencies.eslint.requires
is-glob	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-glob": "^4.0.1"$/;"	s	object:dependencies.glob-parent.requires
is-glob	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-glob": "^4.0.1",$/;"	s	object:dependencies.@typescript-eslint/typescript-estree.requires
is-glob	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-glob": "~4.0.1",$/;"	s	object:dependencies.chokidar.requires
is-glob	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-glob": {$/;"	o	object:dependencies
is-negative-zero	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-negative-zero": "^2.0.1",$/;"	s	object:dependencies.es-abstract.requires
is-negative-zero	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-negative-zero": {$/;"	o	object:dependencies
is-number	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-number": "^3.0.0",$/;"	s	object:dependencies.sane.dependencies.fill-range.requires
is-number	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-number": "^3.0.0",$/;"	s	object:dependencies.sane.dependencies.to-regex-range.requires
is-number	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-number": "^3.0.0",$/;"	s	object:dependencies.has-values.requires
is-number	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-number": "^7.0.0"$/;"	s	object:dependencies.to-regex-range.requires
is-number	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-number": {$/;"	o	object:dependencies.has-values.dependencies
is-number	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-number": {$/;"	o	object:dependencies.sane.dependencies
is-number	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-number": {$/;"	o	object:dependencies
is-number-object	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-number-object": "^1.0.4",$/;"	s	object:dependencies.which-boxed-primitive.requires
is-number-object	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-number-object": {$/;"	o	object:dependencies
is-plain-object	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-plain-object": "^2.0.4"$/;"	s	object:dependencies.extend-shallow.dependencies.is-extendable.requires
is-plain-object	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-plain-object": "^2.0.4"$/;"	s	object:dependencies.mixin-deep.dependencies.is-extendable.requires
is-plain-object	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-plain-object": "^2.0.3",$/;"	s	object:dependencies.set-value.requires
is-plain-object	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-plain-object": {$/;"	o	object:dependencies
is-potential-custom-element-name	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-potential-custom-element-name": "^1.0.1",$/;"	s	object:dependencies.jsdom.requires
is-potential-custom-element-name	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-potential-custom-element-name": {$/;"	o	object:dependencies
is-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-regex": "^1.1.3",$/;"	s	object:dependencies.es-abstract.requires
is-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-regex": {$/;"	o	object:dependencies
is-stream	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "is-stream": "^2.0.0",$/;"	s	object:dependencies.jest-changed-files.dependencies.execa.requires
is-stream	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-stream": "^1.1.0",$/;"	s	object:dependencies.execa.requires
is-stream	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-stream": {$/;"	o	object:dependencies.jest-changed-files.dependencies
is-stream	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-stream": {$/;"	o	object:dependencies
is-string	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-string": "^1.0.5",$/;"	s	object:dependencies.which-boxed-primitive.requires
is-string	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-string": "^1.0.6",$/;"	s	object:dependencies.es-abstract.requires
is-string	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-string": {$/;"	o	object:dependencies
is-symbol	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-symbol": "^1.0.2"$/;"	s	object:dependencies.es-to-primitive.requires
is-symbol	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-symbol": "^1.0.3"$/;"	s	object:dependencies.which-boxed-primitive.requires
is-symbol	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-symbol": {$/;"	o	object:dependencies
is-typedarray	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-typedarray": "^1.0.0"$/;"	s	object:dependencies.typedarray-to-buffer.requires
is-typedarray	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-typedarray": "^1.0.0",$/;"	s	object:dependencies.write-file-atomic.requires
is-typedarray	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-typedarray": {$/;"	o	object:dependencies
is-windows	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-windows": "^1.0.2",$/;"	s	object:dependencies.nanomatch.requires
is-windows	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-windows": {$/;"	o	object:dependencies
is-wsl	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "is-wsl": "^2.2.0",$/;"	s	object:dependencies.node-notifier.requires
is-wsl	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "is-wsl": {$/;"	o	object:dependencies
is24	vim/.vim/plugged/fzf/src/tui/tui.go	/^func (c Color) is24() bool {$/;"	f	type:tui.Color	typeref:typename:bool
isAlphabet	vim/.vim/plugged/fzf/src/options.go	/^func isAlphabet(char uint8) bool {$/;"	f	package:fzf	typeref:typename:bool
isAscii	vim/.vim/plugged/fzf/src/algo/algo.go	/^func isAscii(runes []rune) bool {$/;"	f	package:algo	typeref:typename:bool
isCtrlSeqStart	vim/.vim/plugged/fzf/src/ansi.go	/^func isCtrlSeqStart(c uint8) bool {$/;"	f	package:fzf	typeref:typename:bool
isExecuteAction	vim/.vim/plugged/fzf/src/options.go	/^func isExecuteAction(str string) actionType {$/;"	f	package:fzf	typeref:typename:actionType
isFull	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:r
isIncremental	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:r
isLSPMessage	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:to.K
isNumeric	vim/.vim/plugged/fzf/src/options.go	/^func isNumeric(char uint8) bool {$/;"	f	package:fzf	typeref:typename:bool
isPreviewEnabled	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) isPreviewEnabled() bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
isPrint	vim/.vim/plugged/fzf/src/ansi.go	/^func isPrint(c uint8) bool {$/;"	f	package:fzf	typeref:typename:bool
isRoot	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:Uz.o.u
isUri	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:r
is_py3	vim/.vim/plugged/vim-translator/script/translator.py	/^    is_py3 = False$/;"	v
isarray	vim/.vim/plugged/coc.nvim/package-lock.json	/^                "isarray": "1.0.0"$/;"	s	object:dependencies.unset-value.dependencies.has-value.dependencies.isobject.requires
isarray	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "isarray": "^1.0.0"$/;"	s	object:dependencies.msgpack-lite.requires
isarray	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "isarray": {$/;"	o	object:dependencies
isexe	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "isexe": "^2.0.0"$/;"	s	object:dependencies.execa.dependencies.which.requires
isexe	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "isexe": "^2.0.0"$/;"	s	object:dependencies.which.requires
isexe	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "isexe": {$/;"	o	object:dependencies
isobject	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "isobject": "^2.0.0"$/;"	s	object:dependencies.unset-value.dependencies.has-value.requires
isobject	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "isobject": "^3.0.1",$/;"	s	object:dependencies.sane.dependencies.braces.requires
isobject	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "isobject": {$/;"	o	object:dependencies.unset-value.dependencies.has-value.dependencies
isobject	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "isobject": "^3.0.0"$/;"	s	object:dependencies.has-value.requires
isobject	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "isobject": "^3.0.0"$/;"	s	object:dependencies.object-visit.requires
isobject	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "isobject": "^3.0.0"$/;"	s	object:dependencies.unset-value.requires
isobject	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "isobject": "^3.0.0",$/;"	s	object:dependencies.class-utils.requires
isobject	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "isobject": "^3.0.0",$/;"	s	object:dependencies.snapdragon-node.requires
isobject	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "isobject": "^3.0.1"$/;"	s	object:dependencies.define-property.requires
isobject	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "isobject": "^3.0.1"$/;"	s	object:dependencies.is-plain-object.requires
isobject	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "isobject": "^3.0.1"$/;"	s	object:dependencies.object.pick.requires
isobject	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "isobject": "^3.0.1",$/;"	s	object:dependencies.base.requires
isobject	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "isobject": "^3.0.1",$/;"	s	object:dependencies.cache-base.requires
isobject	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "isobject": {$/;"	o	object:dependencies
istanbul-lib-coverage	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "istanbul-lib-coverage": "^3.0.0",$/;"	s	object:dependencies.@jest/reporters.requires
istanbul-lib-coverage	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "istanbul-lib-coverage": "^3.0.0",$/;"	s	object:dependencies.istanbul-lib-instrument.requires
istanbul-lib-coverage	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "istanbul-lib-coverage": "^3.0.0",$/;"	s	object:dependencies.istanbul-lib-report.requires
istanbul-lib-coverage	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "istanbul-lib-coverage": "^3.0.0",$/;"	s	object:dependencies.istanbul-lib-source-maps.requires
istanbul-lib-coverage	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "istanbul-lib-coverage": {$/;"	o	object:dependencies
istanbul-lib-instrument	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "istanbul-lib-instrument": "^4.0.0",$/;"	s	object:dependencies.babel-plugin-istanbul.requires
istanbul-lib-instrument	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "istanbul-lib-instrument": "^4.0.3",$/;"	s	object:dependencies.@jest/reporters.requires
istanbul-lib-instrument	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "istanbul-lib-instrument": {$/;"	o	object:dependencies
istanbul-lib-report	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "istanbul-lib-report": "^3.0.0"$/;"	s	object:dependencies.istanbul-reports.requires
istanbul-lib-report	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "istanbul-lib-report": "^3.0.0",$/;"	s	object:dependencies.@jest/reporters.requires
istanbul-lib-report	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "istanbul-lib-report": {$/;"	o	object:dependencies
istanbul-lib-source-maps	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "istanbul-lib-source-maps": "^4.0.0",$/;"	s	object:dependencies.@jest/reporters.requires
istanbul-lib-source-maps	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "istanbul-lib-source-maps": {$/;"	o	object:dependencies
istanbul-reports	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "istanbul-reports": "^3.0.2",$/;"	s	object:dependencies.@jest/reporters.requires
istanbul-reports	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "istanbul-reports": {$/;"	o	object:dependencies
isuri	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "isuri": {$/;"	o	object:dependencies
it	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
italic	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.modifier
item	vim/.vim/plugged/fzf/src/result.go	/^	item   *Item$/;"	m	struct:fzf.Result	typeref:typename:*Item
item	vim/.vim/plugged/fzf/src/terminal.go	/^	item *Item$/;"	m	struct:fzf.selectedItem	typeref:typename:*Item
itemLine	vim/.vim/plugged/fzf/src/terminal.go	/^type itemLine struct {$/;"	s	package:fzf
item_count	vim/.vim/plugged/fzf/test/test_go.rb	/^          def item_count$/;"	f	method:Tmux.until
items	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerBase.properties.additionalSchemes
items	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerBase.properties.filetypes
items	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerBase.properties.ignoredRootPaths
items	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerBase.properties.rootPatterns
items	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerCommand.properties.args
items	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerModule.properties.args
items	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "items": {$/;"	o	object:definitions.languageServerModule.properties.execArgv
items	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.preferences.formatOnSaveFiletypes
items	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.preferences.formatOnTypeFiletypes
items	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.preferences.rootPatterns
items	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.around.disableSyntaxes
items	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.buffer.disableSyntaxes
items	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.file.disableSyntaxes
items	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.file.ignorePatterns
items	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.file.triggerCharacters
items	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.coc.source.file.trimSameExts
items	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.list.source.outline.ctagsFilestypes
items	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.list.source.symbols.excludes
items	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.list.statusLineSegments
items	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.outline.codeActionKinds
items	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.suggest.invalidInsertCharacters
items	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.workspace.bottomUpFiletypes
items	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "items": {$/;"	o	object:properties.workspace.ignoredFiletypes
items	vim/.vim/plugged/fzf/src/chunklist.go	/^	items [chunkSize]Item$/;"	m	struct:fzf.Chunk	typeref:typename:[chunkSize]Item
iter	vim/.vim/plugged/fzf/src/pattern.go	/^func (p *Pattern) iter(pfun algo.Algo, tokens []Token, caseSensitive bool, normalize bool, forwa/;"	f	struct:fzf.Pattern	typeref:typename:(Offset, int, *[]int)
iter_primes	vim/.vim/plugged/far.vim/test/prime.py	/^def iter_primes():$/;"	f
iu	vim/.vim/plugged/coc.nvim/build/index.js	/^`)==-1&&(u+=" ",f(c,"CocTreeDescription"),u+=c),{line:u,highlights:o}}async appendTreeNode(e,t,i/;"	v
iv	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
iw	vim/.vim/plugged/coc.nvim/build/index.js	/^`),s=n.length-(t.end.line-t.start.line+1);if(this.line=this.line+s,t.end.line==this.line){let o=/;"	v
ix	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
iy	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
j	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
j	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
j	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
j	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^  nnoremap <buffer> <silent> j      :<C-U>call <SID>traverse_branches('j')<CR>$/;"	m
j$	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
j0	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
j4	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
j4e	vim/.vim/plugged/coc.nvim/build/index.js	/^`+h+d;u.push({range:ds.Range.create(n,h.length,n,h.length),newText:"  \\\\ "}),g=g+"\\\\ ",u.pus/;"	v
j5	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
j6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
j7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
j8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
j9	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
jB	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
jC	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
jD	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	f
jG	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
jJ	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
jM	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
jN	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
jO	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
jT	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
jV	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
jW	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
jX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
jZ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
ja	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
jae	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
jb	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
jc	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
jd	vim/.vim/plugged/coc.nvim/build/index.js	/^`}function jd(r,e){return`\\r$/;"	f
je	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
jee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
jellybeans	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### jellybeans$/;"	S	chapter:Available Colorschemes
jest	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest": {$/;"	o	object:dependencies
jest-changed-files	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-changed-files": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
jest-changed-files	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-changed-files": {$/;"	o	object:dependencies
jest-cli	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-cli": "^26.6.3"$/;"	s	object:dependencies.jest.requires
jest-cli	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-cli": {$/;"	o	object:dependencies.jest.dependencies
jest-config	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "jest-config": "^26.6.3",$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
jest-config	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-config": "^26.6.3",$/;"	s	object:dependencies.@jest/core.requires
jest-config	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-config": "^26.6.3",$/;"	s	object:dependencies.jest-runner.requires
jest-config	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-config": "^26.6.3",$/;"	s	object:dependencies.jest-runtime.requires
jest-config	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-config": {$/;"	o	object:dependencies
jest-diff	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-diff": "^26.0.0",$/;"	s	object:dependencies.@types/jest.requires
jest-diff	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-diff": "^26.6.2",$/;"	s	object:dependencies.jest-matcher-utils.requires
jest-diff	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-diff": "^26.6.2",$/;"	s	object:dependencies.jest-snapshot.requires
jest-diff	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-diff": {$/;"	o	object:dependencies
jest-docblock	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-docblock": "^26.0.0",$/;"	s	object:dependencies.jest-runner.requires
jest-docblock	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-docblock": {$/;"	o	object:dependencies
jest-each	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-each": "^26.6.2",$/;"	s	object:dependencies.jest-jasmine2.requires
jest-each	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-each": {$/;"	o	object:dependencies
jest-environment-jsdom	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-environment-jsdom": "^26.6.2",$/;"	s	object:dependencies.jest-config.requires
jest-environment-jsdom	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-environment-jsdom": {$/;"	o	object:dependencies
jest-environment-node	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-environment-node": "^26.6.2",$/;"	s	object:dependencies.jest-config.requires
jest-environment-node	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-environment-node": {$/;"	o	object:dependencies
jest-get-type	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-get-type": "^26.3.0",$/;"	s	object:dependencies.expect.requires
jest-get-type	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-get-type": "^26.3.0",$/;"	s	object:dependencies.jest-config.requires
jest-get-type	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-get-type": "^26.3.0",$/;"	s	object:dependencies.jest-diff.requires
jest-get-type	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-get-type": "^26.3.0",$/;"	s	object:dependencies.jest-each.requires
jest-get-type	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-get-type": "^26.3.0",$/;"	s	object:dependencies.jest-leak-detector.requires
jest-get-type	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-get-type": "^26.3.0",$/;"	s	object:dependencies.jest-matcher-utils.requires
jest-get-type	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-get-type": "^26.3.0",$/;"	s	object:dependencies.jest-snapshot.requires
jest-get-type	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-get-type": "^26.3.0",$/;"	s	object:dependencies.jest-validate.requires
jest-get-type	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-get-type": {$/;"	o	object:dependencies
jest-haste-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-haste-map": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
jest-haste-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-haste-map": "^26.6.2",$/;"	s	object:dependencies.@jest/reporters.requires
jest-haste-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-haste-map": "^26.6.2",$/;"	s	object:dependencies.@jest/test-sequencer.requires
jest-haste-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-haste-map": "^26.6.2",$/;"	s	object:dependencies.@jest/transform.requires
jest-haste-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-haste-map": "^26.6.2",$/;"	s	object:dependencies.jest-runner.requires
jest-haste-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-haste-map": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
jest-haste-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-haste-map": "^26.6.2",$/;"	s	object:dependencies.jest-snapshot.requires
jest-haste-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-haste-map": {$/;"	o	object:dependencies
jest-jasmine2	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-jasmine2": "^26.6.3",$/;"	s	object:dependencies.jest-config.requires
jest-jasmine2	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-jasmine2": {$/;"	o	object:dependencies
jest-leak-detector	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-leak-detector": "^26.6.2",$/;"	s	object:dependencies.jest-runner.requires
jest-leak-detector	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-leak-detector": {$/;"	o	object:dependencies
jest-matcher-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-matcher-utils": "^26.6.2",$/;"	s	object:dependencies.expect.requires
jest-matcher-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-matcher-utils": "^26.6.2",$/;"	s	object:dependencies.jest-jasmine2.requires
jest-matcher-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-matcher-utils": "^26.6.2",$/;"	s	object:dependencies.jest-snapshot.requires
jest-matcher-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-matcher-utils": {$/;"	o	object:dependencies
jest-message-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-message-util": "^26.6.2",$/;"	s	object:dependencies.@jest/console.requires
jest-message-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-message-util": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
jest-message-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-message-util": "^26.6.2",$/;"	s	object:dependencies.@jest/fake-timers.requires
jest-message-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-message-util": "^26.6.2",$/;"	s	object:dependencies.expect.requires
jest-message-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-message-util": "^26.6.2",$/;"	s	object:dependencies.jest-jasmine2.requires
jest-message-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-message-util": "^26.6.2",$/;"	s	object:dependencies.jest-runner.requires
jest-message-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-message-util": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
jest-message-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-message-util": "^26.6.2",$/;"	s	object:dependencies.jest-snapshot.requires
jest-message-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-message-util": {$/;"	o	object:dependencies
jest-mock	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-mock": "^26.6.2"$/;"	s	object:dependencies.@jest/environment.requires
jest-mock	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-mock": "^26.6.2",$/;"	s	object:dependencies.@jest/fake-timers.requires
jest-mock	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-mock": "^26.6.2",$/;"	s	object:dependencies.jest-environment-jsdom.requires
jest-mock	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-mock": "^26.6.2",$/;"	s	object:dependencies.jest-environment-node.requires
jest-mock	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-mock": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
jest-mock	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-mock": {$/;"	o	object:dependencies
jest-pnp-resolver	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-pnp-resolver": "^1.2.2",$/;"	s	object:dependencies.jest-resolve.requires
jest-pnp-resolver	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-pnp-resolver": {$/;"	o	object:dependencies
jest-regex-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-regex-util": "^26.0.0"$/;"	s	object:dependencies.expect.requires
jest-regex-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-regex-util": "^26.0.0",$/;"	s	object:dependencies.@jest/core.requires
jest-regex-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-regex-util": "^26.0.0",$/;"	s	object:dependencies.@jest/transform.requires
jest-regex-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-regex-util": "^26.0.0",$/;"	s	object:dependencies.jest-config.requires
jest-regex-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-regex-util": "^26.0.0",$/;"	s	object:dependencies.jest-haste-map.requires
jest-regex-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-regex-util": "^26.0.0",$/;"	s	object:dependencies.jest-resolve-dependencies.requires
jest-regex-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-regex-util": "^26.0.0",$/;"	s	object:dependencies.jest-runtime.requires
jest-regex-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-regex-util": {$/;"	o	object:dependencies
jest-resolve	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-resolve": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
jest-resolve	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-resolve": "^26.6.2",$/;"	s	object:dependencies.@jest/reporters.requires
jest-resolve	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-resolve": "^26.6.2",$/;"	s	object:dependencies.jest-config.requires
jest-resolve	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-resolve": "^26.6.2",$/;"	s	object:dependencies.jest-runner.requires
jest-resolve	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-resolve": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
jest-resolve	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-resolve": "^26.6.2",$/;"	s	object:dependencies.jest-snapshot.requires
jest-resolve	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-resolve": {$/;"	o	object:dependencies
jest-resolve-dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-resolve-dependencies": "^26.6.3",$/;"	s	object:dependencies.@jest/core.requires
jest-resolve-dependencies	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-resolve-dependencies": {$/;"	o	object:dependencies
jest-runner	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-runner": "^26.6.3",$/;"	s	object:dependencies.@jest/core.requires
jest-runner	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-runner": "^26.6.3",$/;"	s	object:dependencies.@jest/test-sequencer.requires
jest-runner	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-runner": {$/;"	o	object:dependencies
jest-runtime	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-runtime": "^26.6.3"$/;"	s	object:dependencies.@jest/test-sequencer.requires
jest-runtime	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-runtime": "^26.6.3",$/;"	s	object:dependencies.@jest/core.requires
jest-runtime	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-runtime": "^26.6.3",$/;"	s	object:dependencies.jest-jasmine2.requires
jest-runtime	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-runtime": "^26.6.3",$/;"	s	object:dependencies.jest-runner.requires
jest-runtime	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-runtime": {$/;"	o	object:dependencies
jest-serializer	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-serializer": "^26.6.2",$/;"	s	object:dependencies.jest-haste-map.requires
jest-serializer	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-serializer": {$/;"	o	object:dependencies
jest-snapshot	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-snapshot": "^26.6.2"$/;"	s	object:dependencies.jest-resolve-dependencies.requires
jest-snapshot	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-snapshot": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
jest-snapshot	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-snapshot": "^26.6.2",$/;"	s	object:dependencies.jest-jasmine2.requires
jest-snapshot	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-snapshot": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
jest-snapshot	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-snapshot": {$/;"	o	object:dependencies
jest-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "jest-util": "^26.6.2",$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
jest-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.1.0",$/;"	s	object:dependencies.ts-jest.requires
jest-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2"$/;"	s	object:dependencies.@jest/fake-timers.requires
jest-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2"$/;"	s	object:dependencies.jest-environment-node.requires
jest-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.@jest/console.requires
jest-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
jest-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.@jest/reporters.requires
jest-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.@jest/transform.requires
jest-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.jest-config.requires
jest-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.jest-each.requires
jest-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.jest-environment-jsdom.requires
jest-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.jest-haste-map.requires
jest-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.jest-jasmine2.requires
jest-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.jest-resolve.requires
jest-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.jest-runner.requires
jest-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
jest-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-util": "^26.6.2",$/;"	s	object:dependencies.jest-watcher.requires
jest-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-util": {$/;"	o	object:dependencies
jest-validate	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "jest-validate": "^26.6.2",$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
jest-validate	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-validate": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
jest-validate	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-validate": "^26.6.2",$/;"	s	object:dependencies.jest-config.requires
jest-validate	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-validate": "^26.6.2",$/;"	s	object:dependencies.jest-runtime.requires
jest-validate	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-validate": {$/;"	o	object:dependencies
jest-watcher	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-watcher": "^26.6.2",$/;"	s	object:dependencies.@jest/core.requires
jest-watcher	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-watcher": {$/;"	o	object:dependencies
jest-worker	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-worker": "^26.6.2",$/;"	s	object:dependencies.@jest/reporters.requires
jest-worker	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-worker": "^26.6.2",$/;"	s	object:dependencies.jest-haste-map.requires
jest-worker	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jest-worker": "^26.6.2",$/;"	s	object:dependencies.jest-runner.requires
jest-worker	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jest-worker": {$/;"	o	object:dependencies
jg	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
jie	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
jj	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
jk	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
jme	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	f
joinTokens	vim/.vim/plugged/fzf/src/tokenizer.go	/^func joinTokens(tokens []Token) string {$/;"	f	package:fzf	typeref:typename:string
js-tokens	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "js-tokens": "^4.0.0"$/;"	s	object:dependencies.@babel/highlight.requires
js-tokens	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "js-tokens": {$/;"	o	object:dependencies
js-yaml	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "js-yaml": "^3.13.1",$/;"	s	object:dependencies.@eslint/eslintrc.requires
js-yaml	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "js-yaml": "^3.13.1",$/;"	s	object:dependencies.@istanbuljs/load-nyc-config.requires
js-yaml	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "js-yaml": "^3.13.1",$/;"	s	object:dependencies.eslint.requires
js-yaml	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "js-yaml": {$/;"	o	object:dependencies
jsdoctypeparser	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jsdoctypeparser": "^9.0.0",$/;"	s	object:dependencies.eslint-plugin-jsdoc.requires
jsdoctypeparser	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jsdoctypeparser": {$/;"	o	object:dependencies
jsdom	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jsdom": "^16.4.0"$/;"	s	object:dependencies.jest-environment-jsdom.requires
jsdom	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jsdom": {$/;"	o	object:dependencies
jse	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
jsesc	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jsesc": "^2.5.1",$/;"	s	object:dependencies.@babel/generator.requires
jsesc	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jsesc": {$/;"	o	object:dependencies
json-parse-even-better-errors	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "json-parse-even-better-errors": "^2.3.0",$/;"	s	object:dependencies.parse-json.requires
json-parse-even-better-errors	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "json-parse-even-better-errors": {$/;"	o	object:dependencies
json-schema-traverse	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "json-schema-traverse": "^0.4.1",$/;"	s	object:dependencies.ajv.requires
json-schema-traverse	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "json-schema-traverse": {$/;"	o	object:dependencies
json-stable-stringify-without-jsonify	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "json-stable-stringify-without-jsonify": "^1.0.1",$/;"	s	object:dependencies.eslint.requires
json-stable-stringify-without-jsonify	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "json-stable-stringify-without-jsonify": {$/;"	o	object:dependencies
json5	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "json5": "2.x",$/;"	s	object:dependencies.ts-jest.requires
json5	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "json5": "^2.1.2",$/;"	s	object:dependencies.@babel/core.requires
json5	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "json5": {$/;"	o	object:dependencies
jsonc-parser	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jsonc-parser": {$/;"	o	object:dependencies
jsonfile	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "jsonfile": "^4.0.0",$/;"	s	object:dependencies.streamroller.dependencies.fs-extra.requires
jsonfile	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jsonfile": "^6.0.1",$/;"	s	object:dependencies.fs-extra.requires
jsonfile	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "jsonfile": {$/;"	o	object:dependencies.streamroller.dependencies
jsonfile	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "jsonfile": {$/;"	o	object:dependencies
jsonrpc	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	p	class:Il.K.Yt
jsonrpc	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	p	class:Il.ce.Yt
jsonrpc	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	p	class:Il.z.Yt
ju	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
jumpAcceptEnabled	vim/.vim/plugged/fzf/src/terminal.go	/^	jumpAcceptEnabled$/;"	c	package:fzf
jumpDisabled	vim/.vim/plugged/fzf/src/terminal.go	/^	jumpDisabled jumpMode = iota$/;"	c	package:fzf	typeref:type:jumpMode
jumpEnabled	vim/.vim/plugged/fzf/src/terminal.go	/^	jumpEnabled$/;"	c	package:fzf
jumpLabels	vim/.vim/plugged/fzf/src/terminal.go	/^	jumpLabels   string$/;"	m	struct:fzf.Terminal	typeref:typename:string
jumpMode	vim/.vim/plugged/fzf/src/terminal.go	/^type jumpMode int$/;"	t	package:fzf	typeref:typename:int
jumping	vim/.vim/plugged/fzf/src/terminal.go	/^	jumping      jumpMode$/;"	m	struct:fzf.Terminal	typeref:typename:jumpMode
jy	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
jz	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
k	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
k	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:g
k	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^  nnoremap <buffer> <silent> k      :<C-U>call <SID>traverse_branches('k')<CR>$/;"	m
k$	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
k0	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
k2	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
k3	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
k4	vim/.vim/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	v
k5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
k6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
k7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
k8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
k8e	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
k9	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
kC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
kD	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
kE	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
kF	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
kG	vim/.vim/plugged/coc.nvim/build/index.js	/^`+n+"\\n```"),r.push({content:n,filetype:t}))}function ege(r){return r?typeof r.filetype=="strin/;"	v
kH	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
kI	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
kO	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
kR	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
kS	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
kV	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
k_	vim/.vim/plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	f
ka	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
kae	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
kb	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
kc	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
ke	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
kee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
keepRight	vim/.vim/plugged/fzf/src/terminal.go	/^	keepRight    bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
key	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:Uz.o.u
keyDown	vim/.vim/plugged/vim-styled-components/examples/complex.js	/^const keyDown = e => {$/;"	C
keyMatch	vim/.vim/plugged/fzf/src/terminal.go	/^func keyMatch(key tui.Event, event tui.Event) bool {$/;"	f	package:fzf	typeref:typename:bool
keymap	vim/.vim/plugged/fzf/src/terminal.go	/^	keymap       map[tui.Event][]action$/;"	m	struct:fzf.Terminal	typeref:typename:map[tui.Event][]action
keyword	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "keyword": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
kill	.config/openbox/menu.xml	/^<menu id="kill" label="kill x11">$/;"	i
kill	vim/.vim/plugged/fzf/test/test_go.rb	/^  def kill$/;"	f	class:Tmux
killChan	vim/.vim/plugged/fzf/src/terminal.go	/^	killChan     chan int$/;"	m	struct:fzf.Terminal	typeref:typename:chan int
killPreview	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) killPreview(code int) {$/;"	f	struct:fzf.Terminal
killed	vim/.vim/plugged/fzf/src/reader.go	/^	killed   bool$/;"	m	struct:fzf.Reader	typeref:typename:bool
kind	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78ae10000.e.o
kind	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78ae12000.e.a
kind	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78ae12100.e.c
kind	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78aefe00.e.o
kind	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78aeff00.e.a
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "kind-of": "^3.0.2"$/;"	s	object:dependencies.has-values.dependencies.is-number.requires
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "kind-of": "^3.0.2"$/;"	s	object:dependencies.sane.dependencies.is-number.requires
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.0"$/;"	s	object:dependencies.base.dependencies.is-accessor-descriptor.requires
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.0"$/;"	s	object:dependencies.base.dependencies.is-data-descriptor.requires
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.0"$/;"	s	object:dependencies.define-property.dependencies.is-accessor-descriptor.requires
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.0"$/;"	s	object:dependencies.define-property.dependencies.is-data-descriptor.requires
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.0"$/;"	s	object:dependencies.extglob.dependencies.is-accessor-descriptor.requires
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.0"$/;"	s	object:dependencies.extglob.dependencies.is-data-descriptor.requires
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.0"$/;"	s	object:dependencies.snapdragon-node.dependencies.is-accessor-descriptor.requires
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.0"$/;"	s	object:dependencies.snapdragon-node.dependencies.is-data-descriptor.requires
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.2"$/;"	s	object:dependencies.base.dependencies.is-descriptor.requires
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.2"$/;"	s	object:dependencies.define-property.dependencies.is-descriptor.requires
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.2"$/;"	s	object:dependencies.extglob.dependencies.is-descriptor.requires
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.2"$/;"	s	object:dependencies.snapdragon-node.dependencies.is-descriptor.requires
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "kind-of": "^6.0.2",$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "kind-of": {$/;"	o	object:dependencies.has-values.dependencies.is-number.dependencies
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "kind-of": {$/;"	o	object:dependencies.sane.dependencies.is-number.dependencies
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "kind-of": "^3.0.2"$/;"	s	object:dependencies.is-accessor-descriptor.requires
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "kind-of": "^3.0.2"$/;"	s	object:dependencies.is-data-descriptor.requires
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "kind-of": "^3.0.2"$/;"	s	object:dependencies.to-object-path.requires
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "kind-of": "^3.0.3"$/;"	s	object:dependencies.object-copy.requires
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "kind-of": "^3.2.0"$/;"	s	object:dependencies.snapdragon-util.requires
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "kind-of": "^4.0.0"$/;"	s	object:dependencies.has-values.requires
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "kind-of": "^5.0.0"$/;"	s	object:dependencies.is-descriptor.requires
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "kind-of": "^6.0.2",$/;"	s	object:dependencies.nanomatch.requires
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "kind-of": {$/;"	o	object:dependencies.has-values.dependencies
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "kind-of": {$/;"	o	object:dependencies.is-accessor-descriptor.dependencies
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "kind-of": {$/;"	o	object:dependencies.is-data-descriptor.dependencies
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "kind-of": {$/;"	o	object:dependencies.is-descriptor.dependencies
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "kind-of": {$/;"	o	object:dependencies.object-copy.dependencies
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "kind-of": {$/;"	o	object:dependencies.snapdragon-util.dependencies
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "kind-of": {$/;"	o	object:dependencies.to-object-path.dependencies
kind-of	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "kind-of": {$/;"	o	object:dependencies
kl	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
kle	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	f
kleur	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "kleur": "^3.0.3",$/;"	s	object:dependencies.prompts.requires
kleur	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "kleur": {$/;"	o	object:dependencies
kme	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
kn	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
ko	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
kq	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
kw	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
kxe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
ky	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
l	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f	function:AnonymousFunction272f78ae1e100
l	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
l	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunction272f78ae13000
l	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:jC
l	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),g=+p.split(" ")[1];Kh("got proxy server response: %o",p),e({statusCode:g,buffered:d})}r.on("/;"	f	function:AnonymousFunction272f78ae34600
l	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunction272f78aef200.e
l	vim/.vim/plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	v
l	vim/.vim/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	f	function:Npe
l	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
l	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
l	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae33b00.e
l	vim/.vim/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	f	function:AnonymousFunction272f78ae33f00
l	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunction272f78ae29d00
l	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunction272f78ae2c100
l	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	c	class:vme
l	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c	class:WQ
l	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
l$	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
l0	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
l3e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let f of this._placeholders)if(f.index==o&&f.id<s&&f.line==e.range.start.line){let d=thi/;"	v
l4	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
l5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
l6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
l8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
l9	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
lA	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
lB	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
lC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
lD	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
lF	vim/.vim/plugged/coc.nvim/build/index.js	/^`}debug(e,...t){tF!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	v
lG	vim/.vim/plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
lH	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
lJ	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
lK	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
lL	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
lN	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
lOe	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
lQ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
lR	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
lS	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
lV	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
lW	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
lX	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
lY	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
l_	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
label	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78ae11b00.e.o
label	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78aefa00.e.o
label	vim/.vim/plugged/fzf/src/terminal.go	/^	label    string$/;"	m	struct:fzf.itemLine	typeref:typename:string
lae	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
landscape	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### landscape$/;"	S	chapter:Available Colorschemes
languageServerBase	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "languageServerBase": {$/;"	o	object:definitions
languageServerCommand	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "languageServerCommand": {$/;"	o	object:definitions
languageServerModule	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "languageServerModule": {$/;"	o	object:definitions
languageServerSocket	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "languageServerSocket": {$/;"	o	object:definitions
languageserver	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "languageserver": {$/;"	o	object:properties
languagetool#Check	vim/.vim/plugged/vim-LanguageTool/autoload/languagetool.vim	/^function languagetool#Check(line1, line2) "{{{1$/;"	f
languagetool#Clear	vim/.vim/plugged/vim-LanguageTool/autoload/languagetool.vim	/^function languagetool#Clear() "{{{1$/;"	f
lastChunk	vim/.vim/plugged/fzf/src/chunklist.go	/^func (cl *ChunkList) lastChunk() *Chunk {$/;"	f	struct:fzf.ChunkList	typeref:typename:*Chunk
lastX	vim/.vim/plugged/fzf/src/tui/tcell.go	/^	lastX       int$/;"	m	struct:tui.TcellWindow	typeref:typename:int
lastY	vim/.vim/plugged/fzf/src/tui/tcell.go	/^	lastY       int$/;"	m	struct:tui.TcellWindow	typeref:typename:int
layout	vim/.vim/plugged/fzf/src/terminal.go	/^	layout       layoutType$/;"	m	struct:fzf.Terminal	typeref:typename:layoutType
layoutDefault	vim/.vim/plugged/fzf/src/options.go	/^	layoutDefault layoutType = iota$/;"	c	package:fzf	typeref:type:layoutType
layoutReverse	vim/.vim/plugged/fzf/src/options.go	/^	layoutReverse$/;"	c	package:fzf
layoutReverseList	vim/.vim/plugged/fzf/src/options.go	/^	layoutReverseList$/;"	c	package:fzf
layoutType	vim/.vim/plugged/fzf/src/options.go	/^type layoutType int$/;"	t	package:fzf	typeref:typename:int
lb	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
lbg	vim/.vim/plugged/fzf/src/ansi.go	/^	lbg  tui.Color$/;"	m	struct:fzf.ansiState	typeref:typename:tui.Color
lc	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
lchmod	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:u
lchmodSync	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:u
le	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
lee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
left	vim/.vim/plugged/fzf/src/tui/light.go	/^	left     int$/;"	m	struct:tui.LightWindow	typeref:typename:int
left	vim/.vim/plugged/fzf/src/tui/tcell.go	/^	left        int$/;"	m	struct:tui.TcellWindow	typeref:typename:int
length	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	p	class:dB.S
length	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	p	class:q0.i
less.validate	.config/nvim_copy/coc-settings.json	/^  "less.validate": false,$/;"	b
less.validate	vim/.vim/coc-settings.json	/^  "less.validate": false,$/;"	b
level	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:Uz.o.u
leven	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "leven": "^3.1.0",$/;"	s	object:dependencies.jest-validate.requires
leven	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "leven": {$/;"	o	object:dependencies
levn	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "levn": "~0.3.0",$/;"	s	object:dependencies.escodegen.dependencies.optionator.requires
levn	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "levn": "^0.4.1",$/;"	s	object:dependencies.eslint.requires
levn	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "levn": "^0.4.1",$/;"	s	object:dependencies.optionator.requires
levn	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "levn": {$/;"	o	object:dependencies.escodegen.dependencies
levn	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "levn": {$/;"	o	object:dependencies
lf	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
lfe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
lge	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
lh	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
lightline	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^  augroup lightline$/;"	a
lightline	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^  augroup lightline-disable$/;"	a
lightline	vim/.vim/plugged/lightline.vim/plugin/lightline.vim	/^augroup lightline$/;"	a
lightline	vim/.vim/plugged/vim-lightline-coc/plugin/lightline/coc.vim	/^augroup lightline#coc$/;"	a
lightline#coc#errors	vim/.vim/plugged/vim-lightline-coc/autoload/lightline/coc.vim	/^function! lightline#coc#errors() abort$/;"	f
lightline#coc#hints	vim/.vim/plugged/vim-lightline-coc/autoload/lightline/coc.vim	/^function! lightline#coc#hints() abort$/;"	f
lightline#coc#info	vim/.vim/plugged/vim-lightline-coc/autoload/lightline/coc.vim	/^function! lightline#coc#info() abort$/;"	f
lightline#coc#ok	vim/.vim/plugged/vim-lightline-coc/autoload/lightline/coc.vim	/^function! lightline#coc#ok() abort$/;"	f
lightline#coc#register	vim/.vim/plugged/vim-lightline-coc/autoload/lightline/coc.vim	/^function! lightline#coc#register() abort$/;"	f
lightline#coc#status	vim/.vim/plugged/vim-lightline-coc/autoload/lightline/coc.vim	/^function! lightline#coc#status()$/;"	f
lightline#coc#warnings	vim/.vim/plugged/vim-lightline-coc/autoload/lightline/coc.vim	/^function! lightline#coc#warnings() abort$/;"	f
lightline#colorscheme	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#colorscheme() abort$/;"	f
lightline#colorscheme#background	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^  function! lightline#colorscheme#background() abort$/;"	f
lightline#colorscheme#fill	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! lightline#colorscheme#fill(p) abort$/;"	f
lightline#colorscheme#flatten	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! lightline#colorscheme#flatten(p) abort$/;"	f
lightline#colortable#gui2cui	vim/.vim/plugged/lightline.vim/autoload/lightline/colortable.vim	/^function! lightline#colortable#gui2cui(rgb, fallback) abort$/;"	f
lightline#colortable#gui2cui_palette	vim/.vim/plugged/lightline.vim/autoload/lightline/colortable.vim	/^function! lightline#colortable#gui2cui_palette(palette) abort$/;"	f
lightline#colortable#name_to_rgb	vim/.vim/plugged/lightline.vim/autoload/lightline/colortable.vim	/^function! lightline#colortable#name_to_rgb(name) abort$/;"	f
lightline#concatenate	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#concatenate(xs, right) abort$/;"	f
lightline#disable	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#disable() abort$/;"	f
lightline#enable	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#enable() abort$/;"	f
lightline#error	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#error(msg) abort$/;"	f
lightline#highlight	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#highlight(...) abort$/;"	f
lightline#init	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#init() abort$/;"	f
lightline#link	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#link(...) abort$/;"	f
lightline#mode	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#mode() abort$/;"	f
lightline#onetab	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#onetab(n, active) abort$/;"	f
lightline#palette	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#palette() abort$/;"	f
lightline#statusline	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#statusline(inactive) abort$/;"	f
lightline#tab#filename	vim/.vim/plugged/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#filename(n) abort$/;"	f
lightline#tab#modified	vim/.vim/plugged/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#modified(n) abort$/;"	f
lightline#tab#readonly	vim/.vim/plugged/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#readonly(n) abort$/;"	f
lightline#tab#tabnum	vim/.vim/plugged/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#tabnum(n) abort$/;"	f
lightline#tabline	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#tabline() abort$/;"	f
lightline#tabs	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#tabs() abort$/;"	f
lightline#toggle	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#toggle() abort$/;"	f
lightline#update	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#update() abort$/;"	f
lightline#update_disable	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^function! lightline#update_disable() abort$/;"	f
lightline-coc	vim/.vim/plugged/vim-lightline-coc/README.md	/^# lightline-coc$/;"	c
lightline.Custom	vim/.vim/plugged/lightline.vim/test/expand.vim	/^  function! g:lightline.Custom()$/;"	f
lightline.vim	vim/.vim/plugged/lightline.vim/README.md	/^# lightline.vim$/;"	c
line	vim/.vim/plugged/coc.nvim/build/index.js	/^`),o=i.line==r.start.line?i.character-r.start.character:i.character,a=A$(s,i.line-r.start.line,o/;"	p	class:$c.t
line	vim/.vim/plugged/fzf/src/terminal.go	/^	line string$/;"	m	struct:fzf.eachLine	typeref:typename:string
lines	vim/.vim/plugged/fzf/src/history.go	/^	lines    []string$/;"	m	struct:fzf.History	typeref:typename:[]string
lines	vim/.vim/plugged/fzf/src/terminal.go	/^	lines      []string$/;"	m	struct:fzf.previewer	typeref:typename:[]string
lines	vim/.vim/plugged/fzf/src/terminal.go	/^	lines   []string$/;"	m	struct:fzf.previewResult	typeref:typename:[]string
lines-and-columns	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "lines-and-columns": "^1.1.6"$/;"	s	object:dependencies.parse-json.requires
lines-and-columns	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "lines-and-columns": {$/;"	o	object:dependencies
link	vim/.vim/plugged/vim-styled-components/examples/issue-67.js	/^const link = css.resolve`$/;"	C
linkStyles	vim/.vim/plugged/vim-styled-components/examples/issue-37.ts	/^const linkStyles = css`$/;"	C
link_fzf_in_path	vim/.vim/plugged/fzf/install	/^link_fzf_in_path() {$/;"	f
lint	vim/.vim/plugged/vim-graphql/Makefile	/^lint: .bundle\/vim-vimhelplint$/;"	t
list	vim/.vim/plugged/fzf/src/terminal.go	/^	list     []*Item$/;"	m	struct:fzf.previewRequest	typeref:typename:[]*Item
list.alignColumns	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "list.alignColumns": {$/;"	o	object:properties
list.extendedSearchMode	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "list.extendedSearchMode": {$/;"	o	object:properties
list.height	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "list.height": {$/;"	o	object:properties
list.indicator	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "list.indicator": {$/;"	o	object:properties
list.insertMappings	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "list.insertMappings": {$/;"	o	object:properties
list.interactiveDebounceTime	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "list.interactiveDebounceTime": {$/;"	o	object:properties
list.limitLines	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "list.limitLines": {$/;"	o	object:properties
list.matchHighlightGroup	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "list.matchHighlightGroup": {$/;"	o	object:properties
list.maxPreviewHeight	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "list.maxPreviewHeight": {$/;"	o	object:properties
list.nextKeymap	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "list.nextKeymap": {$/;"	o	object:properties
list.normalMappings	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "list.normalMappings": {$/;"	o	object:properties
list.previewHighlightGroup	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "list.previewHighlightGroup": {$/;"	o	object:properties
list.previewSplitRight	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "list.previewSplitRight": {$/;"	o	object:properties
list.previousKeymap	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "list.previousKeymap": {$/;"	o	object:properties
list.selectedSignText	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "list.selectedSignText": {$/;"	o	object:properties
list.signOffset	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "list.signOffset": {$/;"	o	object:properties
list.source.diagnostics.includeCode	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "list.source.diagnostics.includeCode": {$/;"	o	object:properties
list.source.diagnostics.pathFormat	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "list.source.diagnostics.pathFormat": {$/;"	o	object:properties
list.source.outline.ctagsFilestypes	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "list.source.outline.ctagsFilestypes": {$/;"	o	object:properties
list.source.symbols.excludes	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "list.source.symbols.excludes": {$/;"	o	object:properties
list.statusLineSegments	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "list.statusLineSegments": {$/;"	o	object:properties
lists	vim/.vim/plugged/fzf/src/merger.go	/^	lists   [][]Result$/;"	m	struct:fzf.Merger	typeref:typename:[][]Result
lj	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
lme	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
ln	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
load_ignore_rules	vim/.vim/plugged/far.vim/rplugin/python3/far/sources/far_glob.py	/^def load_ignore_rules(file_path):$/;"	f
locate-path	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "locate-path": "^5.0.0",$/;"	s	object:dependencies.find-up.requires
locate-path	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "locate-path": {$/;"	o	object:dependencies
location	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunction272f78ae12000.e.a
lockfileVersion	vim/.vim/plugged/coc.nvim/package-lock.json	/^  "lockfileVersion": 1,$/;"	n
lodash	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "lodash": "^4.17.14",$/;"	s	object:dependencies.table.requires
lodash	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "lodash": "^4.17.15",$/;"	s	object:dependencies.@typescript-eslint/typescript-estree.requires
lodash	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "lodash": "^4.17.19",$/;"	s	object:dependencies.@eslint/eslintrc.requires
lodash	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "lodash": "^4.17.19",$/;"	s	object:dependencies.eslint.requires
lodash	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "lodash": "^4.17.20",$/;"	s	object:dependencies.eslint-plugin-jsdoc.requires
lodash	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "lodash": "^4.7.0",$/;"	s	object:dependencies.whatwg-url.requires
lodash	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "lodash": {$/;"	o	object:dependencies
lodash.memoize	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "lodash.memoize": "4.x",$/;"	s	object:dependencies.ts-jest.requires
lodash.memoize	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "lodash.memoize": {$/;"	o	object:dependencies
loe	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
log4js	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "log4js": {$/;"	o	object:dependencies
logger	vim/.vim/plugged/far.vim/rplugin/python3/far/__init__.py	/^    logger = logging.getLogger('far')$/;"	v
logger	vim/.vim/plugged/far.vim/rplugin/python3/far/sources/shell.py	/^logger = logging.getLogger('far')$/;"	v
loop	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:h
lp	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
lq	vim/.vim/plugged/coc.nvim/build/index.js	/^]`).replace("lheading",he.lheading).replace("blockquote"," {0,3}>").replace("|fences","").replac/;"	f
lru-cache	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "lru-cache": "^6.0.0"$/;"	s	object:dependencies.eslint-plugin-jsdoc.dependencies.semver.requires
lru-cache	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "lru-cache": {$/;"	o	object:dependencies
ls	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
lse	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
lt	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
lv	vim/.vim/plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
lw	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
lxe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
ly	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
lz	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
m	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
m	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
m$	vim/.vim/plugged/coc.nvim/build/index.js	/^`+e+"$2$3")}function m$(r){return" ".repeat(r.length)}function eae(r,e){return p$(e,r)?e:m$(d0)+/;"	f
m0	vim/.vim/plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	v
m1	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	v
m4e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
m5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
m6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
m7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
m8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
m9	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
mB	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
mC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
mD	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
mF	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}catch(t){uc.error("Send error:",e)}}redraw(e=!1){this.send(["redraw",e?"force":""])}command(e/;"	v
mG	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
mK	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
mN	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
mP	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
mR	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
mSe	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
mV	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
mW	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
mX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
mZ	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
mae	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
magenta	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
magentaBright	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
main	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/plugin_tests/test_files/4_space.py	/^def main():$/;"	f
main	vim/.vim/plugged/fzf/main.go	/^func main() {$/;"	f	package:main
main	vim/.vim/plugged/fzf/main.go	/^package main$/;"	p
main	vim/.vim/plugged/vim-translator/script/translator.py	/^def main():$/;"	f
main_syntax	vim/.vim/plugged/typescript-vim/syntax/typescript.vim	/^  let main_syntax = "typescript"$/;"	v
main_syntax	vim/.vim/plugged/vim-javascript/syntax/javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
major	vim/.vim/plugged/coc.nvim/build/index.js	/^  var major = parseInt(parts[0], 10)$/;"	v
make-dir	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "make-dir": "^3.0.0",$/;"	s	object:dependencies.istanbul-lib-report.requires
make-dir	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "make-dir": {$/;"	o	object:dependencies
make-error	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "make-error": "1.x",$/;"	s	object:dependencies.ts-jest.requires
make-error	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "make-error": {$/;"	o	object:dependencies
makeSpace	vim/.vim/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) makeSpace() {$/;"	f	struct:tui.LightRenderer
makeSpinner	vim/.vim/plugged/fzf/src/terminal.go	/^func makeSpinner(unicode bool) []string {$/;"	f	package:fzf	typeref:typename:[]string
makeerror	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "makeerror": "1.0.x"$/;"	s	object:dependencies.walker.requires
makeerror	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "makeerror": {$/;"	o	object:dependencies
manage	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
map	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
map-cache	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "map-cache": "^0.2.2"$/;"	s	object:dependencies.fragment-cache.requires
map-cache	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "map-cache": "^0.2.2",$/;"	s	object:dependencies.snapdragon.requires
map-cache	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "map-cache": {$/;"	o	object:dependencies
map-visit	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "map-visit": "^1.0.0",$/;"	s	object:dependencies.collection-visit.requires
map-visit	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "map-visit": {$/;"	o	object:dependencies
mapleader	.config/nvim_copy/init.vim	/^let mapleader=','$/;"	v
mapleader	vim/.vimrc	/^let mapleader=','$/;"	v
margin	vim/.vim/plugged/fzf/src/terminal.go	/^	margin       [4]sizeSpec$/;"	m	struct:fzf.Terminal	typeref:typename:[4]sizeSpec
marked	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "marked": {$/;"	o	object:dependencies
marker	vim/.vim/plugged/fzf/src/terminal.go	/^	marker       string$/;"	m	struct:fzf.Terminal	typeref:typename:string
markerEmpty	vim/.vim/plugged/fzf/src/terminal.go	/^	markerEmpty  string$/;"	m	struct:fzf.Terminal	typeref:typename:string
markerLen	vim/.vim/plugged/fzf/src/terminal.go	/^	markerLen    int$/;"	m	struct:fzf.Terminal	typeref:typename:int
match	vim/.vim/plugged/fzf/src/terminal_test.go	/^	match  string \/\/ output is matched against this regex (when output is empty string)$/;"	m	struct:fzf.want	typeref:typename:string
matchChunk	vim/.vim/plugged/fzf/src/pattern.go	/^func (p *Pattern) matchChunk(chunk *Chunk, space []Result, slab *util.Slab) []Result {$/;"	f	struct:fzf.Pattern	typeref:typename:[]Result
matchControlSequence	vim/.vim/plugged/fzf/src/ansi.go	/^func matchControlSequence(s string) int {$/;"	f	package:fzf	typeref:typename:int
matchOperatingSystemCommand	vim/.vim/plugged/fzf/src/ansi.go	/^func matchOperatingSystemCommand(s string) int {$/;"	f	package:fzf	typeref:typename:int
match_count	vim/.vim/plugged/fzf/test/test_go.rb	/^          def match_count$/;"	f	method:Tmux.until
matches	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	p	class:c
matches	vim/.vim/plugged/fzf/src/matcher.go	/^	matches []Result$/;"	m	struct:fzf.partialResult	typeref:typename:[]Result
matchtagalways	vim/.vim/plugged/MatchTagAlways/autoload/MatchTagAlways.vim	/^  augroup matchtagalways$/;"	a
matchtagalways	vim/.vim/plugged/MatchTagAlways/plugin/MatchTagAlways.vim	/^augroup matchtagalways$/;"	a
materia	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### materia$/;"	S	chapter:Available Colorschemes
material	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### material$/;"	S	chapter:Available Colorschemes
maxBodyLength	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:BW.e
maxHeight	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "maxHeight": {$/;"	o	object:definitions.float.properties
maxHeight	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "maxHeight": {},$/;"	o	object:properties.diagnostic.floatConfig.properties
maxHeight	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "maxHeight": {},$/;"	o	object:properties.hover.floatConfig.properties
maxHeight	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "maxHeight": {},$/;"	o	object:properties.signature.floatConfig.properties
maxHeightFunc	vim/.vim/plugged/fzf/src/tui/light.go	/^	maxHeightFunc func(int) int$/;"	m	struct:tui.LightRenderer	typeref:typename:func(int) int
maxInputBuffer	vim/.vim/plugged/fzf/src/tui/light.go	/^	maxInputBuffer  = 10 * 1024$/;"	c	package:tui
maxItems	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) maxItems() int {$/;"	f	struct:fzf.Terminal	typeref:typename:int
maxMulti	vim/.vim/plugged/fzf/src/constants.go	/^	maxMulti          = math.MaxInt32$/;"	c	package:fzf
maxPartitions	vim/.vim/plugged/fzf/src/constants.go	/^	maxPartitions           = 32$/;"	c	package:fzf
maxPatternLength	vim/.vim/plugged/fzf/src/constants.go	/^	maxPatternLength  = 300$/;"	c	package:fzf
maxRedirects	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:$T.c
maxRedirects	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:BW.e
maxSize	vim/.vim/plugged/fzf/src/history.go	/^	maxSize  int$/;"	m	struct:fzf.History	typeref:typename:int
maxWidth	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "maxWidth": {$/;"	o	object:definitions.float.properties
maxWidth	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "maxWidth": {},$/;"	o	object:properties.diagnostic.floatConfig.properties
maxWidth	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "maxWidth": {},$/;"	o	object:properties.hover.floatConfig.properties
maxWidth	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "maxWidth": {},$/;"	o	object:properties.signature.floatConfig.properties
maxWidth	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "maxWidth": {},$/;"	o	object:properties.suggest.floatConfig.properties
maximum	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "maximum": 100,$/;"	n	object:definitions.float.properties.winblend
maximum	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "maximum": 100,$/;"	n	object:properties.suggest.highPrioritySourceLimit
maximum	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "maximum": 100,$/;"	n	object:properties.suggest.lowPrioritySourceLimit
maximum	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "maximum": 1000,$/;"	n	object:properties.signature.triggerSignatureWait
maximum	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "maximum": 15000,$/;"	n	object:properties.suggest.timeout
maximum	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "maximum": 500,$/;"	n	object:properties.suggest.triggerCompletionWait
maximum	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "maximum": 5000,$/;"	n	object:properties.coc.preferences.willSaveHandlerTimeout
md5sum	vim/.vim/plugged/vim-translator/script/translator.py	/^    def md5sum(self, text):$/;"	m	class:BaseTranslator
me	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
merge	vim/.vim/plugged/fzf/src/tui/tui.go	/^func (p ColorPair) merge(other ColorPair, except Color) ColorPair {$/;"	f	struct:tui.ColorPair	typeref:typename:ColorPair
merge-stream	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "merge-stream": "^2.0.0",$/;"	s	object:dependencies.jest-changed-files.dependencies.execa.requires
merge-stream	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "merge-stream": "^2.0.0",$/;"	s	object:dependencies.jest-worker.requires
merge-stream	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "merge-stream": {$/;"	o	object:dependencies
merge2	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "merge2": "^1.3.0",$/;"	s	object:dependencies.fast-glob.requires
merge2	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "merge2": "^1.3.0",$/;"	s	object:dependencies.globby.requires
merge2	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "merge2": {$/;"	o	object:dependencies
merged	vim/.vim/plugged/fzf/src/merger.go	/^	merged  []Result$/;"	m	struct:fzf.Merger	typeref:typename:[]Result
mergedGet	vim/.vim/plugged/fzf/src/merger.go	/^func (mg *Merger) mergedGet(idx int) Result {$/;"	f	struct:fzf.Merger	typeref:typename:Result
merger	vim/.vim/plugged/fzf/src/terminal.go	/^	merger       *Merger$/;"	m	struct:fzf.Terminal	typeref:typename:*Merger
mergerCache	vim/.vim/plugged/fzf/src/matcher.go	/^	mergerCache    map[string]*Merger$/;"	m	struct:fzf.Matcher	typeref:typename:map[string]*Merger
mergerCacheMax	vim/.vim/plugged/fzf/src/constants.go	/^	mergerCacheMax int = 100000$/;"	c	package:fzf	typeref:typename:int
message	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78aef700.e.c
message	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:to.K
method	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:$T.c
method	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "method": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
mfe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
mg	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
mge	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
mi	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
micromatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "micromatch": "^3.1.4",$/;"	s	object:dependencies.sane.dependencies.anymatch.requires
micromatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "micromatch": "^3.1.4",$/;"	s	object:dependencies.sane.requires
micromatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "micromatch": "^4.0.2"$/;"	s	object:dependencies.jest-util.requires
micromatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "micromatch": "^4.0.2",$/;"	s	object:dependencies.@jest/core.requires
micromatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "micromatch": "^4.0.2",$/;"	s	object:dependencies.@jest/transform.requires
micromatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "micromatch": "^4.0.2",$/;"	s	object:dependencies.fast-glob.requires
micromatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "micromatch": "^4.0.2",$/;"	s	object:dependencies.jest-config.requires
micromatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "micromatch": "^4.0.2",$/;"	s	object:dependencies.jest-haste-map.requires
micromatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "micromatch": "^4.0.2",$/;"	s	object:dependencies.jest-message-util.requires
micromatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "micromatch": {$/;"	o	object:dependencies.sane.dependencies
micromatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "micromatch": {$/;"	o	object:dependencies
mid	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1e100.i
mie	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
mime-db	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "mime-db": "1.48.0"$/;"	s	object:dependencies.mime-types.requires
mime-db	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "mime-db": {$/;"	o	object:dependencies
mime-types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "mime-types": "^2.1.12"$/;"	s	object:dependencies.form-data.requires
mime-types	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "mime-types": {$/;"	o	object:dependencies
mimic-fn	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "mimic-fn": "^2.1.0"$/;"	s	object:dependencies.onetime.requires
mimic-fn	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "mimic-fn": {$/;"	o	object:dependencies
mimic-response	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "mimic-response": "^3.1.0"$/;"	s	object:dependencies.decompress-response.requires
mimic-response	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "mimic-response": {$/;"	o	object:dependencies
minHeight	vim/.vim/plugged/fzf/src/terminal.go	/^	minHeight = 4$/;"	c	package:fzf
minItem	vim/.vim/plugged/fzf/src/item.go	/^var minItem = Item{text: util.Chars{Index: -1}}$/;"	v	package:fzf
minRank	vim/.vim/plugged/fzf/src/result.go	/^func minRank() Result {$/;"	f	package:fzf	typeref:typename:Result
minWidth	vim/.vim/plugged/fzf/src/terminal.go	/^	minWidth  = 4$/;"	c	package:fzf
minimatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "minimatch": "^3.0.4"$/;"	s	object:dependencies.test-exclude.requires
minimatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "minimatch": "^3.0.4",$/;"	s	object:dependencies.@eslint/eslintrc.requires
minimatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "minimatch": "^3.0.4",$/;"	s	object:dependencies.eslint.requires
minimatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "minimatch": "^3.0.4",$/;"	s	object:dependencies.glob.requires
minimatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "minimatch": {$/;"	o	object:dependencies
minimist	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "minimist": "^1.2.5"$/;"	s	object:dependencies.unzip-stream.dependencies.mkdirp.requires
minimist	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "minimist": "^1.1.1",$/;"	s	object:dependencies.sane.requires
minimist	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "minimist": "^1.2.0"$/;"	s	object:dependencies.@cnakazawa/watch.requires
minimist	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "minimist": "^1.2.0",$/;"	s	object:dependencies.rc.requires
minimist	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "minimist": "^1.2.5"$/;"	s	object:dependencies.json5.requires
minimist	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "minimist": {$/;"	o	object:dependencies
minimum	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "minimum": 0,$/;"	n	object:definitions.float.properties.winblend
minimum	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "minimum": 2,$/;"	n	object:definitions.float.properties.maxHeight
minimum	vim/.vim/plugged/coc.nvim/data/schema.json	/^        { "type": "string", "minimum": 1 }$/;"	n	object:properties.coc.preferences.jumpCommand.anyOf.1
minimum	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "minimum": 1,$/;"	n	object:properties.suggest.highPrioritySourceLimit
minimum	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "minimum": 1,$/;"	n	object:properties.suggest.lowPrioritySourceLimit
minimum	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "minimum": 200,$/;"	n	object:properties.coc.preferences.willSaveHandlerTimeout
minimum	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "minimum": 200,$/;"	n	object:properties.signature.triggerSignatureWait
minimum	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "minimum": 30,$/;"	n	object:properties.suggest.triggerCompletionWait
minimum	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "minimum": 500,$/;"	n	object:properties.suggest.timeout
minipass	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "minipass": "^3.0.0"$/;"	s	object:dependencies.fs-minipass.requires
minipass	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "minipass": "^3.0.0",$/;"	s	object:dependencies.minizlib.requires
minipass	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "minipass": "^3.0.0",$/;"	s	object:dependencies.tar.requires
minipass	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "minipass": {$/;"	o	object:dependencies
minizlib	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "minizlib": "^2.1.1",$/;"	s	object:dependencies.tar.requires
minizlib	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "minizlib": {$/;"	o	object:dependencies
minor	vim/.vim/plugged/coc.nvim/build/index.js	/^  var minor = parseInt(parts[1], 10)$/;"	v
mixin-deep	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "mixin-deep": "^1.2.0",$/;"	s	object:dependencies.base.requires
mixin-deep	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "mixin-deep": {$/;"	o	object:dependencies
mk	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
mkdirp	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "mkdirp": "1.x",$/;"	s	object:dependencies.ts-jest.requires
mkdirp	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "mkdirp": "^0.5.1"$/;"	s	object:dependencies.unzip-stream.requires
mkdirp	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "mkdirp": "^1.0.3",$/;"	s	object:dependencies.tar.requires
mkdirp	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "mkdirp": {$/;"	o	object:dependencies.unzip-stream.dependencies
mkdirp	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "mkdirp": {$/;"	o	object:dependencies
mme	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	f
mode	vim/.vim/plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	p	class:vY.i
modified	vim/.vim/plugged/fzf/src/history.go	/^	modified map[int]string$/;"	m	struct:fzf.History	typeref:typename:map[int]string
modifier	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	c	class:Uoe.e
module	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	p	class:vme.l
module	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "module": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
module	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "module": {$/;"	o	object:definitions.languageServerModule.properties
module_left_1	vim/.vim/plugged/iceberg-dark/.tmux/iceberg.tmux.conf	/^module_left_1="#(whoami)"$/;"	k
module_left_1	vim/.vim/plugged/iceberg-dark/.tmux/iceberg_minimal.tmux.conf	/^module_left_1="#h"$/;"	k
module_left_2	vim/.vim/plugged/iceberg-dark/.tmux/iceberg.tmux.conf	/^module_left_2="%R %a"$/;"	k
module_left_2	vim/.vim/plugged/iceberg-dark/.tmux/iceberg_minimal.tmux.conf	/^module_left_2="#{client_width}x#{client_height}"$/;"	k
module_right_1	vim/.vim/plugged/iceberg-dark/.tmux/iceberg.tmux.conf	/^module_right_1="#(ip route get 1 | awk '{print $7}')"$/;"	k
module_right_1	vim/.vim/plugged/iceberg-dark/.tmux/iceberg_minimal.tmux.conf	/^module_right_1="%a %d %b"$/;"	k
module_right_2	vim/.vim/plugged/iceberg-dark/.tmux/iceberg.tmux.conf	/^module_right_2="#H"$/;"	k
module_right_2	vim/.vim/plugged/iceberg-dark/.tmux/iceberg_minimal.tmux.conf	/^module_right_2="%R %Z"$/;"	k
molokai	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### molokai$/;"	S	chapter:Available Colorschemes
more tips	vim/.vim/plugged/lightline.vim/README.md	/^### more tips$/;"	S	section:lightline.vim""Advanced configuration
mouse	vim/.vim/plugged/fzf/src/tui/light.go	/^	mouse         bool$/;"	m	struct:tui.LightRenderer	typeref:typename:bool
mouse	vim/.vim/plugged/fzf/src/tui/tui.go	/^	mouse        bool$/;"	m	struct:tui.FullscreenRenderer	typeref:typename:bool
mouseSequence	vim/.vim/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) mouseSequence(sz *int) Event {$/;"	f	struct:tui.LightRenderer	typeref:typename:Event
move	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) move(y int, x int, clear bool) {$/;"	f	struct:fzf.Terminal
move	vim/.vim/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) move(y int, x int) {$/;"	f	struct:tui.LightRenderer
moveCursor	vim/.vim/plugged/fzf/src/tui/tcell.go	/^	moveCursor  bool$/;"	m	struct:tui.TcellWindow	typeref:typename:bool
mp	vim/.vim/plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
mr	vim/.vim/plugged/coc.nvim/build/index.js	/^`),_.log(`Received notification '${P.method}'.`,z)}else to("receive-notification",P)}function mr/;"	f
ms	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
ms	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
ms	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "ms": "2.0.0"$/;"	s	object:dependencies.expand-brackets.dependencies.debug.requires
ms	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "ms": "2.0.0"$/;"	s	object:dependencies.snapdragon.dependencies.debug.requires
ms	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "ms": "2.1.2"$/;"	s	object:dependencies.eslint-plugin-jsdoc.dependencies.debug.requires
ms	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ms": "^2.1.1"$/;"	s	object:dependencies.debug.requires
ms	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ms": {$/;"	o	object:dependencies.expand-brackets.dependencies
ms	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ms": {$/;"	o	object:dependencies.snapdragon.dependencies
ms	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "ms": {$/;"	o	object:dependencies
mse	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
msgpack-lite	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "msgpack-lite": "^0.1.26"$/;"	s	object:dependencies.@chemzqm/neovim.requires
msgpack-lite	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "msgpack-lite": {$/;"	o	object:dependencies
multi	vim/.vim/plugged/fzf/src/terminal.go	/^	multi        int$/;"	m	struct:fzf.Terminal	typeref:typename:int
multi_value_keywords	vim/.vim/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^    set(multi_value_keywords ARGS)$/;"	v	function:new_ec_cli_test
multi_value_keywords	vim/.vim/plugged/editorconfig-vim/tests/core/tests/cmake/runandsort.cmake	/^    set(multi_value_keywords CMDLINE ARGS)$/;"	v	function:run_and_sort
multimedia	.config/openbox/menu.xml	/^<menu id="multimedia" label="multimedia">$/;"	i
multiple_cursors#debug	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#debug()$/;"	f
multiple_cursors#find	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#find(start, end, pattern)$/;"	f
multiple_cursors#get_latency_debug_file	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#get_latency_debug_file()$/;"	f
multiple_cursors#new	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#new(mode, word_boundary)$/;"	f
multiple_cursors#prev	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#prev()$/;"	f
multiple_cursors#quit	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#quit()$/;"	f
multiple_cursors#select_all	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#select_all(mode, word_boundary)$/;"	f
multiple_cursors#skip	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#skip()$/;"	f
mutex	vim/.vim/plugged/fzf/src/cache.go	/^	mutex sync.Mutex$/;"	m	struct:fzf.ChunkCache	typeref:typename:sync.Mutex
mutex	vim/.vim/plugged/fzf/src/chunklist.go	/^	mutex  sync.Mutex$/;"	m	struct:fzf.ChunkList	typeref:typename:sync.Mutex
mutex	vim/.vim/plugged/fzf/src/reader.go	/^	mutex    sync.Mutex$/;"	m	struct:fzf.Reader	typeref:typename:sync.Mutex
mutex	vim/.vim/plugged/fzf/src/terminal.go	/^	mutex        sync.Mutex$/;"	m	struct:fzf.Terminal	typeref:typename:sync.Mutex
mv	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
mw	vim/.vim/plugged/coc.nvim/build/index.js	/^`+n+"\\n```"),r.push({content:n,filetype:t}))}function ege(r){return r?typeof r.filetype=="strin/;"	v
my	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
n	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	c	class:AnonymousFunction272f78ae1df00
n	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
n	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunction272f78ae13000
n	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),g=+p.split(" ")[1];Kh("got proxy server response: %o",p),e({statusCode:g,buffered:d})}r.on("/;"	f	function:AnonymousFunction272f78ae34600
n	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunction272f78ae11d00.e
n	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aef900
n	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aefc00
n	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:AnonymousFunction272f78ae0a00
n	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
n	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:X9
n	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
n	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae2c800.AnonymousFunction272f78ae2c900
n	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae2f400
n	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:AnonymousFunction272f78ae33600
n	vim/.vim/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	f	function:AnonymousFunction272f78ae33f00
n	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	c	class:eme
n	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunction272f78ae2b900
n	vim/.vim/plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	f	function:AnonymousFunction272f78ae12900
n	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:Cae
n	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c	class:wee
n	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:AnonymousFunction272f78ae7400
n	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:oee
n	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:$0
n	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:Oae
n	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:q0
n	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
n$	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
n5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
n6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
n7	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
n8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
n8e	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
n9	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
nB	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
nC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
nCe	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
nD	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
nG	vim/.vim/plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
nJ	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
nK	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
nP	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
nQ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
nR	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
nT	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
nU	vim/.vim/plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
nV	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
nW	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
nX	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
nZ	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
n_	vim/.vim/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:o}}function QB(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	v
na	vim/.vim/plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
nae	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}function nae(r,e,t){return r=r.trim(),r=e?rae(r,t):tae(r,t),r}function Fd(r){return r+`$/;"	f
name	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78ae12000.e.a
name	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78ae12100.e.c
name	vim/.vim/plugged/coc.nvim/package-lock.json	/^  "name": "coc.nvim-master",$/;"	s
name	vim/.vim/plugged/far.vim/test/guess.py	/^name = raw_input('Hello! What is your name?\\n')$/;"	v
nanomatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "nanomatch": "^1.2.9",$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
nanomatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "nanomatch": {$/;"	o	object:dependencies
natural-compare	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "natural-compare": "^1.4.0",$/;"	s	object:dependencies.eslint.requires
natural-compare	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "natural-compare": "^1.4.0",$/;"	s	object:dependencies.jest-snapshot.requires
natural-compare	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "natural-compare": {$/;"	o	object:dependencies
nc	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
ne	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
newItem	vim/.vim/plugged/fzf/src/terminal_test.go	/^func newItem(str string) *Item {$/;"	f	package:fzf	typeref:typename:*Item
newItems	vim/.vim/plugged/fzf/src/terminal_test.go	/^func newItems(str ...string) []*Item {$/;"	f	package:fzf	typeref:typename:[]*Item
newRange	vim/.vim/plugged/fzf/src/tokenizer.go	/^func newRange(begin int, end int) Range {$/;"	f	package:fzf	typeref:typename:Range
newUri	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78aeff00.e.a
new_ec_cli_test	vim/.vim/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^function(new_ec_cli_test)$/;"	f
new_ec_test	vim/.vim/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^function(new_ec_test name ec_file src_file regex)$/;"	f
new_ec_test_full_ec_file_path	vim/.vim/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^function(new_ec_test_full_ec_file_path name ec_file src_file regex)$/;"	f
new_ec_test_multiline	vim/.vim/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^function(new_ec_test_multiline name ec_file src_file regex)$/;"	f
new_ec_test_version	vim/.vim/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^function(new_ec_test_version name ec_file src_file regex version)$/;"	f
new_shell	vim/.vim/plugged/fzf/test/test_go.rb	/^  def new_shell$/;"	f	class:TestBash
new_shell	vim/.vim/plugged/fzf/test/test_go.rb	/^  def new_shell$/;"	f	class:TestFish
new_shell	vim/.vim/plugged/fzf/test/test_go.rb	/^  def new_shell$/;"	f	class:TestZsh
next	vim/.vim/plugged/fzf/src/history.go	/^func (h *History) next() string {$/;"	f	struct:fzf.History	typeref:typename:string
nextAnsiEscapeSequence	vim/.vim/plugged/fzf/src/ansi.go	/^func nextAnsiEscapeSequence(s string) (int, int) {$/;"	f	package:fzf	typeref:typename:(int, int)
nextId	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
nextInt	vim/.vim/plugged/fzf/src/options.go	/^func nextInt(args []string, i *int, message string) int {$/;"	f	package:fzf	typeref:typename:int
nextString	vim/.vim/plugged/fzf/src/options.go	/^func nextString(args []string, i *int, message string) string {$/;"	f	package:fzf	typeref:typename:string
nf	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
ng	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
nge	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
nh	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
ni	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
nice-try	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "nice-try": "^1.0.4",$/;"	s	object:dependencies.execa.dependencies.cross-spawn.requires
nice-try	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "nice-try": {$/;"	o	object:dependencies
nj	vim/.vim/plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	v
nk	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
nle	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
nme	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
noInfoLine	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) noInfoLine() bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
node	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:Uz.o.u
node-int64	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "node-int64": "^0.4.0"$/;"	s	object:dependencies.bser.requires
node-int64	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "node-int64": {$/;"	o	object:dependencies
node-modules-regexp	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "node-modules-regexp": "^1.0.0"$/;"	s	object:dependencies.pirates.requires
node-modules-regexp	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "node-modules-regexp": {$/;"	o	object:dependencies
node-notifier	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "node-notifier": "^8.0.0",$/;"	s	object:dependencies.@jest/reporters.requires
node-notifier	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "node-notifier": {$/;"	o	object:dependencies
node-releases	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "node-releases": "^1.1.71"$/;"	s	object:dependencies.browserslist.requires
node-releases	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "node-releases": {$/;"	o	object:dependencies
node_	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:Uz.o.u
nord	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### nord$/;"	S	chapter:Available Colorschemes
normal	vim/.vim/plugged/fzf/src/tui/tcell.go	/^	normal      ColorPair$/;"	m	struct:tui.TcellWindow	typeref:typename:ColorPair
normal mode / visual mode	vim/.vim/plugged/vim-multiple-cursors/README.md	/^### normal mode \/ visual mode$/;"	S	section:vim-multiple-cursors""Quick Start
normalize	vim/.vim/plugged/fzf/src/pattern.go	/^	normalize     bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
normalize	vim/.vim/plugged/fzf/src/pattern.go	/^	normalize     bool$/;"	m	struct:fzf.term	typeref:typename:bool
normalize-package-data	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "normalize-package-data": "^2.5.0",$/;"	s	object:dependencies.read-pkg.requires
normalize-package-data	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "normalize-package-data": {$/;"	o	object:dependencies
normalize-path	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "normalize-path": "^2.1.1"$/;"	s	object:dependencies.sane.dependencies.anymatch.requires
normalize-path	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "normalize-path": "^3.0.0",$/;"	s	object:dependencies.anymatch.requires
normalize-path	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "normalize-path": "~3.0.0",$/;"	s	object:dependencies.chokidar.requires
normalize-path	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "normalize-path": {$/;"	o	object:dependencies.sane.dependencies
normalize-path	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "normalize-path": {$/;"	o	object:dependencies
normalizeRune	vim/.vim/plugged/fzf/src/algo/algo.go	/^func normalizeRune(r rune) rune {$/;"	f	package:algo	typeref:typename:rune
normalized	vim/.vim/plugged/fzf/src/algo/normalize.go	/^var normalized map[rune]rune = map[rune]rune{$/;"	v	package:algo	typeref:typename:map[rune]rune
notification.highlightGroup	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "notification.highlightGroup": {$/;"	o	object:properties
notification.marginRight	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "notification.marginRight": {$/;"	o	object:properties
notification.marginTop	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "notification.marginTop": {$/;"	o	object:properties
notification.maxHeight	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "notification.maxHeight": {$/;"	o	object:properties
notification.maxWidth	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "notification.maxWidth": {$/;"	o	object:properties
notification.minProgressWidth	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "notification.minProgressWidth": {$/;"	o	object:properties
notifyOnCont	vim/.vim/plugged/fzf/src/terminal_unix.go	/^func notifyOnCont(resizeChan chan<- os.Signal) {$/;"	f	package:fzf
notifyOnCont	vim/.vim/plugged/fzf/src/terminal_windows.go	/^func notifyOnCont(resizeChan chan<- os.Signal) {$/;"	f	package:fzf
notifyOnResize	vim/.vim/plugged/fzf/src/terminal_unix.go	/^func notifyOnResize(resizeChan chan<- os.Signal) {$/;"	f	package:fzf
notifyOnResize	vim/.vim/plugged/fzf/src/terminal_windows.go	/^func notifyOnResize(resizeChan chan<- os.Signal) {$/;"	f	package:fzf
notifyStop	vim/.vim/plugged/fzf/src/terminal_unix.go	/^func notifyStop(p *os.Process) {$/;"	f	package:fzf
notifyStop	vim/.vim/plugged/fzf/src/terminal_windows.go	/^func notifyStop(p *os.Process) {$/;"	f	package:fzf
np	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
npm-run-path	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "npm-run-path": "^4.0.0",$/;"	s	object:dependencies.jest-changed-files.dependencies.execa.requires
npm-run-path	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "npm-run-path": "^2.0.0",$/;"	s	object:dependencies.execa.requires
npm-run-path	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "npm-run-path": {$/;"	o	object:dependencies.jest-changed-files.dependencies
npm-run-path	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "npm-run-path": {$/;"	o	object:dependencies
npm.binPath	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "npm.binPath": {$/;"	o	object:properties
nr	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	v
ns	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
ns31b403760101	.config/openbox/menu.xml	/^<openbox_menu xmlns="http:\/\/openbox.org\/3.6\/menu">$/;"	n	uri:http://openbox.org/3.6/menu
nsc8ab28760101	.config/openbox/rc.xml	/^<openbox_config xmlns="http:\/\/openbox.org\/3.4\/rc" xmlns:xi="http:\/\/www.w3.org\/2001\/XIncl/;"	n	uri:http://openbox.org/3.4/rc
nt	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
nth	vim/.vim/plugged/fzf/src/pattern.go	/^	nth           []Range$/;"	m	struct:fzf.Pattern	typeref:typename:[]Range
num	vim/.vim/plugged/far.vim/test/odd.py	/^num = int(input("Enter a number: "))$/;"	v
numLines	vim/.vim/plugged/fzf/src/terminal.go	/^	numLines int$/;"	m	struct:fzf.previewed	typeref:typename:int
numPartitionsMultiplier	vim/.vim/plugged/fzf/src/constants.go	/^	numPartitionsMultiplier = 8$/;"	c	package:fzf
number	vim/.vim/plugged/far.vim/test/guess.py	/^number = random.randint(1, 20)$/;"	v
number	vim/.vim/plugged/fzf/src/terminal.go	/^	number        bool$/;"	m	struct:fzf.placeholderFlags	typeref:typename:bool
nv	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
nw	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
nwsapi	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "nwsapi": "^2.2.0",$/;"	s	object:dependencies.jsdom.requires
nwsapi	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "nwsapi": {$/;"	o	object:dependencies
nx	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
ny	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
o	vim/.vim/autoload/plug.vim	/^      nmap <buffer> o <plug>(plug-preview)$/;"	m
o	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f	function:AnonymousFunction272f78ae1e100
o	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
o	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
o	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunction272f78ae13000
o	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunction272f78ae10000.e
o	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunction272f78ae11b00.e
o	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunction272f78ae12400.e
o	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunction272f78aefa00.e
o	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunction272f78aefe00.e
o	vim/.vim/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	f	function:Npe
o	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:AnonymousFunction272f78ae0a00
o	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
o	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
o	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:Uz
o	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:AnonymousFunction272f78ae2c800.AnonymousFunction272f78ae2c900
o	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c	class:AnonymousFunction272f78ae2c000
o	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:pQ
o	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:tee
o	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	c	class:q0
o	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:fB
o	vim/.vim/plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	f	function:gY
o	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f	function:dY
o	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
o	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <buffer> o <cr><c-w><c-w>$/;"	m
o	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <silent> <buffer> o    :call <sid>open(0)<cr>$/;"	m
o	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  xnoremap <buffer> o :call <sid>gld()<cr>$/;"	m
o	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  xnoremap <silent> <buffer> o    :<c-u>call <sid>open(1)<cr>$/;"	m
o$	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
o4	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
o5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
o6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
o7	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
o8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
o9	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
oA	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
oB	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
oC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
oD	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
oDe	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
oG	vim/.vim/plugged/coc.nvim/build/index.js	/^`)==-1}var oG=R(()=>{});function Xme(r,e,t){let i=r.split(\/\\r?\\n\/),n=t.insertSpaces?" ".repe/;"	v
oH	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
oJ	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
oK	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
oN	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
oQ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
oR	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
oTe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
oU	vim/.vim/plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
oV	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
oW	vim/.vim/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
oZ	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
o_	vim/.vim/plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	v
oa	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
oae	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	f
object-copy	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "object-copy": "^0.1.0"$/;"	s	object:dependencies.static-extend.requires
object-copy	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "object-copy": {$/;"	o	object:dependencies
object-inspect	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "object-inspect": "^1.10.3",$/;"	s	object:dependencies.es-abstract.requires
object-inspect	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "object-inspect": "^1.9.0"$/;"	s	object:dependencies.side-channel.requires
object-inspect	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "object-inspect": {$/;"	o	object:dependencies
object-keys	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "object-keys": "^1.0.12"$/;"	s	object:dependencies.define-properties.requires
object-keys	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "object-keys": "^1.1.1"$/;"	s	object:dependencies.object.assign.requires
object-keys	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "object-keys": "^1.1.1",$/;"	s	object:dependencies.es-abstract.requires
object-keys	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "object-keys": {$/;"	o	object:dependencies
object-visit	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "object-visit": "^1.0.0"$/;"	s	object:dependencies.collection-visit.requires
object-visit	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "object-visit": "^1.0.0"$/;"	s	object:dependencies.map-visit.requires
object-visit	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "object-visit": {$/;"	o	object:dependencies
object.assign	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "object.assign": "^4.1.2",$/;"	s	object:dependencies.es-abstract.requires
object.assign	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "object.assign": {$/;"	o	object:dependencies
object.pick	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "object.pick": "^1.3.0",$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
object.pick	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "object.pick": "^1.3.0",$/;"	s	object:dependencies.nanomatch.requires
object.pick	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "object.pick": {$/;"	o	object:dependencies
oc	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
oe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
oee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
of	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
off	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:AnonymousFunction272f78ae7400.t
office	.config/openbox/menu.xml	/^<menu id="office" label="office">$/;"	i
offset	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	p	class:dB.S
offset	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	p	class:q0.i
offset	vim/.vim/plugged/fzf/src/ansi.go	/^	offset [2]int32$/;"	m	struct:fzf.ansiOffset	typeref:typename:[2]int32
offset	vim/.vim/plugged/fzf/src/result.go	/^	offset [2]int32$/;"	m	struct:fzf.colorOffset	typeref:typename:[2]int32
offset	vim/.vim/plugged/fzf/src/terminal.go	/^	offset       int$/;"	m	struct:fzf.Terminal	typeref:typename:int
offset	vim/.vim/plugged/fzf/src/terminal.go	/^	offset     int$/;"	m	struct:fzf.previewer	typeref:typename:int
offset	vim/.vim/plugged/fzf/src/terminal.go	/^	offset   int$/;"	m	struct:fzf.previewed	typeref:typename:int
offset	vim/.vim/plugged/fzf/src/terminal.go	/^	offset  int$/;"	m	struct:fzf.previewResult	typeref:typename:int
offsetAt	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	m	class:r
offsetAt	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	m	class:r
offsetComponentRegex	vim/.vim/plugged/fzf/src/terminal.go	/^var offsetComponentRegex *regexp.Regexp$/;"	v	package:fzf	typeref:typename:*regexp.Regexp
offsetPollTries	vim/.vim/plugged/fzf/src/tui/light.go	/^	offsetPollTries = 10$/;"	c	package:tui
offsetRegexp	vim/.vim/plugged/fzf/src/tui/light.go	/^var offsetRegexp *regexp.Regexp = regexp.MustCompile("(.*)\\x1b\\\\[([0-9]+);([0-9]+)R")$/;"	v	package:tui	typeref:typename:*regexp.Regexp
offsetRegexpBegin	vim/.vim/plugged/fzf/src/tui/light.go	/^var offsetRegexpBegin *regexp.Regexp = regexp.MustCompile("^\\x1b\\\\[[0-9]+;[0-9]+R")$/;"	v	package:tui	typeref:typename:*regexp.Regexp
offsetTrimCharsRegex	vim/.vim/plugged/fzf/src/terminal.go	/^var offsetTrimCharsRegex *regexp.Regexp$/;"	v	package:fzf	typeref:typename:*regexp.Regexp
oge	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	f
oh	vim/.vim/plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
oj	vim/.vim/plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	v
oldUri	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78aeff00.e.a
om	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	v
ome	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
on	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:AnonymousFunction272f78ae7400.t
onArrayBegin	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:fB.a
onArrayBegin	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:q0.o
onArrayEnd	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:fB.a
onArrayEnd	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:q0.o
onError	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:fB.a
onError	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:q0.o
onLiteralValue	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:q0.o
onLiteralValue	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	p	class:fB.a
onObjectBegin	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:fB.a
onObjectBegin	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:q0.o
onObjectEnd	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:fB.a
onObjectEnd	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:q0.o
onObjectProperty	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:fB.a
onObjectProperty	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:q0.o
onRequestClose	vim/.vim/plugged/vim-styled-components/examples/issue-30-3.js	/^          onRequestClose={this.closeDetailModal}$/;"	M	class:CoffeeList
onSeparator	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	m	class:q0.o
once	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:AnonymousFunction272f78ae7400.t
once	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "once": "^1.3.0",$/;"	s	object:dependencies.glob.requires
once	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "once": "^1.3.0",$/;"	s	object:dependencies.inflight.requires
once	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "once": "^1.3.1"$/;"	s	object:dependencies.pump.requires
once	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "once": "^1.4.0"$/;"	s	object:dependencies.end-of-stream.requires
once	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "once": {$/;"	o	object:dependencies
one (`background=dark`)	vim/.vim/plugged/lightline.vim/README.md	/^### one (`background=dark`)$/;"	S	chapter:lightline.vim
one (`background=dark`)	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### one (`background=dark`)$/;"	S	chapter:Available Colorschemes
one (`background=light`)	vim/.vim/plugged/lightline.vim/README.md	/^### one (`background=light`)$/;"	S	chapter:lightline.vim
one (`background=light`)	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### one (`background=light`)$/;"	S	chapter:Available Colorschemes
oneOf	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "oneOf": [$/;"	a	object:properties.languageserver.patternProperties.^[_a-zA-Z]+$
one_value_keywords	vim/.vim/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^    set(one_value_keywords NAME MATCH)$/;"	v	function:new_ec_cli_test
one_value_keywords	vim/.vim/plugged/editorconfig-vim/tests/core/tests/cmake/runandsort.cmake	/^    set(one_value_keywords RETVAL RETVAL_FAILURE)$/;"	v	function:run_and_sort
onetime	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "onetime": "^5.1.0",$/;"	s	object:dependencies.jest-changed-files.dependencies.execa.requires
onetime	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "onetime": {$/;"	o	object:dependencies
ooe	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
op	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	f
open	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e
openTtyIn	vim/.vim/plugged/fzf/src/tui/light_unix.go	/^func openTtyIn() *os.File {$/;"	f	package:tui	typeref:typename:*os.File
openTtyIn	vim/.vim/plugged/fzf/src/tui/light_windows.go	/^func openTtyIn() *os.File {$/;"	f	package:tui	typeref:typename:*os.File
operator	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "operator": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
optString	vim/.vim/plugged/fzf/src/options.go	/^func optString(arg string, prefixes ...string) (bool, string) {$/;"	f	package:fzf	typeref:typename:(bool, string)
option_keywords	vim/.vim/plugged/editorconfig-vim/tests/core/tests/cmake/runandsort.cmake	/^    set(option_keywords CAPTURE_STDERR TRIM_INITIAL_LEADING_SPACE)$/;"	v	function:run_and_sort
optional	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "optional": true$/;"	b	object:dependencies.node-notifier.dependencies.uuid
optional	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "optional": true$/;"	b	object:dependencies.fsevents
optional	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "optional": true$/;"	b	object:dependencies.growly
optional	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "optional": true$/;"	b	object:dependencies.is-docker
optional	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "optional": true$/;"	b	object:dependencies.shellwords
optional	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "optional": true,$/;"	b	object:dependencies.is-wsl
optional	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "optional": true,$/;"	b	object:dependencies.node-notifier
optionalNextString	vim/.vim/plugged/fzf/src/options.go	/^func optionalNextString(args []string, i *int) (bool, string) {$/;"	f	package:fzf	typeref:typename:(bool, string)
optionalNumeric	vim/.vim/plugged/fzf/src/options.go	/^func optionalNumeric(args []string, i *int, defaultValue int) int {$/;"	f	package:fzf	typeref:typename:int
optionalRunes	vim/.vim/plugged/fzf/src/util/chars.go	/^func (chars *Chars) optionalRunes() []rune {$/;"	f	struct:util.Chars	typeref:typename:[]rune
optionator	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "optionator": "^0.8.1",$/;"	s	object:dependencies.escodegen.requires
optionator	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "optionator": "^0.9.1",$/;"	s	object:dependencies.eslint.requires
optionator	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "optionator": {$/;"	o	object:dependencies.escodegen.dependencies
optionator	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "optionator": {$/;"	o	object:dependencies
options	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	p	class:vme.l
opts.sink	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! opts.sink(lines)$/;"	f
opts.sinklist	vim/.vim/plugged/fzf/plugin/fzf.vim	/^    function! opts.sinklist(lines) abort$/;"	f
optsFor	vim/.vim/plugged/fzf/src/options_test.go	/^func optsFor(words ...string) *Options {$/;"	f	package:fzf	typeref:typename:*Options
oq	vim/.vim/plugged/coc.nvim/build/index.js	/^`?t[1].slice(0,-1):t[1]}}text(e){let t=this.rules.block.text.exec(e);if(t)return{type:"text",raw/;"	v
or	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
origState	vim/.vim/plugged/fzf/src/tui/light.go	/^	origState     *term.State$/;"	m	struct:tui.LightRenderer	typeref:typename:*term.State
origStateInput	vim/.vim/plugged/fzf/src/tui/light.go	/^	origStateInput  uint32$/;"	m	struct:tui.LightRenderer	typeref:typename:uint32
origStateOutput	vim/.vim/plugged/fzf/src/tui/light.go	/^	origStateOutput uint32$/;"	m	struct:tui.LightRenderer	typeref:typename:uint32
origText	vim/.vim/plugged/fzf/src/item.go	/^	origText    *[]byte       \/\/ 8$/;"	m	struct:fzf.Item	typeref:typename:*[]byte
origin	vim/.vim/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) origin() {$/;"	f	struct:tui.LightRenderer
os	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
ot	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
ou	vim/.vim/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
outHandle	vim/.vim/plugged/fzf/src/tui/light.go	/^	outHandle       uintptr$/;"	m	struct:tui.LightRenderer	typeref:typename:uintptr
outline.checkBufferSwitch	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "outline.checkBufferSwitch": {$/;"	o	object:properties
outline.codeActionKinds	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "outline.codeActionKinds": {$/;"	o	object:properties
outline.expandLevel	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "outline.expandLevel": {$/;"	o	object:properties
outline.followCursor	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "outline.followCursor": {$/;"	o	object:properties
outline.keepWindow	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "outline.keepWindow": {$/;"	o	object:properties
outline.showLineNumber	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "outline.showLineNumber": {$/;"	o	object:properties
outline.sortBy	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "outline.sortBy": {$/;"	o	object:properties
outline.splitCommand	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "outline.splitCommand": {$/;"	o	object:properties
output	vim/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^        $output = ""$/;"	v
output	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) output() bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
output	vim/.vim/plugged/fzf/src/terminal_test.go	/^	output string \/\/ literal output$/;"	m	struct:fzf.want	typeref:typename:string
ov	vim/.vim/plugged/coc.nvim/build/index.js	/^`),0,i]]);return t[o-1]}async withProgress(e,t){return this.checkDialog()?await new bg(this.nvim/;"	f
overflow	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) overflow(runes []rune, max int) bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
overflow32	vim/.vim/plugged/fzf/src/util/chars.go	/^	overflow32 uint32 = 0x80808080$/;"	c	package:util	typeref:typename:uint32
overflow64	vim/.vim/plugged/fzf/src/util/chars.go	/^	overflow64 uint64 = 0x8080808080808080$/;"	c	package:util	typeref:typename:uint64
overlapAllowed	vim/.vim/plugged/vim-styled-components/examples/complex.js	/^  properties: { overlapAllowed: { type: 'boolean', title: 'Overlap allowed' } }$/;"	c	class:settingsSchema.properties
overline	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.modifier
override	vim/.vim/plugged/fzf/src/history.go	/^func (h *History) override(str string) {$/;"	f	struct:fzf.History
ow	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
oy	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
p	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
p	vim/.vim/plugged/coc.nvim/build/index.js	/^`),a++,c=i,o=14;switch(w){case 123:return i++,o=1;case 125:return i++,o=2;case 91:return i++,o=3/;"	v
p	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
p	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
p	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:a
p	vim/.vim/plugged/coc.nvim/build/index.js	/^`+p(e.style.border,n.left)),A+=M.join(p(e.style.border,n.middle))+p(e.style.border,n.right)}),p(/;"	f	function:AnonymousFunction272f78ae1fa00
p	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:$d
p	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
p	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:Yae
p	vim/.vim/plugged/vim-css-color/tests/torture.css	/^p { color: #300000; color: #300001; color: #300002; color: #300003; color: #300004; color: #3000/;"	s
p$	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
p-each-series	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "p-each-series": "^2.1.0",$/;"	s	object:dependencies.@jest/core.requires
p-each-series	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "p-each-series": {$/;"	o	object:dependencies
p-finally	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "p-finally": "^1.0.0",$/;"	s	object:dependencies.execa.requires
p-finally	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "p-finally": {$/;"	o	object:dependencies
p-limit	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "p-limit": "^2.2.0"$/;"	s	object:dependencies.p-locate.requires
p-limit	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "p-limit": {$/;"	o	object:dependencies
p-locate	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "p-locate": "^4.1.0"$/;"	s	object:dependencies.locate-path.requires
p-locate	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "p-locate": {$/;"	o	object:dependencies
p-try	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "p-try": "^2.0.0"$/;"	s	object:dependencies.p-limit.requires
p-try	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "p-try": {$/;"	o	object:dependencies
p0	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
p5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
p6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
p7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
p8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
p9	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
pB	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
pC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
pD	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
pE	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
pG	vim/.vim/plugged/coc.nvim/build/index.js	/^`),s=n.length-(t.end.line-t.start.line+1);if(this.line=this.line+s,t.end.line==this.line){let o=/;"	v
pI	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
pJ	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
pK	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
pM	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	v
pP	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
pQ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
pV	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
pW	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
pX	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
pZ	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
pa	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
pacman	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^    "pacman": {$/;"	o
padding	vim/.vim/plugged/fzf/src/terminal.go	/^	padding      [4]sizeSpec$/;"	m	struct:fzf.Terminal	typeref:typename:[4]sizeSpec
pae	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
parent	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:Uz.o.u
parent	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	p	class:q0.i
parent-module	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "parent-module": "^1.0.0",$/;"	s	object:dependencies.import-fresh.requires
parent-module	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "parent-module": {$/;"	o	object:dependencies
parse	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:r
parse	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	m	class:AnonymousFunction272f78ae0a00.t
parse-json	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "parse-json": "^5.0.0",$/;"	s	object:dependencies.read-pkg.requires
parse-json	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "parse-json": {$/;"	o	object:dependencies
parse5	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "parse5": "6.0.1",$/;"	s	object:dependencies.jsdom.requires
parse5	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "parse5": {$/;"	o	object:dependencies
parseAlgo	vim/.vim/plugged/fzf/src/options.go	/^func parseAlgo(str string) algo.Algo {$/;"	f	package:fzf	typeref:typename:algo.Algo
parseAnsiCode	vim/.vim/plugged/fzf/src/ansi.go	/^func parseAnsiCode(s string) (int, string) {$/;"	f	package:fzf	typeref:typename:(int, string)
parseBorder	vim/.vim/plugged/fzf/src/options.go	/^func parseBorder(str string, optional bool) tui.BorderShape {$/;"	f	package:fzf	typeref:typename:tui.BorderShape
parseHeight	vim/.vim/plugged/fzf/src/options.go	/^func parseHeight(str string) sizeSpec {$/;"	f	package:fzf	typeref:typename:sizeSpec
parseInfoStyle	vim/.vim/plugged/fzf/src/options.go	/^func parseInfoStyle(str string) infoStyle {$/;"	f	package:fzf	typeref:typename:infoStyle
parseKeyChords	vim/.vim/plugged/fzf/src/options.go	/^func parseKeyChords(str string, message string) map[tui.Event]string {$/;"	f	package:fzf	typeref:typename:map[tui.Event]string
parseKeymap	vim/.vim/plugged/fzf/src/options.go	/^func parseKeymap(keymap map[tui.Event][]action, str string) {$/;"	f	package:fzf
parseLayout	vim/.vim/plugged/fzf/src/options.go	/^func parseLayout(str string) layoutType {$/;"	f	package:fzf	typeref:typename:layoutType
parseMargin	vim/.vim/plugged/fzf/src/options.go	/^func parseMargin(opt string, margin string) [4]sizeSpec {$/;"	f	package:fzf	typeref:typename:[4]sizeSpec
parseOptions	vim/.vim/plugged/fzf/src/options.go	/^func parseOptions(opts *Options, allArgs []string) {$/;"	f	package:fzf
parsePlaceholder	vim/.vim/plugged/fzf/src/terminal.go	/^func parsePlaceholder(match string) (bool, string, placeholderFlags) {$/;"	f	package:fzf	typeref:typename:(bool, string, placeholderFlags)
parsePreviewWindow	vim/.vim/plugged/fzf/src/options.go	/^func parsePreviewWindow(opts *previewOpts, input string) {$/;"	f	package:fzf
parsePrompt	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) parsePrompt(prompt string) (func(), int) {$/;"	f	struct:fzf.Terminal	typeref:typename:(func(), int)
parseSize	vim/.vim/plugged/fzf/src/options.go	/^func parseSize(str string, maxPercent float64, label string) sizeSpec {$/;"	f	package:fzf	typeref:typename:sizeSpec
parseTerms	vim/.vim/plugged/fzf/src/pattern.go	/^func parseTerms(fuzzy bool, caseMode Case, normalize bool, str string) []termSet {$/;"	f	package:fzf	typeref:typename:[]termSet
parseTheme	vim/.vim/plugged/fzf/src/options.go	/^func parseTheme(defaultTheme *tui.ColorTheme, str string) *tui.ColorTheme {$/;"	f	package:fzf	typeref:typename:*tui.ColorTheme
parseTiebreak	vim/.vim/plugged/fzf/src/options.go	/^func parseTiebreak(str string) []criterion {$/;"	f	package:fzf	typeref:typename:[]criterion
parseToggleSort	vim/.vim/plugged/fzf/src/options.go	/^func parseToggleSort(keymap map[tui.Event][]action, str string) {$/;"	f	package:fzf
parsed	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:AnonymousFunction272f78ae31800.t
partialResult	vim/.vim/plugged/fzf/src/matcher.go	/^type partialResult struct {$/;"	s	package:fzf
partitions	vim/.vim/plugged/fzf/src/matcher.go	/^	partitions     int$/;"	m	struct:fzf.Matcher	typeref:typename:int
parts	vim/.vim/plugged/coc.nvim/build/index.js	/^  var parts = v.slice(1).split('.')$/;"	v
pascalcase	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "pascalcase": "^0.1.1"$/;"	s	object:dependencies.base.requires
pascalcase	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "pascalcase": {$/;"	o	object:dependencies
paste	vim/.vim/plugged/fzf/test/test_go.rb	/^  def paste(str)$/;"	f	class:Tmux
path	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:Uz.o.u
path	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:$T.c
path	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:jW.e
path	vim/.vim/plugged/fzf/src/history.go	/^	path     string$/;"	m	struct:fzf.History	typeref:typename:string
path-exists	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "path-exists": "^4.0.0"$/;"	s	object:dependencies.find-up.requires
path-exists	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "path-exists": {$/;"	o	object:dependencies
path-is-absolute	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "path-is-absolute": "^1.0.0"$/;"	s	object:dependencies.glob.requires
path-is-absolute	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "path-is-absolute": {$/;"	o	object:dependencies
path-key	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "path-key": "^2.0.1",$/;"	s	object:dependencies.execa.dependencies.cross-spawn.requires
path-key	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "path-key": "^3.0.0"$/;"	s	object:dependencies.jest-changed-files.dependencies.npm-run-path.requires
path-key	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "path-key": "^2.0.0"$/;"	s	object:dependencies.npm-run-path.requires
path-key	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "path-key": "^3.1.0",$/;"	s	object:dependencies.cross-spawn.requires
path-key	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "path-key": {$/;"	o	object:dependencies.execa.dependencies
path-key	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "path-key": {$/;"	o	object:dependencies.npm-run-path.dependencies
path-key	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "path-key": {$/;"	o	object:dependencies
path-parse	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "path-parse": "^1.0.6"$/;"	s	object:dependencies.resolve.requires
path-parse	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "path-parse": {$/;"	o	object:dependencies
path-type	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "path-type": "^4.0.0"$/;"	s	object:dependencies.dir-glob.requires
path-type	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "path-type": {$/;"	o	object:dependencies
path_separator_backslash_in_cmd_line_regex	vim/.vim/plugged/editorconfig-vim/tests/core/tests/filetree/CMakeLists.txt	/^    set(path_separator_backslash_in_cmd_line_regex "^[ \\t\\n\\r]*$")$/;"	v
path_separator_backslash_in_cmd_line_regex	vim/.vim/plugged/editorconfig-vim/tests/core/tests/filetree/CMakeLists.txt	/^    set(path_separator_backslash_in_cmd_line_regex "^key1=value1[ \\t\\n\\r]*$")$/;"	v
pathname	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:jW.e
pattern	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:AnonymousFunction272f78ae31400.c
pattern	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "pattern": "^https?:\/\/([^:]*(:[^@]*)?@)?([^:]+|\\\\[[:0-9a-fA-F]+\\\\])(:\\\\d+)?\/?$|^$/;"	s	object:properties.http.proxy
pattern	vim/.vim/plugged/fzf/src/matcher.go	/^	pattern    *Pattern$/;"	m	struct:fzf.MatchRequest	typeref:typename:*Pattern
pattern	vim/.vim/plugged/fzf/src/merger.go	/^	pattern *Pattern$/;"	m	struct:fzf.Merger	typeref:typename:*Pattern
patternBuilder	vim/.vim/plugged/fzf/src/matcher.go	/^	patternBuilder func([]rune) *Pattern$/;"	m	struct:fzf.Matcher	typeref:typename:func([]rune) *Pattern
patternProperties	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "patternProperties": {$/;"	o	object:properties.languageserver
paused	vim/.vim/plugged/fzf/src/terminal.go	/^	paused       bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
pborder	vim/.vim/plugged/fzf/src/terminal.go	/^	pborder      tui.Window$/;"	m	struct:fzf.Terminal	typeref:typename:tui.Window
pc	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	v
peek	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:h
percent	vim/.vim/plugged/fzf/src/options.go	/^	percent bool$/;"	m	struct:fzf.sizeSpec	typeref:typename:bool
pfe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
pg	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
pge	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
picomatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "picomatch": "^2.0.4"$/;"	s	object:dependencies.anymatch.requires
picomatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "picomatch": "^2.2.1"$/;"	s	object:dependencies.fast-glob.requires
picomatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "picomatch": "^2.2.1"$/;"	s	object:dependencies.readdirp.requires
picomatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "picomatch": "^2.2.3"$/;"	s	object:dependencies.micromatch.requires
picomatch	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "picomatch": {$/;"	o	object:dependencies
pie	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
pirates	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "pirates": "^4.0.1",$/;"	s	object:dependencies.@jest/transform.requires
pirates	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "pirates": {$/;"	o	object:dependencies
pkg-dir	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "pkg-dir": "^4.2.0",$/;"	s	object:dependencies.import-local.requires
pkg-dir	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "pkg-dir": {$/;"	o	object:dependencies
placeCursor	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) placeCursor() {$/;"	f	struct:fzf.Terminal
placeholder	vim/.vim/plugged/fzf/src/terminal.go	/^var placeholder *regexp.Regexp$/;"	v	package:fzf	typeref:typename:*regexp.Regexp
placeholderFlags	vim/.vim/plugged/fzf/src/terminal.go	/^type placeholderFlags struct {$/;"	s	package:fzf
plug#	vim/.vim/autoload/plug.vim	/^function! plug#(repo, ...)$/;"	f
plug#begin	vim/.vim/autoload/plug.vim	/^function! plug#begin(...)$/;"	f
plug#end	vim/.vim/autoload/plug.vim	/^function! plug#end()$/;"	f
plug#helptags	vim/.vim/autoload/plug.vim	/^function! plug#helptags()$/;"	f
plug#load	vim/.vim/autoload/plug.vim	/^function! plug#load(...)$/;"	f
plug#shellescape	vim/.vim/autoload/plug.vim	/^function! plug#shellescape(arg, ...)$/;"	f
plugin/editorconfig.vim	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^  describe 'plugin\/editorconfig.vim' do$/;"	d
plus	vim/.vim/plugged/fzf/src/terminal.go	/^	plus          bool$/;"	m	struct:fzf.placeholderFlags	typeref:typename:bool
pme	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
pn	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
po	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	v
pointer	vim/.vim/plugged/fzf/src/terminal.go	/^	pointer      string$/;"	m	struct:fzf.Terminal	typeref:typename:string
pointerEmpty	vim/.vim/plugged/fzf/src/terminal.go	/^	pointerEmpty string$/;"	m	struct:fzf.Terminal	typeref:typename:string
pointerLen	vim/.vim/plugged/fzf/src/terminal.go	/^	pointerLen   int$/;"	m	struct:fzf.Terminal	typeref:typename:int
points	vim/.vim/plugged/fzf/src/result.go	/^	points [4]uint16$/;"	m	struct:fzf.Result	typeref:typename:[4]uint16
pop	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:r
port	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:$T.c
port	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:eme.n
port	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "port": {$/;"	o	object:definitions.languageServerSocket.properties
posArray	vim/.vim/plugged/fzf/src/algo/algo.go	/^func posArray(withPos bool, len int) *[]int {$/;"	f	package:algo	typeref:typename:*[]int
posDown	vim/.vim/plugged/fzf/src/options.go	/^	posDown$/;"	c	package:fzf
posLeft	vim/.vim/plugged/fzf/src/options.go	/^	posLeft$/;"	c	package:fzf
posRight	vim/.vim/plugged/fzf/src/options.go	/^	posRight$/;"	c	package:fzf
posUp	vim/.vim/plugged/fzf/src/options.go	/^	posUp windowPosition = iota$/;"	c	package:fzf	typeref:type:windowPosition
position	vim/.vim/plugged/fzf/src/options.go	/^	position    windowPosition$/;"	m	struct:fzf.previewOpts	typeref:typename:windowPosition
positionAt	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	m	class:r
positionAt	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	m	class:r
posix-character-classes	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "posix-character-classes": "^0.1.0",$/;"	s	object:dependencies.expand-brackets.requires
posix-character-classes	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "posix-character-classes": {$/;"	o	object:dependencies
post	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:Uz.o.u
postProcessOptions	vim/.vim/plugged/fzf/src/options.go	/^func postProcessOptions(opts *Options) {$/;"	f	package:fzf
posx	vim/.vim/plugged/fzf/src/tui/light.go	/^	posx     int$/;"	m	struct:tui.LightWindow	typeref:typename:int
posy	vim/.vim/plugged/fzf/src/tui/light.go	/^	posy     int$/;"	m	struct:tui.LightWindow	typeref:typename:int
powerline (default)	vim/.vim/plugged/lightline.vim/README.md	/^### powerline (default)$/;"	S	chapter:lightline.vim
powerline (default)	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### powerline (default)$/;"	S	chapter:Available Colorschemes
powerlineish	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### powerlineish$/;"	S	chapter:Available Colorschemes
pp	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let f of this._placeholders)if(f.index==o&&f.id<s&&f.line==e.range.start.line){let d=thi/;"	v
pr	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
pre	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:Uz.o.u
prefixLength	vim/.vim/plugged/fzf/src/tokenizer.go	/^	prefixLength int32$/;"	m	struct:fzf.Token	typeref:typename:int32
prelude-ls	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "prelude-ls": "~1.1.2"$/;"	s	object:dependencies.escodegen.dependencies.type-check.requires
prelude-ls	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "prelude-ls": "~1.1.2",$/;"	s	object:dependencies.escodegen.dependencies.levn.requires
prelude-ls	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "prelude-ls": "~1.1.2",$/;"	s	object:dependencies.escodegen.dependencies.optionator.requires
prelude-ls	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "prelude-ls": "^1.2.1"$/;"	s	object:dependencies.type-check.requires
prelude-ls	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "prelude-ls": "^1.2.1",$/;"	s	object:dependencies.levn.requires
prelude-ls	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "prelude-ls": "^1.2.1",$/;"	s	object:dependencies.optionator.requires
prelude-ls	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "prelude-ls": {$/;"	o	object:dependencies.escodegen.dependencies
prelude-ls	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "prelude-ls": {$/;"	o	object:dependencies
prepare	vim/.vim/plugged/fzf/test/test_go.rb	/^  def prepare$/;"	f	class:Tmux
preserveSpace	vim/.vim/plugged/fzf/src/terminal.go	/^	preserveSpace bool$/;"	m	struct:fzf.placeholderFlags	typeref:typename:bool
pressed	vim/.vim/plugged/fzf/src/terminal.go	/^	pressed      string$/;"	m	struct:fzf.Terminal	typeref:typename:string
prettier.disableSuccessMessage	.config/nvim_copy/coc-settings.json	/^  "prettier.disableSuccessMessage": true,$/;"	b
prettier.disableSuccessMessage	vim/.vim/coc-settings.json	/^  "prettier.disableSuccessMessage": true,$/;"	b
pretty-format	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "pretty-format": "^26.0.0"$/;"	s	object:dependencies.@types/jest.requires
pretty-format	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "pretty-format": "^26.6.2"$/;"	s	object:dependencies.jest-config.requires
pretty-format	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "pretty-format": "^26.6.2"$/;"	s	object:dependencies.jest-diff.requires
pretty-format	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "pretty-format": "^26.6.2"$/;"	s	object:dependencies.jest-each.requires
pretty-format	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "pretty-format": "^26.6.2"$/;"	s	object:dependencies.jest-leak-detector.requires
pretty-format	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "pretty-format": "^26.6.2"$/;"	s	object:dependencies.jest-matcher-utils.requires
pretty-format	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "pretty-format": "^26.6.2"$/;"	s	object:dependencies.jest-validate.requires
pretty-format	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "pretty-format": "^26.6.2",$/;"	s	object:dependencies.jest-jasmine2.requires
pretty-format	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "pretty-format": "^26.6.2",$/;"	s	object:dependencies.jest-message-util.requires
pretty-format	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "pretty-format": "^26.6.2",$/;"	s	object:dependencies.jest-snapshot.requires
pretty-format	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "pretty-format": {$/;"	o	object:dependencies
prevDownTime	vim/.vim/plugged/fzf/src/tui/light.go	/^	prevDownTime  time.Time$/;"	m	struct:tui.LightRenderer	typeref:typename:time.Time
prevDownTime	vim/.vim/plugged/fzf/src/tui/tui.go	/^	prevDownTime time.Time$/;"	m	struct:tui.FullscreenRenderer	typeref:typename:time.Time
prevLines	vim/.vim/plugged/fzf/src/terminal.go	/^	prevLines    []itemLine$/;"	m	struct:fzf.Terminal	typeref:typename:[]itemLine
preview	vim/.vim/plugged/fzf/src/tui/light.go	/^	preview  bool$/;"	m	struct:tui.LightWindow	typeref:typename:bool
preview	vim/.vim/plugged/fzf/src/tui/tcell.go	/^	preview     bool$/;"	m	struct:tui.TcellWindow	typeref:typename:bool
previewBox	vim/.vim/plugged/fzf/src/terminal.go	/^	previewBox   *util.EventBox$/;"	m	struct:fzf.Terminal	typeref:typename:*util.EventBox
previewCancelWait	vim/.vim/plugged/fzf/src/constants.go	/^	previewCancelWait = 500 * time.Millisecond$/;"	c	package:fzf
previewChunkDelay	vim/.vim/plugged/fzf/src/constants.go	/^	previewChunkDelay = 100 * time.Millisecond$/;"	c	package:fzf
previewDelayed	vim/.vim/plugged/fzf/src/constants.go	/^	previewDelayed    = 500 * time.Millisecond$/;"	c	package:fzf
previewOpts	vim/.vim/plugged/fzf/src/options.go	/^type previewOpts struct {$/;"	s	package:fzf
previewOpts	vim/.vim/plugged/fzf/src/terminal.go	/^	previewOpts  previewOpts$/;"	m	struct:fzf.Terminal	typeref:typename:previewOpts
previewRequest	vim/.vim/plugged/fzf/src/terminal.go	/^type previewRequest struct {$/;"	s	package:fzf
previewResult	vim/.vim/plugged/fzf/src/terminal.go	/^type previewResult struct {$/;"	s	package:fzf
previewed	vim/.vim/plugged/fzf/src/terminal.go	/^	previewed    previewed$/;"	m	struct:fzf.Terminal	typeref:typename:previewed
previewed	vim/.vim/plugged/fzf/src/terminal.go	/^type previewed struct {$/;"	s	package:fzf
previewer	vim/.vim/plugged/fzf/src/terminal.go	/^	previewer    previewer$/;"	m	struct:fzf.Terminal	typeref:typename:previewer
previewer	vim/.vim/plugged/fzf/src/terminal.go	/^type previewer struct {$/;"	s	package:fzf
previous	vim/.vim/plugged/fzf/src/history.go	/^func (h *History) previous() string {$/;"	f	struct:fzf.History	typeref:typename:string
printAll	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) printAll() {$/;"	f	struct:fzf.Terminal
printHeader	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) printHeader() {$/;"	f	struct:fzf.Terminal
printHighlighted	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) printHighlighted(result Result, colBase tui.ColorPair, colMatch tui.ColorPair/;"	f	struct:fzf.Terminal	typeref:typename:int
printInfo	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) printInfo() {$/;"	f	struct:fzf.Terminal
printItem	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) printItem(result Result, line int, i int, current bool) {$/;"	f	struct:fzf.Terminal
printList	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) printList() {$/;"	f	struct:fzf.Terminal
printPreview	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) printPreview() {$/;"	f	struct:fzf.Terminal
printPreviewDelayed	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) printPreviewDelayed() {$/;"	f	struct:fzf.Terminal
printPrompt	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) printPrompt() {$/;"	f	struct:fzf.Terminal
printQuery	vim/.vim/plugged/fzf/src/terminal.go	/^	printQuery   bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
printString	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (w *TcellWindow) printString(text string, pair ColorPair) {$/;"	f	struct:tui.TcellWindow
print_num	vim/.vim/plugged/far.vim/test/very long directory name with spaces/very long file name also with spaces.py	/^def print_num(number):$/;"	f
printer	vim/.vim/plugged/fzf/src/terminal.go	/^	printer      func(string)$/;"	m	struct:fzf.Terminal	typeref:typename:func(string)
printsep	vim/.vim/plugged/fzf/src/terminal.go	/^	printsep     string$/;"	m	struct:fzf.Terminal	typeref:typename:string
proc	vim/.vim/plugged/far.vim/rplugin/python3/far/sources/far_glob.py	/^def proc(rules_origin):$/;"	f
procFun	vim/.vim/plugged/fzf/src/pattern.go	/^	procFun       map[termType]algo.Algo$/;"	m	struct:fzf.Pattern	typeref:typename:map[termType]algo.Algo
processTabs	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) processTabs(runes []rune, prefixWidth int) (string, int) {$/;"	f	struct:fzf.Terminal	typeref:typename:(string, int)
progress	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "progress": "^2.0.0",$/;"	s	object:dependencies.eslint.requires
progress	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "progress": {$/;"	o	object:dependencies
progress	vim/.vim/plugged/fzf/src/terminal.go	/^	progress     int$/;"	m	struct:fzf.Terminal	typeref:typename:int
progressMinDuration	vim/.vim/plugged/fzf/src/constants.go	/^	progressMinDuration     = 200 * time.Millisecond$/;"	c	package:fzf
progressOnInitialization	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "progressOnInitialization": {$/;"	o	object:definitions.languageServerBase.properties
progressOnInitialization	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "progressOnInitialization": {},$/;"	o	object:definitions.languageServerCommand.properties
progressOnInitialization	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "progressOnInitialization": {},$/;"	o	object:definitions.languageServerModule.properties
progressOnInitialization	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "progressOnInitialization": {},$/;"	o	object:definitions.languageServerSocket.properties
promise.prototype.finally	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "promise.prototype.finally": {$/;"	o	object:dependencies
prompt	vim/.vim/plugged/fzf/src/terminal.go	/^	prompt       func()$/;"	m	struct:fzf.Terminal	typeref:typename:func()
promptLen	vim/.vim/plugged/fzf/src/terminal.go	/^	promptLen    int$/;"	m	struct:fzf.Terminal	typeref:typename:int
promptLine	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) promptLine() int {$/;"	f	struct:fzf.Terminal	typeref:typename:int
prompts	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "prompts": "^2.0.1",$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
prompts	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "prompts": {$/;"	o	object:dependencies
properties	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:definitions.float
properties	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:definitions.languageServerBase
properties	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:definitions.languageServerCommand
properties	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:definitions.languageServerModule
properties	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:definitions.languageServerSocket
properties	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:properties.diagnostic.floatConfig
properties	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:properties.hover.floatConfig
properties	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:properties.signature.floatConfig
properties	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:properties.suggest.completionItemKindLabels
properties	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "properties": {$/;"	o	object:properties.suggest.floatConfig
properties	vim/.vim/plugged/coc.nvim/data/schema.json	/^  "properties": {$/;"	o
properties	vim/.vim/plugged/vim-styled-components/examples/complex.js	/^  properties: { overlapAllowed: { type: 'boolean', title: 'Overlap allowed' } }$/;"	c	class:settingsSchema
property	.ctags.d/vue.ctags	/^--regex-vue=\/^ {2}((activated) \\(|('activated'):|(activated):)\/activated\/p,property\/{scope=/;"	k	langdef:vue
property	.ctags.d/vue.ctags	/^--regex-vue=\/^ {2}((beforeCreate) \\(|('beforeCreate'):|(beforeCreate):)\/beforeCreate\/p,prope/;"	k	langdef:vue
property	.ctags.d/vue.ctags	/^--regex-vue=\/^ {2}((beforeDestroy) \\(|('beforeDestroy'):|(beforeDestroy):)\/beforeDestroy\/p,p/;"	k	langdef:vue
property	.ctags.d/vue.ctags	/^--regex-vue=\/^ {2}((beforeMount) \\(|('beforeMount'):|(beforeMount):)\/beforeMount\/p,property\//;"	k	langdef:vue
property	.ctags.d/vue.ctags	/^--regex-vue=\/^ {2}((beforeUpdate) \\(|('beforeUpdate'):|(beforeUpdate):)\/beforeUpdate\/p,prope/;"	k	langdef:vue
property	.ctags.d/vue.ctags	/^--regex-vue=\/^ {2}((components) \\(|('components'):|(components):)\/components\/p,property\/{sc/;"	k	langdef:vue
property	.ctags.d/vue.ctags	/^--regex-vue=\/^ {2}((computed) \\(|('computed'):|(computed):)\/computed\/p,property\/{scope=set}$/;"	k	langdef:vue
property	.ctags.d/vue.ctags	/^--regex-vue=\/^ {2}((created) \\(|('created'):|(created):)\/created\/p,property\/{scope=set}$/;"	k	langdef:vue
property	.ctags.d/vue.ctags	/^--regex-vue=\/^ {2}((data) \\(|('data'):|(data):)\/data\/p,property\/{scope=set}$/;"	k	langdef:vue
property	.ctags.d/vue.ctags	/^--regex-vue=\/^ {2}((deactivated) \\(|('deactivated'):|(deactivated):)\/deactivated\/p,property\//;"	k	langdef:vue
property	.ctags.d/vue.ctags	/^--regex-vue=\/^ {2}((destroyed) \\(|('destroyed'):|(destroyed):)\/destroyed\/p,property\/{scope=/;"	k	langdef:vue
property	.ctags.d/vue.ctags	/^--regex-vue=\/^ {2}((errorCaptured) \\(|('errorCaptured'):|(errorCaptured):)\/errorCaptured\/p,p/;"	k	langdef:vue
property	.ctags.d/vue.ctags	/^--regex-vue=\/^ {2}((methods) \\(|('methods'):|(methods):)\/methods\/p,property\/{scope=set}$/;"	k	langdef:vue
property	.ctags.d/vue.ctags	/^--regex-vue=\/^ {2}((mounted) \\(|('mounted'):|(mounted):)\/mounted\/p,property\/{scope=set}$/;"	k	langdef:vue
property	.ctags.d/vue.ctags	/^--regex-vue=\/^ {2}((name|'name')[^,]*)\/\\1\/p,property\/{scope=ref}$/;"	k	langdef:vue
property	.ctags.d/vue.ctags	/^--regex-vue=\/^ {2}((props) \\(|('props'):|(props):)\/props\/p,property\/{scope=set}$/;"	k	langdef:vue
property	.ctags.d/vue.ctags	/^--regex-vue=\/^ {2}((updated) \\(|('updated'):|(updated):)\/updated\/p,property\/{scope=set}$/;"	k	langdef:vue
property	.ctags.d/vue.ctags	/^--regex-vue=\/^ {2}((watch) \\(|('watch'):|(watch):)\/watch\/p,property\/{scope=set}$/;"	k	langdef:vue
property	.ctags.d/vue.ctags	/^--regex-vue=\/^ {4}((async )?([a-zA-Z0-9_]*) \\(|('[a-zA-Z0-9_\\.]*'):|('[a-zA-Z0-9_\\.]*') \\(|/;"	k	langdef:vue
property	.ctags.d/vue.ctags	/^--regex-vue=\/^(([a-zA-Z0-9_#\\$\\.\\{\\}-]*) \\{)\/\\2\/p,property\/{scope=ref}$/;"	k	langdef:vue
property	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "property": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
protector	vim/.vim/plugged/fzf/src/protector/protector.go	/^package protector$/;"	p
protector	vim/.vim/plugged/fzf/src/protector/protector_openbsd.go	/^package protector$/;"	p
protocol	vim/.vim/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	G	class:AnonymousFunction272f78ae33e00.e
protocol	vim/.vim/plugged/coc.nvim/build/index.js	/^`).some(e=>e.indexOf("(https.js:")!==-1||e.indexOf("node:https:")!==-1)}function Cb(r,e){return /;"	S	class:AnonymousFunction272f78ae33e00.e
protocol	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:jW.e
proxyAuthorization	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:$T.s
proxyCA	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:$T.s
proxyUrl	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:$T.s
ps	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
ps-killall	.config/openbox/menu.xml	/^  <menu id="ps-killall" label="ps(1) | killall(1)" execute="~\/scripts\/__openbox_stats_ps_KILLA/;"	i
pse	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
psl	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "psl": "^1.1.33",$/;"	s	object:dependencies.tough-cookie.requires
psl	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "psl": {$/;"	o	object:dependencies
pt	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
pu	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
pump	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "pump": "^3.0.0"$/;"	s	object:dependencies.jest-changed-files.dependencies.get-stream.requires
pump	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "pump": "^3.0.0"$/;"	s	object:dependencies.get-stream.requires
pump	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "pump": {$/;"	o	object:dependencies
punycode	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "punycode": "^2.1.0"$/;"	s	object:dependencies.uri-js.requires
punycode	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "punycode": "^2.1.1"$/;"	s	object:dependencies.tr46.requires
punycode	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "punycode": "^2.1.1",$/;"	s	object:dependencies.tough-cookie.requires
punycode	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "punycode": {$/;"	o	object:dependencies
push	vim/.vim/plugged/fzf/src/chunklist.go	/^func (c *Chunk) push(trans ItemBuilder, data []byte) bool {$/;"	f	struct:fzf.Chunk	typeref:typename:bool
pusher	vim/.vim/plugged/fzf/src/reader.go	/^	pusher   func([]byte) bool$/;"	m	struct:fzf.Reader	typeref:typename:func([]byte) bool
pv	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
pw	vim/.vim/plugged/coc.nvim/build/index.js	/^`+h+d;u.push({range:ds.Range.create(n,h.length,n,h.length),newText:"  \\\\ "}),g=g+"\\\\ ",u.pus/;"	v
pwe	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
pwindow	vim/.vim/plugged/fzf/src/terminal.go	/^	pwindow      tui.Window$/;"	m	struct:fzf.Terminal	typeref:typename:tui.Window
pwindow	vim/.vim/plugged/fzf/src/terminal.go	/^	pwindow  tui.Window$/;"	m	struct:fzf.previewRequest	typeref:typename:tui.Window
px	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
py	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
q	vim/.vim/autoload/plug.vim	/^  nnoremap <silent> <buffer> q :call <SID>close_pane()<cr>$/;"	m
q	vim/.vim/autoload/plug.vim	/^  nnoremap <silent> <buffer> q :q<cr>$/;"	m
q	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
q	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
q	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <buffer> q :tabclose<cr>$/;"	m
q	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <silent> <buffer> q    :$wincmd w <bar> close<cr>$/;"	m
q	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^  nnoremap <silent> <buffer> q :close<cr>$/;"	m
q	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^        nnoremap <buffer> <silent> q    :<C-U>echoerr "fugitive: q is removed in favor of gq (or/;"	m
q	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^      nnoremap <buffer> <silent> q :<C-U>echoerr "fugitive: q is removed in favor of gq (or :q)"/;"	m
q	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^    nnoremap <buffer> <silent> q :<C-U>echoerr "fugitive: q removed in favor of gq (or :q)"<CR>$/;"	m
q	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^  nnoremap <buffer> <silent> q :<C-U>call <SID>Close()<CR>$/;"	m
q	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^  nnoremap <buffer> <silent> q :quit<CR>$/;"	m
q	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^  nnoremap <buffer> q :quit<CR>$/;"	m
q$	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
q0	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
q5	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
q6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
q8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
q9	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
qD	vim/.vim/plugged/coc.nvim/build/index.js	/^`),s=n.length-(t.end.line-t.start.line+1);if(this.line=this.line+s,t.end.line==this.line){let o=/;"	v
qG	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
qJ	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
qM	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
qO	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
qT	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
qU	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
qUe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
qV	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
qX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
qY	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
qae	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
qb	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
qc	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	f
qd	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
qe	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
qee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
qf	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	v
qg	vim/.vim/plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	v
qj	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
qk	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	v
ql	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
qme	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
qn	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
qq	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	v
qse	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
qt	vim/.vim/plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
qu	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
query	vim/.vim/plugged/fzf/src/terminal.go	/^	query         bool$/;"	m	struct:fzf.placeholderFlags	typeref:typename:bool
query	vim/.vim/plugged/fzf/src/terminal_test.go	/^	query    string$/;"	m	struct:fzf.give	typeref:typename:string
queryCache	vim/.vim/plugged/fzf/src/cache.go	/^type queryCache map[string][]Result$/;"	t	package:fzf	typeref:typename:map[string][]Result
queryCacheMax	vim/.vim/plugged/fzf/src/constants.go	/^	queryCacheMax int = chunkSize \/ 5$/;"	c	package:fzf	typeref:typename:int
queryLen	vim/.vim/plugged/fzf/src/terminal.go	/^	queryLen     [2]int$/;"	m	struct:fzf.Terminal	typeref:typename:[2]int
queryLen	vim/.vim/plugged/fzf/src/terminal.go	/^	queryLen int$/;"	m	struct:fzf.itemLine	typeref:typename:int
queue-microtask	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "queue-microtask": "^1.2.2"$/;"	s	object:dependencies.run-parallel.requires
queue-microtask	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "queue-microtask": {$/;"	o	object:dependencies
queued	vim/.vim/plugged/fzf/src/tui/light.go	/^	queued        strings.Builder$/;"	m	struct:tui.LightRenderer	typeref:typename:strings.Builder
quoteEntry	vim/.vim/plugged/fzf/src/terminal_unix.go	/^func quoteEntry(entry string) string {$/;"	f	package:fzf	typeref:typename:string
quoteEntry	vim/.vim/plugged/fzf/src/terminal_windows.go	/^func quoteEntry(entry string) string {$/;"	f	package:fzf	typeref:typename:string
qw	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
qy	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
r	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f	function:AnonymousFunction272f78ae35300
r	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f	function:AnonymousFunction272f78ae35500
r	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f	function:AnonymousFunction272f78ae35600
r	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f	function:AnonymousFunction272f78ae35700
r	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f	function:AnonymousFunction272f78ae35800
r	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
r	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	f	function:AnonymousFunction272f78ae26c00
r	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunction272f78ae1c500
r	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunction272f78ae1c700
r	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c
r	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunction272f78ae10300
r	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunction272f78ae10400
r	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunction272f78ae10600
r	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	g
r	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f	function:AnonymousFunction272f78ae35100
r	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f	function:AnonymousFunction272f78ae35200
r	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
r	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	f	function:AnonymousFunction272f78ae35900
r	vim/.vim/plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	c	class:AnonymousFunction272f78ae12b00
r	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	c	class:AnonymousFunction272f78ae21000
r	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c	class:see
r	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:oee
r$	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
r0	vim/.vim/plugged/coc.nvim/build/index.js	/^`}strong(e){return"<strong>"+e+"<\/strong>"}em(e){return"<em>"+e+"<\/em>"}codespan(e){return"<co/;"	v
r4	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
r5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
r6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
r7	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
r8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
r9	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
rB	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
rC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
rD	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
rG	vim/.vim/plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
rI	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
rL	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
rO	vim/.vim/plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	f
rQ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
rS	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
rU	vim/.vim/plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
rV	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
rW	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
rZ	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
r_	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
ra	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
rae	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}function iae(r,e,t){return p$(e,r)?{num:t+1,line:e.replace(d0,g$(t+1))}:{num:t,line:m$(g$(t))/;"	f
randResult	vim/.vim/plugged/fzf/src/merger_test.go	/^func randResult() Result {$/;"	f	package:fzf	typeref:typename:Result
range	vim/.vim/plugged/MatchTagAlways/python/tests/mta_core_test.py	/^  range = xrange$/;"	v
range	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78ae11d00.e.n
range	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78ae12000.e.a.location
range	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78ae12100.e.c
range	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78ae12500.e.s
range	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78aef700.e.c
rangeEllipsis	vim/.vim/plugged/fzf/src/tokenizer.go	/^const rangeEllipsis = 0$/;"	c	package:fzf
rc	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c
rc	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "rc": {$/;"	o	object:dependencies
re	vim/.vim/plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	f
react-is	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "react-is": "^17.0.1"$/;"	s	object:dependencies.pretty-format.requires
react-is	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "react-is": {$/;"	o	object:dependencies
read	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f	function:r
read-pkg	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "read-pkg": "^5.2.0",$/;"	s	object:dependencies.read-pkg-up.requires
read-pkg	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "read-pkg": {$/;"	o	object:dependencies
read-pkg-up	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "read-pkg-up": "^7.0.1",$/;"	s	object:dependencies.jest-resolve.requires
read-pkg-up	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "read-pkg-up": {$/;"	o	object:dependencies
readFile	vim/.vim/plugged/fzf/src/terminal_test.go	/^func readFile(path string) ([]byte, error) {$/;"	f	package:fzf	typeref:typename:([]byte, error)
readFiles	vim/.vim/plugged/fzf/src/reader.go	/^func (r *Reader) readFiles() bool {$/;"	f	struct:fzf.Reader	typeref:typename:bool
readFromCommand	vim/.vim/plugged/fzf/src/reader.go	/^func (r *Reader) readFromCommand(shell *string, command string) bool {$/;"	f	struct:fzf.Reader	typeref:typename:bool
readFromStdin	vim/.vim/plugged/fzf/src/reader.go	/^func (r *Reader) readFromStdin() bool {$/;"	f	struct:fzf.Reader	typeref:typename:bool
readdirp	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "readdirp": "~3.5.0"$/;"	s	object:dependencies.chokidar.requires
readdirp	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "readdirp": {$/;"	o	object:dependencies
readerBufferSize	vim/.vim/plugged/fzf/src/constants.go	/^	readerBufferSize       = 64 * 1024$/;"	c	package:fzf
readerPollIntervalMax	vim/.vim/plugged/fzf/src/constants.go	/^	readerPollIntervalMax  = 50 * time.Millisecond$/;"	c	package:fzf
readerPollIntervalMin	vim/.vim/plugged/fzf/src/constants.go	/^	readerPollIntervalMin  = 10 * time.Millisecond$/;"	c	package:fzf
readerPollIntervalStep	vim/.vim/plugged/fzf/src/constants.go	/^	readerPollIntervalStep = 5 * time.Millisecond$/;"	c	package:fzf
reading	vim/.vim/plugged/fzf/src/terminal.go	/^	reading      bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
readline	vim/.vim/plugged/coc.nvim/bin/prompt.js	/^const readline = require("readline")$/;"	C
readonce	vim/.vim/plugged/fzf/test/test_go.rb	/^  def readonce$/;"	f	class:TestBase
red	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
redBright	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
redraw	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) redraw() {$/;"	f	struct:fzf.Terminal
refactor.afterContext	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "refactor.afterContext": {$/;"	o	object:properties
refactor.beforeContext	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "refactor.beforeContext": {$/;"	o	object:properties
refactor.openCommand	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "refactor.openCommand": {$/;"	o	object:properties
refactor.saveToFile	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "refactor.saveToFile": {$/;"	o	object:properties
reference	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "reference": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
refresh	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) refresh() {$/;"	f	struct:fzf.Terminal
regex	vim/.vim/plugged/fzf/src/tokenizer.go	/^	regex *regexp.Regexp$/;"	m	struct:fzf.Delimiter	typeref:typename:*regexp.Regexp
regex-not	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "regex-not": "^1.0.0",$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
regex-not	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "regex-not": "^1.0.0",$/;"	s	object:dependencies.expand-brackets.requires
regex-not	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "regex-not": "^1.0.0",$/;"	s	object:dependencies.extglob.requires
regex-not	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "regex-not": "^1.0.0",$/;"	s	object:dependencies.nanomatch.requires
regex-not	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "regex-not": "^1.0.2",$/;"	s	object:dependencies.to-regex.requires
regex-not	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "regex-not": {$/;"	o	object:dependencies
regexp.prototype.flags	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "regexp.prototype.flags": "^1.3.0",$/;"	s	object:dependencies.string.prototype.matchall.requires
regexp.prototype.flags	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "regexp.prototype.flags": {$/;"	o	object:dependencies
regexpp	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "regexpp": "^3.0.0",$/;"	s	object:dependencies.@typescript-eslint/eslint-plugin.requires
regexpp	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "regexpp": "^3.1.0",$/;"	s	object:dependencies.eslint.requires
regexpp	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "regexpp": {$/;"	o	object:dependencies
regextras	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "regextras": "^0.7.1",$/;"	s	object:dependencies.eslint-plugin-jsdoc.requires
regextras	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "regextras": {$/;"	o	object:dependencies
rejectUnauthorized	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:$T.c
rejectUnauthorized	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:eme.n
release	vim/.vim/plugged/fzf/Makefile	/^release:$/;"	t
remove	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:Uz.o.u
remove	vim/.vim/plugged/fzf/uninstall	/^remove() {$/;"	f
remove-trailing-separator	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "remove-trailing-separator": "^1.0.1"$/;"	s	object:dependencies.sane.dependencies.normalize-path.requires
remove-trailing-separator	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "remove-trailing-separator": {$/;"	o	object:dependencies
remove_line	vim/.vim/plugged/fzf/uninstall	/^remove_line() {$/;"	f
renameFile	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
render	vim/.vim/plugged/vim-styled-components/examples/apis.js	/^  render() {$/;"	m	class:Container
render	vim/.vim/plugged/vim-styled-components/examples/complex.js	/^  render() {$/;"	m	class:AppClass
render	vim/.vim/plugged/vim-styled-components/examples/indent.js	/^  render() {$/;"	m	class:Test
render	vim/.vim/plugged/vim-styled-components/examples/issue-30-3.js	/^  render() {$/;"	m	class:CoffeeList
renderPreviewArea	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) renderPreviewArea(unchanged bool) {$/;"	f	struct:fzf.Terminal
renderPreviewSpinner	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) renderPreviewSpinner() {$/;"	f	struct:fzf.Terminal
renderPreviewText	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) renderPreviewText(height int, lines []string, lineNo int, unchanged bool) {$/;"	f	struct:fzf.Terminal
renderer	vim/.vim/plugged/fzf/src/tui/light.go	/^	renderer *LightRenderer$/;"	m	struct:tui.LightWindow	typeref:typename:*LightRenderer
repeat	vim/.vim/plugged/fzf/src/tui/light.go	/^func repeat(r rune, times int) string {$/;"	f	package:tui	typeref:typename:string
repeat-element	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "repeat-element": "^1.1.2",$/;"	s	object:dependencies.sane.dependencies.braces.requires
repeat-element	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "repeat-element": {$/;"	o	object:dependencies
repeat-string	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "repeat-string": "^1.6.1"$/;"	s	object:dependencies.sane.dependencies.to-regex-range.requires
repeat-string	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "repeat-string": "^1.6.1",$/;"	s	object:dependencies.sane.dependencies.fill-range.requires
repeat-string	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "repeat-string": {$/;"	o	object:dependencies
replace	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	p	class:Zse.t
replace	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	m	class:r
replacePlaceholder	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) replacePlaceholder(template string, forcePlus bool, input string, list []*Ite/;"	f	struct:fzf.Terminal	typeref:typename:string
replacePlaceholder	vim/.vim/plugged/fzf/src/terminal.go	/^func replacePlaceholder(template string, stripAnsi bool, delimiter Delimiter, printsep string, f/;"	f	package:fzf	typeref:typename:string
replacement	vim/.vim/plugged/MatchTagAlways/python/mta_core.py	/^  def replacement( match ):$/;"	f	function:PacifyHtmlComments	file:
report_version	vim/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^        '^(-v|--version)$' { $report_version = $true }$/;"	v
report_version	vim/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$report_version = $false$/;"	v
reqBox	vim/.vim/plugged/fzf/src/matcher.go	/^	reqBox         *util.EventBox$/;"	m	struct:fzf.Matcher	typeref:typename:*util.EventBox
reqBox	vim/.vim/plugged/fzf/src/terminal.go	/^	reqBox       *util.EventBox$/;"	m	struct:fzf.Terminal	typeref:typename:*util.EventBox
reqClose	vim/.vim/plugged/fzf/src/terminal.go	/^	reqClose$/;"	c	package:fzf
reqHeader	vim/.vim/plugged/fzf/src/terminal.go	/^	reqHeader$/;"	c	package:fzf
reqInfo	vim/.vim/plugged/fzf/src/terminal.go	/^	reqInfo$/;"	c	package:fzf
reqJump	vim/.vim/plugged/fzf/src/terminal.go	/^	reqJump$/;"	c	package:fzf
reqList	vim/.vim/plugged/fzf/src/terminal.go	/^	reqList$/;"	c	package:fzf
reqPreviewDelayed	vim/.vim/plugged/fzf/src/terminal.go	/^	reqPreviewDelayed$/;"	c	package:fzf
reqPreviewDisplay	vim/.vim/plugged/fzf/src/terminal.go	/^	reqPreviewDisplay$/;"	c	package:fzf
reqPreviewEnqueue	vim/.vim/plugged/fzf/src/terminal.go	/^	reqPreviewEnqueue$/;"	c	package:fzf
reqPreviewRefresh	vim/.vim/plugged/fzf/src/terminal.go	/^	reqPreviewRefresh$/;"	c	package:fzf
reqPrintQuery	vim/.vim/plugged/fzf/src/terminal.go	/^	reqPrintQuery$/;"	c	package:fzf
reqPrompt	vim/.vim/plugged/fzf/src/terminal.go	/^	reqPrompt util.EventType = iota$/;"	c	package:fzf	typeref:typename:util.EventType
reqQuit	vim/.vim/plugged/fzf/src/terminal.go	/^	reqQuit$/;"	c	package:fzf
reqRedraw	vim/.vim/plugged/fzf/src/terminal.go	/^	reqRedraw$/;"	c	package:fzf
reqRefresh	vim/.vim/plugged/fzf/src/terminal.go	/^	reqRefresh$/;"	c	package:fzf
reqReinit	vim/.vim/plugged/fzf/src/terminal.go	/^	reqReinit$/;"	c	package:fzf
reqReset	vim/.vim/plugged/fzf/src/matcher.go	/^	reqReset$/;"	c	package:fzf
reqRetry	vim/.vim/plugged/fzf/src/matcher.go	/^	reqRetry util.EventType = iota$/;"	c	package:fzf	typeref:typename:util.EventType
request	vim/.vim/plugged/vim-translator/script/translator.py	/^    def request(self, url, data=None, post=False, header=None):$/;"	m	class:BaseTranslator
require	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f	function:i
require-directory	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "require-directory": "^2.1.1",$/;"	s	object:dependencies.yargs.requires
require-directory	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "require-directory": {$/;"	o	object:dependencies
require-main-filename	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "require-main-filename": "^2.0.0",$/;"	s	object:dependencies.yargs.requires
require-main-filename	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "require-main-filename": {$/;"	o	object:dependencies
requireRootPattern	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "requireRootPattern": {$/;"	o	object:definitions.languageServerBase.properties
requireRootPattern	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "requireRootPattern": {},$/;"	o	object:definitions.languageServerCommand.properties
requireRootPattern	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "requireRootPattern": {},$/;"	o	object:definitions.languageServerModule.properties
requireRootPattern	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "requireRootPattern": {},$/;"	o	object:definitions.languageServerSocket.properties
required	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "required": ["command", "filetypes"],$/;"	a	object:definitions.languageServerCommand
required	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "required": ["module", "filetypes"],$/;"	a	object:definitions.languageServerModule
required	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "required": ["port", "filetypes"],$/;"	a	object:definitions.languageServerSocket
requiredExtraSize	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:AnonymousFunction272f78ae31400.c
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^              "requires": {$/;"	o	object:dependencies.has-values.dependencies.is-number.dependencies.kind-of
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^              "requires": {$/;"	o	object:dependencies.sane.dependencies.braces.dependencies.extend-shallow
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^              "requires": {$/;"	o	object:dependencies.sane.dependencies.fill-range.dependencies.extend-shallow
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^              "requires": {$/;"	o	object:dependencies.sane.dependencies.is-number.dependencies.kind-of
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^              "requires": {$/;"	o	object:dependencies.unset-value.dependencies.has-value.dependencies.isobject
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.@babel/highlight.dependencies.ansi-styles
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.@babel/highlight.dependencies.chalk
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.@babel/highlight.dependencies.color-convert
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.@babel/highlight.dependencies.supports-color
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.base.dependencies.define-property
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.base.dependencies.is-accessor-descriptor
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.base.dependencies.is-data-descriptor
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.base.dependencies.is-descriptor
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.chalk.dependencies.ansi-styles
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.class-utils.dependencies.define-property
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.cli-table.dependencies.ansi-styles
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.cli-table.dependencies.chalk
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.cli-table.dependencies.color-convert
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.cli-table.dependencies.supports-color
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.define-property.dependencies.is-accessor-descriptor
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.define-property.dependencies.is-data-descriptor
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.define-property.dependencies.is-descriptor
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.escodegen.dependencies.levn
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.escodegen.dependencies.optionator
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.escodegen.dependencies.type-check
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.eslint-plugin-jsdoc.dependencies.debug
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.eslint-plugin-jsdoc.dependencies.semver
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.execa.dependencies.cross-spawn
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.execa.dependencies.shebang-command
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.execa.dependencies.which
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.expand-brackets.dependencies.debug
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.expand-brackets.dependencies.define-property
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.expand-brackets.dependencies.extend-shallow
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.expect.dependencies.ansi-styles
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.extend-shallow.dependencies.is-extendable
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.extglob.dependencies.define-property
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.extglob.dependencies.extend-shallow
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.extglob.dependencies.is-accessor-descriptor
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.extglob.dependencies.is-data-descriptor
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.extglob.dependencies.is-descriptor
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.has-values.dependencies.is-number
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.has-values.dependencies.kind-of
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.is-accessor-descriptor.dependencies.kind-of
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.is-data-descriptor.dependencies.kind-of
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.jest-changed-files.dependencies.execa
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.jest-changed-files.dependencies.get-stream
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.jest-changed-files.dependencies.npm-run-path
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.jest.dependencies.jest-cli
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.mixin-deep.dependencies.is-extendable
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.object-copy.dependencies.define-property
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.object-copy.dependencies.kind-of
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.pretty-format.dependencies.ansi-styles
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.sane.dependencies.anymatch
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.sane.dependencies.braces
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.sane.dependencies.fill-range
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.sane.dependencies.is-number
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.sane.dependencies.micromatch
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.sane.dependencies.normalize-path
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.sane.dependencies.to-regex-range
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.set-value.dependencies.extend-shallow
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.slice-ansi.dependencies.ansi-styles
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.slice-ansi.dependencies.color-convert
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.snapdragon-node.dependencies.define-property
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.snapdragon-node.dependencies.is-accessor-descriptor
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.snapdragon-node.dependencies.is-data-descriptor
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.snapdragon-node.dependencies.is-descriptor
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.snapdragon-util.dependencies.kind-of
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.snapdragon.dependencies.debug
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.snapdragon.dependencies.define-property
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.snapdragon.dependencies.extend-shallow
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.static-extend.dependencies.define-property
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.streamroller.dependencies.fs-extra
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.streamroller.dependencies.jsonfile
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.table.dependencies.string-width
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.table.dependencies.strip-ansi
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.to-object-path.dependencies.kind-of
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.unset-value.dependencies.has-value
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.unzip-stream.dependencies.mkdirp
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.vscode-languageserver.dependencies.vscode-languageserver-protocol
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "requires": {$/;"	o	object:dependencies.wrap-ansi.dependencies.ansi-styles
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/code-frame
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/core
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/generator
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/helper-compilation-targets
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/helper-function-name
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/helper-get-function-arity
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/helper-member-expression-to-functions
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/helper-module-imports
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/helper-module-transforms
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/helper-optimise-call-expression
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/helper-replace-supers
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/helper-simple-access
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/helper-split-export-declaration
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/helpers
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/highlight
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/plugin-syntax-async-generators
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/plugin-syntax-bigint
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/plugin-syntax-class-properties
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/plugin-syntax-import-meta
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/plugin-syntax-json-strings
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/plugin-syntax-logical-assignment-operators
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/plugin-syntax-nullish-coalescing-operator
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/plugin-syntax-numeric-separator
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/plugin-syntax-object-rest-spread
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/plugin-syntax-optional-catch-binding
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/plugin-syntax-optional-chaining
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/plugin-syntax-top-level-await
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/template
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/traverse
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@babel/types
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@chemzqm/neovim
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@cnakazawa/watch
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@eslint/eslintrc
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@istanbuljs/load-nyc-config
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@jest/console
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@jest/core
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@jest/environment
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@jest/fake-timers
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@jest/globals
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@jest/reporters
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@jest/source-map
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@jest/test-result
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@jest/test-sequencer
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@jest/transform
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@jest/types
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@nodelib/fs.scandir
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@nodelib/fs.walk
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@sinonjs/commons
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@sinonjs/fake-timers
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/babel__core
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/babel__generator
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/babel__template
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/babel__traverse
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/fb-watchman
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/fs-extra
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/glob
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/graceful-fs
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/istanbul-lib-report
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/istanbul-reports
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/jest
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/minipass
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/mkdirp
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/tar
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@types/yargs
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@typescript-eslint/eslint-plugin
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@typescript-eslint/experimental-utils
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@typescript-eslint/parser
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@typescript-eslint/scope-manager
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@typescript-eslint/typescript-estree
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.@typescript-eslint/visitor-keys
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.acorn-globals
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.agent-base
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.ajv
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.ansi-escapes
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.anymatch
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.argparse
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.babel-jest
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.babel-plugin-istanbul
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.babel-plugin-jest-hoist
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.babel-preset-current-node-syntax
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.babel-preset-jest
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.base
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.binary
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.brace-expansion
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.braces
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.browserslist
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.bs-logger
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.bser
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.cache-base
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.call-bind
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.capture-exit
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.chainsaw
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.chalk
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.chokidar
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.class-utils
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.cli-table
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.cliui
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.collection-visit
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.color-convert
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.combined-stream
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.content-disposition
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.convert-source-map
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.cross-spawn
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.cssstyle
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.data-urls
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.debug
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.decompress-response
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.define-properties
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.define-property
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.dir-glob
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.doctrine
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.domexception
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.end-of-stream
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.enquirer
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.error-ex
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.es-abstract
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.es-to-primitive
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.escodegen
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.eslint
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.eslint-plugin-jest
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.eslint-plugin-jsdoc
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.eslint-scope
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.eslint-utils
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.espree
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.esquery
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.esrecurse
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.execa
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.expand-brackets
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.expect
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.extend-shallow
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.extglob
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.fast-glob
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.fastq
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.fb-watchman
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.file-entry-cache
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.fill-range
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.find-up
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.flat-cache
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.form-data
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.fragment-cache
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.fs-extra
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.fs-minipass
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.get-intrinsic
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.get-stream
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.glob
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.glob-parent
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.globals
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.globby
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.has
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.has-value
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.has-values
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.html-encoding-sniffer
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.http-proxy-agent
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.https-proxy-agent
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.iconv-lite
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.import-fresh
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.import-local
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.inflight
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.internal-slot
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-accessor-descriptor
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-binary-path
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-boolean-object
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-ci
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-core-module
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-data-descriptor
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-descriptor
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-glob
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-plain-object
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-regex
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-symbol
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.is-wsl
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.istanbul-lib-instrument
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.istanbul-lib-report
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.istanbul-lib-source-maps
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.istanbul-reports
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.isuri
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-changed-files
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-config
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-diff
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-docblock
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-each
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-environment-jsdom
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-environment-node
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-haste-map
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-jasmine2
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-leak-detector
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-matcher-utils
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-message-util
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-mock
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-resolve
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-resolve-dependencies
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-runner
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-runtime
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-serializer
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-snapshot
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-util
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-validate
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-watcher
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jest-worker
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.js-yaml
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jsdom
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.json5
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.jsonfile
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.levn
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.locate-path
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.log4js
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.lru-cache
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.make-dir
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.makeerror
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.map-visit
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.micromatch
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.mime-types
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.minimatch
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.minipass
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.minizlib
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.mixin-deep
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.msgpack-lite
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.nanomatch
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.node-notifier
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.normalize-package-data
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.npm-run-path
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.object-copy
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.object-visit
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.object.assign
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.object.pick
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.once
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.onetime
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.optionator
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.p-limit
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.p-locate
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.parent-module
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.parse-json
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.pirates
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.pkg-dir
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.pretty-format
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.promise.prototype.finally
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.prompts
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.pump
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.rc
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.read-pkg
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.read-pkg-up
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.readdirp
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.regex-not
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.regexp.prototype.flags
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.resolve
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.resolve-cwd
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.rimraf
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.run-parallel
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.safe-regex
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.sane
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.saxes
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.set-value
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.shebang-command
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.side-channel
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.slice-ansi
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.snapdragon
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.snapdragon-node
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.snapdragon-util
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.source-map-resolve
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.source-map-support
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.spdx-correct
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.spdx-expression-parse
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.split-string
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.stack-utils
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.static-extend
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.streamroller
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.string-length
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.string-width
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.string.prototype.matchall
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.string.prototype.trimend
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.string.prototype.trimstart
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.strip-ansi
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.supports-color
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.supports-hyperlinks
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.table
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.tar
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.terminal-link
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.test-exclude
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.to-object-path
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.to-regex
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.to-regex-range
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.tough-cookie
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.tr46
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.ts-jest
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.tsutils
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.type-check
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.typedarray-to-buffer
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.unbox-primitive
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.union-value
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.unset-value
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.unzip-stream
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.uri-js
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.v8-to-istanbul
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.validate-npm-package-license
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.vscode-languageserver
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.vscode-languageserver-protocol
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.w3c-hr-time
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.w3c-xmlserializer
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.walker
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.whatwg-encoding
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.whatwg-url
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.which
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.which-boxed-primitive
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.wrap-ansi
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.write-file-atomic
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.yargs
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "requires": {$/;"	o	object:dependencies.yargs-parser
requires	vim/.vim/plugged/coc.nvim/package-lock.json	/^  "requires": true,$/;"	b
reset	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.modifier
resizeWindows	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) resizeWindows() {$/;"	f	struct:fzf.Terminal
resolve	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "resolve": "^1.10.0",$/;"	s	object:dependencies.normalize-package-data.requires
resolve	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "resolve": "^1.18.1",$/;"	s	object:dependencies.jest-resolve.requires
resolve	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "resolve": {$/;"	o	object:dependencies
resolve-cwd	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "resolve-cwd": "^3.0.0"$/;"	s	object:dependencies.import-local.requires
resolve-cwd	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "resolve-cwd": {$/;"	o	object:dependencies
resolve-from	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "resolve-from": "^4.0.0"$/;"	s	object:dependencies.import-fresh.requires
resolve-from	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "resolve-from": "^5.0.0"$/;"	s	object:dependencies.@istanbuljs/load-nyc-config.requires
resolve-from	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "resolve-from": "^5.0.0"$/;"	s	object:dependencies.resolve-cwd.requires
resolve-from	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "resolve-from": {$/;"	o	object:dependencies.@istanbuljs/load-nyc-config.dependencies
resolve-from	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "resolve-from": {$/;"	o	object:dependencies.resolve-cwd.dependencies
resolve-from	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "resolve-from": {$/;"	o	object:dependencies
resolve-url	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "resolve-url": "^0.2.1",$/;"	s	object:dependencies.source-map-resolve.requires
resolve-url	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "resolve-url": {$/;"	o	object:dependencies
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^              "resolved": "https:\/\/registry.npmjs.org\/extend-shallow\/-\/extend-shallow-2.0.1/;"	s	object:dependencies.sane.dependencies.braces.dependencies.extend-shallow
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^              "resolved": "https:\/\/registry.npmjs.org\/extend-shallow\/-\/extend-shallow-2.0.1/;"	s	object:dependencies.sane.dependencies.fill-range.dependencies.extend-shallow
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^              "resolved": "https:\/\/registry.npmjs.org\/isobject\/-\/isobject-2.1.0.tgz",$/;"	s	object:dependencies.unset-value.dependencies.has-value.dependencies.isobject
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^              "resolved": "https:\/\/registry.npmjs.org\/kind-of\/-\/kind-of-3.2.2.tgz",$/;"	s	object:dependencies.has-values.dependencies.is-number.dependencies.kind-of
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^              "resolved": "https:\/\/registry.npmjs.org\/kind-of\/-\/kind-of-3.2.2.tgz",$/;"	s	object:dependencies.sane.dependencies.is-number.dependencies.kind-of
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/acorn\/-\/acorn-8.3.0.tgz",$/;"	s	object:dependencies.jsdom.dependencies.acorn
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/ansi-regex\/-\/ansi-regex-4.1.0.tgz",$/;"	s	object:dependencies.table.dependencies.ansi-regex
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-3.2.1.tgz",$/;"	s	object:dependencies.@babel/highlight.dependencies.ansi-styles
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-3.2.1.tgz",$/;"	s	object:dependencies.cli-table.dependencies.ansi-styles
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-3.2.1.tgz",$/;"	s	object:dependencies.slice-ansi.dependencies.ansi-styles
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-4.3.0.tgz",$/;"	s	object:dependencies.chalk.dependencies.ansi-styles
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-4.3.0.tgz",$/;"	s	object:dependencies.expect.dependencies.ansi-styles
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-4.3.0.tgz",$/;"	s	object:dependencies.pretty-format.dependencies.ansi-styles
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-4.3.0.tgz",$/;"	s	object:dependencies.wrap-ansi.dependencies.ansi-styles
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/anymatch\/-\/anymatch-2.0.0.tgz",$/;"	s	object:dependencies.sane.dependencies.anymatch
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/braces\/-\/braces-2.3.2.tgz",$/;"	s	object:dependencies.sane.dependencies.braces
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/camelcase\/-\/camelcase-6.2.0.tgz",$/;"	s	object:dependencies.jest-validate.dependencies.camelcase
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/chalk\/-\/chalk-2.4.2.tgz",$/;"	s	object:dependencies.@babel/highlight.dependencies.chalk
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/chalk\/-\/chalk-2.4.2.tgz",$/;"	s	object:dependencies.cli-table.dependencies.chalk
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/color-convert\/-\/color-convert-1.9.3.tgz",$/;"	s	object:dependencies.@babel/highlight.dependencies.color-convert
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/color-convert\/-\/color-convert-1.9.3.tgz",$/;"	s	object:dependencies.cli-table.dependencies.color-convert
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/color-convert\/-\/color-convert-1.9.3.tgz",$/;"	s	object:dependencies.slice-ansi.dependencies.color-convert
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/color-name\/-\/color-name-1.1.3.tgz",$/;"	s	object:dependencies.@babel/highlight.dependencies.color-name
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/color-name\/-\/color-name-1.1.3.tgz",$/;"	s	object:dependencies.cli-table.dependencies.color-name
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/color-name\/-\/color-name-1.1.3.tgz",$/;"	s	object:dependencies.slice-ansi.dependencies.color-name
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/cross-spawn\/-\/cross-spawn-6.0.5.tgz",$/;"	s	object:dependencies.execa.dependencies.cross-spawn
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/cssom\/-\/cssom-0.3.8.tgz",$/;"	s	object:dependencies.cssstyle.dependencies.cssom
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/date-format\/-\/date-format-2.1.0.tgz",$/;"	s	object:dependencies.streamroller.dependencies.date-format
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/debug\/-\/debug-2.6.9.tgz",$/;"	s	object:dependencies.expand-brackets.dependencies.debug
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/debug\/-\/debug-2.6.9.tgz",$/;"	s	object:dependencies.snapdragon.dependencies.debug
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/debug\/-\/debug-4.3.1.tgz",$/;"	s	object:dependencies.eslint-plugin-jsdoc.dependencies.debug
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/define-property\/-\/define-property-0.2.5.t/;"	s	object:dependencies.class-utils.dependencies.define-property
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/define-property\/-\/define-property-0.2.5.t/;"	s	object:dependencies.expand-brackets.dependencies.define-property
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/define-property\/-\/define-property-0.2.5.t/;"	s	object:dependencies.object-copy.dependencies.define-property
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/define-property\/-\/define-property-0.2.5.t/;"	s	object:dependencies.snapdragon.dependencies.define-property
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/define-property\/-\/define-property-0.2.5.t/;"	s	object:dependencies.static-extend.dependencies.define-property
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/define-property\/-\/define-property-1.0.0.t/;"	s	object:dependencies.base.dependencies.define-property
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/define-property\/-\/define-property-1.0.0.t/;"	s	object:dependencies.extglob.dependencies.define-property
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/define-property\/-\/define-property-1.0.0.t/;"	s	object:dependencies.snapdragon-node.dependencies.define-property
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/emoji-regex\/-\/emoji-regex-7.0.3.tgz",$/;"	s	object:dependencies.table.dependencies.emoji-regex
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/escape-string-regexp\/-\/escape-string-rege/;"	s	object:dependencies.stack-utils.dependencies.escape-string-regexp
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/eslint-visitor-keys\/-\/eslint-visitor-keys/;"	s	object:dependencies.eslint-utils.dependencies.eslint-visitor-keys
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/eslint-visitor-keys\/-\/eslint-visitor-keys/;"	s	object:dependencies.espree.dependencies.eslint-visitor-keys
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/estraverse\/-\/estraverse-5.2.0.tgz",$/;"	s	object:dependencies.escodegen.dependencies.estraverse
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/estraverse\/-\/estraverse-5.2.0.tgz",$/;"	s	object:dependencies.esquery.dependencies.estraverse
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/estraverse\/-\/estraverse-5.2.0.tgz",$/;"	s	object:dependencies.esrecurse.dependencies.estraverse
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/execa\/-\/execa-4.1.0.tgz",$/;"	s	object:dependencies.jest-changed-files.dependencies.execa
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/extend-shallow\/-\/extend-shallow-2.0.1.tgz/;"	s	object:dependencies.expand-brackets.dependencies.extend-shallow
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/extend-shallow\/-\/extend-shallow-2.0.1.tgz/;"	s	object:dependencies.extglob.dependencies.extend-shallow
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/extend-shallow\/-\/extend-shallow-2.0.1.tgz/;"	s	object:dependencies.set-value.dependencies.extend-shallow
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/extend-shallow\/-\/extend-shallow-2.0.1.tgz/;"	s	object:dependencies.snapdragon.dependencies.extend-shallow
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/fill-range\/-\/fill-range-4.0.0.tgz",$/;"	s	object:dependencies.sane.dependencies.fill-range
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/flatted\/-\/flatted-3.1.1.tgz",$/;"	s	object:dependencies.flat-cache.dependencies.flatted
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/fs-extra\/-\/fs-extra-8.1.0.tgz",$/;"	s	object:dependencies.streamroller.dependencies.fs-extra
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/get-stream\/-\/get-stream-5.2.0.tgz",$/;"	s	object:dependencies.jest-changed-files.dependencies.get-stream
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/globals\/-\/globals-11.12.0.tgz",$/;"	s	object:dependencies.@babel/traverse.dependencies.globals
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/has-flag\/-\/has-flag-3.0.0.tgz",$/;"	s	object:dependencies.@babel/highlight.dependencies.has-flag
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/has-flag\/-\/has-flag-3.0.0.tgz",$/;"	s	object:dependencies.cli-table.dependencies.has-flag
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/has-value\/-\/has-value-0.3.1.tgz",$/;"	s	object:dependencies.unset-value.dependencies.has-value
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/has-values\/-\/has-values-0.1.4.tgz",$/;"	s	object:dependencies.unset-value.dependencies.has-values
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/ignore\/-\/ignore-4.0.6.tgz",$/;"	s	object:dependencies.@eslint/eslintrc.dependencies.ignore
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/ignore\/-\/ignore-4.0.6.tgz",$/;"	s	object:dependencies.eslint.dependencies.ignore
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-accessor-descriptor\/-\/is-accessor-desc/;"	s	object:dependencies.base.dependencies.is-accessor-descriptor
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-accessor-descriptor\/-\/is-accessor-desc/;"	s	object:dependencies.define-property.dependencies.is-accessor-descriptor
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-accessor-descriptor\/-\/is-accessor-desc/;"	s	object:dependencies.extglob.dependencies.is-accessor-descriptor
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-accessor-descriptor\/-\/is-accessor-desc/;"	s	object:dependencies.snapdragon-node.dependencies.is-accessor-descriptor
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-data-descriptor\/-\/is-data-descriptor-1/;"	s	object:dependencies.base.dependencies.is-data-descriptor
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-data-descriptor\/-\/is-data-descriptor-1/;"	s	object:dependencies.define-property.dependencies.is-data-descriptor
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-data-descriptor\/-\/is-data-descriptor-1/;"	s	object:dependencies.extglob.dependencies.is-data-descriptor
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-data-descriptor\/-\/is-data-descriptor-1/;"	s	object:dependencies.snapdragon-node.dependencies.is-data-descriptor
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-descriptor\/-\/is-descriptor-1.0.2.tgz",$/;"	s	object:dependencies.base.dependencies.is-descriptor
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-descriptor\/-\/is-descriptor-1.0.2.tgz",$/;"	s	object:dependencies.define-property.dependencies.is-descriptor
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-descriptor\/-\/is-descriptor-1.0.2.tgz",$/;"	s	object:dependencies.extglob.dependencies.is-descriptor
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-descriptor\/-\/is-descriptor-1.0.2.tgz",$/;"	s	object:dependencies.snapdragon-node.dependencies.is-descriptor
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-extendable\/-\/is-extendable-1.0.1.tgz",$/;"	s	object:dependencies.extend-shallow.dependencies.is-extendable
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-extendable\/-\/is-extendable-1.0.1.tgz",$/;"	s	object:dependencies.mixin-deep.dependencies.is-extendable
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-fullwidth-code-point\/-\/is-fullwidth-co/;"	s	object:dependencies.string-width.dependencies.is-fullwidth-code-point
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-number\/-\/is-number-3.0.0.tgz",$/;"	s	object:dependencies.has-values.dependencies.is-number
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-number\/-\/is-number-3.0.0.tgz",$/;"	s	object:dependencies.sane.dependencies.is-number
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/is-stream\/-\/is-stream-2.0.0.tgz",$/;"	s	object:dependencies.jest-changed-files.dependencies.is-stream
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/jest-cli\/-\/jest-cli-26.6.3.tgz",$/;"	s	object:dependencies.jest.dependencies.jest-cli
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/jsonfile\/-\/jsonfile-4.0.0.tgz",$/;"	s	object:dependencies.streamroller.dependencies.jsonfile
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/kind-of\/-\/kind-of-3.2.2.tgz",$/;"	s	object:dependencies.is-accessor-descriptor.dependencies.kind-of
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/kind-of\/-\/kind-of-3.2.2.tgz",$/;"	s	object:dependencies.is-data-descriptor.dependencies.kind-of
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/kind-of\/-\/kind-of-3.2.2.tgz",$/;"	s	object:dependencies.object-copy.dependencies.kind-of
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/kind-of\/-\/kind-of-3.2.2.tgz",$/;"	s	object:dependencies.snapdragon-util.dependencies.kind-of
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/kind-of\/-\/kind-of-3.2.2.tgz",$/;"	s	object:dependencies.to-object-path.dependencies.kind-of
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/kind-of\/-\/kind-of-4.0.0.tgz",$/;"	s	object:dependencies.has-values.dependencies.kind-of
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/kind-of\/-\/kind-of-5.1.0.tgz",$/;"	s	object:dependencies.is-descriptor.dependencies.kind-of
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/levn\/-\/levn-0.3.0.tgz",$/;"	s	object:dependencies.escodegen.dependencies.levn
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/micromatch\/-\/micromatch-3.1.10.tgz",$/;"	s	object:dependencies.sane.dependencies.micromatch
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/mkdirp\/-\/mkdirp-0.5.5.tgz",$/;"	s	object:dependencies.unzip-stream.dependencies.mkdirp
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/ms\/-\/ms-2.0.0.tgz",$/;"	s	object:dependencies.expand-brackets.dependencies.ms
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/ms\/-\/ms-2.0.0.tgz",$/;"	s	object:dependencies.snapdragon.dependencies.ms
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/normalize-path\/-\/normalize-path-2.1.1.tgz/;"	s	object:dependencies.sane.dependencies.normalize-path
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/npm-run-path\/-\/npm-run-path-4.0.1.tgz",$/;"	s	object:dependencies.jest-changed-files.dependencies.npm-run-path
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/optionator\/-\/optionator-0.8.3.tgz",$/;"	s	object:dependencies.escodegen.dependencies.optionator
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/path-key\/-\/path-key-2.0.1.tgz",$/;"	s	object:dependencies.execa.dependencies.path-key
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/path-key\/-\/path-key-2.0.1.tgz",$/;"	s	object:dependencies.npm-run-path.dependencies.path-key
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/prelude-ls\/-\/prelude-ls-1.1.2.tgz",$/;"	s	object:dependencies.escodegen.dependencies.prelude-ls
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/resolve-from\/-\/resolve-from-5.0.0.tgz",$/;"	s	object:dependencies.@istanbuljs/load-nyc-config.dependencies.resolve-from
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/resolve-from\/-\/resolve-from-5.0.0.tgz",$/;"	s	object:dependencies.resolve-cwd.dependencies.resolve-from
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/semver\/-\/semver-5.7.1.tgz",$/;"	s	object:dependencies.execa.dependencies.semver
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/semver\/-\/semver-5.7.1.tgz",$/;"	s	object:dependencies.normalize-package-data.dependencies.semver
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/semver\/-\/semver-6.3.0.tgz",$/;"	s	object:dependencies.@babel/core.dependencies.semver
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/semver\/-\/semver-6.3.0.tgz",$/;"	s	object:dependencies.@babel/helper-compilation-targets.dependencies.semver
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/semver\/-\/semver-6.3.0.tgz",$/;"	s	object:dependencies.istanbul-lib-instrument.dependencies.semver
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/semver\/-\/semver-6.3.0.tgz",$/;"	s	object:dependencies.make-dir.dependencies.semver
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/semver\/-\/semver-7.3.5.tgz",$/;"	s	object:dependencies.eslint-plugin-jsdoc.dependencies.semver
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/shebang-command\/-\/shebang-command-1.2.0.t/;"	s	object:dependencies.execa.dependencies.shebang-command
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/shebang-regex\/-\/shebang-regex-1.0.0.tgz",$/;"	s	object:dependencies.execa.dependencies.shebang-regex
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/source-map\/-\/source-map-0.5.7.tgz",$/;"	s	object:dependencies.@babel/core.dependencies.source-map
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/source-map\/-\/source-map-0.5.7.tgz",$/;"	s	object:dependencies.@babel/generator.dependencies.source-map
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/source-map\/-\/source-map-0.5.7.tgz",$/;"	s	object:dependencies.snapdragon.dependencies.source-map
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/source-map\/-\/source-map-0.7.3.tgz",$/;"	s	object:dependencies.v8-to-istanbul.dependencies.source-map
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/string-width\/-\/string-width-3.1.0.tgz",$/;"	s	object:dependencies.table.dependencies.string-width
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/strip-ansi\/-\/strip-ansi-5.2.0.tgz",$/;"	s	object:dependencies.table.dependencies.strip-ansi
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/strip-json-comments\/-\/strip-json-comments/;"	s	object:dependencies.rc.dependencies.strip-json-comments
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/supports-color\/-\/supports-color-5.5.0.tgz/;"	s	object:dependencies.@babel/highlight.dependencies.supports-color
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/supports-color\/-\/supports-color-5.5.0.tgz/;"	s	object:dependencies.cli-table.dependencies.supports-color
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/to-regex-range\/-\/to-regex-range-2.1.1.tgz/;"	s	object:dependencies.sane.dependencies.to-regex-range
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/tslib\/-\/tslib-1.14.1.tgz",$/;"	s	object:dependencies.tsutils.dependencies.tslib
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/type-check\/-\/type-check-0.3.2.tgz",$/;"	s	object:dependencies.escodegen.dependencies.type-check
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/type-fest\/-\/type-fest-0.21.3.tgz",$/;"	s	object:dependencies.ansi-escapes.dependencies.type-fest
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/type-fest\/-\/type-fest-0.6.0.tgz",$/;"	s	object:dependencies.read-pkg.dependencies.type-fest
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/universalify\/-\/universalify-0.1.2.tgz",$/;"	s	object:dependencies.streamroller.dependencies.universalify
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/universalify\/-\/universalify-0.1.2.tgz",$/;"	s	object:dependencies.tough-cookie.dependencies.universalify
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/universalify\/-\/universalify-2.0.0.tgz",$/;"	s	object:dependencies.jsonfile.dependencies.universalify
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/uuid\/-\/uuid-8.3.2.tgz",$/;"	s	object:dependencies.node-notifier.dependencies.uuid
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/vscode-jsonrpc\/-\/vscode-jsonrpc-6.1.0-nex/;"	s	object:dependencies.vscode-languageserver.dependencies.vscode-jsonrpc
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/vscode-languageserver-protocol\/-\/vscode-l/;"	s	object:dependencies.vscode-languageserver.dependencies.vscode-languageserver-protocol
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/vscode-languageserver-types\/-\/vscode-lang/;"	s	object:dependencies.vscode-languageserver.dependencies.vscode-languageserver-types
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/webidl-conversions\/-\/webidl-conversions-5/;"	s	object:dependencies.domexception.dependencies.webidl-conversions
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/which\/-\/which-1.3.1.tgz",$/;"	s	object:dependencies.execa.dependencies.which
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "resolved": "https:\/\/registry.npmjs.org\/yargs-parser\/-\/yargs-parser-20.2.7.tgz",$/;"	s	object:dependencies.ts-jest.dependencies.yargs-parser
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/code-frame\/-\/code-frame-7.12.13.tgz",$/;"	s	object:dependencies.@babel/code-frame
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/compat-data\/-\/compat-data-7.14.4.tgz"/;"	s	object:dependencies.@babel/compat-data
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/core\/-\/core-7.14.3.tgz",$/;"	s	object:dependencies.@babel/core
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/generator\/-\/generator-7.14.3.tgz",$/;"	s	object:dependencies.@babel/generator
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-compilation-targets\/-\/helper-c/;"	s	object:dependencies.@babel/helper-compilation-targets
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-function-name\/-\/helper-functio/;"	s	object:dependencies.@babel/helper-function-name
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-get-function-arity\/-\/helper-ge/;"	s	object:dependencies.@babel/helper-get-function-arity
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-member-expression-to-functions\//;"	s	object:dependencies.@babel/helper-member-expression-to-functions
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-module-imports\/-\/helper-module/;"	s	object:dependencies.@babel/helper-module-imports
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-module-transforms\/-\/helper-mod/;"	s	object:dependencies.@babel/helper-module-transforms
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-optimise-call-expression\/-\/hel/;"	s	object:dependencies.@babel/helper-optimise-call-expression
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-plugin-utils\/-\/helper-plugin-u/;"	s	object:dependencies.@babel/helper-plugin-utils
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-replace-supers\/-\/helper-replac/;"	s	object:dependencies.@babel/helper-replace-supers
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-simple-access\/-\/helper-simple-/;"	s	object:dependencies.@babel/helper-simple-access
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-split-export-declaration\/-\/hel/;"	s	object:dependencies.@babel/helper-split-export-declaration
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-validator-identifier\/-\/helper-/;"	s	object:dependencies.@babel/helper-validator-identifier
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helper-validator-option\/-\/helper-vali/;"	s	object:dependencies.@babel/helper-validator-option
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/helpers\/-\/helpers-7.14.0.tgz",$/;"	s	object:dependencies.@babel/helpers
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/highlight\/-\/highlight-7.14.0.tgz",$/;"	s	object:dependencies.@babel/highlight
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/parser\/-\/parser-7.14.4.tgz",$/;"	s	object:dependencies.@babel/parser
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/plugin-syntax-async-generators\/-\/plug/;"	s	object:dependencies.@babel/plugin-syntax-async-generators
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/plugin-syntax-bigint\/-\/plugin-syntax-/;"	s	object:dependencies.@babel/plugin-syntax-bigint
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/plugin-syntax-class-properties\/-\/plug/;"	s	object:dependencies.@babel/plugin-syntax-class-properties
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/plugin-syntax-import-meta\/-\/plugin-sy/;"	s	object:dependencies.@babel/plugin-syntax-import-meta
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/plugin-syntax-json-strings\/-\/plugin-s/;"	s	object:dependencies.@babel/plugin-syntax-json-strings
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/plugin-syntax-logical-assignment-operat/;"	s	object:dependencies.@babel/plugin-syntax-logical-assignment-operators
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/plugin-syntax-nullish-coalescing-operat/;"	s	object:dependencies.@babel/plugin-syntax-nullish-coalescing-operator
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/plugin-syntax-numeric-separator\/-\/plu/;"	s	object:dependencies.@babel/plugin-syntax-numeric-separator
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/plugin-syntax-object-rest-spread\/-\/pl/;"	s	object:dependencies.@babel/plugin-syntax-object-rest-spread
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/plugin-syntax-optional-catch-binding\/-/;"	s	object:dependencies.@babel/plugin-syntax-optional-catch-binding
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/plugin-syntax-optional-chaining\/-\/plu/;"	s	object:dependencies.@babel/plugin-syntax-optional-chaining
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/plugin-syntax-top-level-await\/-\/plugi/;"	s	object:dependencies.@babel/plugin-syntax-top-level-await
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/template\/-\/template-7.12.13.tgz",$/;"	s	object:dependencies.@babel/template
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/traverse\/-\/traverse-7.14.2.tgz",$/;"	s	object:dependencies.@babel/traverse
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@babel\/types\/-\/types-7.14.4.tgz",$/;"	s	object:dependencies.@babel/types
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@bcoe\/v8-coverage\/-\/v8-coverage-0.2.3.tgz",$/;"	s	object:dependencies.@bcoe/v8-coverage
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@chemzqm\/neovim\/-\/neovim-5.2.12.tgz",$/;"	s	object:dependencies.@chemzqm/neovim
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@cnakazawa\/watch\/-\/watch-1.0.4.tgz",$/;"	s	object:dependencies.@cnakazawa/watch
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@eslint\/eslintrc\/-\/eslintrc-0.2.2.tgz",$/;"	s	object:dependencies.@eslint/eslintrc
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@istanbuljs\/load-nyc-config\/-\/load-nyc-confi/;"	s	object:dependencies.@istanbuljs/load-nyc-config
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@istanbuljs\/schema\/-\/schema-0.1.3.tgz",$/;"	s	object:dependencies.@istanbuljs/schema
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@jest\/console\/-\/console-26.6.2.tgz",$/;"	s	object:dependencies.@jest/console
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@jest\/core\/-\/core-26.6.3.tgz",$/;"	s	object:dependencies.@jest/core
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@jest\/environment\/-\/environment-26.6.2.tgz",$/;"	s	object:dependencies.@jest/environment
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@jest\/fake-timers\/-\/fake-timers-26.6.2.tgz",$/;"	s	object:dependencies.@jest/fake-timers
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@jest\/globals\/-\/globals-26.6.2.tgz",$/;"	s	object:dependencies.@jest/globals
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@jest\/reporters\/-\/reporters-26.6.2.tgz",$/;"	s	object:dependencies.@jest/reporters
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@jest\/source-map\/-\/source-map-26.6.2.tgz",$/;"	s	object:dependencies.@jest/source-map
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@jest\/test-result\/-\/test-result-26.6.2.tgz",$/;"	s	object:dependencies.@jest/test-result
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@jest\/test-sequencer\/-\/test-sequencer-26.6.3/;"	s	object:dependencies.@jest/test-sequencer
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@jest\/transform\/-\/transform-26.6.2.tgz",$/;"	s	object:dependencies.@jest/transform
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@jest\/types\/-\/types-26.6.2.tgz",$/;"	s	object:dependencies.@jest/types
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@nodelib\/fs.scandir\/-\/fs.scandir-2.1.5.tgz",$/;"	s	object:dependencies.@nodelib/fs.scandir
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@nodelib\/fs.stat\/-\/fs.stat-2.0.5.tgz",$/;"	s	object:dependencies.@nodelib/fs.stat
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@nodelib\/fs.walk\/-\/fs.walk-1.2.7.tgz",$/;"	s	object:dependencies.@nodelib/fs.walk
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@sinonjs\/commons\/-\/commons-1.8.3.tgz",$/;"	s	object:dependencies.@sinonjs/commons
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@sinonjs\/fake-timers\/-\/fake-timers-6.0.1.tgz/;"	s	object:dependencies.@sinonjs/fake-timers
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@tootallnate\/once\/-\/once-1.1.2.tgz",$/;"	s	object:dependencies.@tootallnate/once
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/babel__core\/-\/babel__core-7.1.14.tgz"/;"	s	object:dependencies.@types/babel__core
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/babel__generator\/-\/babel__generator-7/;"	s	object:dependencies.@types/babel__generator
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/babel__template\/-\/babel__template-7.4/;"	s	object:dependencies.@types/babel__template
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/babel__traverse\/-\/babel__traverse-7.1/;"	s	object:dependencies.@types/babel__traverse
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/cli-table\/-\/cli-table-0.3.0.tgz",$/;"	s	object:dependencies.@types/cli-table
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/debounce\/-\/debounce-3.0.0.tgz",$/;"	s	object:dependencies.@types/debounce
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/events\/-\/events-3.0.0.tgz",$/;"	s	object:dependencies.@types/events
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/fb-watchman\/-\/fb-watchman-2.0.0.tgz",$/;"	s	object:dependencies.@types/fb-watchman
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/fs-extra\/-\/fs-extra-9.0.6.tgz",$/;"	s	object:dependencies.@types/fs-extra
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/glob\/-\/glob-7.1.3.tgz",$/;"	s	object:dependencies.@types/glob
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/graceful-fs\/-\/graceful-fs-4.1.5.tgz",$/;"	s	object:dependencies.@types/graceful-fs
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/istanbul-lib-coverage\/-\/istanbul-lib-/;"	s	object:dependencies.@types/istanbul-lib-coverage
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/istanbul-lib-report\/-\/istanbul-lib-re/;"	s	object:dependencies.@types/istanbul-lib-report
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/istanbul-reports\/-\/istanbul-reports-3/;"	s	object:dependencies.@types/istanbul-reports
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/jest\/-\/jest-26.0.18.tgz",$/;"	s	object:dependencies.@types/jest
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/json-schema\/-\/json-schema-7.0.7.tgz",$/;"	s	object:dependencies.@types/json-schema
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/marked\/-\/marked-1.2.1.tgz",$/;"	s	object:dependencies.@types/marked
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/minimatch\/-\/minimatch-3.0.3.tgz",$/;"	s	object:dependencies.@types/minimatch
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/minipass\/-\/minipass-2.2.0.tgz",$/;"	s	object:dependencies.@types/minipass
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/mkdirp\/-\/mkdirp-1.0.1.tgz",$/;"	s	object:dependencies.@types/mkdirp
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/node\/-\/node-10.17.35.tgz",$/;"	s	object:dependencies.@types/node
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/normalize-package-data\/-\/normalize-pa/;"	s	object:dependencies.@types/normalize-package-data
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/prettier\/-\/prettier-2.2.3.tgz",$/;"	s	object:dependencies.@types/prettier
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/semver\/-\/semver-7.3.4.tgz",$/;"	s	object:dependencies.@types/semver
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/stack-utils\/-\/stack-utils-2.0.0.tgz",$/;"	s	object:dependencies.@types/stack-utils
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/tar\/-\/tar-4.0.4.tgz",$/;"	s	object:dependencies.@types/tar
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/uuid\/-\/uuid-8.3.0.tgz",$/;"	s	object:dependencies.@types/uuid
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/which\/-\/which-1.3.2.tgz",$/;"	s	object:dependencies.@types/which
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/yargs-parser\/-\/yargs-parser-20.2.0.tg/;"	s	object:dependencies.@types/yargs-parser
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@types\/yargs\/-\/yargs-15.0.13.tgz",$/;"	s	object:dependencies.@types/yargs
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@typescript-eslint\/eslint-plugin\/-\/eslint-pl/;"	s	object:dependencies.@typescript-eslint/eslint-plugin
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@typescript-eslint\/experimental-utils\/-\/expe/;"	s	object:dependencies.@typescript-eslint/experimental-utils
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@typescript-eslint\/parser\/-\/parser-4.11.1.tg/;"	s	object:dependencies.@typescript-eslint/parser
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@typescript-eslint\/scope-manager\/-\/scope-man/;"	s	object:dependencies.@typescript-eslint/scope-manager
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@typescript-eslint\/types\/-\/types-4.11.1.tgz"/;"	s	object:dependencies.@typescript-eslint/types
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@typescript-eslint\/typescript-estree\/-\/types/;"	s	object:dependencies.@typescript-eslint/typescript-estree
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/@typescript-eslint\/visitor-keys\/-\/visitor-ke/;"	s	object:dependencies.@typescript-eslint/visitor-keys
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/abab\/-\/abab-2.0.5.tgz",$/;"	s	object:dependencies.abab
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/acorn-globals\/-\/acorn-globals-6.0.0.tgz",$/;"	s	object:dependencies.acorn-globals
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/acorn-jsx\/-\/acorn-jsx-5.3.1.tgz",$/;"	s	object:dependencies.acorn-jsx
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/acorn-walk\/-\/acorn-walk-7.2.0.tgz",$/;"	s	object:dependencies.acorn-walk
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/acorn\/-\/acorn-7.4.1.tgz",$/;"	s	object:dependencies.acorn
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/agent-base\/-\/agent-base-6.0.2.tgz",$/;"	s	object:dependencies.agent-base
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ajv\/-\/ajv-6.12.6.tgz",$/;"	s	object:dependencies.ajv
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ansi-colors\/-\/ansi-colors-4.1.1.tgz",$/;"	s	object:dependencies.ansi-colors
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ansi-escapes\/-\/ansi-escapes-4.3.2.tgz",$/;"	s	object:dependencies.ansi-escapes
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ansi-regex\/-\/ansi-regex-5.0.0.tgz",$/;"	s	object:dependencies.ansi-regex
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-5.0.0.tgz",$/;"	s	object:dependencies.ansi-styles
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/anymatch\/-\/anymatch-3.1.2.tgz",$/;"	s	object:dependencies.anymatch
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/argparse\/-\/argparse-1.0.10.tgz",$/;"	s	object:dependencies.argparse
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/arr-diff\/-\/arr-diff-4.0.0.tgz",$/;"	s	object:dependencies.arr-diff
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/arr-flatten\/-\/arr-flatten-1.1.0.tgz",$/;"	s	object:dependencies.arr-flatten
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/arr-union\/-\/arr-union-3.1.0.tgz",$/;"	s	object:dependencies.arr-union
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/array-union\/-\/array-union-2.1.0.tgz",$/;"	s	object:dependencies.array-union
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/array-unique\/-\/array-unique-0.3.2.tgz",$/;"	s	object:dependencies.array-unique
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/assign-symbols\/-\/assign-symbols-1.0.0.tgz",$/;"	s	object:dependencies.assign-symbols
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/astral-regex\/-\/astral-regex-1.0.0.tgz",$/;"	s	object:dependencies.astral-regex
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/asynckit\/-\/asynckit-0.4.0.tgz",$/;"	s	object:dependencies.asynckit
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/at-least-node\/-\/at-least-node-1.0.0.tgz",$/;"	s	object:dependencies.at-least-node
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/atob\/-\/atob-2.1.2.tgz",$/;"	s	object:dependencies.atob
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/babel-jest\/-\/babel-jest-26.6.3.tgz",$/;"	s	object:dependencies.babel-jest
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/babel-plugin-istanbul\/-\/babel-plugin-istanbul/;"	s	object:dependencies.babel-plugin-istanbul
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/babel-plugin-jest-hoist\/-\/babel-plugin-jest-h/;"	s	object:dependencies.babel-plugin-jest-hoist
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/babel-preset-current-node-syntax\/-\/babel-pres/;"	s	object:dependencies.babel-preset-current-node-syntax
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/babel-preset-jest\/-\/babel-preset-jest-26.6.2./;"	s	object:dependencies.babel-preset-jest
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/balanced-match\/-\/balanced-match-1.0.2.tgz",$/;"	s	object:dependencies.balanced-match
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/base\/-\/base-0.11.2.tgz",$/;"	s	object:dependencies.base
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/binary-extensions\/-\/binary-extensions-2.2.0.t/;"	s	object:dependencies.binary-extensions
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/binary\/-\/binary-0.3.0.tgz",$/;"	s	object:dependencies.binary
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/brace-expansion\/-\/brace-expansion-1.1.11.tgz"/;"	s	object:dependencies.brace-expansion
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/braces\/-\/braces-3.0.2.tgz",$/;"	s	object:dependencies.braces
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/browser-process-hrtime\/-\/browser-process-hrti/;"	s	object:dependencies.browser-process-hrtime
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/browserslist\/-\/browserslist-4.16.6.tgz",$/;"	s	object:dependencies.browserslist
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/bs-logger\/-\/bs-logger-0.2.6.tgz",$/;"	s	object:dependencies.bs-logger
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/bser\/-\/bser-2.1.1.tgz",$/;"	s	object:dependencies.bser
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/buffer-from\/-\/buffer-from-1.1.1.tgz",$/;"	s	object:dependencies.buffer-from
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/buffers\/-\/buffers-0.1.1.tgz",$/;"	s	object:dependencies.buffers
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/bytes\/-\/bytes-3.1.0.tgz",$/;"	s	object:dependencies.bytes
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/cache-base\/-\/cache-base-1.0.1.tgz",$/;"	s	object:dependencies.cache-base
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/call-bind\/-\/call-bind-1.0.2.tgz",$/;"	s	object:dependencies.call-bind
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/callsites\/-\/callsites-3.1.0.tgz",$/;"	s	object:dependencies.callsites
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/camelcase\/-\/camelcase-5.3.1.tgz",$/;"	s	object:dependencies.camelcase
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/caniuse-lite\/-\/caniuse-lite-1.0.30001235.tgz"/;"	s	object:dependencies.caniuse-lite
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/capture-exit\/-\/capture-exit-2.0.0.tgz",$/;"	s	object:dependencies.capture-exit
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/chainsaw\/-\/chainsaw-0.1.0.tgz",$/;"	s	object:dependencies.chainsaw
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/chalk\/-\/chalk-4.1.1.tgz",$/;"	s	object:dependencies.chalk
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/char-regex\/-\/char-regex-1.0.2.tgz",$/;"	s	object:dependencies.char-regex
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/chokidar\/-\/chokidar-3.4.3.tgz",$/;"	s	object:dependencies.chokidar
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/chownr\/-\/chownr-2.0.0.tgz",$/;"	s	object:dependencies.chownr
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ci-info\/-\/ci-info-2.0.0.tgz",$/;"	s	object:dependencies.ci-info
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/cjs-module-lexer\/-\/cjs-module-lexer-0.6.0.tgz/;"	s	object:dependencies.cjs-module-lexer
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/class-utils\/-\/class-utils-0.3.6.tgz",$/;"	s	object:dependencies.class-utils
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/cli-table\/-\/cli-table-0.3.4.tgz",$/;"	s	object:dependencies.cli-table
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/cliui\/-\/cliui-6.0.0.tgz",$/;"	s	object:dependencies.cliui
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/co\/-\/co-4.6.0.tgz",$/;"	s	object:dependencies.co
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/collect-v8-coverage\/-\/collect-v8-coverage-1.0/;"	s	object:dependencies.collect-v8-coverage
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/collection-visit\/-\/collection-visit-1.0.0.tgz/;"	s	object:dependencies.collection-visit
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/color-convert\/-\/color-convert-2.0.1.tgz",$/;"	s	object:dependencies.color-convert
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/color-name\/-\/color-name-1.1.4.tgz",$/;"	s	object:dependencies.color-name
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/colorette\/-\/colorette-1.2.2.tgz",$/;"	s	object:dependencies.colorette
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/colors\/-\/colors-1.4.0.tgz",$/;"	s	object:dependencies.colors
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/combined-stream\/-\/combined-stream-1.0.8.tgz",$/;"	s	object:dependencies.combined-stream
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/comment-parser\/-\/comment-parser-0.7.6.tgz",$/;"	s	object:dependencies.comment-parser
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/component-emitter\/-\/component-emitter-1.3.0.t/;"	s	object:dependencies.component-emitter
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/concat-map\/-\/concat-map-0.0.1.tgz",$/;"	s	object:dependencies.concat-map
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/content-disposition\/-\/content-disposition-0.5/;"	s	object:dependencies.content-disposition
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/convert-source-map\/-\/convert-source-map-1.7.0/;"	s	object:dependencies.convert-source-map
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/copy-descriptor\/-\/copy-descriptor-0.1.1.tgz",$/;"	s	object:dependencies.copy-descriptor
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/cross-spawn\/-\/cross-spawn-7.0.3.tgz",$/;"	s	object:dependencies.cross-spawn
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/cssom\/-\/cssom-0.4.4.tgz",$/;"	s	object:dependencies.cssom
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/cssstyle\/-\/cssstyle-2.3.0.tgz",$/;"	s	object:dependencies.cssstyle
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/data-urls\/-\/data-urls-2.0.0.tgz",$/;"	s	object:dependencies.data-urls
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/date-format\/-\/date-format-3.0.0.tgz",$/;"	s	object:dependencies.date-format
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/debounce\/-\/debounce-1.2.0.tgz",$/;"	s	object:dependencies.debounce
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/debug\/-\/debug-4.1.1.tgz",$/;"	s	object:dependencies.debug
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/decamelize\/-\/decamelize-1.2.0.tgz",$/;"	s	object:dependencies.decamelize
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/decimal.js\/-\/decimal.js-10.2.1.tgz",$/;"	s	object:dependencies.decimal.js
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/decode-uri-component\/-\/decode-uri-component-0/;"	s	object:dependencies.decode-uri-component
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/decompress-response\/-\/decompress-response-6.0/;"	s	object:dependencies.decompress-response
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/deep-extend\/-\/deep-extend-0.6.0.tgz",$/;"	s	object:dependencies.deep-extend
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/deep-is\/-\/deep-is-0.1.3.tgz",$/;"	s	object:dependencies.deep-is
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/deepmerge\/-\/deepmerge-4.2.2.tgz",$/;"	s	object:dependencies.deepmerge
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/define-properties\/-\/define-properties-1.1.3.t/;"	s	object:dependencies.define-properties
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/define-property\/-\/define-property-2.0.2.tgz",$/;"	s	object:dependencies.define-property
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/delayed-stream\/-\/delayed-stream-1.0.0.tgz",$/;"	s	object:dependencies.delayed-stream
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/detect-newline\/-\/detect-newline-3.1.0.tgz",$/;"	s	object:dependencies.detect-newline
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/diff-sequences\/-\/diff-sequences-26.6.2.tgz",$/;"	s	object:dependencies.diff-sequences
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/dir-glob\/-\/dir-glob-3.0.1.tgz",$/;"	s	object:dependencies.dir-glob
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/doctrine\/-\/doctrine-3.0.0.tgz",$/;"	s	object:dependencies.doctrine
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/domexception\/-\/domexception-2.0.1.tgz",$/;"	s	object:dependencies.domexception
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/electron-to-chromium\/-\/electron-to-chromium-1/;"	s	object:dependencies.electron-to-chromium
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/emittery\/-\/emittery-0.7.2.tgz",$/;"	s	object:dependencies.emittery
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/emoji-regex\/-\/emoji-regex-8.0.0.tgz",$/;"	s	object:dependencies.emoji-regex
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/end-of-stream\/-\/end-of-stream-1.4.4.tgz",$/;"	s	object:dependencies.end-of-stream
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/enquirer\/-\/enquirer-2.3.6.tgz",$/;"	s	object:dependencies.enquirer
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/error-ex\/-\/error-ex-1.3.2.tgz",$/;"	s	object:dependencies.error-ex
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/es-abstract\/-\/es-abstract-1.18.3.tgz",$/;"	s	object:dependencies.es-abstract
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/es-to-primitive\/-\/es-to-primitive-1.2.1.tgz",$/;"	s	object:dependencies.es-to-primitive
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/esbuild\/-\/esbuild-0.12.7.tgz",$/;"	s	object:dependencies.esbuild
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/escalade\/-\/escalade-3.1.1.tgz",$/;"	s	object:dependencies.escalade
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/escape-string-regexp\/-\/escape-string-regexp-1/;"	s	object:dependencies.escape-string-regexp
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/escodegen\/-\/escodegen-2.0.0.tgz",$/;"	s	object:dependencies.escodegen
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/eslint-plugin-jest\/-\/eslint-plugin-jest-24.1./;"	s	object:dependencies.eslint-plugin-jest
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/eslint-plugin-jsdoc\/-\/eslint-plugin-jsdoc-30./;"	s	object:dependencies.eslint-plugin-jsdoc
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/eslint-scope\/-\/eslint-scope-5.1.1.tgz",$/;"	s	object:dependencies.eslint-scope
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/eslint-utils\/-\/eslint-utils-2.1.0.tgz",$/;"	s	object:dependencies.eslint-utils
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/eslint-visitor-keys\/-\/eslint-visitor-keys-2.1/;"	s	object:dependencies.eslint-visitor-keys
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/eslint\/-\/eslint-7.15.0.tgz",$/;"	s	object:dependencies.eslint
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/espree\/-\/espree-7.3.1.tgz",$/;"	s	object:dependencies.espree
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/esprima\/-\/esprima-4.0.1.tgz",$/;"	s	object:dependencies.esprima
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/esquery\/-\/esquery-1.4.0.tgz",$/;"	s	object:dependencies.esquery
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/esrecurse\/-\/esrecurse-4.3.0.tgz",$/;"	s	object:dependencies.esrecurse
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/estraverse\/-\/estraverse-4.3.0.tgz",$/;"	s	object:dependencies.estraverse
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/esutils\/-\/esutils-2.0.3.tgz",$/;"	s	object:dependencies.esutils
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/event-lite\/-\/event-lite-0.1.2.tgz",$/;"	s	object:dependencies.event-lite
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/exec-sh\/-\/exec-sh-0.3.6.tgz",$/;"	s	object:dependencies.exec-sh
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/execa\/-\/execa-1.0.0.tgz",$/;"	s	object:dependencies.execa
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/exit\/-\/exit-0.1.2.tgz",$/;"	s	object:dependencies.exit
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/expand-brackets\/-\/expand-brackets-2.1.4.tgz",$/;"	s	object:dependencies.expand-brackets
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/expect\/-\/expect-26.6.2.tgz",$/;"	s	object:dependencies.expect
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/extend-shallow\/-\/extend-shallow-3.0.2.tgz",$/;"	s	object:dependencies.extend-shallow
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/extglob\/-\/extglob-2.0.4.tgz",$/;"	s	object:dependencies.extglob
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fast-deep-equal\/-\/fast-deep-equal-3.1.3.tgz",$/;"	s	object:dependencies.fast-deep-equal
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fast-diff\/-\/fast-diff-1.2.0.tgz",$/;"	s	object:dependencies.fast-diff
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fast-glob\/-\/fast-glob-3.2.5.tgz",$/;"	s	object:dependencies.fast-glob
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fast-json-stable-stringify\/-\/fast-json-stable/;"	s	object:dependencies.fast-json-stable-stringify
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fast-levenshtein\/-\/fast-levenshtein-2.0.6.tgz/;"	s	object:dependencies.fast-levenshtein
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fastq\/-\/fastq-1.11.0.tgz",$/;"	s	object:dependencies.fastq
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fb-watchman\/-\/fb-watchman-2.0.1.tgz",$/;"	s	object:dependencies.fb-watchman
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/file-entry-cache\/-\/file-entry-cache-6.0.1.tgz/;"	s	object:dependencies.file-entry-cache
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fill-range\/-\/fill-range-7.0.1.tgz",$/;"	s	object:dependencies.fill-range
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/find-up\/-\/find-up-4.1.0.tgz",$/;"	s	object:dependencies.find-up
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/flat-cache\/-\/flat-cache-3.0.4.tgz",$/;"	s	object:dependencies.flat-cache
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/flatted\/-\/flatted-2.0.2.tgz",$/;"	s	object:dependencies.flatted
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/follow-redirects\/-\/follow-redirects-1.13.0.tg/;"	s	object:dependencies.follow-redirects
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/for-in\/-\/for-in-1.0.2.tgz",$/;"	s	object:dependencies.for-in
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/form-data\/-\/form-data-3.0.1.tgz",$/;"	s	object:dependencies.form-data
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fragment-cache\/-\/fragment-cache-0.2.1.tgz",$/;"	s	object:dependencies.fragment-cache
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fs-extra\/-\/fs-extra-9.0.1.tgz",$/;"	s	object:dependencies.fs-extra
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fs-minipass\/-\/fs-minipass-2.1.0.tgz",$/;"	s	object:dependencies.fs-minipass
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fs.realpath\/-\/fs.realpath-1.0.0.tgz",$/;"	s	object:dependencies.fs.realpath
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/fsevents\/-\/fsevents-2.1.3.tgz",$/;"	s	object:dependencies.fsevents
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/function-bind\/-\/function-bind-1.1.1.tgz",$/;"	s	object:dependencies.function-bind
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/functional-red-black-tree\/-\/functional-red-bl/;"	s	object:dependencies.functional-red-black-tree
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/gensync\/-\/gensync-1.0.0-beta.2.tgz",$/;"	s	object:dependencies.gensync
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/get-caller-file\/-\/get-caller-file-2.0.5.tgz",$/;"	s	object:dependencies.get-caller-file
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/get-intrinsic\/-\/get-intrinsic-1.1.1.tgz",$/;"	s	object:dependencies.get-intrinsic
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/get-package-type\/-\/get-package-type-0.1.0.tgz/;"	s	object:dependencies.get-package-type
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/get-stream\/-\/get-stream-4.1.0.tgz",$/;"	s	object:dependencies.get-stream
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/get-value\/-\/get-value-2.0.6.tgz",$/;"	s	object:dependencies.get-value
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/glob-parent\/-\/glob-parent-5.1.2.tgz",$/;"	s	object:dependencies.glob-parent
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/glob\/-\/glob-7.1.6.tgz",$/;"	s	object:dependencies.glob
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/globals\/-\/globals-12.4.0.tgz",$/;"	s	object:dependencies.globals
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/globby\/-\/globby-11.0.3.tgz",$/;"	s	object:dependencies.globby
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/graceful-fs\/-\/graceful-fs-4.2.4.tgz",$/;"	s	object:dependencies.graceful-fs
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/growly\/-\/growly-1.3.0.tgz",$/;"	s	object:dependencies.growly
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/has-bigints\/-\/has-bigints-1.0.1.tgz",$/;"	s	object:dependencies.has-bigints
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/has-flag\/-\/has-flag-4.0.0.tgz",$/;"	s	object:dependencies.has-flag
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/has-symbols\/-\/has-symbols-1.0.2.tgz",$/;"	s	object:dependencies.has-symbols
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/has-value\/-\/has-value-1.0.0.tgz",$/;"	s	object:dependencies.has-value
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/has-values\/-\/has-values-1.0.0.tgz",$/;"	s	object:dependencies.has-values
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/has\/-\/has-1.0.3.tgz",$/;"	s	object:dependencies.has
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/hosted-git-info\/-\/hosted-git-info-2.8.9.tgz",$/;"	s	object:dependencies.hosted-git-info
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/html-encoding-sniffer\/-\/html-encoding-sniffer/;"	s	object:dependencies.html-encoding-sniffer
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/html-escaper\/-\/html-escaper-2.0.2.tgz",$/;"	s	object:dependencies.html-escaper
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/http-proxy-agent\/-\/http-proxy-agent-4.0.1.tgz/;"	s	object:dependencies.http-proxy-agent
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/https-proxy-agent\/-\/https-proxy-agent-5.0.0.t/;"	s	object:dependencies.https-proxy-agent
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/human-signals\/-\/human-signals-1.1.1.tgz",$/;"	s	object:dependencies.human-signals
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/iconv-lite\/-\/iconv-lite-0.4.24.tgz",$/;"	s	object:dependencies.iconv-lite
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ieee754\/-\/ieee754-1.2.1.tgz",$/;"	s	object:dependencies.ieee754
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ignore\/-\/ignore-5.1.8.tgz",$/;"	s	object:dependencies.ignore
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/import-fresh\/-\/import-fresh-3.3.0.tgz",$/;"	s	object:dependencies.import-fresh
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/import-local\/-\/import-local-3.0.2.tgz",$/;"	s	object:dependencies.import-local
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/imurmurhash\/-\/imurmurhash-0.1.4.tgz",$/;"	s	object:dependencies.imurmurhash
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/inflight\/-\/inflight-1.0.6.tgz",$/;"	s	object:dependencies.inflight
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/inherits\/-\/inherits-2.0.4.tgz",$/;"	s	object:dependencies.inherits
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ini\/-\/ini-1.3.8.tgz",$/;"	s	object:dependencies.ini
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/int64-buffer\/-\/int64-buffer-0.1.10.tgz",$/;"	s	object:dependencies.int64-buffer
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/internal-slot\/-\/internal-slot-1.0.3.tgz",$/;"	s	object:dependencies.internal-slot
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-accessor-descriptor\/-\/is-accessor-descript/;"	s	object:dependencies.is-accessor-descriptor
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-arrayish\/-\/is-arrayish-0.2.1.tgz",$/;"	s	object:dependencies.is-arrayish
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-bigint\/-\/is-bigint-1.0.2.tgz",$/;"	s	object:dependencies.is-bigint
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-binary-path\/-\/is-binary-path-2.1.0.tgz",$/;"	s	object:dependencies.is-binary-path
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-boolean-object\/-\/is-boolean-object-1.1.1.t/;"	s	object:dependencies.is-boolean-object
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-buffer\/-\/is-buffer-1.1.6.tgz",$/;"	s	object:dependencies.is-buffer
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-callable\/-\/is-callable-1.2.3.tgz",$/;"	s	object:dependencies.is-callable
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-ci\/-\/is-ci-2.0.0.tgz",$/;"	s	object:dependencies.is-ci
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-core-module\/-\/is-core-module-2.4.0.tgz",$/;"	s	object:dependencies.is-core-module
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-data-descriptor\/-\/is-data-descriptor-0.1.4/;"	s	object:dependencies.is-data-descriptor
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-date-object\/-\/is-date-object-1.0.4.tgz",$/;"	s	object:dependencies.is-date-object
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-descriptor\/-\/is-descriptor-0.1.6.tgz",$/;"	s	object:dependencies.is-descriptor
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-docker\/-\/is-docker-2.2.1.tgz",$/;"	s	object:dependencies.is-docker
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-extendable\/-\/is-extendable-0.1.1.tgz",$/;"	s	object:dependencies.is-extendable
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-extglob\/-\/is-extglob-2.1.1.tgz",$/;"	s	object:dependencies.is-extglob
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-fullwidth-code-point\/-\/is-fullwidth-code-p/;"	s	object:dependencies.is-fullwidth-code-point
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-generator-fn\/-\/is-generator-fn-2.1.0.tgz",$/;"	s	object:dependencies.is-generator-fn
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-glob\/-\/is-glob-4.0.1.tgz",$/;"	s	object:dependencies.is-glob
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-negative-zero\/-\/is-negative-zero-2.0.1.tgz/;"	s	object:dependencies.is-negative-zero
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-number-object\/-\/is-number-object-1.0.5.tgz/;"	s	object:dependencies.is-number-object
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-number\/-\/is-number-7.0.0.tgz",$/;"	s	object:dependencies.is-number
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-plain-object\/-\/is-plain-object-2.0.4.tgz",$/;"	s	object:dependencies.is-plain-object
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-potential-custom-element-name\/-\/is-potenti/;"	s	object:dependencies.is-potential-custom-element-name
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-regex\/-\/is-regex-1.1.3.tgz",$/;"	s	object:dependencies.is-regex
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-stream\/-\/is-stream-1.1.0.tgz",$/;"	s	object:dependencies.is-stream
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-string\/-\/is-string-1.0.6.tgz",$/;"	s	object:dependencies.is-string
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-symbol\/-\/is-symbol-1.0.4.tgz",$/;"	s	object:dependencies.is-symbol
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-typedarray\/-\/is-typedarray-1.0.0.tgz",$/;"	s	object:dependencies.is-typedarray
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-windows\/-\/is-windows-1.0.2.tgz",$/;"	s	object:dependencies.is-windows
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/is-wsl\/-\/is-wsl-2.2.0.tgz",$/;"	s	object:dependencies.is-wsl
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/isarray\/-\/isarray-1.0.0.tgz",$/;"	s	object:dependencies.isarray
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/isexe\/-\/isexe-2.0.0.tgz",$/;"	s	object:dependencies.isexe
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/isobject\/-\/isobject-3.0.1.tgz",$/;"	s	object:dependencies.isobject
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/istanbul-lib-coverage\/-\/istanbul-lib-coverage/;"	s	object:dependencies.istanbul-lib-coverage
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/istanbul-lib-instrument\/-\/istanbul-lib-instru/;"	s	object:dependencies.istanbul-lib-instrument
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/istanbul-lib-report\/-\/istanbul-lib-report-3.0/;"	s	object:dependencies.istanbul-lib-report
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/istanbul-lib-source-maps\/-\/istanbul-lib-sourc/;"	s	object:dependencies.istanbul-lib-source-maps
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/istanbul-reports\/-\/istanbul-reports-3.0.2.tgz/;"	s	object:dependencies.istanbul-reports
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/isuri\/-\/isuri-2.0.3.tgz",$/;"	s	object:dependencies.isuri
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-changed-files\/-\/jest-changed-files-26.6./;"	s	object:dependencies.jest-changed-files
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-config\/-\/jest-config-26.6.3.tgz",$/;"	s	object:dependencies.jest-config
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-diff\/-\/jest-diff-26.6.2.tgz",$/;"	s	object:dependencies.jest-diff
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-docblock\/-\/jest-docblock-26.0.0.tgz",$/;"	s	object:dependencies.jest-docblock
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-each\/-\/jest-each-26.6.2.tgz",$/;"	s	object:dependencies.jest-each
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-environment-jsdom\/-\/jest-environment-jsd/;"	s	object:dependencies.jest-environment-jsdom
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-environment-node\/-\/jest-environment-node/;"	s	object:dependencies.jest-environment-node
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-get-type\/-\/jest-get-type-26.3.0.tgz",$/;"	s	object:dependencies.jest-get-type
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-haste-map\/-\/jest-haste-map-26.6.2.tgz",$/;"	s	object:dependencies.jest-haste-map
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-jasmine2\/-\/jest-jasmine2-26.6.3.tgz",$/;"	s	object:dependencies.jest-jasmine2
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-leak-detector\/-\/jest-leak-detector-26.6./;"	s	object:dependencies.jest-leak-detector
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-matcher-utils\/-\/jest-matcher-utils-26.6./;"	s	object:dependencies.jest-matcher-utils
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-message-util\/-\/jest-message-util-26.6.2./;"	s	object:dependencies.jest-message-util
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-mock\/-\/jest-mock-26.6.2.tgz",$/;"	s	object:dependencies.jest-mock
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-pnp-resolver\/-\/jest-pnp-resolver-1.2.2.t/;"	s	object:dependencies.jest-pnp-resolver
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-regex-util\/-\/jest-regex-util-26.0.0.tgz"/;"	s	object:dependencies.jest-regex-util
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-resolve-dependencies\/-\/jest-resolve-depe/;"	s	object:dependencies.jest-resolve-dependencies
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-resolve\/-\/jest-resolve-26.6.2.tgz",$/;"	s	object:dependencies.jest-resolve
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-runner\/-\/jest-runner-26.6.3.tgz",$/;"	s	object:dependencies.jest-runner
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-runtime\/-\/jest-runtime-26.6.3.tgz",$/;"	s	object:dependencies.jest-runtime
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-serializer\/-\/jest-serializer-26.6.2.tgz"/;"	s	object:dependencies.jest-serializer
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-snapshot\/-\/jest-snapshot-26.6.2.tgz",$/;"	s	object:dependencies.jest-snapshot
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-util\/-\/jest-util-26.6.2.tgz",$/;"	s	object:dependencies.jest-util
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-validate\/-\/jest-validate-26.6.2.tgz",$/;"	s	object:dependencies.jest-validate
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-watcher\/-\/jest-watcher-26.6.2.tgz",$/;"	s	object:dependencies.jest-watcher
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest-worker\/-\/jest-worker-26.6.2.tgz",$/;"	s	object:dependencies.jest-worker
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jest\/-\/jest-26.6.3.tgz",$/;"	s	object:dependencies.jest
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/js-tokens\/-\/js-tokens-4.0.0.tgz",$/;"	s	object:dependencies.js-tokens
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/js-yaml\/-\/js-yaml-3.14.1.tgz",$/;"	s	object:dependencies.js-yaml
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jsdoctypeparser\/-\/jsdoctypeparser-9.0.0.tgz",$/;"	s	object:dependencies.jsdoctypeparser
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jsdom\/-\/jsdom-16.6.0.tgz",$/;"	s	object:dependencies.jsdom
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jsesc\/-\/jsesc-2.5.2.tgz",$/;"	s	object:dependencies.jsesc
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/json-parse-even-better-errors\/-\/json-parse-ev/;"	s	object:dependencies.json-parse-even-better-errors
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/json-schema-traverse\/-\/json-schema-traverse-0/;"	s	object:dependencies.json-schema-traverse
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/json-stable-stringify-without-jsonify\/-\/json-/;"	s	object:dependencies.json-stable-stringify-without-jsonify
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/json5\/-\/json5-2.2.0.tgz",$/;"	s	object:dependencies.json5
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jsonc-parser\/-\/jsonc-parser-2.3.1.tgz",$/;"	s	object:dependencies.jsonc-parser
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/jsonfile\/-\/jsonfile-6.1.0.tgz",$/;"	s	object:dependencies.jsonfile
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/kind-of\/-\/kind-of-6.0.3.tgz",$/;"	s	object:dependencies.kind-of
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/kleur\/-\/kleur-3.0.3.tgz",$/;"	s	object:dependencies.kleur
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/leven\/-\/leven-3.1.0.tgz",$/;"	s	object:dependencies.leven
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/levn\/-\/levn-0.4.1.tgz",$/;"	s	object:dependencies.levn
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/lines-and-columns\/-\/lines-and-columns-1.1.6.t/;"	s	object:dependencies.lines-and-columns
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/locate-path\/-\/locate-path-5.0.0.tgz",$/;"	s	object:dependencies.locate-path
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/lodash.memoize\/-\/lodash.memoize-4.1.2.tgz",$/;"	s	object:dependencies.lodash.memoize
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/lodash\/-\/lodash-4.17.21.tgz",$/;"	s	object:dependencies.lodash
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/log4js\/-\/log4js-6.3.0.tgz",$/;"	s	object:dependencies.log4js
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/lru-cache\/-\/lru-cache-6.0.0.tgz",$/;"	s	object:dependencies.lru-cache
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/make-dir\/-\/make-dir-3.1.0.tgz",$/;"	s	object:dependencies.make-dir
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/make-error\/-\/make-error-1.3.6.tgz",$/;"	s	object:dependencies.make-error
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/makeerror\/-\/makeerror-1.0.11.tgz",$/;"	s	object:dependencies.makeerror
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/map-cache\/-\/map-cache-0.2.2.tgz",$/;"	s	object:dependencies.map-cache
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/map-visit\/-\/map-visit-1.0.0.tgz",$/;"	s	object:dependencies.map-visit
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/marked\/-\/marked-1.2.5.tgz",$/;"	s	object:dependencies.marked
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/merge-stream\/-\/merge-stream-2.0.0.tgz",$/;"	s	object:dependencies.merge-stream
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/merge2\/-\/merge2-1.4.1.tgz",$/;"	s	object:dependencies.merge2
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/micromatch\/-\/micromatch-4.0.4.tgz",$/;"	s	object:dependencies.micromatch
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/mime-db\/-\/mime-db-1.48.0.tgz",$/;"	s	object:dependencies.mime-db
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/mime-types\/-\/mime-types-2.1.31.tgz",$/;"	s	object:dependencies.mime-types
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/mimic-fn\/-\/mimic-fn-2.1.0.tgz",$/;"	s	object:dependencies.mimic-fn
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/mimic-response\/-\/mimic-response-3.1.0.tgz",$/;"	s	object:dependencies.mimic-response
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/minimatch\/-\/minimatch-3.0.4.tgz",$/;"	s	object:dependencies.minimatch
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/minimist\/-\/minimist-1.2.5.tgz",$/;"	s	object:dependencies.minimist
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/minipass\/-\/minipass-3.1.3.tgz",$/;"	s	object:dependencies.minipass
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/minizlib\/-\/minizlib-2.1.2.tgz",$/;"	s	object:dependencies.minizlib
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/mixin-deep\/-\/mixin-deep-1.3.2.tgz",$/;"	s	object:dependencies.mixin-deep
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/mkdirp\/-\/mkdirp-1.0.4.tgz",$/;"	s	object:dependencies.mkdirp
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ms\/-\/ms-2.1.2.tgz",$/;"	s	object:dependencies.ms
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/msgpack-lite\/-\/msgpack-lite-0.1.26.tgz",$/;"	s	object:dependencies.msgpack-lite
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/nanomatch\/-\/nanomatch-1.2.13.tgz",$/;"	s	object:dependencies.nanomatch
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/natural-compare\/-\/natural-compare-1.4.0.tgz",$/;"	s	object:dependencies.natural-compare
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/nice-try\/-\/nice-try-1.0.5.tgz",$/;"	s	object:dependencies.nice-try
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/node-int64\/-\/node-int64-0.4.0.tgz",$/;"	s	object:dependencies.node-int64
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/node-modules-regexp\/-\/node-modules-regexp-1.0/;"	s	object:dependencies.node-modules-regexp
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/node-notifier\/-\/node-notifier-8.0.2.tgz",$/;"	s	object:dependencies.node-notifier
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/node-releases\/-\/node-releases-1.1.73.tgz",$/;"	s	object:dependencies.node-releases
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/normalize-package-data\/-\/normalize-package-da/;"	s	object:dependencies.normalize-package-data
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/normalize-path\/-\/normalize-path-3.0.0.tgz",$/;"	s	object:dependencies.normalize-path
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/npm-run-path\/-\/npm-run-path-2.0.2.tgz",$/;"	s	object:dependencies.npm-run-path
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/nwsapi\/-\/nwsapi-2.2.0.tgz",$/;"	s	object:dependencies.nwsapi
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/object-copy\/-\/object-copy-0.1.0.tgz",$/;"	s	object:dependencies.object-copy
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/object-inspect\/-\/object-inspect-1.10.3.tgz",$/;"	s	object:dependencies.object-inspect
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/object-keys\/-\/object-keys-1.1.1.tgz",$/;"	s	object:dependencies.object-keys
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/object-visit\/-\/object-visit-1.0.1.tgz",$/;"	s	object:dependencies.object-visit
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/object.assign\/-\/object.assign-4.1.2.tgz",$/;"	s	object:dependencies.object.assign
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/object.pick\/-\/object.pick-1.3.0.tgz",$/;"	s	object:dependencies.object.pick
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/once\/-\/once-1.4.0.tgz",$/;"	s	object:dependencies.once
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/onetime\/-\/onetime-5.1.2.tgz",$/;"	s	object:dependencies.onetime
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/optionator\/-\/optionator-0.9.1.tgz",$/;"	s	object:dependencies.optionator
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/p-each-series\/-\/p-each-series-2.2.0.tgz",$/;"	s	object:dependencies.p-each-series
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/p-finally\/-\/p-finally-1.0.0.tgz",$/;"	s	object:dependencies.p-finally
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/p-limit\/-\/p-limit-2.3.0.tgz",$/;"	s	object:dependencies.p-limit
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/p-locate\/-\/p-locate-4.1.0.tgz",$/;"	s	object:dependencies.p-locate
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/p-try\/-\/p-try-2.2.0.tgz",$/;"	s	object:dependencies.p-try
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/parent-module\/-\/parent-module-1.0.1.tgz",$/;"	s	object:dependencies.parent-module
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/parse-json\/-\/parse-json-5.2.0.tgz",$/;"	s	object:dependencies.parse-json
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/parse5\/-\/parse5-6.0.1.tgz",$/;"	s	object:dependencies.parse5
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/pascalcase\/-\/pascalcase-0.1.1.tgz",$/;"	s	object:dependencies.pascalcase
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/path-exists\/-\/path-exists-4.0.0.tgz",$/;"	s	object:dependencies.path-exists
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/path-is-absolute\/-\/path-is-absolute-1.0.1.tgz/;"	s	object:dependencies.path-is-absolute
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/path-key\/-\/path-key-3.1.1.tgz",$/;"	s	object:dependencies.path-key
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/path-parse\/-\/path-parse-1.0.7.tgz",$/;"	s	object:dependencies.path-parse
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/path-type\/-\/path-type-4.0.0.tgz",$/;"	s	object:dependencies.path-type
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/picomatch\/-\/picomatch-2.3.0.tgz",$/;"	s	object:dependencies.picomatch
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/pirates\/-\/pirates-4.0.1.tgz",$/;"	s	object:dependencies.pirates
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/pkg-dir\/-\/pkg-dir-4.2.0.tgz",$/;"	s	object:dependencies.pkg-dir
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/posix-character-classes\/-\/posix-character-cla/;"	s	object:dependencies.posix-character-classes
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/prelude-ls\/-\/prelude-ls-1.2.1.tgz",$/;"	s	object:dependencies.prelude-ls
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/pretty-format\/-\/pretty-format-26.6.2.tgz",$/;"	s	object:dependencies.pretty-format
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/progress\/-\/progress-2.0.3.tgz",$/;"	s	object:dependencies.progress
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/promise.prototype.finally\/-\/promise.prototype/;"	s	object:dependencies.promise.prototype.finally
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/prompts\/-\/prompts-2.4.1.tgz",$/;"	s	object:dependencies.prompts
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/psl\/-\/psl-1.8.0.tgz",$/;"	s	object:dependencies.psl
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/pump\/-\/pump-3.0.0.tgz",$/;"	s	object:dependencies.pump
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/punycode\/-\/punycode-2.1.1.tgz",$/;"	s	object:dependencies.punycode
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/queue-microtask\/-\/queue-microtask-1.2.3.tgz",$/;"	s	object:dependencies.queue-microtask
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/rc\/-\/rc-1.2.8.tgz",$/;"	s	object:dependencies.rc
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/react-is\/-\/react-is-17.0.2.tgz",$/;"	s	object:dependencies.react-is
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/read-pkg-up\/-\/read-pkg-up-7.0.1.tgz",$/;"	s	object:dependencies.read-pkg-up
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/read-pkg\/-\/read-pkg-5.2.0.tgz",$/;"	s	object:dependencies.read-pkg
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/readdirp\/-\/readdirp-3.5.0.tgz",$/;"	s	object:dependencies.readdirp
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/regex-not\/-\/regex-not-1.0.2.tgz",$/;"	s	object:dependencies.regex-not
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/regexp.prototype.flags\/-\/regexp.prototype.fla/;"	s	object:dependencies.regexp.prototype.flags
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/regexpp\/-\/regexpp-3.1.0.tgz",$/;"	s	object:dependencies.regexpp
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/regextras\/-\/regextras-0.7.1.tgz",$/;"	s	object:dependencies.regextras
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/remove-trailing-separator\/-\/remove-trailing-s/;"	s	object:dependencies.remove-trailing-separator
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/repeat-element\/-\/repeat-element-1.1.4.tgz",$/;"	s	object:dependencies.repeat-element
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/repeat-string\/-\/repeat-string-1.6.1.tgz",$/;"	s	object:dependencies.repeat-string
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/require-directory\/-\/require-directory-2.1.1.t/;"	s	object:dependencies.require-directory
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/require-main-filename\/-\/require-main-filename/;"	s	object:dependencies.require-main-filename
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/resolve-cwd\/-\/resolve-cwd-3.0.0.tgz",$/;"	s	object:dependencies.resolve-cwd
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/resolve-from\/-\/resolve-from-4.0.0.tgz",$/;"	s	object:dependencies.resolve-from
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/resolve-url\/-\/resolve-url-0.2.1.tgz",$/;"	s	object:dependencies.resolve-url
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/resolve\/-\/resolve-1.20.0.tgz",$/;"	s	object:dependencies.resolve
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ret\/-\/ret-0.1.15.tgz",$/;"	s	object:dependencies.ret
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/reusify\/-\/reusify-1.0.4.tgz",$/;"	s	object:dependencies.reusify
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/rfc-3986\/-\/rfc-3986-1.0.1.tgz",$/;"	s	object:dependencies.rfc-3986
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/rfdc\/-\/rfdc-1.3.0.tgz",$/;"	s	object:dependencies.rfdc
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/rimraf\/-\/rimraf-3.0.2.tgz",$/;"	s	object:dependencies.rimraf
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/rsvp\/-\/rsvp-4.8.5.tgz",$/;"	s	object:dependencies.rsvp
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/run-parallel\/-\/run-parallel-1.2.0.tgz",$/;"	s	object:dependencies.run-parallel
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/safe-buffer\/-\/safe-buffer-5.1.2.tgz",$/;"	s	object:dependencies.safe-buffer
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/safe-regex\/-\/safe-regex-1.1.0.tgz",$/;"	s	object:dependencies.safe-regex
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/safer-buffer\/-\/safer-buffer-2.1.2.tgz",$/;"	s	object:dependencies.safer-buffer
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/sane\/-\/sane-4.1.0.tgz",$/;"	s	object:dependencies.sane
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/saxes\/-\/saxes-5.0.1.tgz",$/;"	s	object:dependencies.saxes
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/semver\/-\/semver-7.3.2.tgz",$/;"	s	object:dependencies.semver
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/set-blocking\/-\/set-blocking-2.0.0.tgz",$/;"	s	object:dependencies.set-blocking
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/set-value\/-\/set-value-2.0.1.tgz",$/;"	s	object:dependencies.set-value
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/shebang-command\/-\/shebang-command-2.0.0.tgz",$/;"	s	object:dependencies.shebang-command
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/shebang-regex\/-\/shebang-regex-3.0.0.tgz",$/;"	s	object:dependencies.shebang-regex
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/shellwords\/-\/shellwords-0.1.1.tgz",$/;"	s	object:dependencies.shellwords
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/side-channel\/-\/side-channel-1.0.4.tgz",$/;"	s	object:dependencies.side-channel
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/signal-exit\/-\/signal-exit-3.0.3.tgz",$/;"	s	object:dependencies.signal-exit
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/sisteransi\/-\/sisteransi-1.0.5.tgz",$/;"	s	object:dependencies.sisteransi
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/slash\/-\/slash-3.0.0.tgz",$/;"	s	object:dependencies.slash
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/slice-ansi\/-\/slice-ansi-2.1.0.tgz",$/;"	s	object:dependencies.slice-ansi
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/snapdragon-node\/-\/snapdragon-node-2.1.1.tgz",$/;"	s	object:dependencies.snapdragon-node
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/snapdragon-util\/-\/snapdragon-util-3.0.1.tgz",$/;"	s	object:dependencies.snapdragon-util
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/snapdragon\/-\/snapdragon-0.8.2.tgz",$/;"	s	object:dependencies.snapdragon
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/source-map-resolve\/-\/source-map-resolve-0.5.3/;"	s	object:dependencies.source-map-resolve
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/source-map-support\/-\/source-map-support-0.5.1/;"	s	object:dependencies.source-map-support
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/source-map-url\/-\/source-map-url-0.4.1.tgz",$/;"	s	object:dependencies.source-map-url
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/source-map\/-\/source-map-0.6.1.tgz",$/;"	s	object:dependencies.source-map
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/spdx-correct\/-\/spdx-correct-3.1.1.tgz",$/;"	s	object:dependencies.spdx-correct
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/spdx-exceptions\/-\/spdx-exceptions-2.3.0.tgz",$/;"	s	object:dependencies.spdx-exceptions
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/spdx-expression-parse\/-\/spdx-expression-parse/;"	s	object:dependencies.spdx-expression-parse
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/spdx-license-ids\/-\/spdx-license-ids-3.0.9.tgz/;"	s	object:dependencies.spdx-license-ids
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/split-string\/-\/split-string-3.1.0.tgz",$/;"	s	object:dependencies.split-string
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/sprintf-js\/-\/sprintf-js-1.0.3.tgz",$/;"	s	object:dependencies.sprintf-js
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/stack-utils\/-\/stack-utils-2.0.3.tgz",$/;"	s	object:dependencies.stack-utils
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/static-extend\/-\/static-extend-0.1.2.tgz",$/;"	s	object:dependencies.static-extend
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/streamroller\/-\/streamroller-2.2.4.tgz",$/;"	s	object:dependencies.streamroller
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/string-length\/-\/string-length-4.0.2.tgz",$/;"	s	object:dependencies.string-length
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/string-width\/-\/string-width-4.2.0.tgz",$/;"	s	object:dependencies.string-width
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/string.prototype.matchall\/-\/string.prototype./;"	s	object:dependencies.string.prototype.matchall
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/string.prototype.trimend\/-\/string.prototype.t/;"	s	object:dependencies.string.prototype.trimend
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/string.prototype.trimstart\/-\/string.prototype/;"	s	object:dependencies.string.prototype.trimstart
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/strip-ansi\/-\/strip-ansi-6.0.0.tgz",$/;"	s	object:dependencies.strip-ansi
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/strip-bom\/-\/strip-bom-4.0.0.tgz",$/;"	s	object:dependencies.strip-bom
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/strip-eof\/-\/strip-eof-1.0.0.tgz",$/;"	s	object:dependencies.strip-eof
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/strip-final-newline\/-\/strip-final-newline-2.0/;"	s	object:dependencies.strip-final-newline
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/strip-json-comments\/-\/strip-json-comments-3.1/;"	s	object:dependencies.strip-json-comments
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/supports-color\/-\/supports-color-7.2.0.tgz",$/;"	s	object:dependencies.supports-color
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/supports-hyperlinks\/-\/supports-hyperlinks-2.2/;"	s	object:dependencies.supports-hyperlinks
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/symbol-tree\/-\/symbol-tree-3.2.4.tgz",$/;"	s	object:dependencies.symbol-tree
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/table\/-\/table-5.4.6.tgz",$/;"	s	object:dependencies.table
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/tar\/-\/tar-6.0.5.tgz",$/;"	s	object:dependencies.tar
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/terminal-link\/-\/terminal-link-2.1.1.tgz",$/;"	s	object:dependencies.terminal-link
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/test-exclude\/-\/test-exclude-6.0.0.tgz",$/;"	s	object:dependencies.test-exclude
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/text-table\/-\/text-table-0.2.0.tgz",$/;"	s	object:dependencies.text-table
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/throat\/-\/throat-5.0.0.tgz",$/;"	s	object:dependencies.throat
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/tmpl\/-\/tmpl-1.0.4.tgz",$/;"	s	object:dependencies.tmpl
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/to-fast-properties\/-\/to-fast-properties-2.0.0/;"	s	object:dependencies.to-fast-properties
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/to-object-path\/-\/to-object-path-0.3.0.tgz",$/;"	s	object:dependencies.to-object-path
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/to-regex-range\/-\/to-regex-range-5.0.1.tgz",$/;"	s	object:dependencies.to-regex-range
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/to-regex\/-\/to-regex-3.0.2.tgz",$/;"	s	object:dependencies.to-regex
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/tough-cookie\/-\/tough-cookie-4.0.0.tgz",$/;"	s	object:dependencies.tough-cookie
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/tr46\/-\/tr46-2.1.0.tgz",$/;"	s	object:dependencies.tr46
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/traverse\/-\/traverse-0.3.9.tgz",$/;"	s	object:dependencies.traverse
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ts-jest\/-\/ts-jest-26.4.4.tgz",$/;"	s	object:dependencies.ts-jest
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/tslib\/-\/tslib-2.0.3.tgz",$/;"	s	object:dependencies.tslib
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/tsutils\/-\/tsutils-3.21.0.tgz",$/;"	s	object:dependencies.tsutils
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/type-check\/-\/type-check-0.4.0.tgz",$/;"	s	object:dependencies.type-check
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/type-detect\/-\/type-detect-4.0.8.tgz",$/;"	s	object:dependencies.type-detect
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/type-fest\/-\/type-fest-0.8.1.tgz",$/;"	s	object:dependencies.type-fest
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/typedarray-to-buffer\/-\/typedarray-to-buffer-3/;"	s	object:dependencies.typedarray-to-buffer
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/typescript\/-\/typescript-4.1.2.tgz",$/;"	s	object:dependencies.typescript
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/unbox-primitive\/-\/unbox-primitive-1.0.1.tgz",$/;"	s	object:dependencies.unbox-primitive
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/union-value\/-\/union-value-1.0.1.tgz",$/;"	s	object:dependencies.union-value
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/universalify\/-\/universalify-1.0.0.tgz",$/;"	s	object:dependencies.universalify
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/unset-value\/-\/unset-value-1.0.0.tgz",$/;"	s	object:dependencies.unset-value
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/unzip-stream\/-\/unzip-stream-0.3.1.tgz",$/;"	s	object:dependencies.unzip-stream
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/uri-js\/-\/uri-js-4.4.1.tgz",$/;"	s	object:dependencies.uri-js
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/urix\/-\/urix-0.1.0.tgz",$/;"	s	object:dependencies.urix
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/use\/-\/use-3.1.1.tgz",$/;"	s	object:dependencies.use
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/uuid\/-\/uuid-7.0.3.tgz",$/;"	s	object:dependencies.uuid
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/v8-compile-cache\/-\/v8-compile-cache-2.3.0.tgz/;"	s	object:dependencies.v8-compile-cache
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/v8-to-istanbul\/-\/v8-to-istanbul-7.1.2.tgz",$/;"	s	object:dependencies.v8-to-istanbul
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/validate-npm-package-license\/-\/validate-npm-p/;"	s	object:dependencies.validate-npm-package-license
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/vscode-jsonrpc\/-\/vscode-jsonrpc-5.0.1.tgz",$/;"	s	object:dependencies.vscode-jsonrpc
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/vscode-languageserver-protocol\/-\/vscode-langu/;"	s	object:dependencies.vscode-languageserver-protocol
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/vscode-languageserver-textdocument\/-\/vscode-l/;"	s	object:dependencies.vscode-languageserver-textdocument
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/vscode-languageserver-types\/-\/vscode-language/;"	s	object:dependencies.vscode-languageserver-types
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/vscode-languageserver\/-\/vscode-languageserver/;"	s	object:dependencies.vscode-languageserver
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/vscode-uri\/-\/vscode-uri-2.1.2.tgz",$/;"	s	object:dependencies.vscode-uri
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/w3c-hr-time\/-\/w3c-hr-time-1.0.2.tgz",$/;"	s	object:dependencies.w3c-hr-time
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/w3c-xmlserializer\/-\/w3c-xmlserializer-2.0.0.t/;"	s	object:dependencies.w3c-xmlserializer
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/walker\/-\/walker-1.0.7.tgz",$/;"	s	object:dependencies.walker
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/webidl-conversions\/-\/webidl-conversions-6.1.0/;"	s	object:dependencies.webidl-conversions
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/whatwg-encoding\/-\/whatwg-encoding-1.0.5.tgz",$/;"	s	object:dependencies.whatwg-encoding
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/whatwg-mimetype\/-\/whatwg-mimetype-2.3.0.tgz",$/;"	s	object:dependencies.whatwg-mimetype
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/whatwg-url\/-\/whatwg-url-8.5.0.tgz",$/;"	s	object:dependencies.whatwg-url
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/which-boxed-primitive\/-\/which-boxed-primitive/;"	s	object:dependencies.which-boxed-primitive
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/which-module\/-\/which-module-2.0.0.tgz",$/;"	s	object:dependencies.which-module
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/which\/-\/which-2.0.2.tgz",$/;"	s	object:dependencies.which
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/word-wrap\/-\/word-wrap-1.2.3.tgz",$/;"	s	object:dependencies.word-wrap
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/wrap-ansi\/-\/wrap-ansi-6.2.0.tgz",$/;"	s	object:dependencies.wrap-ansi
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/wrappy\/-\/wrappy-1.0.2.tgz",$/;"	s	object:dependencies.wrappy
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/write-file-atomic\/-\/write-file-atomic-3.0.3.t/;"	s	object:dependencies.write-file-atomic
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/ws\/-\/ws-7.4.6.tgz",$/;"	s	object:dependencies.ws
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/xml-name-validator\/-\/xml-name-validator-3.0.0/;"	s	object:dependencies.xml-name-validator
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/xmlchars\/-\/xmlchars-2.2.0.tgz",$/;"	s	object:dependencies.xmlchars
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/y18n\/-\/y18n-4.0.3.tgz",$/;"	s	object:dependencies.y18n
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/yallist\/-\/yallist-4.0.0.tgz",$/;"	s	object:dependencies.yallist
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/yargs-parser\/-\/yargs-parser-18.1.3.tgz",$/;"	s	object:dependencies.yargs-parser
resolved	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/yargs\/-\/yargs-15.4.1.tgz",$/;"	s	object:dependencies.yargs
restart	vim/.vim/plugged/fzf/src/reader.go	/^func (r *Reader) restart(command string) {$/;"	f	struct:fzf.Reader
restoreTerminal	vim/.vim/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) restoreTerminal() {$/;"	f	unknown:tui.LightRenderer
restoreTerminal	vim/.vim/plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) restoreTerminal() error {$/;"	f	unknown:tui.LightRenderer	typeref:typename:error
result	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	p	class:Il.ce.Yt
result	vim/.vim/plugged/fzf/src/terminal.go	/^	result   Result$/;"	m	struct:fzf.itemLine	typeref:typename:Result
ret	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ret": "~0.1.10"$/;"	s	object:dependencies.safe-regex.requires
ret	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "ret": {$/;"	o	object:dependencies
reusify	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "reusify": "^1.0.4"$/;"	s	object:dependencies.fastq.requires
reusify	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "reusify": {$/;"	o	object:dependencies
revealOutputChannelOn	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "revealOutputChannelOn": {$/;"	o	object:definitions.languageServerBase.properties
revealOutputChannelOn	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "revealOutputChannelOn": {},$/;"	o	object:definitions.languageServerCommand.properties
revealOutputChannelOn	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "revealOutputChannelOn": {},$/;"	o	object:definitions.languageServerModule.properties
revealOutputChannelOn	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "revealOutputChannelOn": {},$/;"	o	object:definitions.languageServerSocket.properties
reverseStringArray	vim/.vim/plugged/fzf/src/terminal.go	/^func reverseStringArray(input []string) []string {$/;"	f	package:fzf	typeref:typename:[]string
revision	vim/.vim/plugged/fzf/main.go	/^var revision string = "devel"$/;"	v	package:main	typeref:typename:string
revive	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:r
rf	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
rfc-3986	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "rfc-3986": "1.0.1"$/;"	s	object:dependencies.isuri.requires
rfc-3986	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "rfc-3986": {$/;"	o	object:dependencies
rfdc	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "rfdc": "^1.1.4",$/;"	s	object:dependencies.log4js.requires
rfdc	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "rfdc": {$/;"	o	object:dependencies
rg	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
rg_ignore_globs	vim/.vim/plugged/far.vim/rplugin/python3/far/sources/far_glob.py	/^def rg_ignore_globs(files, as_str=True):$/;"	f
rg_rules_glob	vim/.vim/plugged/far.vim/rplugin/python3/far/sources/far_glob.py	/^def rg_rules_glob(rules, as_str=True):$/;"	f
rge	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
rh	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
rhubarb	vim/.vim/plugged/vim-rhubarb/plugin/rhubarb.vim	/^augroup rhubarb$/;"	a
rhubarb#Complete	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#Complete(findstart, base) abort$/;"	f
rhubarb#FugitiveUrl	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#FugitiveUrl(...) abort$/;"	f
rhubarb#HomepageForUrl	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#HomepageForUrl(url) abort$/;"	f
rhubarb#JsonDecode	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#JsonDecode(string) abort$/;"	f
rhubarb#JsonEncode	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#JsonEncode(object) abort$/;"	f
rhubarb#RepoRequest	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#RepoRequest(...) abort$/;"	f
rhubarb#RepoSearch	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#RepoSearch(type, q, ...) abort$/;"	f
rhubarb#Request	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#Request(path, ...) abort$/;"	f
rhubarb#fugitive_url	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#fugitive_url(...) abort$/;"	f
rhubarb#homepage_for_url	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#homepage_for_url(url) abort$/;"	f
rhubarb#omnifunc	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#omnifunc(findstart, base) abort$/;"	f
rhubarb#repo_request	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#repo_request(...) abort$/;"	f
rhubarb#repo_search	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#repo_search(...) abort$/;"	f
rhubarb#request	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! rhubarb#request(...) abort$/;"	f
rhubarb.vim	vim/.vim/plugged/vim-rhubarb/README.markdown	/^# rhubarb.vim$/;"	c
ri	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	v
rimraf	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "rimraf": "^3.0.0",$/;"	s	object:dependencies.@jest/core.requires
rimraf	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "rimraf": "^3.0.2"$/;"	s	object:dependencies.flat-cache.requires
rimraf	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "rimraf": {$/;"	o	object:dependencies
rj	vim/.vim/plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	f
rk	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
rl	vim/.vim/plugged/coc.nvim/bin/prompt.js	/^const rl = readline.createInterface({$/;"	C
rle	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
rmcup	vim/.vim/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) rmcup() {$/;"	f	struct:tui.LightRenderer
rme	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
root-menu	.config/openbox/menu.xml	/^<menu id="root-menu" label="openbox">$/;"	i
rootPatterns	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "rootPatterns": {$/;"	o	object:definitions.languageServerBase.properties
rootPatterns	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "rootPatterns": {},$/;"	o	object:definitions.languageServerCommand.properties
rootPatterns	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "rootPatterns": {},$/;"	o	object:definitions.languageServerModule.properties
rootPatterns	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "rootPatterns": {},$/;"	o	object:definitions.languageServerSocket.properties
rooter	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^augroup rooter$/;"	a
rotate360	vim/.vim/plugged/vim-styled-components/examples/apis.js	/^const rotate360 = keyframes`$/;"	C
rp	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
rq	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
rs	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
rsvp	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "rsvp": "^4.8.4"$/;"	s	object:dependencies.capture-exit.requires
rsvp	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "rsvp": {$/;"	o	object:dependencies
rubout	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) rubout(pattern string) {$/;"	f	struct:fzf.Terminal
run-parallel	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "run-parallel": "^1.1.9"$/;"	s	object:dependencies.@nodelib/fs.scandir.requires
run-parallel	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "run-parallel": {$/;"	o	object:dependencies
run_and_sort	vim/.vim/plugged/editorconfig-vim/tests/core/tests/cmake/runandsort.cmake	/^function(run_and_sort)$/;"	f
run_process	vim/.vim/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^function global:run_process$/;"	f
runner	vim/.vim/plugged/vim-translator/script/translator.py	/^    def runner(translator):$/;"	f	function:main	file:
running	vim/.vim/plugged/fzf/src/terminal.go	/^	running      bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
runtime	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	p	class:vme.l
runtime	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "runtime": {$/;"	o	object:definitions.languageServerModule.properties
rv	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
rw	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
ry	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
s	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
s	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunction272f78ae13000
s	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunction272f78ae12300.e
s	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:AnonymousFunction272f78ae12500.e
s	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:r.getTextEditChange
s	vim/.vim/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	f	function:Npe
s	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f	function:AnonymousFunction272f78ae25900
s	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:AnonymousFunction272f78ae0a00
s	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
s	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:X9
s	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
s	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae2f400
s	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae32000
s	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	c	class:$T
s	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c	class:AnonymousFunction272f78ae29d00
s	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunction272f78ae2b900
s	vim/.vim/plugged/coc.nvim/build/index.js	/^`+(h.tokens?this.parseInline(h.tokens):h.text);i+=t?this.renderer.paragraph(d):d;continue}defaul/;"	f	function:be
s	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:AnonymousFunction272f78ae7400
s	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:pQ
s	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:$0
s	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:q0
s	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f
s	vim/.vim/plugged/vim-css-color/tests/example.css	/^s { background: hsl(0, 100%, 50%) }$/;"	s
s$	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
s3e	vim/.vim/plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
s5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
s6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
s7	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
s8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
s9	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
s:Abort	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:Abort(type) abort$/;"	f
s:AddAnsiGroups	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:AddAnsiGroups() abort$/;"	f
s:AddHeader	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:AddHeader(key, value) abort$/;"	f
s:AddLogSection	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:AddLogSection(label, a, b) abort$/;"	f
s:AddSection	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:AddSection(label, lines, ...) abort$/;"	f
s:AdjustBlockIndent	vim/.vim/plugged/vim-vue-plugin/indent/vue.vim	/^function! s:AdjustBlockIndent(syntax, ind)$/;"	f
s:AdjustCSSIndent	vim/.vim/plugged/vim-vue-plugin/indent/vue.vim	/^function! s:AdjustCSSIndent(ind)$/;"	f
s:AdjustHTMLIndent	vim/.vim/plugged/vim-vue-plugin/indent/vue.vim	/^function! s:AdjustHTMLIndent(ind)$/;"	f
s:AdjustJavaScriptIndent	vim/.vim/plugged/vim-vue-plugin/indent/vue.vim	/^function! s:AdjustJavaScriptIndent(ind)$/;"	f
s:AfterLoadSyntax	vim/.vim/plugged/vim-vue-plugin/syntax/vue.vim	/^function! s:AfterLoadSyntax(syntax)$/;"	f
s:AlternatePair	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^function s:AlternatePair()$/;"	f
s:ApplyConfig	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:ApplyConfig(config) abort " Set the buffer options {{{1$/;"	f
s:ArgSplit	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ArgSplit(string) abort$/;"	f
s:AsEmpty	vim/.vim/plugged/vim-closetag/plugin/closetag.vim	/^fun! s:AsEmpty()$/;"	f
s:AskPassArgs	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:AskPassArgs(dir) abort$/;"	f
s:AsyncRequest	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:AsyncRequest(name, args) abort$/;"	f
s:Autocmd	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:Autocmd(...) abort$/;"	f
s:Balanced	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^function s:Balanced(lnum)$/;"	f
s:Balanced	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^function s:Balanced(lnum,line)$/;"	f
s:BeforeLoadSyntax	vim/.vim/plugged/vim-vue-plugin/syntax/vue.vim	/^function! s:BeforeLoadSyntax(syntax)$/;"	f
s:BlameBufnr	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameBufnr(...) abort$/;"	f
s:BlameCommit	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameCommit(cmd, ...) abort$/;"	f
s:BlameCommitFileLnum	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameCommitFileLnum(...) abort$/;"	f
s:BlameJump	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameJump(suffix, ...) abort$/;"	f
s:BlameLeave	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameLeave() abort$/;"	f
s:BlameMaps	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameMaps(is_ftplugin) abort$/;"	f
s:BlameQuit	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameQuit() abort$/;"	f
s:BlameRehighlight	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameRehighlight() abort$/;"	f
s:BlameSubcommand	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameSubcommand(line1, count, range, bang, mods, options) abort$/;"	f
s:BlobTemp	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlobTemp(url) abort$/;"	f
s:BlurStatus	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BlurStatus() abort$/;"	f
s:BranchCfile	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BranchCfile(result) abort$/;"	f
s:BrowserOpen	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BrowserOpen(url, mods, echo_copy) abort$/;"	f
s:BufName	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BufName(var) abort$/;"	f
s:BuildEnvPrefix	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BuildEnvPrefix(env) abort$/;"	f
s:BuildShell	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:BuildShell(dir, env, git, args) abort$/;"	f
s:Call	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! s:Call(method, args)$/;"	f
s:Cb	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^  function! s:Cb() closure$/;"	f
s:CeilingDirectories	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:CeilingDirectories() abort$/;"	f
s:CfilePorcelain	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CfilePorcelain(...) abort$/;"	f
s:ChannelSet	vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! s:ChannelSet(dict, key, val)$/;"	f
s:CheckInitialIndent	vim/.vim/plugged/vim-vue-plugin/indent/vue.vim	/^function! s:CheckInitialIndent(tag, syntax, ind)$/;"	f
s:CheckSyntax	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^  function! s:CheckSyntax()$/;"	f
s:CheckVersion	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! s:CheckVersion()$/;"	f
s:Checkout	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:Checkout(track) abort$/;"	f
s:CheckoutAs	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:CheckoutAs() abort$/;"	f
s:ChompDefault	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ChompDefault(default, ...) abort$/;"	f
s:ChompStderr	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ChompStderr(...) abort$/;"	f
s:Close	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:Close() abort$/;"	f
s:CloseIt	vim/.vim/plugged/vim-closetag/plugin/closetag.vim	/^fun! s:CloseIt()$/;"	f
s:CodeActionFromSelected	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:CodeActionFromSelected(type)$/;"	f
s:CommandList	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:CommandList(...) abort$/;"	f
s:CommitInteractive	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CommitInteractive(line1, line2, range, bang, mods, options, patch) abort$/;"	f
s:CommitSubcommand	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CommitSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:CompletableSubcommands	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompletableSubcommands(dir) abort$/;"	f
s:CompleteHeads	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteHeads(dir) abort$/;"	f
s:CompletePush	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompletePush(A, L, P, ...) abort$/;"	f
s:CompleteRemote	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteRemote(A, L, P, ...) abort$/;"	f
s:CompleteRevision	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteRevision(A, L, P, ...) abort$/;"	f
s:CompleteSub	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteSub(subcommand, A, L, P, ...) abort$/;"	f
s:ConfigCallback	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ConfigCallback(r, into) abort$/;"	f
s:ConfigLengthSort	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ConfigLengthSort(i1, i2) abort$/;"	f
s:ConfigTimestamps	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ConfigTimestamps(dir, dict) abort$/;"	f
s:Confirm	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:Confirm(prompt, cmd, abort) abort$/;"	f
s:ContainingCommit	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ContainingCommit() abort$/;"	f
s:Continue	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:Continue(type) abort$/;"	f
s:Continues	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^function s:Continues()$/;"	f
s:CountOccurencesInEOL	vim/.vim/plugged/vim-styled-components/after/indent/javascript.vim	/^fu! s:CountOccurencesInEOL(lnum, str, offset)$/;"	f
s:CountOccurencesInSOL	vim/.vim/plugged/vim-styled-components/after/indent/javascript.vim	/^fu! s:CountOccurencesInSOL(lnum, str)$/;"	f
s:CurlResponse	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:CurlResponse(result) abort$/;"	f
s:Cursor	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:Cursor = {}$/;"	v
s:Cursor.column	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.column() dict$/;"	f
s:Cursor.line	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.line() dict$/;"	f
s:Cursor.move	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.move(line, column) dict$/;"	f
s:Cursor.new	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.new(position)$/;"	f
s:Cursor.remove_visual_selection	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.remove_visual_selection() dict$/;"	f
s:Cursor.restore_unnamed_register	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.restore_unnamed_register() dict$/;"	f
s:Cursor.save_unnamed_register	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.save_unnamed_register() dict$/;"	f
s:Cursor.update_highlight	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_highlight() dict$/;"	f
s:Cursor.update_line_length	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_line_length() dict$/;"	f
s:Cursor.update_position	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_position(pos) dict$/;"	f
s:Cursor.update_visual_selection	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_visual_selection(region) dict$/;"	f
s:CursorManager	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:CursorManager = {}$/;"	v
s:CursorManager.add	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.add(pos, ...) dict$/;"	f
s:CursorManager.debug	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.debug() dict$/;"	f
s:CursorManager.delete_current	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.delete_current() dict$/;"	f
s:CursorManager.get	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.get(i) dict$/;"	f
s:CursorManager.get_current	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.get_current() dict$/;"	f
s:CursorManager.initialize	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.initialize() dict$/;"	f
s:CursorManager.is_empty	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.is_empty() dict$/;"	f
s:CursorManager.loop_done	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.loop_done() dict$/;"	f
s:CursorManager.new	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.new()$/;"	f
s:CursorManager.next	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.next() dict$/;"	f
s:CursorManager.reapply_visual_selection	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.reapply_visual_selection() dict$/;"	f
s:CursorManager.remove_highlight	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.remove_highlight(hi_id) dict$/;"	f
s:CursorManager.reposition_all_within_region	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.reposition_all_within_region(start) dict$/;"	f
s:CursorManager.reset	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.reset(restore_view, restore_setting, ...) dict$/;"	f
s:CursorManager.restore_user_settings	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.restore_user_settings() dict$/;"	f
s:CursorManager.size	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.size() dict$/;"	f
s:CursorManager.start_loop	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.start_loop() dict$/;"	f
s:CursorManager.update_current	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.update_current() dict$/;"	f
s:CursorRangeFromSelected	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:CursorRangeFromSelected(type, ...) abort$/;"	f
s:CycleSort	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:CycleSort(alt, int) abort$/;"	f
s:Declare	vim/.vim/plugged/vim-closetag/plugin/closetag.vim	/^fun! s:Declare(var, def)$/;"	f
s:Delete	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:Delete() abort$/;"	f
s:DeleteRemote	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:DeleteRemote() abort$/;"	f
s:DiffModifier	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DiffModifier(count, default) abort$/;"	f
s:DifftoolSubcommand	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DifftoolSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:Dir	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Dir(...) abort$/;"	f
s:DirCheck	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DirCheck(...) abort$/;"	f
s:DirCommitFile	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DirCommitFile(path) abort$/;"	f
s:DirRev	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DirRev(url) abort$/;"	f
s:DirUrlPrefix	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DirUrlPrefix(...) abort$/;"	f
s:Disable	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:Disable() abort$/;"	f
s:DisableShellSlash	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:DisableShellSlash() " {{{2$/;"	f
s:Do	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Do(action, visual) abort$/;"	f
s:DoAutocmd	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoAutocmd(...) abort$/;"	f
s:DoAutocmdChanged	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoAutocmdChanged(dir) abort$/;"	f
s:DoStagePushHeader	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStagePushHeader(value) abort$/;"	f
s:DoStageUnpushed	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnpushed(record) abort$/;"	f
s:DoStageUnpushedHeading	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnpushedHeading(heading) abort$/;"	f
s:DoStageUnstaged	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnstaged(record) abort$/;"	f
s:DoStageUnstagedHeading	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnstagedHeading(heading) abort$/;"	f
s:DoStageUntracked	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUntracked(record) abort$/;"	f
s:DoStageUntrackedHeading	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUntrackedHeading(heading) abort$/;"	f
s:DoToggleHeadHeader	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleHeadHeader(value) abort$/;"	f
s:DoToggleHelpHeader	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleHelpHeader(value) abort$/;"	f
s:DoTogglePushHeader	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoTogglePushHeader(value) abort$/;"	f
s:DoToggleStaged	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleStaged(record) abort$/;"	f
s:DoToggleStagedHeading	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleStagedHeading(...) abort$/;"	f
s:DoToggleUnpulled	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpulled(record) abort$/;"	f
s:DoToggleUnpulledHeading	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpulledHeading(heading) abort$/;"	f
s:DoToggleUnpushed	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpushed(record) abort$/;"	f
s:DoToggleUnpushedHeading	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpushedHeading(heading) abort$/;"	f
s:DoToggleUnstaged	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnstaged(record) abort$/;"	f
s:DoToggleUnstagedHeading	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnstagedHeading(...) abort$/;"	f
s:DoToggleUntracked	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUntracked(record) abort$/;"	f
s:DoToggleUntrackedHeading	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUntrackedHeading(...) abort$/;"	f
s:DoUnstageStaged	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageStaged(record) abort$/;"	f
s:DoUnstageStagedHeading	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageStagedHeading(heading) abort$/;"	f
s:DoUnstageUnpulled	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnpulled(record) abort$/;"	f
s:DoUnstageUnpulledHeading	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnpulledHeading(heading) abort$/;"	f
s:DoUnstageUnpushed	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnpushed(record) abort$/;"	f
s:DoUnstageUnstaged	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnstaged(record) abort$/;"	f
s:DoWhile	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^function s:DoWhile()$/;"	f
s:DotRelative	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:DotRelative(path, ...) abort$/;"	f
s:EditorConfigEnable	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:EditorConfigEnable(should_enable)$/;"	f
s:Enable	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:Enable(initialize)$/;"	f
s:ErrorMsg	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:ErrorMsg() abort$/;"	f
s:ExecPath	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExecPath() abort$/;"	f
s:ExitingOneLineScope	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^function s:ExitingOneLineScope(lnum)$/;"	f
s:Expand	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Expand(rev, ...) abort$/;"	f
s:ExpandVar	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpandVar(other, var, flags, esc, ...) abort$/;"	f
s:ExpandVarLegacy	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpandVarLegacy(str) abort$/;"	f
s:ExpireStatus	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpireStatus(bufnr) abort$/;"	f
s:ExprCol	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^function s:ExprCol()$/;"	f
s:ExtensionList	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:ExtensionList(...) abort$/;"	f
s:Fetch	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:Fetch(pull) abort$/;"	f
s:FetchSubcommand	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FetchSubcommand(...) abort$/;"	f
s:FileIgnoreCase	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FileIgnoreCase(for_completion) abort$/;"	f
s:FilterEscape	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FilterEscape(items, ...) abort$/;"	f
s:FindLanguage	vim/.vim/plugged/vim-LanguageTool/autoload/languagetool.vim	/^function s:FindLanguage(lang) "{{{1$/;"	f
s:FindTag	vim/.vim/plugged/vim-closetag/plugin/closetag.vim	/^fun! s:FindTag()$/;"	f
s:FoldForScript	vim/.vim/plugged/vim-vue-plugin/ftplugin/vue/fold.vim	/^function! s:FoldForScript(lnum, this_line, this_indent)$/;"	f
s:FoldForSpecialLine	vim/.vim/plugged/vim-vue-plugin/ftplugin/vue/fold.vim	/^function! s:FoldForSpecialLine(this_line)$/;"	f
s:Format	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Format(val) abort$/;"	f
s:FormatFile	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatFile(dict) abort$/;"	f
s:FormatFromSelected	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:FormatFromSelected(type)$/;"	f
s:FormatLog	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatLog(dict) abort$/;"	f
s:FormatRebase	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatRebase(dict) abort$/;"	f
s:GF	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
s:Generate	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Generate(object, ...) abort$/;"	f
s:GetBlockIndent	vim/.vim/plugged/vim-vue-plugin/indent/vue.vim	/^function! s:GetBlockIndent(syntax)$/;"	f
s:GetBlockSyntax	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! s:GetBlockSyntax(lnum)$/;"	f
s:GetBlockTag	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! s:GetBlockTag(lnum)$/;"	f
s:GetConfig	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! s:GetConfig(name, default)$/;"	f
s:GetEnclosingTagLocations	vim/.vim/plugged/MatchTagAlways/autoload/MatchTagAlways.vim	/^function! s:GetEnclosingTagLocations()$/;"	f
s:GetFilenames	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:GetFilenames(path, filename) " {{{1$/;"	f
s:GetGroupNameForHighlight	vim/.vim/plugged/vim-vue-plugin/syntax/vue.vim	/^function! s:GetGroupNameForHighlight(syntax)$/;"	f
s:GetGroupNameForLoading	vim/.vim/plugged/vim-vue-plugin/syntax/vue.vim	/^function! s:GetGroupNameForLoading(syntax)$/;"	f
s:GetIndent	vim/.vim/plugged/vim-vue-plugin/syntax/patch/vue-keyword.vim	/^function! s:GetIndent()$/;"	f
s:GetIndentByContext	vim/.vim/plugged/vim-vue-plugin/indent/vue.vim	/^function! s:GetIndentByContext(tag, syntax)$/;"	f
s:GetIndentFile	vim/.vim/plugged/vim-vue-plugin/indent/vue.vim	/^function! s:GetIndentFile(syntax)$/;"	f
s:GetMSL	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^function s:GetMSL(lnum, in_one_line_scope)$/;"	f
s:GetMatchOption	vim/.vim/plugged/vim-vue-plugin/syntax/patch/vue-keyword.vim	/^function! s:GetMatchOption()$/;"	f
s:GetPair	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^  function s:GetPair(start,end,flags,skip,...)$/;"	f
s:GetPair	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^  function s:GetPair(start,end,flags,skip,time,...)$/;"	f
s:GetPair	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^  function s:GetPair(start,end,flags,skip)$/;"	f
s:GetSynatxName	vim/.vim/plugged/vim-vue-plugin/syntax/vue.vim	/^function! s:GetSynatxName(block, syntax)$/;"	f
s:GetSyntaxLangName	vim/.vim/plugged/vim-vue-plugin/syntax/vue.vim	/^function! s:GetSyntaxLangName(syntax)$/;"	f
s:GetSyntaxNames	vim/.vim/plugged/vim-styled-components/after/ftplugin/javascript.vim	/^fu! s:GetSyntaxNames(lnum, cnum)$/;"	f
s:GetSyntaxNames	vim/.vim/plugged/vim-styled-components/after/indent/javascript.vim	/^fu! s:GetSyntaxNames(lnum, cnum)$/;"	f
s:GetVarIndent	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^function s:GetVarIndent(lnum)$/;"	f
s:GetVars	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^function s:GetVars()$/;"	f
s:GitCmd	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GitCmd() abort$/;"	f
s:GitDir	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GitDir(...) abort$/;"	f
s:GitShellCmd	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GitShellCmd() abort$/;"	f
s:GlobComplete	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GlobComplete(lead, pattern, ...) abort$/;"	f
s:GlobalChange	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! s:GlobalChange(dict, key, val)$/;"	f
s:GrepCfile	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GrepCfile(result) abort$/;"	f
s:GrepOptions	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GrepOptions(args, dir) abort$/;"	f
s:GrepParseLine	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GrepParseLine(options, quiet, dir, line) abort$/;"	f
s:GrepSubcommand	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:GrepSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:Handler	vim/.vim/plugged/vim-closetag/plugin/closetag.vim	/^fun! s:Handler(xml_tag, isHtml)$/;"	f
s:HasOpt	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:HasOpt(args, ...) abort$/;"	f
s:HaveAtt	vim/.vim/plugged/vim-closetag/plugin/closetag.vim	/^fun! s:HaveAtt()$/;"	f
s:Hi	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:Hi() abort$/;"	f
s:HighlightEnclosingTags	vim/.vim/plugged/MatchTagAlways/autoload/MatchTagAlways.vim	/^function! s:HighlightEnclosingTags()$/;"	f
s:HighlightEnclosingTagsIfPossible	vim/.vim/plugged/MatchTagAlways/autoload/MatchTagAlways.vim	/^function! s:HighlightEnclosingTagsIfPossible()$/;"	f
s:HighlightVue	vim/.vim/plugged/vim-vue-plugin/syntax/vue.vim	/^function! s:HighlightVue()$/;"	f
s:HighlightVueStyle	vim/.vim/plugged/vim-vue-plugin/syntax/vue.vim	/^function! s:HighlightVueStyle()$/;"	f
s:HighlightVueTag	vim/.vim/plugged/vim-vue-plugin/syntax/vue.vim	/^function! s:HighlightVueTag()$/;"	f
s:InMultiVarStatement	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^function s:InMultiVarStatement(lnum)$/;"	f
s:InOneLineScope	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^function s:InOneLineScope(lnum)$/;"	f
s:InString	vim/.vim/plugged/vim-graphql/indent/graphql.vim	/^function s:InString(lnum, col)$/;"	f
s:InValidRegion	vim/.vim/plugged/vim-closetag/plugin/closetag.vim	/^fun! s:InValidRegion()$/;"	f
s:IncludeOrEqual	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! s:IncludeOrEqual(listOrString, item)$/;"	f
s:IndentLevel	vim/.vim/plugged/vim-vue-plugin/ftplugin/vue/fold.vim	/^function! s:IndentLevel(lnum)$/;"	f
s:IndentWithContinuation	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^function s:IndentWithContinuation(lnum, ind, width)$/;"	f
s:Init	vim/.vim/plugged/vim-vue-plugin/indent/vue.vim	/^function! s:Init()$/;"	f
s:Init	vim/.vim/plugged/vim-vue-plugin/syntax/vue.vim	/^function! s:Init()$/;"	f
s:InitBuf	vim/.vim/plugged/vim-closetag/plugin/closetag.vim	/^fun! s:InitBuf()$/;"	f
s:Initial	vim/.vim/plugged/vim-closetag/plugin/closetag.vim	/^fun! s:Initial()$/;"	f
s:Initialize	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:Initialize() " Initialize the plugin.  {{{1$/;"	f
s:InitializeExternalCommand	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:InitializeExternalCommand()$/;"	f
s:InitializeVimCore	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:InitializeVimCore()$/;"	f
s:InstallOptions	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:InstallOptions(...)abort$/;"	f
s:IsBlock	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^function s:IsBlock()$/;"	f
s:IsBlock	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^function s:IsBlock()$/;"	f
s:IsConflicted	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:IsConflicted() abort$/;"	f
s:IsContOne	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^function s:IsContOne(cont)$/;"	f
s:IsInMultilineComment	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^function s:IsInMultilineComment(lnum, col)$/;"	f
s:IsInString	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^function s:IsInString(lnum, col)$/;"	f
s:IsInStringOrComment	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
s:IsLineComment	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^function s:IsLineComment(lnum, col)$/;"	f
s:IsRuleActive	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:IsRuleActive(name, config) " {{{1$/;"	f
s:IsStyledDefinition	vim/.vim/plugged/vim-styled-components/after/indent/javascript.vim	/^fu! s:IsStyledDefinition(lnum)$/;"	f
s:IsSwitch	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^function s:IsSwitch()$/;"	f
s:JobExecute	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:JobExecute(argv, jopts, stdin, callback, ...) abort$/;"	f
s:JobNvimCallback	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:JobNvimCallback(lines, job, data, type) abort$/;"	f
s:JobNvimExit	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:JobNvimExit(dict, callback, job, data, type) dict abort$/;"	f
s:JobOpts	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:JobOpts(cmd, env) abort$/;"	f
s:JobVimExit	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:JobVimExit(dict, callback, temp, job, status) abort$/;"	f
s:JoinChomp	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:JoinChomp(list) abort$/;"	f
s:Keywordprg	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Keywordprg() abort$/;"	f
s:LEFT_BRACE	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^let s:LEFT_BRACE = '\\v%(^|[^\\\\])\\{'$/;"	v
s:LanguageToolHighlightRegex	vim/.vim/plugged/vim-LanguageTool/autoload/languagetool.vim	/^function s:LanguageToolHighlightRegex(line, context, start, len)  "{{{1$/;"	f
s:LanguageToolSetUp	vim/.vim/plugged/vim-LanguageTool/autoload/languagetool.vim	/^function s:LanguageToolSetUp() "{{{1$/;"	f
s:LineHasOpeningBrackets	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
s:LinesError	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:LinesError(...) abort$/;"	f
s:LoadPatchSyntax	vim/.vim/plugged/vim-vue-plugin/syntax/vue.vim	/^function! s:LoadPatchSyntax(syntax)$/;"	f
s:LoadStyleAfterSyntax	vim/.vim/plugged/vim-vue-plugin/syntax/vue.vim	/^function! s:LoadStyleAfterSyntax(syntax)$/;"	f
s:LoadSyntaxList	vim/.vim/plugged/vim-vue-plugin/syntax/vue.vim	/^function! s:LoadSyntaxList(syntax_list)$/;"	f
s:LoadedExtensions	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:LoadedExtensions(...) abort$/;"	f
s:LogFlushQueue	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:LogFlushQueue(state, dir) abort$/;"	f
s:LogParse	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:LogParse(state, dir, prefix, line) abort$/;"	f
s:LookingAt	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^function s:LookingAt()$/;"	f
s:MAX_PROPERTY_NAME	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^let s:MAX_PROPERTY_NAME = 50$/;"	v
s:MAX_PROPERTY_VALUE	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^let s:MAX_PROPERTY_VALUE = 255$/;"	v
s:MAX_SECTION_NAME	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^let s:MAX_SECTION_NAME = 4096$/;"	v
s:Main	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! s:Main()$/;"	f
s:Map	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Map(mode, lhs, rhs, ...) abort$/;"	f
s:Map	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Map(mode, lhs, rhs, flags) abort$/;"	f
s:MapMotion	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MapMotion(lhs, rhs) abort$/;"	f
s:Match	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^function s:Match(lnum, regex)$/;"	f
s:Merge	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:Merge(remote, flags) abort$/;"	f
s:MergeHead	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MergeHead(dir) abort$/;"	f
s:MergeSubcommand	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MergeSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:MergeUserConfigIntoDefault	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! s:MergeUserConfigIntoDefault(user)$/;"	f
s:MergetoolSubcommand	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:MergetoolSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:ModifySyntaxOrder	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! s:ModifySyntaxOrder(syntax_list)$/;"	f
s:Mods	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Mods(mods, ...) abort$/;"	f
s:Move	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Move(force, rename, destination) abort$/;"	f
s:NUMERIC_RANGE	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^let s:NUMERIC_RANGE = '\\v([+-]?\\d+)' . '\\.\\.' . '([+-]?\\d+)'$/;"	v
s:Nat	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^function s:Nat(int)$/;"	f
s:NavigateUp	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NavigateUp(count) abort$/;"	f
s:NextExpandedHunk	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextExpandedHunk(count) abort$/;"	f
s:NextFile	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextFile(count) abort$/;"	f
s:NextHunk	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextHunk(count) abort$/;"	f
s:NextItem	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextItem(count) abort$/;"	f
s:NextSection	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextSection(count) abort$/;"	f
s:NextSectionEnd	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NextSectionEnd(count) abort$/;"	f
s:NullError	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:NullError(cmd) abort$/;"	f
s:OPTCRE	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^let s:OPTCRE = '\\v\\s*([^:=[:space:]][^:=]*)\\s*([:=])\\s*(.*)$'$/;"	v
s:OnChangeListener	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^    let s:OnChangeListener = function('OnChangeVueSubtype')$/;"	v
s:OnChangeListener	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^    let s:OnChangeListener = function('OnChangeVueSyntax')$/;"	v
s:OnExit	vim/.vim/plugged/coc.nvim/autoload/coc/terminal.vim	/^  function! s:OnExit(status) closure$/;"	f
s:OnExit	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^  function! s:OnExit(status) closure$/;"	f
s:OneScope	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^function s:OneScope(lnum)$/;"	f
s:OneScope	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^function s:OneScope()$/;"	f
s:OpenConfig	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:OpenConfig()$/;"	f
s:OpenDiagnostics	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:OpenDiagnostics(...) abort$/;"	f
s:OpenParse	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:OpenParse(string, wants_cmd) abort$/;"	f
s:Owner	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Owner(path, ...) abort$/;"	f
s:ParseCino	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^function s:ParseCino(f)$/;"	f
s:ParseKeyValue	vim/.vim/plugged/vim-LanguageTool/autoload/languagetool.vim	/^function s:ParseKeyValue(key, line) "{{{1$/;"	f
s:PatchSearchExpr	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PatchSearchExpr(reverse) abort$/;"	f
s:PathInfo	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PathInfo(url) abort$/;"	f
s:PostSetting	vim/.vim/plugged/vim-vue-plugin/syntax/vue.vim	/^function! s:PostSetting()$/;"	f
s:PrepareEnv	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PrepareEnv(env, dir) abort$/;"	f
s:PrepareJob	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PrepareJob(opts) abort$/;"	f
s:PreparePathArgs	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreparePathArgs(cmd, dir, literal, explicit) abort$/;"	f
s:PrevCodeLine	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^function s:PrevCodeLine(lnum)$/;"	f
s:PrevMultilineEmptyTag	vim/.vim/plugged/vim-vue-plugin/indent/vue.vim	/^function! s:PrevMultilineEmptyTag(lnum)$/;"	f
s:PrevNonBlankNonComment	vim/.vim/plugged/vim-vue-plugin/indent/vue.vim	/^function! s:PrevNonBlankNonComment(lnum)$/;"	f
s:PrevNonBlankNonString	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
s:PreviousFile	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousFile(count) abort$/;"	f
s:PreviousHunk	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousHunk(count) abort$/;"	f
s:PreviousItem	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousItem(count) abort$/;"	f
s:PreviousSection	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousSection(count) abort$/;"	f
s:PreviousSectionEnd	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousSectionEnd(count) abort$/;"	f
s:PreviousToken	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^function s:PreviousToken(...)$/;"	f
s:ProjectionistDetect	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:ProjectionistDetect() abort$/;"	f
s:PromptToStash	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:PromptToStash() abort$/;"	f
s:Pull	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:Pull() abort$/;"	f
s:Pure	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^function s:Pure(f,...)$/;"	f
s:Push	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:Push(choose_upstream, force) abort$/;"	f
s:PushSubcommand	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:PushSubcommand(...) abort$/;"	f
s:QueryLog	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QueryLog(refspec, limit) abort$/;"	f
s:QuickfixCreate	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixCreate(nr, opts) abort$/;"	f
s:QuickfixGet	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixGet(nr, ...) abort$/;"	f
s:QuickfixOpen	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixOpen(nr, mods) abort$/;"	f
s:QuickfixSet	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixSet(nr, ...) abort$/;"	f
s:QuickfixStream	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixStream(nr, event, title, cmd, first, mods, callback, ...) abort$/;"	f
s:Quickhelp	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:Quickhelp() abort$/;"	f
s:QuickpickFilter	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^    function! s:QuickpickFilter(id, key) closure$/;"	f
s:QuickpickHandler	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^    function! s:QuickpickHandler(id, result) closure$/;"	f
s:RIGHT_BRACE	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^let s:RIGHT_BRACE = '\\v%(^|[^\\\\])\\}'$/;"	v
s:ReadPrepare	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReadPrepare(line1, count, range, mods) abort$/;"	f
s:Rebase	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:Rebase(remote) abort$/;"	f
s:RebaseArgument	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RebaseArgument() abort$/;"	f
s:RebaseSubcommand	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RebaseSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:Refresh	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:Refresh() abort$/;"	f
s:Relative	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Relative(...) abort$/;"	f
s:ReloadStatus	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadStatus(...) abort$/;"	f
s:ReloadStatusBuffer	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadStatusBuffer(...) abort$/;"	f
s:ReloadTabStatus	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadTabStatus(...) abort$/;"	f
s:ReloadWinStatus	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadWinStatus(...) abort$/;"	f
s:Remote	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Remote(dir, remote, flags, cb) abort$/;"	f
s:RemoteCallback	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RemoteCallback(config, into, flags, cb) abort$/;"	f
s:RemoteDefault	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RemoteDefault(dir) abort$/;"	f
s:RemoteParseArgs	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RemoteParseArgs(args) abort$/;"	f
s:RemoteResolve	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RemoteResolve(url, flags) abort$/;"	f
s:RemoteUrlCallback	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RemoteUrlCallback(remote, callback) abort$/;"	f
s:Remove	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Remove(after, force) abort$/;"	f
s:RemoveCssPrefix	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! s:RemoveCssPrefix(syntax_name)$/;"	f
s:RemoveTrailingComments	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^function s:RemoveTrailingComments(content)$/;"	f
s:Rename	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:Rename() abort$/;"	f
s:Render	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:Render() abort$/;"	f
s:RenderOutputBuffer	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:RenderOutputBuffer() abort$/;"	f
s:ReplaceCmd	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ReplaceCmd(cmd) abort$/;"	f
s:ResetShellSlash	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:ResetShellSlash() " {{{2$/;"	f
s:Resolve	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Resolve(path) abort$/;"	f
s:RevertSubcommand	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RevertSubcommand(line1, line2, range, bang, mods, options) abort$/;"	f
s:RunBufDelete	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunBufDelete(bufnr) abort$/;"	f
s:RunClose	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunClose(state, tmp, job, ...) abort$/;"	f
s:RunCloseIn	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunCloseIn(job) abort$/;"	f
s:RunEcho	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunEcho(tmp) abort$/;"	f
s:RunEdit	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunEdit(state, tmp, job) abort$/;"	f
s:RunExit	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunExit(state, tmp, job, exit_status) abort$/;"	f
s:RunFinished	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunFinished(state, ...) abort$/;"	f
s:RunReceive	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunReceive(state, tmp, type, job, data, ...) abort$/;"	f
s:RunSave	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunSave(state) abort$/;"	f
s:RunSend	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunSend(job, str) abort$/;"	f
s:RunTick	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunTick(job) abort$/;"	f
s:RunWait	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:RunWait(state, tmp, job, ...) abort$/;"	f
s:SECTCRE	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^let s:SECTCRE = '\\v^\\s*\\[(%([^\\\\#;]|\\\\.)+)\\]'$/;"	v
s:SavePos	vim/.vim/plugged/vim-closetag/plugin/closetag.vim	/^fun! s:SavePos()$/;"	f
s:SearchLoop	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^function s:SearchLoop(pat,flags,expr)$/;"	f
s:SearchOptions	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:SearchOptions(...) abort$/;"	f
s:SelectJavascript	vim/.vim/plugged/vim-javascript/ftdetect/javascript.vim	/^fun! s:SelectJavascript()$/;"	f
s:Selection	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Selection(arg1, ...) abort$/;"	f
s:SetBlockSyntax	vim/.vim/plugged/vim-vue-plugin/syntax/vue.vim	/^function! s:SetBlockSyntax(config_syntax)$/;"	f
s:SetCurrentSyntax	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! s:SetCurrentSyntax(type)$/;"	f
s:SetCurrentSyntax	vim/.vim/plugged/vim-vue-plugin/syntax/vue.vim	/^function! s:SetCurrentSyntax()$/;"	f
s:SetExtraSyntax	vim/.vim/plugged/vim-vue-plugin/syntax/vue.vim	/^function! s:SetExtraSyntax()$/;"	f
s:SetIsKeyword	vim/.vim/plugged/vim-vue-plugin/syntax/vue.vim	/^function! s:SetIsKeyword()$/;"	f
s:SetSyntax	vim/.vim/plugged/vim-vue-plugin/syntax/vue.vim	/^function! s:SetSyntax(block, syntax, has_lang)$/;"	f
s:SetSyntaxIndentExpr	vim/.vim/plugged/vim-vue-plugin/indent/vue.vim	/^function! s:SetSyntaxIndentExpr(syntax_list)$/;"	f
s:SetUpMessage	vim/.vim/plugged/vim-rhubarb/plugin/rhubarb.vim	/^function! s:SetUpMessage(filename) abort$/;"	f
s:SetVueIndent	vim/.vim/plugged/vim-vue-plugin/indent/vue.vim	/^function! s:SetVueIndent()$/;"	f
s:ShowInfo	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:ShowInfo()$/;"	f
s:Skip	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:Skip() abort$/;"	f
s:SkipFunc	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^function s:SkipFunc()$/;"	f
s:Slash	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^  function! s:Slash(path) abort$/;"	f
s:Slash	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^  function! s:Slash(path) abort$/;"	f
s:SpawnExternalParser	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:SpawnExternalParser(cmd) " {{{2$/;"	f
s:SplitExpandChain	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SplitExpandChain(string, ...) abort$/;"	f
s:SquashArgument	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SquashArgument(...) abort$/;"	f
s:SshParseConfig	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SshParseConfig(into, root, file, ...) abort$/;"	f
s:SshParseHost	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SshParseHost(value) abort$/;"	f
s:SshParseInclude	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SshParseInclude(into, root, host, value) abort$/;"	f
s:StageApply	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageApply(info, reverse, extra) abort$/;"	f
s:StageArgs	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageArgs(visual) abort$/;"	f
s:StageDelete	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDelete(lnum1, lnum2, count) abort$/;"	f
s:StageDiff	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
s:StageDiffEdit	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
s:StageIgnore	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageIgnore(lnum1, lnum2, count) abort$/;"	f
s:StageInfo	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageInfo(...) abort$/;"	f
s:StageInline	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageInline(mode, ...) abort$/;"	f
s:StageJump	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageJump(offset, section, ...) abort$/;"	f
s:StagePatch	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
s:StageReveal	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageReveal() abort$/;"	f
s:StageSeek	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StageSeek(info, fallback) abort$/;"	f
s:Stash	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:Stash(pop) abort$/;"	f
s:StatusCfile	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StatusCfile(...) abort$/;"	f
s:StatusCommand	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StatusCommand(line1, line2, range, count, bang, mods, reg, arg, args, ...) abort$/;"	f
s:StdoutToFile	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:StdoutToFile(out, cmd, ...) abort$/;"	f
s:SynAt	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^function s:SynAt(l,c)$/;"	f
s:SynAttrJSX	vim/.vim/plugged/vim-jsx-typescript/after/indent/typescriptreact.vim	/^function! s:SynAttrJSX(synattr)$/;"	f
s:SynEOL	vim/.vim/plugged/vim-jsx-typescript/after/indent/typescriptreact.vim	/^function! s:SynEOL(lnum)$/;"	f
s:SynEOL	vim/.vim/plugged/vim-styled-components/after/indent/javascript.vim	/^fu! s:SynEOL(lnum, offset)$/;"	f
s:SynJSXCloseTag	vim/.vim/plugged/vim-jsx-typescript/after/indent/typescriptreact.vim	/^function! s:SynJSXCloseTag(syns)$/;"	f
s:SynJSXContinues	vim/.vim/plugged/vim-jsx-typescript/after/indent/typescriptreact.vim	/^function! s:SynJSXContinues(cursyn, prevsyn)$/;"	f
s:SynJSXDepth	vim/.vim/plugged/vim-jsx-typescript/after/indent/typescriptreact.vim	/^function! s:SynJSXDepth(syns)$/;"	f
s:SynJsxEscapeJs	vim/.vim/plugged/vim-jsx-typescript/after/indent/typescriptreact.vim	/^function! s:SynJsxEscapeJs(syns)$/;"	f
s:SynSOL	vim/.vim/plugged/vim-jsx-typescript/after/indent/typescriptreact.vim	/^function! s:SynSOL(lnum)$/;"	f
s:SynSOL	vim/.vim/plugged/vim-styled-components/after/ftplugin/javascript.vim	/^fu! s:SynSOL(lnum)$/;"	f
s:SynSOL	vim/.vim/plugged/vim-styled-components/after/indent/javascript.vim	/^fu! s:SynSOL(lnum)$/;"	f
s:SynXMLish	vim/.vim/plugged/vim-jsx-typescript/after/indent/typescriptreact.vim	/^function! s:SynXMLish(syns)$/;"	f
s:SyncAutocmd	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:SyncAutocmd(...)$/;"	f
s:SyntaxAtEnd	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! s:SyntaxAtEnd(lnum)$/;"	f
s:SyntaxListAtEnd	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! s:SyntaxListAtEnd(lnum)$/;"	f
s:SystemError	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SystemError(cmd, ...) abort$/;"	f
s:SystemList	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:SystemList(cmd) abort$/;"	f
s:TYPE	vim/.vim/autoload/plug.vim	/^let s:TYPE = {$/;"	v
s:TYPE	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:TYPE = {'dict': type({}), 'funcref': type(function('call')), 'string': type(''), 'list': t/;"	v
s:TagName	vim/.vim/plugged/vim-closetag/plugin/closetag.vim	/^fun! s:TagName(from)$/;"	f
s:TempDelete	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempDelete(file) abort$/;"	f
s:TempDotMap	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempDotMap() abort$/;"	f
s:TempReadPost	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempReadPost(file) abort$/;"	f
s:TempReadPre	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempReadPre(file) abort$/;"	f
s:TempScript	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempScript(...) abort$/;"	f
s:TempState	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TempState(...) abort$/;"	f
s:ToggleSlashSort	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:ToggleSlashSort(local) abort$/;"	f
s:Token	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^function s:Token()$/;"	f
s:ToolItems	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolItems(state, from, to, offsets, text, ...) abort$/;"	f
s:ToolParse	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolParse(state, line) abort$/;"	f
s:ToolStream	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolStream(line1, line2, range, bang, mods, options, args, state) abort$/;"	f
s:ToolToFrom	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:ToolToFrom(str) abort$/;"	f
s:Tree	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Tree(...) abort$/;"	f
s:Tree	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Tree(path) abort$/;"	f
s:TreeChomp	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TreeChomp(...) abort$/;"	f
s:TreeInfo	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:TreeInfo(dir, commit) abort$/;"	f
s:Trim	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^function s:Trim(ln)$/;"	f
s:TrimTrailingWhitespace	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:TrimTrailingWhitespace() " {{{1$/;"	f
s:Uniq	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:Uniq(list) abort$/;"	f
s:UpdateIndex	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UpdateIndex(dir, info) abort$/;"	f
s:UrlParse	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UrlParse(url) abort$/;"	f
s:UsableWin	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UsableWin(nr) abort$/;"	f
s:UseConfigFiles	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:UseConfigFiles() abort " Apply config to the current buffer {{{1$/;"	f
s:UseConfigFiles_ExternalCommand	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:UseConfigFiles_ExternalCommand()$/;"	f
s:UseConfigFiles_VimCore	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^function! s:UseConfigFiles_VimCore()$/;"	f
s:UserCommandCwd	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UserCommandCwd(dir) abort$/;"	f
s:UserCommandList	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:UserCommandList(...) abort$/;"	f
s:VersionCheck	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:VersionCheck() abort$/;"	f
s:WinShellEsc	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:WinShellEsc(arg) abort$/;"	f
s:XmlIndentGet	vim/.vim/plugged/vim-jsx-typescript/after/indent/typescriptreact.vim	/^function! s:XmlIndentGet(lnum)$/;"	f
s:XmlIndentSum	vim/.vim/plugged/vim-jsx-typescript/after/indent/typescriptreact.vim	/^function! s:XmlIndentSum(lnum, style, add)$/;"	f
s:XmlIndentWithPattern	vim/.vim/plugged/vim-jsx-typescript/after/indent/typescriptreact.vim	/^function! s:XmlIndentWithPattern(line, pat)$/;"	f
s:XmlUnescape	vim/.vim/plugged/vim-LanguageTool/autoload/languagetool.vim	/^function s:XmlUnescape(text) "{{{1$/;"	f
s:_	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^let s:_ = 1 " 1: uninitialized, 2: disabled$/;"	v
s:_16_116	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^let s:_16_116 = 16.0\/116.0$/;"	v
s:_1_3	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^let s:_1_3 = 1.0\/3$/;"	v
s:_cache	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^let s:_cache = {}$/;"	v
s:_csscolor	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^let s:_csscolor   = s:_rgbacolor . '\\|' . s:_funcexpr$/;"	v
s:_funcexpr	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^let s:_funcexpr   = s:_funcname . '[(]' . s:_numval . s:_listsep . s:_numval . s:_listsep . s:_n/;"	v
s:_funcname	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^let s:_funcname   = '\\(rgb\\|hsl\\)a\\?' " submatch 2$/;"	v
s:_git_branch_vv	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:_git_branch_vv(type) abort$/;"	f
s:_handleOldOptions	vim/.vim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:_handleOldOptions() abort$/;"	f
s:_hexcolor	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^let s:_hexcolor   = '#\\(\\x\\{3}\\%(\\>\\|\\x\\{3}\\>\\)\\)' " submatch 1$/;"	v
s:_lightline	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^let s:_lightline = {$/;"	v
s:_listsep	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^let s:_listsep    = s:_ws_ . ','$/;"	v
s:_numval	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^let s:_numval     = s:_ws_ . '\\(\\d\\{1,3}%\\?\\)' " submatch 3,4,5$/;"	v
s:_otherargs_	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^let s:_otherargs_ = '\\%(,[^)]*\\)\\?'$/;"	v
s:_rgbacolor	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^let s:_rgbacolor  = '#\\(\\x\\{3}\\%(\\>\\|\\x\\%(\\>\\|\\x\\{2}\\%(\\>\\|\\x\\{2}\\>\\)\\)\\)\\/;"	v
s:_ws_	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^let s:_ws_        = '\\s*'$/;"	v
s:abs_path	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:abs_path(bufnr, shellesc)$/;"	f
s:act_func_ref	vim/.vim/plugged/far.vim/autoload/far.vim	/^let s:act_func_ref = {$/;"	v
s:action_for	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:action_for(key, ...)$/;"	f
s:activate	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^  let s:activate = 'activate'$/;"	v
s:activate	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^let s:activate = ""$/;"	v
s:activate	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^function! s:activate()$/;"	f
s:activated	vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:activated = 0$/;"	v
s:add_db	vim/.vim/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! s:add_db(db_file) abort$/;"	f
s:add_highlights	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:add_highlights(winid, config, create) abort$/;"	f
s:add_methods	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
s:add_related	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:add_related(winid, target) abort$/;"	f
s:added_db_files	vim/.vim/plugged/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^let s:added_db_files = {}$/;"	v
s:added_dbs	vim/.vim/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:added_dbs = []$/;"	v
s:addr_other	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^let s:addr_other = has('patch-8.1.560') || has('nvim-0.5.0') ? '-addr=other' : ''$/;"	v
s:addr_tabs	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^let s:addr_tabs  = has('patch-7.4.542') ? '-addr=tabs' : ''$/;"	v
s:addr_wins	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^let s:addr_wins  = has('patch-7.4.542') ? '-addr=windows' : ''$/;"	v
s:adjust_header	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:adjust_header(bufnr, hunk_diff)$/;"	f
s:adjust_hunk_summary	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:adjust_hunk_summary(hunk_diff) abort$/;"	f
s:adjust_win_row	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:adjust_win_row(winid, changed) abort$/;"	f
s:ag_handler	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ag_handler(lines, has_column)$/;"	f
s:ag_to_qf	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ag_to_qf(line, has_column)$/;"	f
s:align_lists	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:align_lists(lists)$/;"	f
s:align_pairs	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:align_pairs(list)$/;"	f
s:almost_black	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:almost_black = [ '#1c1c1c', 234 ]$/;"	v
s:alternatePair	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^function s:alternatePair(stop)$/;"	f
s:ansi	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ansi(str, group, default, ...)$/;"	f
s:ansi	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:ansi = {'black': 30, 'red': 31, 'green': 32, 'yellow': 33, 'blue': 34, 'magenta': 35, 'cya/;"	v
s:app	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^  let s:app = "MacVim"$/;"	v
s:app	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^  let s:app = "System Events"$/;"	v
s:app	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^  let s:app = "Terminal"$/;"	v
s:app	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^  let s:app = "iTerm2"$/;"	v
s:append_ul	vim/.vim/autoload/plug.vim	/^function! s:append_ul(lnum, text)$/;"	f
s:apply_highlight_fix	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:apply_highlight_fix()$/;"	f
s:apply_user_input_next	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:apply_user_input_next(mode)$/;"	f
s:aqua	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:aqua = [ '#00ffff', 14 ]$/;"	v
s:aqua	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:aqua = '#3e999f'$/;"	v
s:aqua	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:aqua = '#3e999f'$/;"	v
s:ask	vim/.vim/autoload/plug.vim	/^function! s:ask(message, ...)$/;"	f
s:ask_no_interrupt	vim/.vim/autoload/plug.vim	/^function! s:ask_no_interrupt(...)$/;"	f
s:assemble_context	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! s:assemble_context(far_params, win_params, cmdargs, callback, cbparams) abort "{{{$/;"	f
s:assemble_context_callback	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! s:assemble_context_callback(exec_ctx) abort "{{{$/;"	f
s:assert	vim/.vim/plugged/lightline.vim/test/autocmd.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	vim/.vim/plugged/lightline.vim/test/concatenate.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	vim/.vim/plugged/lightline.vim/test/error.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	vim/.vim/plugged/lightline.vim/test/expand.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	vim/.vim/plugged/lightline.vim/test/highlight.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	vim/.vim/plugged/lightline.vim/test/link.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	vim/.vim/plugged/lightline.vim/test/mode.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	vim/.vim/plugged/lightline.vim/test/onetab.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	vim/.vim/plugged/lightline.vim/test/popup.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	vim/.vim/plugged/lightline.vim/test/quickfix.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	vim/.vim/plugged/lightline.vim/test/tabline.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	vim/.vim/plugged/lightline.vim/test/tabs.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	vim/.vim/plugged/lightline.vim/test/toggle.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	vim/.vim/plugged/lightline.vim/test/uniq.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert_list_of_dicts	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:assert_list_of_dicts(expected, actual)$/;"	f
s:assert_signs	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:assert_signs(expected, filename)$/;"	f
s:assign_name	vim/.vim/autoload/plug.vim	/^function! s:assign_name()$/;"	f
s:assoc	vim/.vim/autoload/plug.vim	/^function! s:assoc(dict, key, val)$/;"	f
s:attn_mode	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:attn_mode() abort$/;"	f
s:attribute	vim/.vim/plugged/vim-vue-plugin/syntax/patch/html.vim	/^let s:attribute = s:config.attribute$/;"	v
s:available	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^let s:available = has('nvim') || ($/;"	v
s:background	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:background = '#444444'$/;"	v
s:background	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:background = '#F5F5F5'$/;"	v
s:bad_git_dir	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^let s:bad_git_dir = '\/$\\|^fugitive:'$/;"	v
s:bad_input	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:bad_input = 0$/;"	v
s:bang	vim/.vim/autoload/plug.vim	/^function! s:bang(cmd, ...)$/;"	f
s:bang_edits	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:bang_edits = {'split': 'Git', 'vsplit': 'vertical Git', 'tabedit': 'tab Git', 'pedit': 'Gi/;"	v
s:bar	vim/.vim/autoload/plug.vim	/^function! s:bar()$/;"	f
s:base0	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base0 = '#666666'$/;"	v
s:base0	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base0 = '#909090'$/;"	v
s:base0	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base0 = '#ffffff'$/;"	v
s:base0	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base0 = '#949494'$/;"	v
s:base0	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base0 = '#777777'$/;"	v
s:base0	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base0 = '#e6e1cf'$/;"	v
s:base0	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base0 = '#5C6773'$/;"	v
s:base0	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base0 = '#d9d7ce'$/;"	v
s:base0	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base0 = [ '#839496', s:cuicolors.base0[s:cuiindex] ]$/;"	v
s:base0	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base0 = [ '#808080', 244 ]$/;"	v
s:base00	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base00 = '#808080'$/;"	v
s:base00	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base00 = '#666666'$/;"	v
s:base00	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base00 = '#6060df'$/;"	v
s:base00	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base00 = '#767676'$/;"	v
s:base00	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base00 = '#666666'$/;"	v
s:base00	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base00 = '#14191f'$/;"	v
s:base00	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base00 = '#FFFFFF'$/;"	v
s:base00	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base00 = '#272d38'$/;"	v
s:base00	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base00 = [ '#657b83', s:cuicolors.base00[s:cuiindex] ]$/;"	v
s:base00	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base00 = [ '#666666', 242  ]$/;"	v
s:base01	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base01 = '#b4b4b4'$/;"	v
s:base01	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base01 = '#555555'$/;"	v
s:base01	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base01 = '#6060af'$/;"	v
s:base01	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base01 = '#606060'$/;"	v
s:base01	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base01 = '#555555'$/;"	v
s:base01	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base01 = '#14191f'$/;"	v
s:base01	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base01 = '#FFFFFF'$/;"	v
s:base01	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base01 = '#272d38'$/;"	v
s:base01	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base01 = [ '#586e75', s:cuicolors.base01[s:cuiindex] ]$/;"	v
s:base01	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base01 = [ '#585858', 240 ]$/;"	v
s:base02	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base02 = '#c8c8c8'$/;"	v
s:base02	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base02 = '#434343'$/;"	v
s:base02	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base02 = '#606087'$/;"	v
s:base02	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base02 = '#4e4e4e'$/;"	v
s:base02	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base02 = '#444444'$/;"	v
s:base02	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base02 = '#0f1419'$/;"	v
s:base02	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base02 = '#FAFAFA'$/;"	v
s:base02	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base02 = '#212733'$/;"	v
s:base02	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base02 = [ '#30302c', 236 ]$/;"	v
s:base02	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base02 = [ '#30302c', 236 ]$/;"	v
s:base02	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base02 = [ '#073642', s:cuicolors.base02[s:cuiindex] ]$/;"	v
s:base02	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base02 = [ '#30302c', 236 ]$/;"	v
s:base02	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base02 = [ '#444444', 238 ]$/;"	v
s:base023	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base023 = '#dfdfdf'$/;"	v
s:base023	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base023 = '#303030'$/;"	v
s:base023	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base023 = '#202087'$/;"	v
s:base023	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base023 = '#262626'$/;"	v
s:base023	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base023 = '#333333'$/;"	v
s:base023	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base023 = '#0f1419'$/;"	v
s:base023	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base023 = '#FAFAFA'$/;"	v
s:base023	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base023 = '#212733'$/;"	v
s:base023	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base023 = [ '#353535', 236 ]$/;"	v
s:base03	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base03 = '#fafafa'$/;"	v
s:base03	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base03 = '#1d1f21'$/;"	v
s:base03	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base03 = '#002451'$/;"	v
s:base03	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base03 = '#12124c'$/;"	v
s:base03	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base03 = '#2d2d2d'$/;"	v
s:base03	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base03 = '#e6b673'$/;"	v
s:base03	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base03 = '#E6B673'$/;"	v
s:base03	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base03 = '#ffc44c'$/;"	v
s:base03	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base03 = [ '#002b36', s:cuicolors.base03[s:cuiindex] ]$/;"	v
s:base03	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base03 = [ '#242424', 235 ]$/;"	v
s:base1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base1 = '#555555'$/;"	v
s:base1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base1 = '#a0a0a0'$/;"	v
s:base1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base1 = '#ffffff'$/;"	v
s:base1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base1 = '#b2b2b2'$/;"	v
s:base1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base1 = '#999999'$/;"	v
s:base1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base1 = '#e6e1cf'$/;"	v
s:base1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base1 = '#5C6773'$/;"	v
s:base1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base1 = '#d9d7ce'$/;"	v
s:base1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base1 = [ '#93a1a1', s:cuicolors.base1[s:cuiindex] ]$/;"	v
s:base1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base1 = [ '#969696', 247 ]$/;"	v
s:base2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base2 = '#4f4f4f'$/;"	v
s:base2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base2 = '#bababa'$/;"	v
s:base2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base2 = '#ffffff'$/;"	v
s:base2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base2 = '#c6c6c6'$/;"	v
s:base2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base2 = '#aaaaaa'$/;"	v
s:base2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base2 = '#3e4b59'$/;"	v
s:base2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base2 = '#828C99'$/;"	v
s:base2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base2 = '#607080'$/;"	v
s:base2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base2 = [ '#eee8d5', s:cuicolors.base2[s:cuiindex] ]$/;"	v
s:base2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base2 = [ '#a8a8a8', 248 ]$/;"	v
s:base23	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base23 = '#ffffff'$/;"	v
s:base23	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base23 = '#d0d0d0'$/;"	v
s:base23	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base23 = '#bbbbbb'$/;"	v
s:base3	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base3 = '#4d4d4c'$/;"	v
s:base3	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base3 = '#c5c8c6'$/;"	v
s:base3	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base3 = '#ffffff'$/;"	v
s:base3	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base3 = '#eaeaea'$/;"	v
s:base3	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base3 = '#cccccc'$/;"	v
s:base3	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:base3 = '#e6e1cf'$/;"	v
s:base3	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:base3 = '#5C6773'$/;"	v
s:base3	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:base3 = '#d9d7ce'$/;"	v
s:base3	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:base3 = [ '#fdf6e3', s:cuicolors.base3[s:cuiindex] ]$/;"	v
s:base3	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base3 = [ '#d0d0d0', 252 ]$/;"	v
s:base_dir	vim/.vim/plugged/fzf/plugin/fzf.vim	/^  let s:base_dir = expand('<sfile>:h:h')$/;"	v
s:base_spec	vim/.vim/autoload/plug.vim	/^let s:base_spec = { 'branch': '', 'frozen': 0 }$/;"	v
s:basic_reactive	vim/.vim/plugged/vim-vue-plugin/syntax/patch/vue-keyword.vim	/^let s:basic_reactive = 'reactive readonly isProxy isReactive isReadonly toRaw markRaw shallowRea/;"	v
s:batchfile	vim/.vim/autoload/plug.vim	/^  function! s:batchfile(cmd)$/;"	f
s:bd_winid	vim/.vim/plugged/vim-translator/autoload/translator/window/float.vim	/^let s:bd_winid = -1$/;"	v
s:before_function_called	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:before_function_called = 0$/;"	v
s:begin	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^let s:begin = '^[^0-9]*[0-9]\\{4}-[0-9]\\{2}-[0-9]\\{2}\\s\\+'$/;"	v
s:bg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:bg     = '#263238'$/;"	v
s:bg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:bg     = '#ffffff'$/;"	v
s:bg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:bg     = '#263238'$/;"	v
s:bg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:bg     = '#ffffff'$/;"	v
s:bg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:bg    = [ '#282c34', 235 ]$/;"	v
s:bg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:bg    = [ '#fafafa', 255 ]$/;"	v
s:bg_1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:bg_1      = ['#252525', 0]$/;"	v
s:bg_1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:bg_1      = ['#184956', 0]$/;"	v
s:bg_1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:bg_1      = ['#ece3cc', 0]$/;"	v
s:bg_1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:bg_1      = ['#ebebeb', 0]$/;"	v
s:bg_2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:bg_2      = ['#3b3b3b', 8]$/;"	v
s:bg_2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:bg_2      = ['#2d5b69', 8]$/;"	v
s:bg_2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:bg_2      = ['#d5cdb6', 8]$/;"	v
s:bg_2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:bg_2      = ['#cdcdcd', 8]$/;"	v
s:bin	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^    let s:bin.preview = fnamemodify(s:bin.preview, ':8')$/;"	v
s:bin	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^    let s:bin.preview = split(system('for %A in ("'.s:bin.preview.'") do @echo %~sA'), "\\n")[0]$/;"	v
s:bin	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:bin = {$/;"	v
s:bin_dir	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:bin_dir = expand('<sfile>:p:h:h:h').'\/bin\/'$/;"	v
s:black	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:black(x) abort$/;"	f
s:black	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:black = [ '#000000', 0 ]$/;"	v
s:black	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:black = [ '#2b2b2b', 235 ]$/;"	v
s:black	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:black = [ '#232526', 233 ]$/;"	v
s:black	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:black = [ '#000000', '0' ]$/;"	v
s:black2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:black2 = [ '#121212', '233' ]$/;"	v
s:blobdirs	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:blobdirs = {}$/;"	v
s:block_regex	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^let s:block_regex = '\\%([{[]\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:blue = [ '#0000ff', 12 ]$/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:blue = [ '#4fb4d8' , 39 ]$/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:blue = '#00afaf'$/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:blue = '#4271ae'$/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:blue = '#4271ae'$/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:blue = '#81a2be'$/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:blue = '#bbdaff'$/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:blue = '#7aa6da'$/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:blue = '#99cccc'$/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:blue = '#36a3d9'$/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:blue = '#59c2ff'$/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:blue = '#59c2ff'$/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:blue = [ '#6897bb' , 67 ] $/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:blue = [ '#8197bf', 103 ]$/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:blue   = '#89ddff'$/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:blue   = '#82aaff'$/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:blue   = [ '#61afef', 75 ]$/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:blue      = ['#368aeb', 4]$/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:blue      = ['#4695f7', 4]$/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:blue      = ['#0072d4', 4]$/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:blue      = ['#0064e4', 4]$/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:blue = [ '#87afaf', 109 ]$/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:blue = [ '#5f87af', '67' ]$/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:blue = [ '#268bd2', s:cuicolors.blue[s:cuiindex] ]$/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:blue = [ '#5573a3', 4 ]$/;"	v
s:blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:blue = [ '#8ac6f2', 117 ]$/;"	v
s:blue2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:blue2 = [ '#91aadf', '110' ]$/;"	v
s:border_opt	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:border_opt(window)$/;"	f
s:borderchars	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^let s:borderchars = get(g:, 'coc_borderchars', ['─', '│', '─', '│', '┌', '┐', '┘',/;"	v
s:borderjoinchars	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^let s:borderjoinchars = get(g:, 'coc_border_joinchars', ['┬', '┤', '┴', '├'])$/;"	v
s:branch_exists	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:branch_exists(branch) abort$/;"	f
s:branch_line_refs	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let s:branch_line_refs         = {}$/;"	v
s:branch_under_cursor	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:branch_under_cursor() abort$/;"	f
s:brblue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:brblue    = ['#4f9cfe', 12]$/;"	v
s:brblue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:brblue    = ['#58a3ff', 12]$/;"	v
s:brblue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:brblue    = ['#006dce', 12]$/;"	v
s:brblue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:brblue    = ['#0054cf', 12]$/;"	v
s:brcyan	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:brcyan    = ['#56d8c9', 14]$/;"	v
s:brcyan	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:brcyan    = ['#53d6c7', 14]$/;"	v
s:brcyan	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:brcyan    = ['#00978a', 14]$/;"	v
s:brcyan	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:brcyan    = ['#009a8a', 14]$/;"	v
s:brgreen	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:brgreen   = ['#83c746', 10]$/;"	v
s:brgreen	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:brgreen   = ['#84c747', 10]$/;"	v
s:brgreen	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:brgreen   = ['#428b00', 10]$/;"	v
s:brgreen	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:brgreen   = ['#008400', 10]$/;"	v
s:bright_blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:bright_blue = [ '#8eb2f7', 12 ]$/;"	v
s:bright_green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:bright_green = [ '#98bc37', 10 ]$/;"	v
s:bright_magenta	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:bright_magenta = [ '#e35682', 13 ]$/;"	v
s:brmagenta	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:brmagenta = ['#ff81ca', 13]$/;"	v
s:brmagenta	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:brmagenta = ['#ff84cd', 13]$/;"	v
s:brmagenta	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:brmagenta = ['#c44392', 13]$/;"	v
s:brmagenta	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:brmagenta = ['#c7008b', 13]$/;"	v
s:browse	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! s:browse(url)$/;"	f
s:brred	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:brred     = ['#ff5e56', 9]$/;"	v
s:brred	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:brred     = ['#ff665c', 9]$/;"	v
s:brred	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:brred     = ['#cc1729', 9]$/;"	v
s:brred	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:brred     = ['#bf0000', 9]$/;"	v
s:bryellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:bryellow  = ['#efc541', 11]$/;"	v
s:bryellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:bryellow  = ['#ebc13d', 11]$/;"	v
s:bryellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:bryellow  = ['#a78300', 11]$/;"	v
s:bryellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:bryellow  = ['#af8500', 11]$/;"	v
s:btags_sink	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:btags_sink(lines)$/;"	f
s:btags_source	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:btags_source(tag_cmds)$/;"	f
s:buf_line_count	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:buf_line_count(bufnr) abort$/;"	f
s:buffer_counter	vim/.vim/plugged/far.vim/autoload/far.vim	/^let s:buffer_counter = 1$/;"	v
s:buffer_line_handler	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buffer_line_handler(lines)$/;"	f
s:buffer_lines	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buffer_lines(query)$/;"	f
s:buffer_prototype	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_repo	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
s:buffer_type	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
s:buffocus	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:buffocus(bufnr) abort$/;"	f
s:buflisted	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buflisted()$/;"	f
s:bufnr	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^let s:bufnr       = bufnr('')$/;"	v
s:bufopen	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:bufopen(lines)$/;"	f
s:bufrefresh	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:bufrefresh()$/;"	f
s:build_buffer_content	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! s:build_buffer_content(far_ctx, win_params) abort "{{{$/;"	f
s:build_command	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:build_command(cmd)$/;"	f
s:build_palette	vim/.vim/plugged/iceberg-dark/autoload/airline/themes/icebergDark.vim	/^function! s:build_palette() abort$/;"	f
s:build_palette	vim/.vim/plugged/iceberg-dark/autoload/lightline/colorscheme/icebergDark.vim	/^function! s:build_palette() abort$/;"	f
s:build_palette	vim/.vim/plugged/iceberg.vim/autoload/airline/themes/iceberg.vim	/^function! s:build_palette() abort$/;"	f
s:build_palette	vim/.vim/plugged/iceberg.vim/autoload/lightline/colorscheme/iceberg.vim	/^function! s:build_palette() abort$/;"	f
s:build_palette	vim/.vim/plugged/iceberg.vim/src/template-airline.vim	/^function! s:build_palette() abort$/;"	f
s:build_palette	vim/.vim/plugged/iceberg.vim/src/template-lightline.vim	/^function! s:build_palette() abort$/;"	f
s:bvars	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^let s:bvars = {$/;"	v
s:c_flag	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:c_flag = s:git_supports_command_line_config_override()$/;"	v
s:cache_project_root	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:cache_project_root(path) abort$/;"	f
s:cached_translate	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! s:cached_translate(pat)$/;"	f
s:calc_size	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:calc_size(max, val, dict)$/;"	f
s:call	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:call(mapping) abort$/;"	f
s:callback	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:callback(dict, lines) abort$/;"	f
s:callbacks	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^let s:callbacks = {}$/;"	v
s:can_diffoff	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:can_diffoff(buf) abort$/;"	f
s:cd	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^function! s:cd(dir)$/;"	f
s:cfile	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:cfile() abort$/;"	f
s:channel_log	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:channel_log = s:plugin_dir.'channel.log'$/;"	v
s:channel_map	vim/.vim/plugged/coc.nvim/autoload/coc/terminal.vim	/^let s:channel_map = {}$/;"	v
s:char	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:char = ''$/;"	v
s:char_map	vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:char_map = {$/;"	v
s:checkAutocmd	vim/.vim/plugged/coc.nvim/autoload/health/coc.vim	/^function! s:checkAutocmd()$/;"	f
s:checkCommand	vim/.vim/plugged/coc.nvim/autoload/health/coc.vim	/^function! s:checkCommand()$/;"	f
s:checkEnvironment	vim/.vim/plugged/coc.nvim/autoload/health/coc.vim	/^function! s:checkEnvironment() abort$/;"	f
s:checkInitailize	vim/.vim/plugged/coc.nvim/autoload/health/coc.vim	/^function! s:checkInitailize() abort$/;"	f
s:checkVersion	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:checkVersion() abort$/;"	f
s:check_assertions	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/handler.vim	/^function! s:check_assertions(job)$/;"	f
s:check_buffer	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! s:check_buffer(fugitive_repo, current)$/;"	f
s:check_far_window_to_resize	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! s:check_far_window_to_resize(bufnr) abort "{{{$/;"	f
s:check_floating_window	vim/.vim/plugged/vim-translator/autoload/health/translator.vim	/^function! s:check_floating_window() abort$/;"	f
s:check_job	vim/.vim/plugged/vim-translator/autoload/health/translator.vim	/^function! s:check_job() abort$/;"	f
s:check_python	vim/.vim/plugged/vim-translator/autoload/health/translator.vim	/^function! s:check_python() abort$/;"	f
s:check_requirements	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:check_requirements()$/;"	f
s:check_ruby	vim/.vim/autoload/plug.vim	/^function! s:check_ruby()$/;"	f
s:checked	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:checked = 0$/;"	v
s:checked	vim/.vim/plugged/fzf/plugin/fzf.vim	/^let s:checked = {}$/;"	v
s:checkout	vim/.vim/autoload/plug.vim	/^function! s:checkout(spec)$/;"	f
s:cherry_pick_view	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:cherry_pick_view() abort$/;"	f
s:child	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^function! s:child(dir, identifier)$/;"	f
s:chomp	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:chomp(str)$/;"	f
s:chsh	vim/.vim/autoload/plug.vim	/^function! s:chsh(swap)$/;"	f
s:clean	vim/.vim/autoload/plug.vim	/^function! s:clean(force)$/;"	f
s:clear	vim/.vim/plugged/lightline.vim/test/link.vim	/^function! s:clear()$/;"	f
s:clear	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:clear(bufnr)$/;"	f
s:clear_match_by_id	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^let s:clear_match_by_id = has('nvim-0.5.0') || has('patch-8.1.1084')$/;"	v
s:clear_match_by_window	vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^    let s:clear_match_by_window = 0$/;"	v
s:clear_match_by_window	vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^let s:clear_match_by_window = has('nvim-0.5.0') || has('patch-8.1.1084')$/;"	v
s:clear_matches	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^function! s:clear_matches()$/;"	f
s:client	vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:client = v:null$/;"	v
s:clients	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^let s:clients = {}$/;"	v
s:close_pane	vim/.vim/autoload/plug.vim	/^function! s:close_pane()$/;"	f
s:close_popup_on_escape	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:close_popup_on_escape(winid, key)$/;"	f
s:close_string	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:close_string() abort$/;"	f
s:close_win	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:close_win(winid) abort$/;"	f
s:closing_bracket	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^let s:closing_bracket = '[]}],\\?\\s*$'$/;"	v
s:cm	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:cm = s:CursorManager.new()$/;"	v
s:cmd	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:cmd(bang, ...) abort$/;"	f
s:cmd_history_sink	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:cmd_history_sink(lines)$/;"	f
s:collect	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:collect(temps) abort$/;"	f
s:color_bright	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^let s:color_bright  = {}$/;"	v
s:color_idx	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^	let s:color_idx = {}$/;"	v
s:colour	vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:colour(r, g, b)$/;"	f
s:columns	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^let s:columns = -1$/;"	v
s:comma_first	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^let s:comma_first = '^\\s*,'$/;"	v
s:comma_last	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^let s:comma_last = ',\\s*$'$/;"	v
s:command_sink	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:command_sink(lines)$/;"	f
s:commits	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:commits(range, buffer_local, args)$/;"	f
s:commits_sink	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:commits_sink(lines)$/;"	f
s:common_prefix	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! s:common_prefix(a, b)$/;"	f
s:common_sink	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:common_sink(action, lines) abort$/;"	f
s:common_suffix	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! s:common_suffix(a, b, start)$/;"	f
s:commondirs	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:commondirs = {}$/;"	v
s:compare_binary_versions	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:compare_binary_versions(a, b)$/;"	f
s:compare_git_uri	vim/.vim/autoload/plug.vim	/^function! s:compare_git_uri(a, b)$/;"	f
s:compare_pos	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:compare_pos(l, r)$/;"	f
s:compare_versions	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:compare_versions(a, b)$/;"	f
s:complete_dir	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! s:complete_dir(val)$/;"	f
s:complete_insert	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:complete_insert(lines)$/;"	f
s:complete_trigger	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:complete_trigger()$/;"	f
s:composition	vim/.vim/plugged/vim-vue-plugin/syntax/patch/vue-keyword.vim	/^let s:composition = 'setup onBeforeMount onMounted onBeforeUpdate onUpdated onBeforeUnmount onUn/;"	v
s:computed_and_watch	vim/.vim/plugged/vim-vue-plugin/syntax/patch/vue-keyword.vim	/^let s:computed_and_watch = 'computed watchEffect watchPostEffect watchSyncEffect watch'$/;"	v
s:config	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:config = {}$/;"	v
s:config	vim/.vim/plugged/vim-vue-plugin/ftplugin/vue/fold.vim	/^let s:config = vue#GetConfig('config', {})$/;"	v
s:config	vim/.vim/plugged/vim-vue-plugin/syntax/patch/html.vim	/^let s:config = vue#GetConfig('config', {})$/;"	v
s:config	vim/.vim/plugged/vim-vue-plugin/syntax/patch/javascript.vim	/^let s:config = vue#GetConfig('config', {})$/;"	v
s:config	vim/.vim/plugged/vim-vue-plugin/syntax/patch/typescript.vim	/^let s:config = vue#GetConfig('config', {})$/;"	v
s:config_Get	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:config_Get(name, ...) dict abort$/;"	f
s:config_GetAll	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:config_GetAll(name) dict abort$/;"	f
s:config_GetRegexp	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:config_GetRegexp(pattern) dict abort$/;"	f
s:config_prototype	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:config_prototype = {}$/;"	v
s:content_height	vim/.vim/plugged/vim-translator/autoload/translator/window/float.vim	/^function! s:content_height(bufnr, width, wrap) abort$/;"	f
s:continuation	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^let s:continuation = get(g:,'typescript_continuation',$/;"	v
s:continuation	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^let s:continuation = get(g:,'javascript_continuation',$/;"	v
s:continuation_regex	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^let s:continuation_regex = '\\%([\\\\*+\/.:]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\|[^=]=[^/;"	v
s:continues	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^function s:continues(ln,con)$/;"	f
s:convert	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^function! s:convert(name, index) abort$/;"	f
s:convert	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:convert(rgb) abort$/;"	f
s:convert_config_nvim	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:convert_config_nvim(config) abort$/;"	f
s:cos16	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^let s:cos16 = cos(16*(180\/atan2(0,-1)))$/;"	v
s:count	vim/.vim/plugged/vim-lightline-coc/autoload/lightline/coc.vim	/^function! s:count(level) abort$/;"	f
s:countSum	vim/.vim/plugged/vim-lightline-coc/autoload/lightline/coc.vim	/^function! s:countSum() abort$/;"	f
s:count_braces	vim/.vim/plugged/vim-vue-plugin/lib/indent/css.vim	/^function s:count_braces(lnum, count_open)$/;"	f
s:counter	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:counter = 0$/;"	v
s:cpath	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:cpath(path, ...) abort$/;"	f
s:cpo_save	vim/.vim/autoload/plug.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/.vim/plugged/fzf/plugin/fzf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/.vim/plugged/typescript-vim/compiler/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/.vim/plugged/typescript-vim/ftplugin/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/.vim/plugged/vim-graphql/indent/graphql.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:create_btns_buffer	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:create_btns_buffer(bufnr, width, buttons, borderbottom) abort$/;"	f
s:create_colors	vim/.vim/plugged/iceberg.vim/src/iceberg.vim	/^function! s:create_colors(palette) abort$/;"	f
s:create_context	vim/.vim/plugged/iceberg.vim/src/iceberg.vim	/^function! s:create_context() abort$/;"	f
s:create_far_params	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! s:create_far_params() abort$/;"	f
s:create_highlight	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^	function! s:create_highlight(color, is_bright)$/;"	f
s:create_links	vim/.vim/plugged/iceberg.vim/src/iceberg.vim	/^function! s:create_links() abort$/;"	f
s:create_matches	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^function! s:create_matches()$/;"	f
s:create_popup	vim/.vim/plugged/fzf/plugin/fzf.vim	/^  function s:create_popup(hl, opts) abort$/;"	f
s:create_popup	vim/.vim/plugged/fzf/plugin/fzf.vim	/^  function! s:create_popup(hl, opts) abort$/;"	f
s:create_repl_params	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! s:create_repl_params() abort$/;"	f
s:create_syn_match	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^function! s:create_syn_match()$/;"	f
s:create_undo_params	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! s:create_undo_params() abort$/;"	f
s:create_win_params	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! s:create_win_params() abort$/;"	f
s:create_xline_context	vim/.vim/plugged/iceberg.vim/src/iceberg.vim	/^function! s:create_xline_context() abort$/;"	f
s:credentials	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! s:credentials() abort$/;"	f
s:csi	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:csi(color, fg)$/;"	f
s:cubergb	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^	let s:cubergb = [ 0x00, 0x5F, 0x87, 0xAF, 0xD7, 0xFF ]$/;"	v
s:cuicolor	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:cuicolor = {$/;"	v
s:cuicolors	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:cuicolors = {$/;"	v
s:cuiindex	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let s:cuiindex = 0$/;"	v
s:cuiindex	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let s:cuiindex = 1$/;"	v
s:cuiindex	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let s:cuiindex = 2$/;"	v
s:curl_arguments	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! s:curl_arguments(path, ...) abort$/;"	f
s:current	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^function! s:current()$/;"	f
s:current_dir	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^let s:current_dir = expand('%:p:h')$/;"	v
s:current_hunk	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:current_hunk() abort$/;"	f
s:current_session	vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! s:current_session() abort$/;"	f
s:current_syntax	vim/.vim/plugged/vim-graphql/after/syntax/javascript/graphql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	vim/.vim/plugged/vim-graphql/after/syntax/php/graphql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	vim/.vim/plugged/vim-graphql/after/syntax/reason/graphql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	vim/.vim/plugged/vim-graphql/after/syntax/rescript/graphql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	vim/.vim/plugged/vim-graphql/after/syntax/typescript/graphql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	vim/.vim/plugged/vim-jsx-typescript/after/syntax/typescriptreact.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	vim/.vim/plugged/vim-styled-components/after/syntax/javascript.vim	/^  let s:current_syntax=b:current_syntax$/;"	v
s:cursor_in_two_hunks	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:cursor_in_two_hunks()$/;"	f
s:cyan	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:cyan = '#3e999f'$/;"	v
s:cyan	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:cyan = '#8abeb7'$/;"	v
s:cyan	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:cyan = '#99ffff'$/;"	v
s:cyan	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:cyan = '#70c0b1'$/;"	v
s:cyan	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:cyan = '#009999'$/;"	v
s:cyan	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:cyan = s:blue$/;"	v
s:cyan	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:cyan = s:blue$/;"	v
s:cyan	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:cyan = s:blue$/;"	v
s:cyan	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:cyan = [ '#8fbfdc', 110 ]$/;"	v
s:cyan	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:cyan = [ '#66d9ef', 81 ]$/;"	v
s:cyan	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:cyan      = ['#3fc5b7', 6]$/;"	v
s:cyan	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:cyan      = ['#41c7b9', 6]$/;"	v
s:cyan	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:cyan      = ['#009c8f', 6]$/;"	v
s:cyan	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:cyan      = ['#00ad9c', 6]$/;"	v
s:cyan	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:cyan = [ '#87d7d7', 23 ]$/;"	v
s:cyan	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:cyan = [ '#2aa198', s:cuicolors.cyan[s:cuiindex] ]$/;"	v
s:cyan	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:cyan = [ '#0aaeb3', 6 ]$/;"	v
s:cyan	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:cyan = s:blue$/;"	v
s:darkGray	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:darkGray = [ '#45474f' , 238 ]$/;"	v
s:darker_grey	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:darker_grey  = [ '#262626', 235 ]$/;"	v
s:debug	vim/.vim/plugged/far.vim/autoload/far/tools.vim	/^let s:debug = exists('g:far#debug')? g:far#debug : 0$/;"	v
s:default_action	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:default_action = {$/;"	v
s:default_action	vim/.vim/plugged/fzf/plugin/fzf.vim	/^let s:default_action = {$/;"	v
s:default_layout	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:default_layout()$/;"	f
s:default_mapping	vim/.vim/plugged/far.vim/autoload/far.vim	/^let s:default_mapping = {$/;"	v
s:default_normal_maps	vim/.vim/plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:default_normal_maps = {'!':1, '@':1, '=':1, 'q':1, 'r':1, 't':1, 'T':1, 'y':1, '[':1, ']':/;"	v
s:default_prompt_mapping	vim/.vim/plugged/far.vim/autoload/far.vim	/^let s:default_prompt_mapping={$/;"	v
s:default_visual_maps	vim/.vim/plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:default_visual_maps = {'i':1, 'a':1, 'f':1, 'F':1, 't':1, 'T':1}$/;"	v
s:defaults	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:defaults()$/;"	f
s:define_commands	vim/.vim/autoload/plug.vim	/^function! s:define_commands()$/;"	f
s:define_sign_line_highlights	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:define_sign_line_highlights() abort$/;"	f
s:define_sign_linenr_highlights	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:define_sign_linenr_highlights() abort$/;"	f
s:define_sign_text	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:define_sign_text() abort$/;"	f
s:defs	vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^function! s:defs(commands)$/;"	f
s:delete	vim/.vim/autoload/plug.vim	/^function! s:delete(range, force)$/;"	f
s:delete_op	vim/.vim/autoload/plug.vim	/^function! s:delete_op(type, ...)$/;"	f
s:detect_bad_input	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:detect_bad_input()$/;"	f
s:did_check_exe	vim/.vim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:did_check_exe = 0$/;"	v
s:diff	vim/.vim/autoload/plug.vim	/^function! s:diff()$/;"	f
s:diff	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! s:diff(rline, aline, rlinenr, alinenr, rprefix, aprefix, regions, whole_line)$/;"	f
s:diff_restore	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_restore() abort$/;"	f
s:diff_window_count	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_window_count() abort$/;"	f
s:diffoff	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diffoff() abort$/;"	f
s:diffoff_all	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diffoff_all(dir) abort$/;"	f
s:diffthis	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:diffthis() abort$/;"	f
s:dim_0	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:dim_0     = ['#777777', 7]$/;"	v
s:dim_0	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:dim_0     = ['#72898f', 7]$/;"	v
s:dim_0	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:dim_0     = ['#909995', 7]$/;"	v
s:dim_0	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:dim_0     = ['#878787', 7]$/;"	v
s:dir	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:dir(bufnr) abort$/;"	f
s:dir_for_worktree	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^let s:dir_for_worktree = {}$/;"	v
s:dirpath	vim/.vim/autoload/plug.vim	/^  function! s:dirpath(path)$/;"	f
s:dirty_tree	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:dirty_tree() abort$/;"	f
s:disable_colors	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:disable_colors = []$/;"	v
s:display_error	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:display_error()$/;"	f
s:do	vim/.vim/autoload/plug.vim	/^function! s:do(pull, force, todo)$/;"	f
s:doautocmd	vim/.vim/autoload/plug.vim	/^function! s:doautocmd(...)$/;"	f
s:dobufread	vim/.vim/autoload/plug.vim	/^function! s:dobufread(names)$/;"	f
s:done	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^  let s:done += 1$/;"	v
s:done	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^let s:done = 0$/;"	v
s:done	vim/.vim/plugged/vim-rooter/test/runner.vim	/^  let s:done += 1$/;"	v
s:done	vim/.vim/plugged/vim-rooter/test/runner.vim	/^let s:done = 0$/;"	v
s:dopopd	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:dopopd()$/;"	f
s:dos_shell	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:dos_shell()$/;"	f
s:dot	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! s:dot()$/;"	f
s:dot	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^  function! s:dot() abort$/;"	f
s:dump_bytes	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! s:dump_bytes(text)$/;"	f
s:dump_chars	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! s:dump_chars(text)$/;"	f
s:echo_signature	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! s:echo_signature(parts)$/;"	f
s:edit_jobs	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:edit_jobs = {}$/;"	v
s:editorconfig_core_mode	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let s:editorconfig_core_mode = ''$/;"	v
s:editorconfig_core_mode	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let s:editorconfig_core_mode = g:EditorConfig_core_mode$/;"	v
s:editorconfig_exec_path	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let s:editorconfig_exec_path = ''$/;"	v
s:editorconfig_exec_path	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^    let s:editorconfig_exec_path = g:EditorConfig_exec_path$/;"	v
s:empty_border	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:empty_border(border) abort$/;"	f
s:enable_foldexpr	vim/.vim/plugged/vim-vue-plugin/ftplugin/vue/fold.vim	/^let s:enable_foldexpr = s:config.foldexpr$/;"	v
s:enable_staging_from_hunk_preview_window	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:enable_staging_from_hunk_preview_window()$/;"	f
s:enc_to_cp	vim/.vim/plugged/fzf/plugin/fzf.vim	/^  function! s:enc_to_cp(str)$/;"	f
s:encode_mapping	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:encode_mapping(mapping) abort$/;"	f
s:end_latency_measure	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:end_latency_measure()$/;"	f
s:err	vim/.vim/autoload/plug.vim	/^function! s:err(msg)$/;"	f
s:err_remain_text	vim/.vim/plugged/coc.nvim/autoload/coc/task.vim	/^let s:err_remain_text = {}$/;"	v
s:error	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:error(msg)$/;"	f
s:error	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:error = '#5f0000'$/;"	v
s:error	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:error = '#ffafdf'$/;"	v
s:error_sign	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^let s:error_sign = get(g:, 'coc_status_error_sign', has('mac') ? '❌ ' : 'E')$/;"	v
s:errored	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^      let s:errored = 0$/;"	v
s:errored	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^let s:errored = 0$/;"	v
s:errored	vim/.vim/plugged/vim-rooter/test/runner.vim	/^      let s:errored = 0$/;"	v
s:errored	vim/.vim/plugged/vim-rooter/test/runner.vim	/^let s:errored = 0$/;"	v
s:errors	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^      let s:errors += 1$/;"	v
s:errors	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^  let s:errors += 1$/;"	v
s:errors	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^let s:errors = 0$/;"	v
s:errors	vim/.vim/plugged/vim-rooter/test/runner.vim	/^      let s:errors += 1$/;"	v
s:errors	vim/.vim/plugged/vim-rooter/test/runner.vim	/^  let s:errors += 1$/;"	v
s:errors	vim/.vim/plugged/vim-rooter/test/runner.vim	/^let s:errors = 0$/;"	v
s:esc	vim/.vim/autoload/plug.vim	/^function! s:esc(path)$/;"	f
s:escape	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:escape(path)$/;"	f
s:escape	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:escape(path)$/;"	f
s:escrtp	vim/.vim/autoload/plug.vim	/^function! s:escrtp(path)$/;"	f
s:eval	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:eval(dict, key, arg)$/;"	f
s:evaluate_expand	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^function! s:evaluate_expand(component) abort$/;"	f
s:evaluate_opts	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:evaluate_opts(options)$/;"	f
s:excmds	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:excmds()$/;"	f
s:exe	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^let s:exe=[]$/;"	v
s:exec_paths	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:exec_paths = {}$/;"	v
s:executable	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:executable(binary) abort$/;"	f
s:executables	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:executables = {}$/;"	v
s:execute	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:execute(cmd)$/;"	f
s:execute	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:execute(dict, command, use_height, temps) abort$/;"	f
s:execute_term	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:execute_term(dict, command, temps) abort$/;"	f
s:execute_tmux	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:execute_tmux(dict, command, temps) abort$/;"	f
s:exists_file	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:exists_file(bufnr) abort$/;"	f
s:exit	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:exit()$/;"	f
s:exit_handler	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:exit_handler(code, command, ...)$/;"	f
s:exit_visual_mode	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:exit_visual_mode()$/;"	f
s:expand	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^function! s:expand(components) abort$/;"	f
s:expand	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:expand(...)$/;"	f
s:expand	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:expand = '\\%(\\(' . s:var . '\\)\\(' . s:flag . '*\\)\\(:S\\)\\=\\)'$/;"	v
s:extend	vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:extend(base, extra)$/;"	f
s:extend_opts	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:extend_opts(dict, eopts, prepend)$/;"	f
s:extract_name	vim/.vim/autoload/plug.vim	/^function! s:extract_name(str, prefix, suffix)$/;"	f
s:fail	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^      let s:fail += 1$/;"	v
s:fail	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^let s:fail = 0$/;"	v
s:fail	vim/.vim/plugged/vim-rooter/test/runner.vim	/^      let s:fail += 1$/;"	v
s:fail	vim/.vim/plugged/vim-rooter/test/runner.vim	/^let s:fail = 0$/;"	v
s:far_buffer_name	vim/.vim/plugged/far.vim/autoload/far.vim	/^let s:far_buffer_name = 'FAR %d'$/;"	v
s:far_params_meta	vim/.vim/plugged/far.vim/autoload/far.vim	/^let s:far_params_meta = {$/;"	v
s:far_params_meta_vimgrep	vim/.vim/plugged/far.vim/autoload/far.vim	/^let s:far_params_meta_vimgrep = {$/;"	v
s:far_preview_buffer_name	vim/.vim/plugged/far.vim/autoload/far.vim	/^let s:far_preview_buffer_name = 'Preview'$/;"	v
s:far_prompt_escape	vim/.vim/plugged/far.vim/autoload/far.vim	/^let s:far_prompt_escape = "\\<c-o>"$/;"	v
s:farvim_dir	vim/.vim/plugged/far.vim/autoload/far.vim	/^let s:farvim_dir = resolve(expand('<sfile>:p:h:h'))$/;"	v
s:feedkeys	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:feedkeys(keys)$/;"	f
s:fexists	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:fexists(file)$/;"	f
s:fg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:fg     = '#d5dbe5'$/;"	v
s:fg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:fg     = '#eeffff'$/;"	v
s:fg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:fg    = [ '#494b53', 238 ]$/;"	v
s:fg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:fg    = [ '#abb2bf', 145 ]$/;"	v
s:file_commit_pattern	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:file_commit_pattern = s:file_pattern . '\\|^\\%(\\l\\{3,\\} \\)\\=[0-9a-f]\\{4,\\} '$/;"	v
s:file_options	vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_options(prefix)$/;"	f
s:file_pattern	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:file_pattern = '^[A-Z?] .\\|^diff --'$/;"	v
s:file_source	vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_source(prefix)$/;"	f
s:file_split_prefix	vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_split_prefix(prefix)$/;"	f
s:filename	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:filename(bufnr) abort$/;"	f
s:filetype_map	vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^let s:filetype_map = {$/;"	v
s:fill	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! s:fill(cmd)$/;"	f
s:fill_quickfix	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:fill_quickfix(list, ...)$/;"	f
s:filter	vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! s:filter(list, id) abort$/;"	f
s:find_current_signs	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:find_current_signs(bufnr) abort$/;"	f
s:find_matches	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! s:find_matches(items, key) abort$/;"	f
s:find_name	vim/.vim/autoload/plug.vim	/^function! s:find_name(lnum)$/;"	f
s:find_next	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:find_next(text)$/;"	f
s:find_open_window	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:find_open_window(b)$/;"	f
s:find_parallel_windows	vim/.vim/plugged/golden-ratio/plugin/golden_ratio.vim	/^function! s:find_parallel_windows(current_window)$/;"	f
s:find_win_params_meta	vim/.vim/plugged/far.vim/autoload/far.vim	/^let s:find_win_params_meta = copy(s:win_params_meta)$/;"	v
s:finish	vim/.vim/autoload/plug.vim	/^function! s:finish(pull)$/;"	f
s:finish_bindings	vim/.vim/autoload/plug.vim	/^function! s:finish_bindings()$/;"	f
s:fire_pre_triggers	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:fire_pre_triggers()$/;"	f
s:first_line	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:first_line(lines)$/;"	f
s:first_sign_id	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:first_sign_id = 3000$/;"	v
s:fix_file_references	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:fix_file_references(filepath, hunk_diff)$/;"	f
s:flag	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:flag = '\\%(:[p8~.htre]\\|:g\\=s\\(.\\).\\{-\\}\\1.\\{-\\}\\1\\)'$/;"	v
s:float_supported	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^let s:float_supported = exists('*nvim_open_win') || has('patch-8.1.1719')$/;"	v
s:flush_exe	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^function! s:flush_exe()$/;"	f
s:fmt_excmd	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:fmt_excmd = '   '.s:blue('%-38s', 'Statement').'%s'$/;"	v
s:fname_prefix	vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:fname_prefix(str)$/;"	f
s:fnameescape	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
s:fnameescape	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:fnameescape = " \\t\\n*?[{`$\\\\%#'\\"|!<"$/;"	v
s:focus_was_lost	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let s:focus_was_lost = 0$/;"	v
s:folded	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! s:folded()$/;"	f
s:foreground	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:foreground = '#d0d0d0'$/;"	v
s:foreground	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:foreground = '#4d4d4c'$/;"	v
s:format_cmd	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_cmd(line)$/;"	f
s:format_excmd	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_excmd(ex)$/;"	f
s:format_for_log	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:format_for_log(data) abort$/;"	f
s:format_git_log	vim/.vim/autoload/plug.vim	/^function! s:format_git_log(line)$/;"	f
s:format_mark	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_mark(line)$/;"	f
s:format_message	vim/.vim/autoload/plug.vim	/^function! s:format_message(bullet, name, message)$/;"	f
s:format_win	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_win(tab, win, buf)$/;"	f
s:from_mode	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:from_mode = ''$/;"	v
s:fuchsia	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:fuchsia = [ '#ff00ff', 13 ]$/;"	v
s:func	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^function! s:func(name) abort$/;"	f
s:funcs	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^let s:funcs = {}$/;"	v
s:funcs.buf_add_highlight	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_add_highlight(bufnr, srcId, hlGroup, line, colStart, colEnd) abort$/;"	f
s:funcs.buf_attach	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_attach(...)$/;"	f
s:funcs.buf_clear_namespace	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_clear_namespace(bufnr, srcId, startLine, endLine) abort$/;"	f
s:funcs.buf_del_var	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_del_var(bufnr, name)$/;"	f
s:funcs.buf_detach	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_detach()$/;"	f
s:funcs.buf_get_changedtick	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_changedtick(bufnr)$/;"	f
s:funcs.buf_get_lines	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_lines(bufnr, start, end, strict) abort$/;"	f
s:funcs.buf_get_mark	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_mark(bufnr, name)$/;"	f
s:funcs.buf_get_name	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_name(bufnr)$/;"	f
s:funcs.buf_get_option	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_option(bufnr, name)$/;"	f
s:funcs.buf_get_var	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_var(bufnr, name)$/;"	f
s:funcs.buf_is_valid	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_is_valid(bufnr)$/;"	f
s:funcs.buf_line_count	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_line_count(bufnr) abort$/;"	f
s:funcs.buf_set_lines	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_set_lines(bufnr, start, end, strict, ...) abort$/;"	f
s:funcs.buf_set_name	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_set_name(bufnr, name) abort$/;"	f
s:funcs.buf_set_option	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_set_option(bufnr, name, val)$/;"	f
s:funcs.buf_set_var	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_set_var(bufnr, name, val)$/;"	f
s:funcs.call_atomic	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.call_atomic(calls)$/;"	f
s:funcs.call_dict_function	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.call_dict_function(dict, method, args) abort$/;"	f
s:funcs.call_function	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.call_function(method, args) abort$/;"	f
s:funcs.command	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.command(command) abort$/;"	f
s:funcs.command_output	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.command_output(cmd)$/;"	f
s:funcs.create_namespace	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.create_namespace(name) abort$/;"	f
s:funcs.del_current_line	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.del_current_line(line)$/;"	f
s:funcs.del_var	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.del_var(name) abort$/;"	f
s:funcs.err_write	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.err_write(str)$/;"	f
s:funcs.err_writeln	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.err_writeln(str)$/;"	f
s:funcs.eval	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.eval(expr) abort$/;"	f
s:funcs.feedkeys	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.feedkeys(keys, mode, escape_csi)$/;"	f
s:funcs.get_api_info	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_api_info()$/;"	f
s:funcs.get_current_buf	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_current_buf()$/;"	f
s:funcs.get_current_line	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_current_line()$/;"	f
s:funcs.get_current_tabpage	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_current_tabpage()$/;"	f
s:funcs.get_current_win	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_current_win()$/;"	f
s:funcs.get_mode	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_mode()$/;"	f
s:funcs.get_option	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_option(name)$/;"	f
s:funcs.get_var	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_var(var)$/;"	f
s:funcs.get_vvar	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_vvar(var)$/;"	f
s:funcs.list_bufs	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.list_bufs()$/;"	f
s:funcs.list_runtime_paths	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.list_runtime_paths()$/;"	f
s:funcs.list_tabpages	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.list_tabpages()$/;"	f
s:funcs.list_wins	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.list_wins() abort$/;"	f
s:funcs.out_write	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.out_write(str)$/;"	f
s:funcs.set_client_info	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_client_info(...) abort$/;"	f
s:funcs.set_current_buf	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_buf(bufnr) abort$/;"	f
s:funcs.set_current_dir	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_dir(dir) abort$/;"	f
s:funcs.set_current_line	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_line(line)$/;"	f
s:funcs.set_current_tabpage	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_tabpage(tabnr) abort$/;"	f
s:funcs.set_current_win	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_win(win_id) abort$/;"	f
s:funcs.set_option	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_option(name, value) abort$/;"	f
s:funcs.set_var	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_var(name, value) abort$/;"	f
s:funcs.strwidth	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.strwidth(str)$/;"	f
s:funcs.subscribe	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.subscribe(...) abort$/;"	f
s:funcs.tabpage_del_var	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_del_var(tabnr, name)$/;"	f
s:funcs.tabpage_get_number	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_get_number(id)$/;"	f
s:funcs.tabpage_get_var	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_get_var(tabnr, name)$/;"	f
s:funcs.tabpage_get_win	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_get_win(tabnr)$/;"	f
s:funcs.tabpage_is_valid	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_is_valid(tabnr)$/;"	f
s:funcs.tabpage_list_wins	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_list_wins(tabnr)$/;"	f
s:funcs.tabpage_set_var	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_set_var(tabnr, name, value)$/;"	f
s:funcs.unsubscribe	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.unsubscribe(...) abort$/;"	f
s:funcs.win_close	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_close(win_id, ...) abort$/;"	f
s:funcs.win_del_var	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_del_var(win_id, name) abort$/;"	f
s:funcs.win_get_buf	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_buf(winid)$/;"	f
s:funcs.win_get_cursor	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_cursor(win_id) abort$/;"	f
s:funcs.win_get_height	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_height(win_id) abort$/;"	f
s:funcs.win_get_number	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_number(win_id) abort$/;"	f
s:funcs.win_get_option	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_option(win_id, name) abort$/;"	f
s:funcs.win_get_position	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_position(win_id) abort$/;"	f
s:funcs.win_get_tabpage	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_tabpage(win_id) abort$/;"	f
s:funcs.win_get_var	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_var(win_id, name) abort$/;"	f
s:funcs.win_get_width	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_width(win_id) abort$/;"	f
s:funcs.win_is_valid	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_is_valid(win_id) abort$/;"	f
s:funcs.win_set_buf	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_buf(win_id, buf_id) abort$/;"	f
s:funcs.win_set_cursor	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_cursor(win_id, pos) abort$/;"	f
s:funcs.win_set_height	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_height(win_id, height) abort$/;"	f
s:funcs.win_set_option	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_option(win_id, name, value) abort$/;"	f
s:funcs.win_set_var	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_var(win_id, name, value) abort$/;"	f
s:funcs.win_set_width	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_width(win_id, width) abort$/;"	f
s:function	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! s:function(name)$/;"	f
s:function	vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^  function! s:function(name)$/;"	f
s:function	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:function(name) abort$/;"	f
s:fzf	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:fzf(name, opts, extra)$/;"	f
s:fzf_call	vim/.vim/plugged/fzf/plugin/fzf.vim	/^  function! s:fzf_call(fn, ...)$/;"	f
s:fzf_expand	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:fzf_expand(fmt)$/;"	f
s:fzf_fnamemodify	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:fzf_fnamemodify(fname, mods)$/;"	f
s:fzf_getcwd	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:fzf_getcwd()$/;"	f
s:fzf_go	vim/.vim/plugged/fzf/plugin/fzf.vim	/^let s:fzf_go = s:base_dir.'\/bin\/fzf'$/;"	v
s:fzf_restore_colors	vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^  function! s:fzf_restore_colors()$/;"	f
s:fzf_tempname	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:fzf_tempname()$/;"	f
s:fzf_tmux	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:fzf_tmux(dict)$/;"	f
s:fzf_tmux	vim/.vim/plugged/fzf/plugin/fzf.vim	/^let s:fzf_tmux = s:base_dir.'\/bin\/fzf-tmux'$/;"	v
s:fzf_vim_term	vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^  function! s:fzf_vim_term()$/;"	f
s:gap_between_regions	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^let s:gap_between_regions = 5$/;"	v
s:gbrowse	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! s:gbrowse()$/;"	f
s:gen_filter_keys	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:gen_filter_keys(line) abort$/;"	f
s:generate_wildignore_options	vim/.vim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:generate_wildignore_options() abort$/;"	f
s:get_background_colors	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:get_background_colors(group) abort$/;"	f
s:get_buf_far_ctx	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! s:get_buf_far_ctx(bufnr) abort "{{{$/;"	f
s:get_by_commiter_date	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:get_by_commiter_date(type) abort$/;"	f
s:get_char	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:get_char(...)$/;"	f
s:get_color	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:get_color(item, fallback) abort$/;"	f
s:get_color	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:get_color(attr, ...)$/;"	f
s:get_color	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:get_color(attr, ...)$/;"	f
s:get_contexts_under_cursor	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! s:get_contexts_under_cursor() abort "{{{$/;"	f
s:get_ctags_executable	vim/.vim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:get_ctags_executable(proj_dir) abort$/;"	f
s:get_current_branch	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:get_current_branch() abort$/;"	f
s:get_cursorline	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:get_cursorline(topline, lines, scrolloff, width, height) abort$/;"	f
s:get_cursorline	vim/.vim/plugged/vim-translator/autoload/translator/window/float.vim	/^function! s:get_cursorline(topline, lines, scrolloff, width, height) abort$/;"	f
s:get_filenames	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/handler.vim	/^function! s:get_filenames(path, config_filename)$/;"	f
s:get_foreground_colors	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:get_foreground_colors(group) abort$/;"	f
s:get_foreground_fallback_colors	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:get_foreground_fallback_colors(type)$/;"	f
s:get_git_mode	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:get_git_mode() abort$/;"	f
s:get_git_root	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:get_git_root()$/;"	f
s:get_height	vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! s:get_height(lines, config) abort$/;"	f
s:get_hl	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:get_hl(group, what, mode) abort$/;"	f
s:get_merged_branches	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:get_merged_branches() abort$/;"	f
s:get_options	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:get_options(winid) abort$/;"	f
s:get_options	vim/.vim/plugged/vim-translator/autoload/translator/window/float.vim	/^function! s:get_options(winid) abort$/;"	f
s:get_tabnr	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:get_tabnr(winid) abort$/;"	f
s:get_text	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:get_text(region)$/;"	f
s:get_time_in_ms	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:get_time_in_ms()$/;"	f
s:get_topline	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:get_topline(topline, lines, forward, height, width) abort$/;"	f
s:get_topline	vim/.vim/plugged/vim-translator/autoload/translator/window/float.vim	/^function! s:get_topline(topline, lines, forward, height, width) abort$/;"	f
s:get_uniq_branch_names_from_reflog	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:get_uniq_branch_names_from_reflog() abort$/;"	f
s:get_version	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function s:get_version(bin)$/;"	f
s:get_visual_region	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:get_visual_region(pos)$/;"	f
s:get_win_opts	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:get_win_opts(winid) abort$/;"	f
s:getpos	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:getpos()$/;"	f
s:git_cmd	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:git_cmd(cmd, bg) abort$/;"	f
s:git_cmd_run	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let s:git_cmd_run = 0$/;"	v
s:git_diff	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:git_diff(...)$/;"	f
s:git_diff_staged	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:git_diff_staged(...)$/;"	f
s:git_dir	vim/.vim/autoload/plug.vim	/^function! s:git_dir(dir) abort$/;"	f
s:git_local_branch	vim/.vim/autoload/plug.vim	/^function! s:git_local_branch(dir) abort$/;"	f
s:git_origin_branch	vim/.vim/autoload/plug.vim	/^function! s:git_origin_branch(spec)$/;"	f
s:git_origin_url	vim/.vim/autoload/plug.vim	/^function! s:git_origin_url(dir) abort$/;"	f
s:git_revision	vim/.vim/autoload/plug.vim	/^function! s:git_revision(dir) abort$/;"	f
s:git_supports_command_line_config_override	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:git_supports_command_line_config_override() abort$/;"	f
s:git_validate	vim/.vim/autoload/plug.vim	/^function! s:git_validate(spec, check_branch)$/;"	f
s:git_version	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:git_version()$/;"	f
s:git_version_requirement	vim/.vim/autoload/plug.vim	/^function! s:git_version_requirement(...)$/;"	f
s:git_versions	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:git_versions = {}$/;"	v
s:gitize	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:gitize(cmd) abort$/;"	f
s:given_range	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:given_range(line1, line2)$/;"	f
s:gl	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! s:gl(buf, visual)$/;"	f
s:gld	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! s:gld() range$/;"	f
s:glob	vim/.vim/autoload/plug.vim	/^function! s:glob(from, pattern)$/;"	f
s:glob_dir	vim/.vim/autoload/plug.vim	/^function! s:glob_dir(path)$/;"	f
s:global	vim/.vim/plugged/vim-vue-plugin/syntax/patch/vue-keyword.vim	/^let s:global = 'createApp h defineComponent defineAsyncComponent defineCustomElement resolveComp/;"	v
s:globsubs	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:globsubs = {$/;"	v
s:go	vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^function! s:go(...) abort$/;"	f
s:gold	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:gold = [ '#f0d50c', '220' ]$/;"	v
s:golden_ratio_height	vim/.vim/plugged/golden-ratio/plugin/golden_ratio.vim	/^function! s:golden_ratio_height()$/;"	f
s:golden_ratio_width	vim/.vim/plugged/golden-ratio/plugin/golden_ratio.vim	/^function! s:golden_ratio_width()$/;"	f
s:goto_original_window	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:goto_original_window()$/;"	f
s:gr_auto	vim/.vim/plugged/golden-ratio/plugin/golden_ratio.vim	/^  let s:gr_auto = 1$/;"	v
s:gr_auto	vim/.vim/plugged/golden-ratio/plugin/golden_ratio.vim	/^  let s:gr_auto = g:golden_ratio_autocommand$/;"	v
s:gray	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:gray = [ '#808080', 8]$/;"	v
s:gray	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:gray = [ '#686b78' , 242 ]$/;"	v
s:gray	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:gray = [ '#323232', 236 ]$/;"	v
s:gray	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:gray = [ '#808080', 244 ]$/;"	v
s:gray	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:gray = [ '#262626', '235' ]$/;"	v
s:gray1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray1  = '#2c393f'$/;"	v
s:gray1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray1  = '#37474f'$/;"	v
s:gray1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray1  = '#2e3c43'$/;"	v
s:gray1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray1  = '#314549'$/;"	v
s:gray1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray1 = [ '#494b53', 238 ]$/;"	v
s:gray1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray1 = [ '#5c6370', 241 ]$/;"	v
s:gray2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray2  = '#2c393f'$/;"	v
s:gray2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray2  = '#d5dbe5'$/;"	v
s:gray2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray2  = '#2E3C43'$/;"	v
s:gray2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray2  = '#eeffff'$/;"	v
s:gray2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray2 = [ '#2c323d', 235 ]$/;"	v
s:gray2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray2 = [ '#f0f0f0', 255 ]$/;"	v
s:gray2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:gray2 = [ '#3a3a3a', '237' ]$/;"	v
s:gray3	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray3  = '#37474f'$/;"	v
s:gray3	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:gray3  = '#707880'$/;"	v
s:gray3	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray3  = '#314549'$/;"	v
s:gray3	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:gray3  = '#546e7a'$/;"	v
s:gray3	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray3 = [ '#3e4452', 240 ]$/;"	v
s:gray3	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:gray3 = [ '#d0d0d0', 250 ]$/;"	v
s:gray3	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:gray3 = [ '#4e4e4e', '239' ]$/;"	v
s:gray4	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:gray4 = [ '#626262', '241' ]$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:green = [ '#008000', 2 ]$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:green = [ '#78bd65' , 41 ]$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:green = '#008700'$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:green = '#008700'$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:green = '#718c00'$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:green = '#b5bd68'$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:green = '#d1f1a9'$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:green = '#b9ca4a'$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:green = '#99cc99'$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:green        = [ '#5f875f',  65 ]$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:green = '#b8cc52'$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:green = '#86B300'$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:green = '#bbe67e'$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:green = [ '#629755', 71 ] $/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:green = [ '#99ad6a', 107 ]$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:green  = '#8bd649'$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:green  = '#c3e88d'$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:green = [ '#a6e22e', 118 ]$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:green = [ '#98c379', 35 ]$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:green  = [ '#98c379', 76 ]$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:green     = ['#70b433', 2]$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:green     = ['#75b938', 2]$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:green     = ['#489100', 2]$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:green     = ['#1d9700', 2]$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:green = [ '#87af87', 108 ]$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:green = [ '#57ba37', '71' ]$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:green = [ '#859900', s:cuicolors.green[s:cuiindex] ]$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:green = [ '#519f50', 2 ]$/;"	v
s:green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:green = [ '#95e454', 119 ]$/;"	v
s:grep_combine_flags	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:grep_combine_flags = '[aiIrhHEGPFnlLzocpWq]\\{-\\}'$/;"	v
s:grep_version	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:grep_version()$/;"	f
s:grey_colour	vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:grey_colour(n)$/;"	f
s:grey_level	vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:grey_level(n)$/;"	f
s:grey_number	vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:grey_number(x)$/;"	f
s:gsub	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
s:gsub	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
s:gui	vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:gui = has('gui_running') || has('nvim')$/;"	v
s:guicolor	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:guicolor = {$/;"	v
s:gv	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! s:gv(bang, visual, line1, line2, args) abort$/;"	f
s:gvcomplete	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! s:gvcomplete(a, l, p) abort$/;"	f
s:handle_double_hunk	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:handle_double_hunk(modified_lines)$/;"	f
s:handle_special_key	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:handle_special_key(key, mode)$/;"	f
s:handle_visual_IA_to_insert	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:handle_visual_IA_to_insert()$/;"	f
s:handle_visual_IA_to_normal	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:handle_visual_IA_to_normal()$/;"	f
s:has	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^function! s:has(dir, identifier)$/;"	f
s:has_any	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:has_any(dict, keys)$/;"	f
s:has_float	vim/.vim/plugged/vim-translator/autoload/translator/window.vim	/^let s:has_float = has('nvim') && exists('*nvim_win_set_config')$/;"	v
s:has_fresh_changes	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:has_fresh_changes(bufnr) abort$/;"	f
s:has_popup	vim/.vim/plugged/vim-translator/autoload/translator/window.vim	/^let s:has_popup = has('textprop') && has('patch-8.2.0286')$/;"	v
s:hash_colors	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:hash_colors = {}$/;"	v
s:hash_match	vim/.vim/autoload/plug.vim	/^function! s:hash_match(a, b)$/;"	f
s:head_cache	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:head_cache = {}$/;"	v
s:helptag_sink	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:helptag_sink(line)$/;"	f
s:hex	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^	let s:hex[ printf( '%02x', i ) ] = i$/;"	v
s:hex	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^let s:hex={}$/;"	v
s:hi	vim/.vim/plugged/lightline.vim/test/highlight.vim	/^function! s:hi(name)$/;"	f
s:hi	vim/.vim/plugged/lightline.vim/test/link.vim	/^function! s:hi(name)$/;"	f
s:hi_group_cursor	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:hi_group_cursor = 'multiple_cursors_cursor'$/;"	v
s:hi_group_visual	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:hi_group_visual = 'multiple_cursors_visual'$/;"	v
s:highlight_cursor	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:highlight_cursor(pos)$/;"	f
s:highlight_keys	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:highlight_keys(str)$/;"	f
s:highlight_name_for_change	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:highlight_name_for_change(text) abort$/;"	f
s:highlight_region	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:highlight_region(region)$/;"	f
s:history	vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^function! s:history(arg, extra, bang)$/;"	f
s:history_file	vim/.vim/plugged/vim-translator/autoload/translator/history.vim	/^let s:history_file = expand('<sfile>:p:h') . '\/..\/..\/translation_history.data'$/;"	v
s:history_sink	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:history_sink(type, lines)$/;"	f
s:history_source	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:history_source(type)$/;"	f
s:hook_list	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig.vim	/^let s:hook_list = []$/;"	v
s:hsl2color	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^function! s:hsl2color(h,s,l)$/;"	f
s:hunk_op	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:hunk_op(op, ...)$/;"	f
s:hunk_re	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:hunk_re = '^@@ -\\(\\d\\+\\),\\?\\(\\d*\\) +\\(\\d\\+\\),\\?\\(\\d*\\) @@'$/;"	v
s:icon_set	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^  let s:icon_set = ['*', '=', '+', '-', '~', '%', 'x']$/;"	v
s:icon_set	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^  let s:icon_set = ['*', '✓', '↑', '↓', '↕', '∅', '✗']$/;"	v
s:icon_set	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^  let s:icon_set = g:twiggy_icons$/;"	v
s:icons	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let s:icons = {}$/;"	v
s:icons	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let s:icons.ahead    = s:icon_set[2]$/;"	v
s:icons	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let s:icons.behind   = s:icon_set[3]$/;"	v
s:icons	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let s:icons.both     = s:icon_set[4]$/;"	v
s:icons	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let s:icons.current  = s:icon_set[0]$/;"	v
s:icons	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let s:icons.detached = s:icon_set[5]$/;"	v
s:icons	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let s:icons.tracking = s:icon_set[1]$/;"	v
s:icons	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let s:icons.unmerged = s:icon_set[6]$/;"	v
s:in_comm	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^let s:in_comm = s:skip_expr[:-14] . "'comment\\\\|doc'"$/;"	v
s:in_hunk_preview_window	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:in_hunk_preview_window()$/;"	f
s:indent	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^let s:indent = ''$/;"	v
s:indent	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^let s:indent = max(map(copy(s:tests), {_, val -> len(FriendlyName(val))}))$/;"	v
s:indent	vim/.vim/plugged/vim-vue-plugin/syntax/patch/vue-keyword.vim	/^let s:indent = s:GetIndent()$/;"	v
s:indexes	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:indexes = {}$/;"	v
s:indicator_errors	vim/.vim/plugged/vim-lightline-coc/autoload/lightline/coc.vim	/^let s:indicator_errors = get(g:, 'lightline#coc#indicator_errors', '×')$/;"	v
s:indicator_hints	vim/.vim/plugged/vim-lightline-coc/autoload/lightline/coc.vim	/^let s:indicator_hints = get(g:, 'lightline#coc#indicator_hints', '>')$/;"	v
s:indicator_info	vim/.vim/plugged/vim-lightline-coc/autoload/lightline/coc.vim	/^let s:indicator_info = get(g:, 'lightline#coc#indicator_info', '~')$/;"	v
s:indicator_ok	vim/.vim/plugged/vim-lightline-coc/autoload/lightline/coc.vim	/^let s:indicator_ok = get(g:, 'lightline#coc#indicator_ok', (s:nerdfont ? "\\uf058" : '✓'))$/;"	v
s:indicator_warnings	vim/.vim/plugged/vim-lightline-coc/autoload/lightline/coc.vim	/^let s:indicator_warnings = get(g:, 'lightline#coc#indicator_warnings', '•')$/;"	v
s:infer_properties	vim/.vim/autoload/plug.vim	/^function! s:infer_properties(name, repo)$/;"	f
s:init_line	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let s:init_line                = 0$/;"	v
s:init_settings	vim/.vim/plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^function! s:init_settings(settings)$/;"	f
s:initialized	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^let s:initialized = 0$/;"	v
s:initiate_golden_ratio	vim/.vim/plugged/golden-ratio/plugin/golden_ratio.vim	/^function! s:initiate_golden_ratio()$/;"	f
s:inject_snippet	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:inject_snippet(line)$/;"	f
s:inspect_type	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function s:inspect_type(v) abort$/;"	f
s:install	vim/.vim/autoload/plug.vim	/^function! s:install(force, names)$/;"	f
s:is	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^function! s:is(dir, identifier)$/;"	f
s:isHidden	vim/.vim/plugged/vim-lightline-coc/autoload/lightline/coc.vim	/^function! s:isHidden()$/;"	f
s:is_added	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_added(from_count, to_count) abort$/;"	f
s:is_blocking	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:is_blocking() abort$/;"	f
s:is_file_buffer	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:is_file_buffer(bufnr) abort$/;"	f
s:is_gvim	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^let s:is_gvim = get(v:, 'progname', '') ==# 'gvim'$/;"	v
s:is_local_plug	vim/.vim/autoload/plug.vim	/^  function! s:is_local_plug(repo)$/;"	f
s:is_managed	vim/.vim/autoload/plug.vim	/^function! s:is_managed(name)$/;"	f
s:is_modified	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified(from_count, to_count) abort$/;"	f
s:is_modified_and_added	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified_and_added(from_count, to_count) abort$/;"	f
s:is_modified_and_removed	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified_and_removed(from_count, to_count) abort$/;"	f
s:is_powershell	vim/.vim/autoload/plug.vim	/^function! s:is_powershell(shell)$/;"	f
s:is_preview_window_open	vim/.vim/autoload/plug.vim	/^function! s:is_preview_window_open()$/;"	f
s:is_recursion	vim/.vim/plugged/vim-styled-components/after/indent/javascript.vim	/^let s:is_recursion = 0$/;"	v
s:is_removed	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_removed(from_count, to_count) abort$/;"	f
s:is_updated	vim/.vim/autoload/plug.vim	/^function! s:is_updated(dir)$/;"	f
s:is_vim	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	vim/.vim/plugged/coc.nvim/autoload/coc/snippet.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	vim/.vim/plugged/coc.nvim/autoload/coc/task.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	vim/.vim/plugged/coc.nvim/autoload/coc/terminal.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_win	vim/.vim/autoload/plug.vim	/^let s:is_win = has('win32')$/;"	v
s:is_win	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^let s:is_win = has("win32") || has("win64")$/;"	v
s:is_win	vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:is_win = has("win32") || has("win64")$/;"	v
s:is_win	vim/.vim/plugged/coc.nvim/autoload/coc/terminal.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	vim/.vim/plugged/fzf/plugin/fzf.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:isabsolute	vim/.vim/autoload/plug.vim	/^function! s:isabsolute(dir) abort$/;"	f
s:iscontOne	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^function s:iscontOne(i,num,cont)$/;"	f
s:item_pattern	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:item_pattern = s:file_commit_pattern . '\\|^@@'$/;"	v
s:job_abort	vim/.vim/autoload/plug.vim	/^function! s:job_abort()$/;"	f
s:job_cb	vim/.vim/autoload/plug.vim	/^function! s:job_cb(fn, job, ch, data)$/;"	f
s:job_exit_cb	vim/.vim/autoload/plug.vim	/^function! s:job_exit_cb(self, data) abort$/;"	f
s:job_id	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:job_id(job)$/;"	f
s:job_out_cb	vim/.vim/autoload/plug.vim	/^function! s:job_out_cb(self, data) abort$/;"	f
s:jobs	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^let s:jobs = {}$/;"	v
s:js_keywords	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^let s:js_keywords = '^\\s*\\(break\\|case\\|catch\\|continue\\|debugger\\|default\\|delete\\|do\\/;"	v
s:jump	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:jump(t, w)$/;"	f
s:jump_to_current_branch	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:jump_to_current_branch() abort$/;"	f
s:keepcpo	vim/.vim/plugged/vim-vue-plugin/lib/indent/css.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	vim/.vim/plugged/vim-vue-plugin/lib/indent/xml.vim	/^let s:keepcpo= &cpo$/;"	v
s:key_sink	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:key_sink(line)$/;"	f
s:keyword	vim/.vim/plugged/vim-vue-plugin/syntax/patch/javascript.vim	/^let s:keyword = s:config.keyword$/;"	v
s:keyword	vim/.vim/plugged/vim-vue-plugin/syntax/patch/typescript.vim	/^let s:keyword = s:config.keyword$/;"	v
s:keywords_regexp	vim/.vim/plugged/vim-vue-plugin/syntax/patch/vue-keyword.vim	/^let s:keywords_regexp = '\\v^\\s{'.s:indent.'}(async )?<('$/;"	v
s:known_files	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^let s:known_files = []$/;"	v
s:known_projects	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^let s:known_projects = {}$/;"	v
s:label_col	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^function s:label_col()$/;"	f
s:last_branch_under_cursor	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let s:last_branch_under_cursor = {}$/;"	v
s:last_char	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:last_char()$/;"	f
s:last_non_empty_line	vim/.vim/autoload/plug.vim	/^function! s:last_non_empty_line(lines)$/;"	f
s:last_output	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let s:last_output              = []$/;"	v
s:last_time	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:last_time = reltime()$/;"	v
s:last_times	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:last_times = {}$/;"	v
s:last_wildignores	vim/.vim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:last_wildignores = ''$/;"	v
s:lastline	vim/.vim/autoload/plug.vim	/^function! s:lastline(msg)$/;"	f
s:latency_debug_file	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:latency_debug_file = ''$/;"	v
s:launcher	vim/.vim/plugged/fzf/plugin/fzf.vim	/^  let s:launcher = '%s'$/;"	v
s:launcher	vim/.vim/plugged/fzf/plugin/fzf.vim	/^  let s:launcher = function('s:xterm_launcher')$/;"	v
s:layout_keys	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:layout_keys = ['window', 'up', 'down', 'left', 'right']$/;"	v
s:layout_keys	vim/.vim/plugged/fzf/plugin/fzf.vim	/^let s:layout_keys = ['window', 'tmux', 'up', 'down', 'left', 'right']$/;"	v
s:lazy	vim/.vim/autoload/plug.vim	/^function! s:lazy(plug, opt)$/;"	f
s:lcs	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! s:lcs(s1, s2)$/;"	f
s:lightGray	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:lightGray = [ '#848794' , 245 ]$/;"	v
s:lighter_grey	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:lighter_grey = [ '#bcbcbc', 250 ]$/;"	v
s:lime	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:lime = [ '#00ff00', 10 ]$/;"	v
s:line	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^function! s:line(tabline, inactive) abort$/;"	f
s:line_adjustment_for_current_hunk	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:line_adjustment_for_current_hunk() abort$/;"	f
s:line_handler	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:line_handler(lines)$/;"	f
s:line_term	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:linechars	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:linechars(pattern) abort$/;"	f
s:lines	vim/.vim/autoload/plug.vim	/^function! s:lines(msg)$/;"	f
s:list	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! s:list(fugitive_repo, log_opts)$/;"	f
s:load	vim/.vim/plugged/lightline.vim/autoload/lightline/colortable.vim	/^function! s:load() abort$/;"	f
s:load_buffer	vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! s:load_buffer(name) abort$/;"	f
s:load_plugin	vim/.vim/autoload/plug.vim	/^function! s:load_plugin(spec)$/;"	f
s:loaded	vim/.vim/autoload/plug.vim	/^let s:loaded = get(s:, 'loaded', {})$/;"	v
s:loaded_names	vim/.vim/autoload/plug.vim	/^function! s:loaded_names()$/;"	f
s:lod	vim/.vim/autoload/plug.vim	/^function! s:lod(names, types, ...)$/;"	f
s:lod_cmd	vim/.vim/autoload/plug.vim	/^function! s:lod_cmd(cmd, bang, l1, l2, args, names)$/;"	f
s:lod_ft	vim/.vim/autoload/plug.vim	/^function! s:lod_ft(pat, names)$/;"	f
s:lod_map	vim/.vim/autoload/plug.vim	/^function! s:lod_map(map, names, with_prefix, prefix)$/;"	f
s:log	vim/.vim/autoload/plug.vim	/^function! s:log(bullet, name, lines)$/;"	f
s:log	vim/.vim/plugged/vim-translator/autoload/translator/logger.vim	/^let s:log = []$/;"	v
s:log4	vim/.vim/autoload/plug.vim	/^function! s:log4(name, msg)$/;"	f
s:log_diff_context	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:log_diff_context = '{"filename": fugitive#Find(v:val . from, a:dir), "lnum": get(offsets, /;"	v
s:log_file	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:log_file    = s:plugin_dir.'gitgutter.log'$/;"	v
s:log_opts	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! s:log_opts(fugitive_repo, bang, visual, line1, line2)$/;"	f
s:logfile	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^    let s:logfile = resolve($NODE_CLIENT_LOG_FILE)$/;"	v
s:logfile	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^    let s:logfile = tempname()$/;"	v
s:logfile	vim/.vim/plugged/far.vim/autoload/far/tools.vim	/^let s:logfile = $HOME.'\/far.vim.log'$/;"	v
s:logpos	vim/.vim/autoload/plug.vim	/^function! s:logpos(name)$/;"	f
s:looking_at	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^function s:looking_at()$/;"	f
s:lpad	vim/.vim/autoload/plug.vim	/^function! s:lpad(str, len)$/;"	f
s:mac_gui	vim/.vim/autoload/plug.vim	/^let s:mac_gui = has('gui_macvim') && has('gui_running')$/;"	v
s:magenta	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:magenta = '#8959a8'$/;"	v
s:magenta	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:magenta = '#b294bb'$/;"	v
s:magenta	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:magenta = '#ebbbff'$/;"	v
s:magenta	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:magenta = '#c397d8'$/;"	v
s:magenta	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:magenta = '#cc99cc'$/;"	v
s:magenta	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:magenta = '#ffee99'$/;"	v
s:magenta	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:magenta = '#A37ACC'$/;"	v
s:magenta	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:magenta = '#d4bfff'$/;"	v
s:magenta	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:magenta = [ '#f0a0c0', 217 ]$/;"	v
s:magenta	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:magenta   = ['#eb6eb7', 5]$/;"	v
s:magenta	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:magenta   = ['#f275be', 5]$/;"	v
s:magenta	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:magenta   = ['#ca4898', 5]$/;"	v
s:magenta	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:magenta   = ['#dd0f9d', 5]$/;"	v
s:magenta	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:magenta = [ '#df5f87', 168 ]$/;"	v
s:magenta	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:magenta = [ '#d33682', s:cuicolors.magenta[s:cuiindex] ]$/;"	v
s:magenta	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:magenta = [ '#e02c6d', 5 ]$/;"	v
s:magenta	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:magenta = [ '#f2c68a', 216 ]$/;"	v
s:main_timer	vim/.vim/plugged/vim-vue-plugin/syntax/vue.vim	/^    let s:main_timer = timer_start(1, 'VimVuePluginSyntaxMain')$/;"	v
s:manual_update_tags	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:manual_update_tags(bang) abort$/;"	f
s:map_next	vim/.vim/plugged/coc.nvim/autoload/coc/snippet.vim	/^let s:map_next = 1$/;"	v
s:mapping	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:mapping(mapping, fn, args) abort$/;"	f
s:mappings	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let s:mappings                 = {}$/;"	v
s:maps	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! s:maps()$/;"	f
s:mark_sink	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:mark_sink(lines)$/;"	f
s:maroon	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:maroon = [ '#800000', 1 ]$/;"	v
s:match	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^function s:match(dir, pattern)$/;"	f
s:match_group	vim/.vim/plugged/MatchTagAlways/autoload/MatchTagAlways.vim	/^  let s:match_group = 'MatchParen'$/;"	v
s:match_group	vim/.vim/plugged/MatchTagAlways/autoload/MatchTagAlways.vim	/^  let s:match_group = 'MatchTag'$/;"	v
s:match_option	vim/.vim/plugged/vim-vue-plugin/syntax/patch/vue-keyword.vim	/^let s:match_option = s:GetMatchOption()$/;"	v
s:matches_filename	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^function! s:matches_filename(config_filename, target_filename, glob)$/;"	f
s:matchlastpos	vim/.vim/plugged/vim-translator/autoload/translator/cmdline.vim	/^function! s:matchlastpos(expr, pat) abort$/;"	f
s:max_firstline	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:max_firstline(lines, height, width) abort$/;"	f
s:max_firstline	vim/.vim/plugged/vim-translator/autoload/translator/window/float.vim	/^function! s:max_firstline(lines, height, width) abort$/;"	f
s:me	vim/.vim/autoload/plug.vim	/^  let s:me = resolve(expand('<sfile>:p'))$/;"	v
s:medium_grey	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:medium_grey  = [ '#585858', 240 ]$/;"	v
s:merge_heads	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:merge_heads = ['MERGE_HEAD', 'REBASE_HEAD', 'CHERRY_PICK_HEAD', 'REVERT_HEAD']$/;"	v
s:merge_opts	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:merge_opts(dict, eopts)$/;"	f
s:merge_view	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:merge_view() abort$/;"	f
s:message	vim/.vim/plugged/lightline.vim/test/error.vim	/^function! s:message() abort$/;"	f
s:messages	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^let s:messages = []$/;"	v
s:messages	vim/.vim/plugged/vim-rooter/test/runner.vim	/^let s:messages = []$/;"	v
s:metargs_complete	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! s:metargs_complete(arglead, cmdline, cursorpos, params_meta) abort$/;"	f
s:min_btns_width	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:min_btns_width(buttons) abort$/;"	f
s:min_version	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:min_version = '0.23.0'$/;"	v
s:mode	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^let s:mode = ''$/;"	v
s:mode_prompt_update	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! s:mode_prompt_update()  abort "{{{$/;"	f
s:move	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! s:move(flag)$/;"	f
s:msl_exclude_regex	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^let s:msl_exclude_regex = '++'$/;"	v
s:msl_regex	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^let s:msl_regex = s:continuation_regex$/;"	v
s:name	vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:name = 'coc'$/;"	v
s:names	vim/.vim/autoload/plug.vim	/^function! s:names(...)$/;"	f
s:namespace_cache	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^let s:namespace_cache = {}$/;"	v
s:namespace_id	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^let s:namespace_id = 1$/;"	v
s:namespace_map	vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^let s:namespace_map = {}$/;"	v
s:navy	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:navy = [ '#000080', 4 ]$/;"	v
s:navy	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:navy = '#df875f'$/;"	v
s:navy	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:navy = '#005f87'$/;"	v
s:nbs	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:nbs = nr2char(0x2007)$/;"	v
s:nerdfont	vim/.vim/plugged/vim-lightline-coc/autoload/lightline/coc.vim	/^let s:nerdfont = get(g:, 'nerdfont', 0)$/;"	v
s:new_log_session	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:new_log_session = 1$/;"	v
s:new_window	vim/.vim/autoload/plug.vim	/^function! s:new_window()$/;"	f
s:next_sign_id	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:next_sign_id() abort$/;"	f
s:next_sign_id	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:next_sign_id  = s:first_sign_id$/;"	v
s:no_commits	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:no_commits() abort$/;"	f
s:nomodeline	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' :/;"	v
s:nomodeline	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' :/;"	v
s:nomodeline	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' :/;"	v
s:nomodeline	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' :/;"	v
s:none	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:none = [ 'NONE', 'NONE' ]$/;"	v
s:nord0	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord0 = ["#2E3440", "NONE"]$/;"	v
s:nord1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord1 = ["#3B4252", 0]$/;"	v
s:nord10	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord10 = ["#5E81AC", 12]$/;"	v
s:nord11	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord11 = ["#BF616A", 1]$/;"	v
s:nord12	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord12 = ["#D08770", 11]$/;"	v
s:nord13	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord13 = ["#EBCB8B", 3]$/;"	v
s:nord14	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord14 = ["#A3BE8C", 2]$/;"	v
s:nord15	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord15 = ["#B48EAD", 5]$/;"	v
s:nord2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord2 = ["#434C5E", "NONE"]$/;"	v
s:nord3	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord3 = ["#4C566A", 8]$/;"	v
s:nord4	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord4 = ["#D8DEE9", "NONE"]$/;"	v
s:nord5	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord5 = ["#E5E9F0", 7]$/;"	v
s:nord6	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord6 = ["#ECEFF4", 15]$/;"	v
s:nord7	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord7 = ["#8FBCBB", 14]$/;"	v
s:nord8	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord8 = ["#88C0D0", 6]$/;"	v
s:nord9	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:nord9 = ["#81A1C1", 4]$/;"	v
s:normalize	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^function! s:normalize(result) abort$/;"	f
s:not_git_dir	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:not_git_dir(bufnr) abort$/;"	f
s:notify	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:notify(method, args) dict$/;"	f
s:nowait	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:nowait = v:version >= 704 ? '<nowait>' : ''$/;"	v
s:nowait	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^let s:nowait = v:version >= 704 ? '<nowait>' : ''$/;"	v
s:nr	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:nr(x) abort$/;"	f
s:ns_id	vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^let s:ns_id = 1$/;"	v
s:nvim	vim/.vim/autoload/plug.vim	/^let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait') && !s:is_win)$/;"	v
s:nvim_cb	vim/.vim/autoload/plug.vim	/^function! s:nvim_cb(job_id, data, event) dict abort$/;"	f
s:nvim_create_keymap	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:nvim_create_keymap(winid) abort$/;"	f
s:nvim_get_botline	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:nvim_get_botline(topline, height, width, bufnr) abort$/;"	f
s:nvim_job_exit_wrapper	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_exit_wrapper(real_cb, job, exit_code, event_type) abort$/;"	f
s:nvim_job_out_wrapper	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_out_wrapper(real_cb, job, lines, event_type) abort$/;"	f
s:obsolete	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! s:obsolete(var)$/;"	f
s:obsolete_gitgutter_signs_to_remove	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:obsolete_gitgutter_signs_to_remove(bufnr, new_gitgutter_signs_line_numbers) abort$/;"	f
s:ocre	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:ocre         = [ '#87875f', 101 ]$/;"	v
s:olive	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:olive = [ '#808000', 3 ]$/;"	v
s:olive	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:olive = '#dfaf5f'$/;"	v
s:olive	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:olive = '#718c00'$/;"	v
s:on_async_response	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:on_async_response(id, resp, isErr) dict$/;"	f
s:on_bufenter	vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! s:on_bufenter()$/;"	f
s:on_exit	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:on_exit(name, code) abort$/;"	f
s:on_exit	vim/.vim/plugged/coc.nvim/autoload/coc/task.vim	/^function! s:on_exit(id, code) abort$/;"	f
s:on_exit_nvim	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_exit_nvim(_job_id, exit_code, _event) dict abort$/;"	f
s:on_exit_nvim	vim/.vim/plugged/vim-translator/autoload/translator/job.vim	/^  function! s:on_exit_nvim(jobid, code, event) abort$/;"	f
s:on_exit_vim	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_exit_vim(channel) dict abort$/;"	f
s:on_exit_vim	vim/.vim/plugged/vim-translator/autoload/translator/job.vim	/^  function! s:on_exit_vim(ch, code) abort$/;"	f
s:on_stderr	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:on_stderr(name, msgs)$/;"	f
s:on_stderr	vim/.vim/plugged/coc.nvim/autoload/coc/task.vim	/^function! s:on_stderr(id, msgs)$/;"	f
s:on_stderr_nvim	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stderr_nvim(_job_id, data, _event) dict abort$/;"	f
s:on_stderr_vim	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stderr_vim(channel, _data) dict abort$/;"	f
s:on_stdout	vim/.vim/plugged/coc.nvim/autoload/coc/task.vim	/^function! s:on_stdout(id, msgs)$/;"	f
s:on_stdout_nvim	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stdout_nvim(_job_id, data, _event) dict abort$/;"	f
s:on_stdout_nvim	vim/.vim/plugged/vim-translator/autoload/translator/job.vim	/^  function! s:on_stdout_nvim(type, jobid, data, event) abort$/;"	f
s:on_stdout_vim	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stdout_vim(_channel, data) dict abort$/;"	f
s:on_stdout_vim	vim/.vim/plugged/vim-translator/autoload/translator/job.vim	/^  function! s:on_stdout_vim(type, event, ch, msg) abort$/;"	f
s:one_line_scope_exclue_regex	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^let s:one_line_scope_exclue_regex = '\\<return\\>'$/;"	v
s:one_line_scope_regex	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^let s:one_line_scope_regex = '\\<\\%(if\\|else\\|for\\|while\\)\\>[^{;]*' . s:line_term$/;"	v
s:open	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:open(cmd, target)$/;"	f
s:open	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:open(cmd, target)$/;"	f
s:open	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! s:open(visual, ...)$/;"	f
s:open_far_buff	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! s:open_far_buff(far_ctx, win_params) abort "{{{$/;"	f
s:open_hunk_preview_window	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:open_hunk_preview_window()$/;"	f
s:opfirst	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^let s:opfirst = '^' . get(g:,'typescript_opfirst',$/;"	v
s:opfirst	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^let s:opfirst = '^' . get(g:,'javascript_opfirst',$/;"	v
s:option	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:option(name)$/;"	f
s:optionxform	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^function! s:optionxform(optionstr)$/;"	f
s:orange	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:orange = [ '#ef7c2a' , 202 ]$/;"	v
s:orange	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:orange = '#d75f00'$/;"	v
s:orange	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:orange = '#d75f00'$/;"	v
s:orange	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:orange = '#f5871f'$/;"	v
s:orange	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:orange = '#de935f'$/;"	v
s:orange	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:orange = '#ffc58f'$/;"	v
s:orange	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:orange = '#e78c45'$/;"	v
s:orange	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:orange = '#f99157'$/;"	v
s:orange	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:orange       = [ '#ff8700', 208 ]$/;"	v
s:orange	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:orange = '#ff7733'$/;"	v
s:orange	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:orange = '#FF7733'$/;"	v
s:orange	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:orange = '#ffae57'$/;"	v
s:orange	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:orange = [ '#fad07a', 222 ]$/;"	v
s:orange	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:orange = [ '#ef5939', 166 ]$/;"	v
s:orange	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:orange = [ '#d7875f', 216 ]$/;"	v
s:orange	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:orange = [ '#cb4b16', s:cuicolors.orange[s:cuiindex] ]$/;"	v
s:orange	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:orange = [ '#d75f00', 166 ]$/;"	v
s:orange	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:orange = [ '#e5786d', 173 ]$/;"	v
s:osascript	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! s:osascript(...) abort$/;"	f
s:others	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^function s:others(p)$/;"	f
s:out_remain_text	vim/.vim/plugged/coc.nvim/autoload/coc/task.vim	/^let s:out_remain_text = {}$/;"	v
s:output	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:output(text)$/;"	f
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.left =  [ [ s:silver, s:gray ], [ s:gray, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.middle = [ [ s:silver, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.right = [ [ s:silver, s:gray ], [ s:gray, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.insert.left = [ [ s:white, s:green ], [ s:white, s:gray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.insert.right = copy(s:p.insert.left)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.error = [ [ s:black, s:red ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.left = [ [ s:white, s:blue ], [ s:white, s:gray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.middle = [ [ s:silver, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.right = [ [ s:white, s:blue ], [ s:white, s:gray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.warning = [ [ s:black, s:yellow ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.replace.left = [ [ s:white, s:red ], [ s:white, s:gray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.replace.right = copy(s:p.replace.left)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.left = [ [ s:silver, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.middle = [ [ s:silver, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.tabsel = copy(s:p.normal.right)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.visual.left = [ [ s:white, s:purple ], [ s:white, s:gray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.visual.right = copy(s:p.visual.left)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.inactive.left = [ [ s:lightGray, s:darkGray ], [ s:white, s:darkGray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.inactive.middle = [ [ s:white, s:darkGray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.inactive.right = [ [ s:darkGray, s:gray ], [ s:darkGray, s:gray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.insert.left = [ [ s:white, s:green ], [ s:white, s:gray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.insert.right = copy(s:p.insert.left)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.error = [ [ s:red, s:darkGray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.left = [ [ s:white, s:blue ], [ s:white, s:gray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.middle = [ [ s:white, s:darkGray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.right = copy(s:p.normal.left)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.normal.warning = [ [ s:orange, s:darkGray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.replace.left = [ [ s:white, s:red ], [ s:white, s:gray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.replace.right = copy(s:p.replace.left)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.left = [ [ s:lightGray, s:darkGray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.middle = [ [ s:yellow, s:veryDarkGray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.right = copy(s:p.tabline.left)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.tabline.tabsel = [ [ s:darkGray, s:yellow ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.visual.left = [ [ s:white, s:orange ], [ s:white, s:gray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:p.visual.right = copy(s:p.visual.left)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.inactive.left = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.inactive.middle = [ [ s:foreground, s:background ], ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.inactive.right = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.insert.left = [ [ s:background, s:blue], [ s:statusline_active_fg, s:status ], [ s:statu/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.error = [ [ s:background, s:error ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.left = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [ /;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.middle = [ [ s:statusline_active_fg, s:statusline_active_bg ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.normal.right = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.replace.left = [ [ s:background, s:pink ], [s:statusline_active_fg, s:status ], [ s:stat/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.left = [ [s:tabline_inactive_fg, s:tabline_inactive_bg ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.middle = [ [s:tabline_bg, s:tabline_bg]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.tabline.tabsel = [ [s:tabline_active_fg, s:tabline_active_bg ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:p.visual.left = [ [ s:visual_fg, s:visual_bg ], [s:statusline_active_fg, s:status ], [ s:s/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.inactive.left = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.inactive.middle = [ [ s:foreground, s:background ], ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.inactive.right = [ [ s:foreground, s:background ], [ s:foreground, s:background ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.insert.left = [ [ s:blue, s:background ], [ s:statusline_active_fg, s:status ], [ s:stat/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.error = [ [ s:background, s:error ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.left = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [ /;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.middle = [ [ s:statusline_active_fg, s:statusline_active_bg ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.right = [ [ s:foreground, s:background ], [ s:statusline_active_fg, s:status ], [/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.normal.warning = [ [ s:background, s:olive ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.replace.left = [ [ s:background, s:pink ], [s:statusline_active_fg, s:status ], [ s:stat/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.left = [ [s:tabline_inactive_fg, s:tabline_inactive_bg ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.middle = [ [s:tabline_bg, s:tabline_bg]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.tabline.tabsel = [ [s:tabline_active_fg, s:tabline_active_bg ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:p.visual.left = [ [ s:background, s:orange ], [s:statusline_active_fg, s:status ], [ s:sta/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.error = [ [ s:red, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base0 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.replace.left = [ [ s:base02, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base00 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.error = [ [ s:red, s:base023 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.replace.left = [ [ s:base02, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base0 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.error = [ [ s:base023, s:red ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base03 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.error = [ [ s:red, s:base023 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.error = [ [ s:base023, s:red ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base03 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.inactive.left   = [ [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.inactive.middle = [ [ s:medium_grey, s:darker_grey ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.inactive.right  = [ [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.insert.left     = [ [ s:darker_grey, s:green ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.insert.right    = [ [ s:darker_grey, s:green ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.normal.error    = [ [ s:almost_black, s:red ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.normal.left     = [ [ s:darker_grey, s:ocre ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.normal.middle   = [ [ s:lighter_grey, s:darker_grey ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.normal.right    = [ [ s:darker_grey, s:ocre ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.normal.warning  = [ [ s:almost_black, s:orange ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.replace.left    = [ [ s:darker_grey, s:red ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.replace.right   = [ [ s:darker_grey, s:red ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.tabline.left    = [ [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.tabline.middle  = [ [ s:lighter_grey, s:darker_grey ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.tabline.right   = [ [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.tabline.tabsel  = [ [ s:darker_grey, s:ocre ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.visual.left     = [ [ s:darker_grey, s:yellow ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:p.visual.right    = [ [ s:darker_grey, s:yellow ], [ s:darker_grey, s:medium_grey ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.inactive.left =  [ [ s:base1, s:base01 ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.inactive.middle = [ [ s:base1, s:base023 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.inactive.right = [ [ s:base1, s:base01 ], [ s:base2, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.normal.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.replace.left = [ [ s:base023, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.tabline.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.tabline.right = [ [ s:base2, s:base00 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.tabline.tabsel = [ [ s:base02, s:base03 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.inactive.left =  [ [ s:base1, s:base01 ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.inactive.middle = [ [ s:base1, s:base023 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.inactive.right = [ [ s:base1, s:base01 ], [ s:base2, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.normal.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.replace.left = [ [ s:base023, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.tabline.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.tabline.right = [ [ s:base2, s:base00 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.tabline.tabsel = [ [ s:base02, s:base03 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.inactive.left =  [ [ s:base1, s:base01 ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.inactive.middle = [ [ s:base1, s:base023 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.inactive.right = [ [ s:base1, s:base01 ], [ s:base2, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.normal.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.replace.left = [ [ s:base023, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.tabline.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.tabline.right = [ [ s:base2, s:base00 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.tabline.tabsel = [ [ s:base02, s:base03 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.inactive.left =  [ [ s:black, s:blue ], [ s:blue, s:gray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.inactive.middle = [ [ s:white, s:gray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.inactive.right = [ [ s:black, s:blue ], [ s:blue, s:gray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.insert.left = [ [ s:black, s:green ], [ s:green, s:gray ] ] $/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.insert.right = [ [ s:black, s:green ], [ s:green, s:gray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.error = [ [ s:red, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.left = [ [ s:black, s:purple ], [ s:purple, s:gray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.middle = [ [ s:white, s:gray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.right = [ [ s:black, s:purple ], [ s:purple, s:gray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.normal.warning = [ [ s:yellow, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.replace.left = [ [ s:black, s:red ], [ s:red, s:gray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.replace.right = [ [ s:black, s:red ], [ s:red, s:gray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.left = [ [ s:blue, s:gray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.middle = [ [ s:blue, s:gray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.right = [ [ s:black, s:blue ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.tabline.tabsel = [ [ s:black, s:blue ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.visual.left = [ [ s:black, s:yellow ], [ s:yellow, s:gray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:p.visual.right = [ [ s:black, s:yellow ], [ s:yellow, s:gray ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.inactive.right = [ [ '#292c33', '#61afef', s:term_black, s:term_blue], [ '#abb2bf', '#3e/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.insert.left = [ [ '#292c33', '#61afef', s:term_black, s:term_blue, 'bold' ], [ '#61afef'/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.insert.middle = s:p.normal.middle$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.insert.right = [ [ '#292c33', '#61afef', s:term_black, s:term_blue ], [ '#ABB2BF', '#3E4/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.error = [ [ '#292c33', '#e06c75', s:term_black, s:term_red ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.left = [ [ '#292c33', '#98c379', s:term_black, s:term_green, 'bold' ], [ '#98c379/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.middle = [ [ '#abb2bf', '#292c33', s:term_white, s:term_black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.right = [ [ '#292c33', '#98c379', s:term_black, s:term_green ], [ '#abb2bf', '#3e/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.normal.warning = [ [ '#292c33', '#e5c07b', s:term_black, s:term_yellow ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.replace.left = [ [ '#292c33', '#e06c75', s:term_black, s:term_red, 'bold' ], [ '#e06c75'/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.replace.middle = s:p.normal.middle$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.replace.right = [ [ '#292c33', '#e06c75', s:term_black, s:term_red ], s:p.normal.right[1/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.left = [ s:p.normal.left[1] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.middle = s:p.normal.middle$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.right = [ s:p.normal.left[1] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.tabline.tabsel = [ s:p.normal.left[0] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.visual.left = [ [ '#292c33', '#c678dd', s:term_black, s:term_purple, 'bold' ], [ '#c678d/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:p.visual.right = [ [ '#292c33', '#c678dd', s:term_black, s:term_purple ], s:p.normal.right/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.replace.left = [ [ s:base02, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.left = copy(s:p.normal.middle)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.middle = copy(s:p.normal.middle)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.right = copy(s:p.tabline.middle)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.middle = [ [ '#303030', '#121212', 236, 233 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.right = [ [ '#121212', '#606060', 233, 241 ], [ '#121212', '#3a3a3a', 233, 237 /;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.insert.left =  [ ['#005f00', '#ffffff', 22, 231, 'bold' ], [ '#ffffff', '#005f00', 231, /;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.error = [ [ '#d0d0d0', '#ff0000', 252, 196 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.left = [ ['#0000ff', '#ffffff', 21, 231, 'bold' ], [ '#ffffff', '#0000ff', 231, 2/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.middle = [ [ '#8a8a8a', '#303030', 245, 236 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.right = [ [ '#303030', '#d0d0d0', 236, 252 ], [ '#303030', '#8a8a8a', 236, 245 ],/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.warning = [ [ '#262626', '#ffff00', 235, 226 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.replace.left = [ [ '#af0000', '#ffffff', 124, 231, 'bold' ], [ '#ffffff', '#af0000', 231/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.left = [ [ '#d0d0d0', '#666666', 252, 242 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.middle = [ [ '#8a8a8a', '#3a3a3a', 245, 237 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.right = [ [ '#d0d0d0', '#666666', 252, 242 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.tabsel = [ [ '#dadada', '#121212', 253, 233 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.visual.left = [ [ '#5f00ff', '#ffffff', 57, 231, 'bold' ], [ '#ffffff', '#5f00ff', 231, /;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.left   = [ [ s:bg,  s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.left   = [ [ s:gray1,  s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.middle = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.right  = [ [ s:bg, s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.inactive.right  = [ [ s:gray1, s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.insert.left     = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.insert.left     = [ [ s:bg, s:blue, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.left     = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.left     = [ [ s:bg, s:green, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.middle   = [ [ s:fg, s:gray2 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.normal.middle   = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.insert.right   = [ [ s:bg, s:blue, 'bold' ], [ s:bg, s:blue, 'bold' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.normal.error   = [ [ s:red2,   s:bg ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.normal.right   = [ [ s:bg, s:green, 'bold' ], [ s:bg, s:green, 'bold' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.normal.warning = [ [ s:yellow, s:bg ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.replace.right  = [ [ s:bg, s:red1, 'bold' ], [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.left   = [ [ s:bg, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.right  = copy(s:p.normal.right)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.tabline.tabsel = [ [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:p.visual.right   = [ [ s:bg, s:purple, 'bold' ], [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.left   = [ [ s:bg,  s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.left   = [ [ s:gray1,  s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.middle = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.right  = [ [ s:bg, s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.inactive.right  = [ [ s:gray1, s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.insert.left     = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.insert.left     = [ [ s:bg, s:green, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.left     = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.left     = [ [ s:bg, s:blue, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.middle   = [ [ s:fg, s:gray2 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.normal.middle   = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.replace.left    = [ [ s:bg, s:red1, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^  let s:p.visual.left     = [ [ s:bg, s:purple, 'bold' ], [ s:gray1, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.insert.right   = [ [ s:bg, s:green, 'bold' ], [ s:bg, s:green, 'bold' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.normal.error   = [ [ s:red2,   s:bg ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.normal.right   = [ [ s:bg, s:blue, 'bold' ], [ s:bg, s:blue, 'bold' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.normal.warning = [ [ s:yellow, s:bg ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.replace.right  = [ [ s:bg, s:red1, 'bold' ], [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.left   = [ [ s:fg, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.right  = [ [ s:bg, s:red1, 'bold' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.tabline.tabsel = [ [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:p.visual.right   = [ [ s:bg, s:purple, 'bold' ], [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.inactive.left =  [ [ s:pink, s:black ], [ s:white, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.inactive.middle = [ [ s:gray, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.inactive.right = [ [ s:white, s:pink ], [ s:pink, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.insert.left = [ [ s:black, s:green ], [ s:green, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.error = [ [ s:pink, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.left = [ [ s:black, s:cyan ], [ s:orange, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.middle = [ [ s:orange, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.right = [ [ s:pink, s:black ], [ s:black, s:pink ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.normal.warning = [ [ s:yellow, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.replace.left = [ [ s:black, s:red ], [ s:red, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.left = [ [ s:pink, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.middle = [ [ s:pink, s:black] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.tabline.tabsel = [ [ s:black, s:pink ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:p.visual.left = [ [ s:black, s:yellow ], [ s:yellow, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.left =  [ [ s:nord1, s:nord8 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.middle = [ [ s:nord5, s:nord1 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.inactive.right = [ [ s:nord5, s:nord1 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.insert.left = [ [ s:nord1, s:nord6 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.error = [ [ s:nord1, s:nord11 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.left = [ [ s:nord1, s:nord8 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.middle = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.right = [ [ s:nord5, s:nord1 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.normal.warning = [ [ s:nord1, s:nord13 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.replace.left = [ [ s:nord1, s:nord13 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.left = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.middle = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.right = [ [ s:nord5, s:nord3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.tabline.tabsel = [ [ s:nord1, s:nord8 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/nord.vim	/^let s:p.visual.left = [ [ s:nord1, s:nord7 ], [ s:nord5, s:nord1 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.left   = [ [ s:bg,  s:gray3 ], [ s:bg, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.left   = [ [ s:gray1,  s:bg ], [ s:gray1, s:bg ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.middle = [ [ s:gray1, s:gray2 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.right  = [ [ s:bg, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^  let s:p.inactive.right  = [ [ s:gray1, s:bg ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.insert.left    = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.insert.right   = [ [ s:bg, s:blue, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.error   = [ [ s:red2, s:bg ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.left    = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.middle  = [ [ s:fg, s:gray2 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.right   = [ [ s:bg, s:green, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.normal.warning = [ [ s:yellow, s:bg ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.replace.left   = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.replace.right  = [ [ s:bg, s:red1, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.left   = [ [ s:fg, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.middle = [ [ s:gray3, s:gray2 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.right  = copy(s:p.normal.right)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.tabline.tabsel = [ [ s:bg, s:purple, 'bold' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.visual.left    = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:p.visual.right   = [ [ s:bg, s:purple, 'bold' ], [ s:fg, s:gray3 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.inactive.right = [ ['gray1', 'gray5'], ['gray4', 'gray1'], ['gray4', 'gray0'] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.left = [ ['darkestcyan', 'white', 'bold'], ['white', 'darkblue'] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.middle = [ [ 'mediumcyan', 'darkestblue' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.right = [ [ 'darkestcyan', 'mediumcyan' ], [ 'mediumcyan', 'darkblue' ], [ 'mediu/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.error = [ [ 'gray9', 'brightestred' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.left = [ ['darkestgreen', 'brightgreen', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.middle = [ [ 'gray7', 'gray2' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.right = [ ['gray5', 'gray10'], ['gray9', 'gray4'], ['gray8', 'gray2'] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.warning = [ [ 'gray1', 'yellow' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.left = [ ['white', 'brightred', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.middle = s:p.normal.middle$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.right = s:p.normal.right$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.left = [ [ 'gray9', 'gray4' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.middle = [ [ 'gray2', 'gray8' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.right = [ [ 'gray9', 'gray3' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.tabsel = [ [ 'gray9', 'gray1' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.visual.left = [ ['darkred', 'brightorange', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.inactive.right = [ ['gray1', 'gray5'], ['gray4', 'gray1'], ['gray4', 'gray0'] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.insert.left = [ ['darkestcyan', 'white', 'bold'], ['mediumcyan', 'darkestblue'] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.insert.middle = [ [ 'mediumcyan', 'darkestblue' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.insert.right = [ [ 'darkestblue', 'mediumcyan' ], [ 'mediumcyan', 'darkblue' ], [ 'mediu/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.normal.error = [ [ 'gray9', 'brightestred' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.normal.left = [ ['darkestgreen', 'brightgreen', 'bold'], ['white', 'gray0'] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.normal.middle = [ [ 'white', 'gray0' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.normal.right = [ ['gray10', 'gray2'], ['white', 'gray1'], ['white', 'gray0'] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.normal.warning = [ [ 'gray1', 'yellow' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.replace.left = [ ['white', 'brightred', 'bold'], ['white', 'gray0'] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.replace.middle = s:p.normal.middle$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.replace.right = s:p.normal.right$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.tabline.left = [ [ 'gray9', 'gray0' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.tabline.middle = [ [ 'gray2', 'gray0' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.tabline.right = [ [ 'gray9', 'gray1' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.tabline.tabsel = [ [ 'gray9', 'gray2' ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/powerlineish.vim	/^let s:p.visual.left = [ ['black', 'brightestorange', 'bold'], ['white', 'gray0'] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.inactive.left = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.inactive.right = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.insert.left = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.insert.right = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.normal.error = [[ s:bg_1, s:red ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.normal.left = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.normal.middle = [[ s:dim_0, s:bg_1 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.normal.right = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.normal.warning = [[ s:bg_1, s:yellow ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.replace.left = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.replace.right = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.tabline.left = [[ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.tabline.right = [[ s:bg_1, s:red ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.tabline.tabsel = [[ s:bg_1, s:blue ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.visual.left = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:p.visual.right = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.inactive.left = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.inactive.right = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.insert.left = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.insert.right = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.normal.error = [[ s:bg_1, s:red ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.normal.left = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.normal.middle = [[ s:dim_0, s:bg_1 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.normal.right = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.normal.warning = [[ s:bg_1, s:yellow ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.replace.left = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.replace.right = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.tabline.left = [[ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.tabline.right = [[ s:bg_1, s:red ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.tabline.tabsel = [[ s:bg_1, s:blue ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.visual.left = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:p.visual.right = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.inactive.left = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.inactive.right = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.insert.left = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.insert.right = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.normal.error = [[ s:bg_1, s:red ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.normal.left = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.normal.middle = [[ s:dim_0, s:bg_1 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.normal.right = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.normal.warning = [[ s:bg_1, s:yellow ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.replace.left = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.replace.right = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.tabline.left = [[ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.tabline.right = [[ s:bg_1, s:red ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.tabline.tabsel = [[ s:bg_1, s:blue ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.visual.left = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:p.visual.right = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.inactive.left = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.inactive.right = [[ s:brblue, s:bg_2 ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.insert.left = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.insert.right = [[ s:bg_1, s:green ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.normal.error = [[ s:bg_1, s:red ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.normal.left = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.normal.middle = [[ s:dim_0, s:bg_1 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.normal.right = [[ s:bg_1, s:blue ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.normal.warning = [[ s:bg_1, s:yellow ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.replace.left = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.replace.right = [[ s:bg_1, s:red ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.tabline.left = [[ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.tabline.right = [[ s:bg_1, s:red ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.tabline.tabsel = [[ s:bg_1, s:blue ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.visual.left = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:p.visual.right = [[ s:bg_1, s:magenta ], [ s:cyan, s:bg_2 ], [ s:dim_0, s:bg_1 ]]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.replace.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:p.visual.left = [ [ s:base02, s:peach ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.inactive.left =  [ [ s:gray, s:black ], [ s:black2, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.inactive.middle = [ [ s:black2, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.inactive.right = [ [ s:black, s:black2 ], [ s:gray, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.insert.left = [ [ s:black, s:green ], [ s:gray4, s:black2 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.normal.error = [ [ s:red, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.normal.left = [ [ s:black, s:blue ], [ s:gray4, s:black2 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.normal.middle = [ [ s:gray, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.normal.right = [ [ s:gray, s:gray4 ], [ s:gray3, s:gray ], [ s:gray2, s:black2 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.normal.warning = [ [ s:gold, s:black2 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.replace.left = [ [ s:black, s:red ], [ s:gray4, s:black2 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.tabline.left = [ [ s:gray4, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.tabline.middle = [ [ s:black2, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.tabline.tabsel = [ [ s:blue, s:black ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:p.visual.left = [ [ s:black, s:violet ], [ s:gray4, s:black2 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.inactive.middle = [ [ s:base01, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.inactive.right = [ [ s:base03, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.insert.left = [ [ s:base03, s:green ], [ s:base03, s:base00 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.left = [ [ s:base03, s:blue ], [ s:base03, s:base00 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.right = [ [ s:base03, s:base1 ], [ s:base03, s:base00 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.normal.warning = [ [ s:base03, s:yellow ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.replace.left = [ [ s:base03, s:red ], [ s:base03, s:base00 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.left = [ [ s:base03, s:base00 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.right = copy(s:p.tabline.left)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.tabline.tabsel = [ [ s:base03, s:base1 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:p.visual.left = [ [ s:base03, s:magenta ], [ s:base03, s:base00 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.insert.left = [ [ s:base02, s:bright_green, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.left = [ [ s:base02, s:bright_blue, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.replace.left = [ [ s:base3, s:red, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00, 'bold'] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:p.visual.left = [ [ s:base3, s:bright_magenta, 'bold' ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.left =  [ [ s:base1, s:base02 ], [ s:base00, s:base023 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.middle = [ [ s:base1, s:base023 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.right = [ [ s:base023, s:base01 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.replace.left = [ [ s:base023, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.right = [ [ s:base2, s:base00 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base03 ] ]$/;"	v
s:p	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:padding_end	vim/.vim/plugged/vim-translator/autoload/translator/history.vim	/^function! s:padding_end(text, length) abort$/;"	f
s:pair_skip_expr	vim/.vim/plugged/vim-graphql/indent/graphql.vim	/^let s:pair_skip_expr =$/;"	v
s:param_proc	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! s:param_proc(far_params, win_params, cmdargs) "{{{$/;"	f
s:parent	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^function! s:parent(dir)$/;"	f
s:parse	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^function! s:parse(config_filename, target_filename, lines)$/;"	f
s:parse_branch	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:parse_branch(branch, type) abort$/;"	f
s:parse_options	vim/.vim/autoload/plug.vim	/^function! s:parse_options(arg)$/;"	f
s:parse_screen	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^function! s:parse_screen()$/;"	f
s:part_of_diff	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:part_of_diff(hunk_diff, first, last)$/;"	f
s:paste_buffer_temporary_text	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:paste_buffer_temporary_text = ''$/;"	v
s:paste_buffer_temporary_type	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:paste_buffer_temporary_type = ''$/;"	v
s:pat_for_type	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^let s:pat_for_type = [ '^$', s:_hexcolor, s:_rgbacolor, s:_csscolor, '^$' ]$/;"	v
s:patch_path	vim/.vim/plugged/vim-vue-plugin/syntax/vue.vim	/^let s:patch_path = expand('<sfile>:p:h').'\/patch'$/;"	v
s:path	vim/.vim/autoload/plug.vim	/^  function! s:path(path)$/;"	f
s:path_subcommands	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:path_subcommands = {}$/;"	v
s:pattern	vim/.vim/plugged/lightline.vim/test/highlight.vim	/^function! s:pattern(xs, ...) abort$/;"	f
s:pattern_color	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^let s:pattern_color = {}$/;"	v
s:peach	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:peach = [ '#d7afaf', 181 ]$/;"	v
s:pink	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:pink = '#afdf00'$/;"	v
s:pink	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:pink = '#d7005f'$/;"	v
s:pink	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:pink = [ '#f92672', 161 ]$/;"	v
s:pluck	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:pluck(dict, key, default)$/;"	f
s:plug_buf	vim/.vim/autoload/plug.vim	/^let s:plug_buf = get(s:, 'plug_buf', -1)$/;"	v
s:plug_call	vim/.vim/autoload/plug.vim	/^  function! s:plug_call(fn, ...)$/;"	f
s:plug_expand	vim/.vim/autoload/plug.vim	/^function! s:plug_expand(fmt)$/;"	f
s:plug_fnamemodify	vim/.vim/autoload/plug.vim	/^function! s:plug_fnamemodify(fname, mods)$/;"	f
s:plug_getcwd	vim/.vim/autoload/plug.vim	/^function! s:plug_getcwd()$/;"	f
s:plug_src	vim/.vim/autoload/plug.vim	/^let s:plug_src = 'https:\/\/github.com\/junegunn\/vim-plug.git'$/;"	v
s:plug_tab	vim/.vim/autoload/plug.vim	/^let s:plug_tab = get(s:, 'plug_tab', -1)$/;"	v
s:plug_tempname	vim/.vim/autoload/plug.vim	/^function! s:plug_tempname()$/;"	f
s:plug_window_exists	vim/.vim/autoload/plug.vim	/^function! s:plug_window_exists()$/;"	f
s:plugin_dir	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:plugin_dir  = expand('<sfile>:p:h:h:h').'\/'$/;"	v
s:populate_hunk_preview_window	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:populate_hunk_preview_window(header, body)$/;"	f
s:popup	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:popup(opts) abort$/;"	f
s:popup_cursor	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:popup_cursor(n) abort$/;"	f
s:popup_filter	vim/.vim/plugged/vim-translator/autoload/translator/window/popup.vim	/^function! s:popup_filter(winid, key) abort$/;"	f
s:popup_list	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^let s:popup_list = []$/;"	v
s:popup_list_api	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^let s:popup_list_api = exists('*popup_list')$/;"	v
s:popup_position	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:popup_position(config) abort$/;"	f
s:popup_support	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:popup_support()$/;"	f
s:popup_visible	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:popup_visible(id) abort$/;"	f
s:pos	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:pos(mark)$/;"	f
s:prefix	vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^let s:prefix = '[List Preview]'$/;"	v
s:prepare	vim/.vim/autoload/plug.vim	/^function! s:prepare(...)$/;"	f
s:prepare_env	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:prepare_env = {$/;"	v
s:prepend_opts	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:prepend_opts(dict, eopts)$/;"	f
s:preprocess_values	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/handler.vim	/^function! s:preprocess_values(job, opts)$/;"	f
s:present	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:present(dict, ...)$/;"	f
s:preview	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:preview(hunk_diff)$/;"	f
s:preview_bufnr	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^let s:preview_bufnr = 0$/;"	v
s:preview_commit	vim/.vim/autoload/plug.vim	/^function! s:preview_commit()$/;"	f
s:previous_token	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^function s:previous_token()$/;"	f
s:prevnonblanknoncomment	vim/.vim/plugged/vim-vue-plugin/lib/indent/css.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
s:proc_pattern_args	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! s:proc_pattern_args(far_params, cmdargs) abort "{{{$/;"	f
s:process_added	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_added(modifications, from_count, to_count, to_line) abort$/;"	f
s:process_hunk	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_hunk(bufnr, hunk) abort$/;"	f
s:process_modified	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified(modifications, from_count, to_count, to_line) abort$/;"	f
s:process_modified_and_added	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified_and_added(modifications, from_count, to_count, to_line) abort$/;"	f
s:process_modified_and_removed	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified_and_removed(modifications, from_count, to_count, to_line) abort$/;"	f
s:process_options_file	vim/.vim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:process_options_file(proj_dir, path) abort$/;"	f
s:process_removed	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_removed(modifications, from_count, to_count, to_line) abort$/;"	f
s:process_user_input	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:process_user_input()$/;"	f
s:progress_bar	vim/.vim/autoload/plug.vim	/^function! s:progress_bar(line, bar, total)$/;"	f
s:progress_opt	vim/.vim/autoload/plug.vim	/^function! s:progress_opt(base)$/;"	f
s:progresschars	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^let s:progresschars = get(g:, 'coc_progress_chars', ['░', '▇'])$/;"	v
s:prompt_act_func_ref	vim/.vim/plugged/far.vim/autoload/far.vim	/^let s:prompt_act_func_ref={$/;"	v
s:prompt_key_display	vim/.vim/plugged/far.vim/autoload/far.vim	/^    let s:prompt_key_display[key] = g:far#prompt_mapping[key]['prompt']$/;"	v
s:prompt_key_display	vim/.vim/plugged/far.vim/autoload/far.vim	/^let s:prompt_key_display = {}$/;"	v
s:prompt_mapping_keys	vim/.vim/plugged/far.vim/autoload/far.vim	/^    let s:prompt_mapping_keys[key] = g:far#prompt_mapping[key]['key']$/;"	v
s:prompt_mapping_keys	vim/.vim/plugged/far.vim/autoload/far.vim	/^let s:prompt_mapping_keys = {}$/;"	v
s:prompt_win_bufnr	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^let s:prompt_win_bufnr = 0$/;"	v
s:prompt_win_width	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^let s:prompt_win_width = get(g:, 'coc_prompt_win_width', 32)$/;"	v
s:prop_offset	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^let s:prop_offset = get(g:, 'coc_text_prop_offset', 1000)$/;"	v
s:prop_offset	vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^let s:prop_offset = get(g:, 'coc_text_prop_offset', 1000)$/;"	v
s:prop_type_hlgroup	vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! s:prop_type_hlgroup(type) abort$/;"	f
s:purple	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:purple = [ '#800080', 5 ]$/;"	v
s:purple	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:purple = '#8959a8'$/;"	v
s:purple	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:purple = '#8959a8'$/;"	v
s:purple	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:purple = [ '#9876aa', 104 ]$/;"	v
s:purple	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:purple = '#82aaff'$/;"	v
s:purple	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:purple = '#c792ea'$/;"	v
s:purple	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:purple = [ '#c678dd', 176 ]$/;"	v
s:pushd	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:pushd(dict)$/;"	f
s:py_file	vim/.vim/plugged/vim-translator/autoload/translator.vim	/^  let s:py_file = shellescape(s:py_file)$/;"	v
s:py_file	vim/.vim/plugged/vim-translator/autoload/translator.vim	/^let s:py_file = expand('<sfile>:p:h') . '\/..\/script\/translator.py'$/;"	v
s:pyglob_param_proc	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! s:pyglob_param_proc(far_params, win_params, cmdargs) "{{{$/;"	f
s:python_executable	vim/.vim/plugged/vim-translator/autoload/translator.vim	/^    let s:python_executable = 'python'$/;"	v
s:python_executable	vim/.vim/plugged/vim-translator/autoload/translator.vim	/^    let s:python_executable = 'python3'$/;"	v
s:python_executable	vim/.vim/plugged/vim-translator/autoload/translator.vim	/^    let s:python_executable = g:python3_host_prog$/;"	v
s:python_executable	vim/.vim/plugged/vim-translator/autoload/translator.vim	/^  let s:python_executable = shellescape(s:python_executable)$/;"	v
s:quickhelp_view	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:quickhelp_view() abort$/;"	f
s:quit	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^  let s:quit = "quit"$/;"	v
s:quit	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^let s:quit = ""$/;"	v
s:re_escape	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^function! s:re_escape(text)$/;"	f
s:real_endtag	vim/.vim/plugged/vim-jsx-typescript/after/indent/typescriptreact.vim	/^let s:real_endtag = '\\s*<\\\/\\+[A-Za-z]*>'$/;"	v
s:reap	vim/.vim/autoload/plug.vim	/^function! s:reap(name)$/;"	f
s:rebase_abbrevs	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:rebase_abbrevs = {$/;"	v
s:rebase_view	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:rebase_view() abort$/;"	f
s:recreate_highlights	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^function! s:recreate_highlights()$/;"	f
s:red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:red = [ '#ff0000', 9 ]$/;"	v
s:red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:red = [ '#f92672' , 161 ]$/;"	v
s:red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:red = '#df0000'$/;"	v
s:red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:red = '#df0000'$/;"	v
s:red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:red = '#c82829'$/;"	v
s:red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:red = '#cc6666'$/;"	v
s:red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:red = '#ff9da4'$/;"	v
s:red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:red = '#d54e53'$/;"	v
s:red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:red = '#f2777a'$/;"	v
s:red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:red          = [ '#af5f5f', 131 ]$/;"	v
s:red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:red = '#f07178'$/;"	v
s:red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:red = '#f07178'$/;"	v
s:red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:red = '#f07178'$/;"	v
s:red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:red = [ '#ff6b68', 204 ]$/;"	v
s:red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:red = [ '#cf6a4c', 167 ]$/;"	v
s:red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:red = [ '#ff0000', 160 ]$/;"	v
s:red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:red       = ['#ed4a46', 1]$/;"	v
s:red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:red       = ['#fa5750', 1]$/;"	v
s:red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:red       = ['#d2212d', 1]$/;"	v
s:red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:red       = ['#d6000c', 1]$/;"	v
s:red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:red = [ '#d68787', 131 ]$/;"	v
s:red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:red = [ '#d70000', '160' ]$/;"	v
s:red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:red = [ '#dc322f', s:cuicolors.red[s:cuiindex] ]$/;"	v
s:red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:red = [ '#ff3128', 1 ]$/;"	v
s:red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:red = [ '#e5786d', 203 ]$/;"	v
s:red1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:red1   = '#ec5f67'$/;"	v
s:red1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:red1   = '#f07178'$/;"	v
s:red1	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:red1   = [ '#e06c75', 168 ]$/;"	v
s:red2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:red2   = '#ec5f67'$/;"	v
s:red2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:red2   = '#ff5370'$/;"	v
s:red2	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:red2   = [ '#be5046', 168 ]$/;"	v
s:reduce_line	vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:reduce_line(lines)$/;"	f
s:ref_header	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:ref_header = '\\%(Merge\\|Rebase\\|Upstream\\|Pull\\|Push\\)'$/;"	v
s:refar_params_meta	vim/.vim/plugged/far.vim/autoload/far.vim	/^let s:refar_params_meta = {$/;"	v
s:reference	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^let s:reference = '\\<\\%(\\c\\%(clos\\|resolv\\|referenc\\)e[sd]\\=\\|\\cfix\\%(e[sd]\\)\\=\\)\\/;"	v
s:refresh_buffers	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:refresh_buffers()$/;"	f
s:refs	vim/.vim/plugged/vim-vue-plugin/syntax/patch/vue-keyword.vim	/^let s:refs = 'ref unref toRef toRefs isRef customRef shallowRef triggerRef'$/;"	v
s:region	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:region(start_mark, end_mark)$/;"	f
s:regress_bar	vim/.vim/autoload/plug.vim	/^function! s:regress_bar()$/;"	f
s:rel	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^let s:rel = has('reltime')$/;"	v
s:reload_plugins	vim/.vim/autoload/plug.vim	/^function! s:reload_plugins()$/;"	f
s:remote_headers	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:remote_headers = {}$/;"	v
s:remove_layout	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:remove_layout(opts)$/;"	f
s:remove_rtp	vim/.vim/autoload/plug.vim	/^function! s:remove_rtp()$/;"	f
s:remove_signs	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:remove_signs(bufnr, sign_ids, all_signs) abort$/;"	f
s:remove_triggers	vim/.vim/autoload/plug.vim	/^function! s:remove_triggers(name)$/;"	f
s:reorg_rtp	vim/.vim/autoload/plug.vim	/^function! s:reorg_rtp()$/;"	f
s:repl_params_meta	vim/.vim/plugged/far.vim/autoload/far.vim	/^let s:repl_params_meta = {$/;"	v
s:replacement_expr	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^let s:replacement_expr =$/;"	v
s:repo_bare	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
s:repo_config	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_config(name) dict abort$/;"	f
s:repo_dir	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
s:repo_find	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_find(object) dict abort$/;"	f
s:repo_git_chomp	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
s:repo_git_chomp_in_tree	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
s:repo_git_command	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
s:repo_head	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
s:repo_homepage	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! s:repo_homepage() abort$/;"	f
s:repo_prototype	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repo_rev_parse	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
s:repo_superglob	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
s:repo_translate	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_translate(rev) dict abort$/;"	f
s:repo_tree	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
s:repo_user	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
s:repos	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:repos = {}$/;"	v
s:request	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:request(method, args) dict$/;"	f
s:request_async	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:request_async(method, args, cb) dict$/;"	f
s:requires_buf_refresh	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let s:requires_buf_refresh     = 1$/;"	v
s:reset	vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! s:reset() abort$/;"	f
s:reset_summary	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:reset_summary(bufnr) abort$/;"	f
s:reset_tick	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:reset_tick(bufnr) abort$/;"	f
s:resize_ignored_window	vim/.vim/plugged/golden-ratio/plugin/golden_ratio.vim	/^function! s:resize_ignored_window(windows, ignored_width, ignored_height)$/;"	f
s:resize_ignored_windows	vim/.vim/plugged/golden-ratio/plugin/golden_ratio.vim	/^function! s:resize_ignored_windows(windows, ignored_width, ignored_height)$/;"	f
s:resize_main_window	vim/.vim/plugged/golden-ratio/plugin/golden_ratio.vim	/^function! s:resize_main_window(window,$/;"	f
s:resize_to_golden_ratio	vim/.vim/plugged/golden-ratio/plugin/golden_ratio.vim	/^function! s:resize_to_golden_ratio()$/;"	f
s:restore_fold_state	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! s:restore_fold_state()$/;"	f
s:restore_shell	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:restore_shell() abort$/;"	f
s:resume_queue	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:resume_queue = []$/;"	v
s:retry	vim/.vim/autoload/plug.vim	/^function! s:retry()$/;"	f
s:retry_keys	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:retry_keys = ""$/;"	v
s:return_block	vim/.vim/plugged/vim-jsx-typescript/after/indent/typescriptreact.vim	/^let s:return_block = '\\s*return\\s\\+('$/;"	v
s:reverse_list	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:reverse_list(opts)$/;"	f
s:revert	vim/.vim/autoload/plug.vim	/^function! s:revert()$/;"	f
s:revert_highlight_fix	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:revert_highlight_fix()$/;"	f
s:revert_mode	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:revert_mode(from, to)$/;"	f
s:rgb	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:rgb(r, g, b) abort$/;"	f
s:rgb2color	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^function! s:rgb2color(r,g,b)$/;"	f
s:rgb2din99	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^function s:rgb2din99(rgb)$/;"	f
s:rgb2xterm	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^	function! s:rgb2xterm(color)$/;"	f
s:rgb_colour	vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:rgb_colour(x, y, z)$/;"	f
s:rgb_level	vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:rgb_level(n)$/;"	f
s:rgb_number	vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:rgb_number(x)$/;"	f
s:rm_rf	vim/.vim/autoload/plug.vim	/^function! s:rm_rf(dir)$/;"	f
s:root	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	vim/.vim/plugged/coc.nvim/autoload/health/coc.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^let s:root = expand('<sfile>:h:h')$/;"	v
s:root	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^function! s:root()$/;"	f
s:rooter	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^function! s:rooter()$/;"	f
s:rootless	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^function! s:rootless()$/;"	f
s:rtp	vim/.vim/autoload/plug.vim	/^function! s:rtp(spec)$/;"	f
s:run_jobs	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:run_jobs = (exists('*job_start') || exists('*jobstart')) && exists('*bufwinid')$/;"	v
s:runner_exe	vim/.vim/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:runner_exe = gutentags#get_plat_file('update_scopedb')$/;"	v
s:runner_exe	vim/.vim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:runner_exe = '"' . gutentags#get_plat_file('update_tags') . '"'$/;"	v
s:running_task	vim/.vim/plugged/coc.nvim/autoload/coc/task.vim	/^let s:running_task = {}$/;"	v
s:save_cpo	vim/.vim/plugged/golden-ratio/plugin/golden_ratio.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/.vim/plugged/iceberg-dark/autoload/airline/themes/icebergDark.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/.vim/plugged/iceberg-dark/autoload/lightline/colorscheme/icebergDark.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/.vim/plugged/iceberg.vim/autoload/airline/themes/iceberg.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/.vim/plugged/iceberg.vim/autoload/lightline/colorscheme/iceberg.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/.vim/plugged/iceberg.vim/src/template-airline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/.vim/plugged/iceberg.vim/src/template-lightline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/.vim/plugged/lightline.vim/autoload/lightline/colortable.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/.vim/plugged/lightline.vim/autoload/lightline/tab.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/.vim/plugged/lightline.vim/plugin/lightline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/.vim/plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim/.vim/plugged/vim-toml/ftplugin/toml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_fold_state	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! s:save_fold_state()$/;"	f
s:save_last_seen_change	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:save_last_seen_change(bufnr) abort$/;"	f
s:save_pos	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^function s:save_pos(f,...)$/;"	f
s:saved_char	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:saved_char = ''$/;"	v
s:saved_cpo	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/fnmatch.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/handler.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/ini.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	vim/.vim/plugged/editorconfig-vim/autoload/editorconfig_core/util.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cpo	vim/.vim/plugged/editorconfig-vim/plugin/editorconfig.vim	/^let s:saved_cpo = &cpo$/;"	v
s:saved_cursor	vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:saved_cursor = &guicursor$/;"	v
s:saved_keys	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:saved_keys = ""$/;"	v
s:saved_line	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:saved_line = 0$/;"	v
s:saved_linecount	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:saved_linecount = -1$/;"	v
s:saved_ve	vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:saved_ve = &t_ve$/;"	v
s:scratch	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! s:scratch()$/;"	f
s:script_folder_path	vim/.vim/plugged/MatchTagAlways/autoload/MatchTagAlways.vim	/^let s:script_folder_path = escape( expand( '<sfile>:p:h' ), '\\' )$/;"	v
s:search_history_sink	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:search_history_sink(lines)$/;"	f
s:section	vim/.vim/autoload/plug.vim	/^function! s:section(flags)$/;"	f
s:section_commit_pattern	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:section_commit_pattern = s:section_pattern . '\\|^commit '$/;"	v
s:section_pattern	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:section_pattern = '^[A-Z][a-z][^:]*$'$/;"	v
s:select_api	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^let s:select_api = exists('*nvim_select_popupmenu_item')$/;"	v
s:select_in_visual_mode	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:select_in_visual_mode(region)$/;"	f
s:separator	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:separator()$/;"	f
s:session_names	vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:session_names = []$/;"	v
s:setLightline	vim/.vim/plugged/vim-lightline-coc/autoload/lightline/coc.vim	/^function! s:setLightline(scope, name, value) abort$/;"	f
s:set_fold_levels	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! s:set_fold_levels()$/;"	f
s:set_path_handler	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^let s:set_path_handler = {}$/;"	v
s:set_path_handler.err	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:set_path_handler.err(buffer) abort$/;"	f
s:set_path_handler.out	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:set_path_handler.out(buffer, path) abort$/;"	f
s:settings	vim/.vim/plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:settings = {$/;"	v
s:settings_if_default	vim/.vim/plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:settings_if_default = {$/;"	v
s:setup	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! s:setup(git_dir, git_origin)$/;"	f
s:setup_path	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:setup_path(bufnr, continuation)$/;"	f
s:shellesc	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
s:shellesc	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! s:shellesc(arg) abort$/;"	f
s:shellesc_cmd	vim/.vim/autoload/plug.vim	/^function! s:shellesc_cmd(arg, script)$/;"	f
s:shellesc_cmd	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:shellesc_cmd(arg)$/;"	f
s:shellesc_ps1	vim/.vim/autoload/plug.vim	/^function! s:shellesc_ps1(arg)$/;"	f
s:shellesc_sh	vim/.vim/autoload/plug.vim	/^function! s:shellesc_sh(arg)$/;"	f
s:shortpath	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:shortpath()$/;"	f
s:shortpath	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:shortpath()$/;"	f
s:show_branch_details	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:show_branch_details() abort$/;"	f
s:show_documentation	.config/nvim_copy/init.vim	/^function! s:show_documentation()$/;"	f
s:show_documentation	vim/.vimrc	/^function! s:show_documentation()$/;"	f
s:showing_full_ui	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:showing_full_ui()$/;"	f
s:shrug	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! s:shrug()$/;"	f
s:silver	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:silver = [ '#c0c0c0', 7 ]$/;"	v
s:sin16	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^let s:sin16 = sin(16*(180\/atan2(0,-1)))$/;"	v
s:skip	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^  function! s:skip() abort " Vim 8.2.0257 (00f3b4e007), 8.2.0991 (0fe937fd86), 8.2.0996 (40a019f/;"	f
s:skip	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^  function! s:skip() abort$/;"	f
s:skip_expr	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),0),'name') =~? '".s:syng_strcom."'"$/;"	v
s:skip_expr	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^let s:skip_expr = "s:SynAt(line('.'),col('.')) =~? b:syng_strcom"$/;"	v
s:skip_expr	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~ '".s:syng_strcom."'"$/;"	v
s:skip_func	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^function s:skip_func()$/;"	f
s:skip_latency_measure	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:skip_latency_measure()$/;"	f
s:snapshot	vim/.vim/autoload/plug.vim	/^function! s:snapshot(force, ...) abort$/;"	f
s:solarized_termcolors	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:solarized_termcolors = get(g:, 'solarized_termcolors', 256)$/;"	v
s:sort_branches	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:sort_branches(type, int)$/;"	f
s:sort_buffers	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:sort_buffers(...)$/;"	f
s:sorted	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^let s:sorted      = 0$/;"	v
s:source	vim/.vim/autoload/plug.vim	/^function! s:source(from, ...)$/;"	f
s:spawn	vim/.vim/autoload/plug.vim	/^function! s:spawn(name, cmd, opts)$/;"	f
s:special_keys	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:special_keys = {$/;"	v
s:split	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:split(dict)$/;"	f
s:split	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! s:split(tab)$/;"	f
s:split	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! s:split(str, delimiter)$/;"	f
s:split_pathspec	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! s:split_pathspec(args)$/;"	f
s:split_rtp	vim/.vim/autoload/plug.vim	/^function! s:split_rtp()$/;"	f
s:splittable	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:splittable(dict)$/;"	f
s:stage	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:stage(hunk_diff)$/;"	f
s:standard_view	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:standard_view() abort$/;"	f
s:start	vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:start() dict$/;"	f
s:start	vim/.vim/plugged/vim-translator/autoload/translator/job.vim	/^function! s:start(type, data, event) abort$/;"	f
s:start_latency_measure	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:start_latency_measure()$/;"	f
s:start_prompt	vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! s:start_prompt()$/;"	f
s:start_prompt_vim	vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! s:start_prompt_vim() abort$/;"	f
s:start_resize_timer	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! s:start_resize_timer() abort$/;"	f
s:status	vim/.vim/autoload/plug.vim	/^function! s:status()$/;"	f
s:status	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:status = '#c6c6c6'$/;"	v
s:status	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:status = s:aqua$/;"	v
s:status_load	vim/.vim/autoload/plug.vim	/^function! s:status_load(lnum)$/;"	f
s:status_update	vim/.vim/autoload/plug.vim	/^function! s:status_update() range$/;"	f
s:statusline_active_bg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_active_bg = '#5f8787'$/;"	v
s:statusline_active_bg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_active_bg = s:navy$/;"	v
s:statusline_active_fg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_active_fg = '#1c1c1c'$/;"	v
s:statusline_active_fg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_active_fg = s:window$/;"	v
s:statusline_inactive_bg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_inactive_bg = '#444444'$/;"	v
s:statusline_inactive_bg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_inactive_bg = '#dadada'$/;"	v
s:statusline_inactive_fg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:statusline_inactive_fg = '#c6c6c6'$/;"	v
s:statusline_inactive_fg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:statusline_inactive_fg = s:foreground$/;"	v
s:str_compose	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:str_compose(line, idx, text) abort$/;"	f
s:strip	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:strip(str)$/;"	f
s:strip_trailing_new_line	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:strip_trailing_new_line(line) abort$/;"	f
s:strip_white_space	vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^function! s:strip_white_space(l,r,line) abort$/;"	f
s:strpart	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:strpart(s, i, l)$/;"	f
s:style_with_css_prefix	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^let s:style_with_css_prefix = ['scss', 'less', 'stylus']$/;"	v
s:sub	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
s:sub	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^function! s:sub(dir, identifier)$/;"	f
s:sub	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
s:subcommands_before_2_5	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:subcommands_before_2_5 = [$/;"	v
s:subseparator	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^function! s:subseparator(components, subseparator, expanded) abort$/;"	f
s:subseparator	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:subseparator(...)$/;"	f
s:suggest_sources	vim/.vim/plugged/far.vim/autoload/far.vim	/^let s:suggest_sources = keys(filter(copy(g:far#sources), "get(g:far#sources[v:key], 'suggest', '/;"	v
s:suite	vim/.vim/plugged/lightline.vim/test/autocmd.vim	/^let s:suite = themis#suite('autocmd')$/;"	v
s:suite	vim/.vim/plugged/lightline.vim/test/concatenate.vim	/^let s:suite = themis#suite('concatenate')$/;"	v
s:suite	vim/.vim/plugged/lightline.vim/test/error.vim	/^let s:suite = themis#suite('error')$/;"	v
s:suite	vim/.vim/plugged/lightline.vim/test/expand.vim	/^let s:suite = themis#suite('expand')$/;"	v
s:suite	vim/.vim/plugged/lightline.vim/test/highlight.vim	/^let s:suite = themis#suite('highlight')$/;"	v
s:suite	vim/.vim/plugged/lightline.vim/test/link.vim	/^let s:suite = themis#suite('link')$/;"	v
s:suite	vim/.vim/plugged/lightline.vim/test/mode.vim	/^let s:suite = themis#suite('mode')$/;"	v
s:suite	vim/.vim/plugged/lightline.vim/test/onetab.vim	/^let s:suite = themis#suite('onetab')$/;"	v
s:suite	vim/.vim/plugged/lightline.vim/test/popup.vim	/^let s:suite = themis#suite('popup')$/;"	v
s:suite	vim/.vim/plugged/lightline.vim/test/quickfix.vim	/^let s:suite = themis#suite('quickfix')$/;"	v
s:suite	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^let s:suite = themis#suite('subseparator')$/;"	v
s:suite	vim/.vim/plugged/lightline.vim/test/tabline.vim	/^let s:suite = themis#suite('tabline')$/;"	v
s:suite	vim/.vim/plugged/lightline.vim/test/tabs.vim	/^let s:suite = themis#suite('tabs')$/;"	v
s:suite	vim/.vim/plugged/lightline.vim/test/toggle.vim	/^let s:suite = themis#suite('toggle')$/;"	v
s:suite	vim/.vim/plugged/lightline.vim/test/uniq.vim	/^let s:suite = themis#suite('uniq')$/;"	v
s:suite.active_inactive	vim/.vim/plugged/lightline.vim/test/onetab.vim	/^function! s:suite.active_inactive()$/;"	f
s:suite.before_each	vim/.vim/plugged/lightline.vim/test/autocmd.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	vim/.vim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	vim/.vim/plugged/lightline.vim/test/highlight.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	vim/.vim/plugged/lightline.vim/test/link.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	vim/.vim/plugged/lightline.vim/test/onetab.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	vim/.vim/plugged/lightline.vim/test/popup.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	vim/.vim/plugged/lightline.vim/test/quickfix.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	vim/.vim/plugged/lightline.vim/test/tabline.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	vim/.vim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.before_each()$/;"	f
s:suite.before_each	vim/.vim/plugged/lightline.vim/test/toggle.vim	/^function! s:suite.before_each()$/;"	f
s:suite.component_raw	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.component_raw()$/;"	f
s:suite.component_type	vim/.vim/plugged/lightline.vim/test/highlight.vim	/^function! s:suite.component_type()$/;"	f
s:suite.component_type	vim/.vim/plugged/lightline.vim/test/link.vim	/^function! s:suite.component_type()$/;"	f
s:suite.custom	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom()$/;"	f
s:suite.custom_error	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_error()$/;"	f
s:suite.custom_left_nil	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_left_nil()$/;"	f
s:suite.custom_mixed	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_mixed()$/;"	f
s:suite.custom_mixed_2	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_mixed_2()$/;"	f
s:suite.custom_number	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_number()$/;"	f
s:suite.custom_one	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_one()$/;"	f
s:suite.custom_right_nil	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_right_nil()$/;"	f
s:suite.custom_string	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_string()$/;"	f
s:suite.custom_two	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_two()$/;"	f
s:suite.custom_type	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type()$/;"	f
s:suite.custom_type_error	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_error()$/;"	f
s:suite.custom_type_flatten	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_flatten()$/;"	f
s:suite.custom_type_left_nil	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_left_nil()$/;"	f
s:suite.custom_type_mixed	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_mixed()$/;"	f
s:suite.custom_type_mixed_2	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_mixed_2()$/;"	f
s:suite.custom_type_notfound	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_notfound()$/;"	f
s:suite.custom_type_number	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_number()$/;"	f
s:suite.custom_type_one	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_one()$/;"	f
s:suite.custom_type_right_nil	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_right_nil()$/;"	f
s:suite.custom_type_string	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_string()$/;"	f
s:suite.custom_type_two	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_two()$/;"	f
s:suite.custom_type_void_string	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string()$/;"	f
s:suite.custom_type_void_string_array	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array()$/;"	f
s:suite.custom_type_void_string_array_2	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array_2()$/;"	f
s:suite.custom_type_void_string_array_3	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array_3()$/;"	f
s:suite.custom_type_void_string_array_4	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_type_void_string_array_4()$/;"	f
s:suite.custom_void_string	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string()$/;"	f
s:suite.custom_void_string_array	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array()$/;"	f
s:suite.custom_void_string_array_2	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array_2()$/;"	f
s:suite.custom_void_string_array_3	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array_3()$/;"	f
s:suite.custom_void_string_array_4	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.custom_void_string_array_4()$/;"	f
s:suite.default	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.default()$/;"	f
s:suite.default	vim/.vim/plugged/lightline.vim/test/toggle.vim	/^function! s:suite.default()$/;"	f
s:suite.dictionary_function	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.dictionary_function()$/;"	f
s:suite.disable_enable	vim/.vim/plugged/lightline.vim/test/toggle.vim	/^function! s:suite.disable_enable()$/;"	f
s:suite.disabled	vim/.vim/plugged/lightline.vim/test/tabline.vim	/^function! s:suite.disabled()$/;"	f
s:suite.doautoall	vim/.vim/plugged/lightline.vim/test/autocmd.vim	/^function! s:suite.doautoall()$/;"	f
s:suite.duplicated_both_nil	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_both_nil()$/;"	f
s:suite.duplicated_both_nil_left_most	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_both_nil_left_most()$/;"	f
s:suite.duplicated_both_nil_right_most	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_both_nil_right_most()$/;"	f
s:suite.duplicated_left_nil	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_left_nil()$/;"	f
s:suite.duplicated_right_nil	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_right_nil()$/;"	f
s:suite.duplicated_string	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_string()$/;"	f
s:suite.duplicated_type_both_nil	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_both_nil()$/;"	f
s:suite.duplicated_type_both_nil_left_most	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_both_nil_left_most()$/;"	f
s:suite.duplicated_type_both_nil_right_most	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_both_nil_right_most()$/;"	f
s:suite.duplicated_type_left_nil	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_left_nil()$/;"	f
s:suite.duplicated_type_right_nil	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.duplicated_type_right_nil()$/;"	f
s:suite.enabled	vim/.vim/plugged/lightline.vim/test/tabline.vim	/^function! s:suite.enabled()$/;"	f
s:suite.error	vim/.vim/plugged/lightline.vim/test/error.vim	/^function! s:suite.error()$/;"	f
s:suite.expand	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.expand()$/;"	f
s:suite.filename	vim/.vim/plugged/lightline.vim/test/onetab.vim	/^function! s:suite.filename()$/;"	f
s:suite.filename_modified	vim/.vim/plugged/lightline.vim/test/onetab.vim	/^function! s:suite.filename_modified()$/;"	f
s:suite.flatten	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.flatten()$/;"	f
s:suite.hi_clear	vim/.vim/plugged/lightline.vim/test/link.vim	/^function! s:suite.hi_clear()$/;"	f
s:suite.highlight	vim/.vim/plugged/lightline.vim/test/highlight.vim	/^function! s:suite.highlight()$/;"	f
s:suite.insert	vim/.vim/plugged/lightline.vim/test/highlight.vim	/^function! s:suite.insert()$/;"	f
s:suite.insert	vim/.vim/plugged/lightline.vim/test/link.vim	/^function! s:suite.insert()$/;"	f
s:suite.keep_original	vim/.vim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.keep_original()$/;"	f
s:suite.left_right	vim/.vim/plugged/lightline.vim/test/highlight.vim	/^function! s:suite.left_right()$/;"	f
s:suite.left_right	vim/.vim/plugged/lightline.vim/test/link.vim	/^function! s:suite.left_right()$/;"	f
s:suite.link	vim/.vim/plugged/lightline.vim/test/link.vim	/^function! s:suite.link()$/;"	f
s:suite.many1	vim/.vim/plugged/lightline.vim/test/uniq.vim	/^function! s:suite.many1()$/;"	f
s:suite.many2	vim/.vim/plugged/lightline.vim/test/uniq.vim	/^function! s:suite.many2()$/;"	f
s:suite.many3	vim/.vim/plugged/lightline.vim/test/uniq.vim	/^function! s:suite.many3()$/;"	f
s:suite.mode	vim/.vim/plugged/lightline.vim/test/mode.vim	/^function! s:suite.mode()$/;"	f
s:suite.mode_map	vim/.vim/plugged/lightline.vim/test/mode.vim	/^function! s:suite.mode_map()$/;"	f
s:suite.modified	vim/.vim/plugged/lightline.vim/test/onetab.vim	/^function! s:suite.modified()$/;"	f
s:suite.multiple	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.multiple()$/;"	f
s:suite.multiple_type	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.multiple_type()$/;"	f
s:suite.nil	vim/.vim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.nil()$/;"	f
s:suite.nil	vim/.vim/plugged/lightline.vim/test/uniq.vim	/^function! s:suite.nil()$/;"	f
s:suite.no_components	vim/.vim/plugged/lightline.vim/test/highlight.vim	/^function! s:suite.no_components()$/;"	f
s:suite.notfound	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.notfound()$/;"	f
s:suite.one	vim/.vim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.one()$/;"	f
s:suite.one	vim/.vim/plugged/lightline.vim/test/uniq.vim	/^function! s:suite.one()$/;"	f
s:suite.one_empty	vim/.vim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.one_empty()$/;"	f
s:suite.onetab	vim/.vim/plugged/lightline.vim/test/onetab.vim	/^function! s:suite.onetab()$/;"	f
s:suite.quickfix_statusline	vim/.vim/plugged/lightline.vim/test/quickfix.vim	/^function! s:suite.quickfix_statusline()$/;"	f
s:suite.raw_type	vim/.vim/plugged/lightline.vim/test/expand.vim	/^function! s:suite.raw_type()$/;"	f
s:suite.replace	vim/.vim/plugged/lightline.vim/test/highlight.vim	/^function! s:suite.replace()$/;"	f
s:suite.replace	vim/.vim/plugged/lightline.vim/test/link.vim	/^function! s:suite.replace()$/;"	f
s:suite.subseparator	vim/.vim/plugged/lightline.vim/test/highlight.vim	/^function! s:suite.subseparator()$/;"	f
s:suite.subseparator	vim/.vim/plugged/lightline.vim/test/link.vim	/^function! s:suite.subseparator()$/;"	f
s:suite.subseparator_component	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component()$/;"	f
s:suite.subseparator_component_expand	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand()$/;"	f
s:suite.subseparator_component_expand_1	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand_1()$/;"	f
s:suite.subseparator_component_expand_2	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand_2()$/;"	f
s:suite.subseparator_component_expand_3	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_expand_3()$/;"	f
s:suite.subseparator_component_function	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function()$/;"	f
s:suite.subseparator_component_function_1	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_1()$/;"	f
s:suite.subseparator_component_function_2	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_2()$/;"	f
s:suite.subseparator_component_function_3	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_3()$/;"	f
s:suite.subseparator_component_function_4	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_4()$/;"	f
s:suite.subseparator_component_function_5	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_5()$/;"	f
s:suite.subseparator_component_function_6	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_6()$/;"	f
s:suite.subseparator_component_function_7	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_7()$/;"	f
s:suite.subseparator_component_function_visible_condition_1	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_1()$/;"	f
s:suite.subseparator_component_function_visible_condition_2	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_2()$/;"	f
s:suite.subseparator_component_function_visible_condition_3	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_3()$/;"	f
s:suite.subseparator_component_function_visible_condition_4	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_4()$/;"	f
s:suite.subseparator_component_function_visible_condition_5	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_5()$/;"	f
s:suite.subseparator_component_function_visible_condition_6	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_6()$/;"	f
s:suite.subseparator_component_function_visible_condition_7	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_function_visible_condition_7()$/;"	f
s:suite.subseparator_component_not_found	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_not_found()$/;"	f
s:suite.subseparator_component_not_found_1	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_not_found_1()$/;"	f
s:suite.subseparator_component_not_found_2	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_not_found_2()$/;"	f
s:suite.subseparator_component_visible_condition_1	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_1()$/;"	f
s:suite.subseparator_component_visible_condition_2	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_2()$/;"	f
s:suite.subseparator_component_visible_condition_3	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_3()$/;"	f
s:suite.subseparator_component_visible_condition_4	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_4()$/;"	f
s:suite.subseparator_component_visible_condition_5	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_5()$/;"	f
s:suite.subseparator_component_visible_condition_6	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_6()$/;"	f
s:suite.subseparator_component_visible_condition_7	vim/.vim/plugged/lightline.vim/test/subseparator.vim	/^function! s:suite.subseparator_component_visible_condition_7()$/;"	f
s:suite.tab_component	vim/.vim/plugged/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component()$/;"	f
s:suite.tab_component_empty_left	vim/.vim/plugged/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component_empty_left()$/;"	f
s:suite.tab_component_empty_middle	vim/.vim/plugged/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component_empty_middle()$/;"	f
s:suite.tab_component_function	vim/.vim/plugged/lightline.vim/test/onetab.vim	/^function! s:suite.tab_component_function()$/;"	f
s:suite.tabclose	vim/.vim/plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabclose()$/;"	f
s:suite.tabclose_last	vim/.vim/plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabclose_last()$/;"	f
s:suite.tabline	vim/.vim/plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabline()$/;"	f
s:suite.tabnew	vim/.vim/plugged/lightline.vim/test/onetab.vim	/^function! s:suite.tabnew()$/;"	f
s:suite.tabnew	vim/.vim/plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabnew()$/;"	f
s:suite.tabnew	vim/.vim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew()$/;"	f
s:suite.tabnew_20	vim/.vim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20()$/;"	f
s:suite.tabnew_20_tabfirst	vim/.vim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabfirst()$/;"	f
s:suite.tabnew_20_tabfirst_tabnext	vim/.vim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabfirst_tabnext()$/;"	f
s:suite.tabnew_20_tabnext_10	vim/.vim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabnext_10()$/;"	f
s:suite.tabnew_20_tabprevious	vim/.vim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabprevious()$/;"	f
s:suite.tabnew_20_tabprevious_tabprevious	vim/.vim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_20_tabprevious_tabprevious()$/;"	f
s:suite.tabnew_first	vim/.vim/plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabnew_first()$/;"	f
s:suite.tabnew_tabfirst	vim/.vim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabfirst()$/;"	f
s:suite.tabnew_tabnew	vim/.vim/plugged/lightline.vim/test/onetab.vim	/^function! s:suite.tabnew_tabnew()$/;"	f
s:suite.tabnew_tabnew	vim/.vim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabnew()$/;"	f
s:suite.tabnew_tabnew_tabfirst	vim/.vim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabnew_tabfirst()$/;"	f
s:suite.tabnew_tabnew_tabprevious	vim/.vim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabnew_tabnew_tabprevious()$/;"	f
s:suite.tabnext	vim/.vim/plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabnext()$/;"	f
s:suite.tabonly	vim/.vim/plugged/lightline.vim/test/tabline.vim	/^function! s:suite.tabonly()$/;"	f
s:suite.tabs	vim/.vim/plugged/lightline.vim/test/tabs.vim	/^function! s:suite.tabs()$/;"	f
s:suite.three	vim/.vim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three()$/;"	f
s:suite.three	vim/.vim/plugged/lightline.vim/test/uniq.vim	/^function! s:suite.three()$/;"	f
s:suite.three_duplicated	vim/.vim/plugged/lightline.vim/test/uniq.vim	/^function! s:suite.three_duplicated()$/;"	f
s:suite.three_empty_all	vim/.vim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_all()$/;"	f
s:suite.three_empty_left	vim/.vim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_left()$/;"	f
s:suite.three_empty_left_middle	vim/.vim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_left_middle()$/;"	f
s:suite.three_empty_left_right	vim/.vim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_left_right()$/;"	f
s:suite.three_empty_middle	vim/.vim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_middle()$/;"	f
s:suite.three_empty_middle_right	vim/.vim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_middle_right()$/;"	f
s:suite.three_empty_right	vim/.vim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.three_empty_right()$/;"	f
s:suite.toggle	vim/.vim/plugged/lightline.vim/test/toggle.vim	/^function! s:suite.toggle()$/;"	f
s:suite.two	vim/.vim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.two()$/;"	f
s:suite.two	vim/.vim/plugged/lightline.vim/test/uniq.vim	/^function! s:suite.two()$/;"	f
s:suite.two_duplicated	vim/.vim/plugged/lightline.vim/test/uniq.vim	/^function! s:suite.two_duplicated()$/;"	f
s:suite.two_empty_both	vim/.vim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.two_empty_both()$/;"	f
s:suite.two_empty_left	vim/.vim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.two_empty_left()$/;"	f
s:suite.two_empty_right	vim/.vim/plugged/lightline.vim/test/concatenate.vim	/^function! s:suite.two_empty_right()$/;"	f
s:suite.visual	vim/.vim/plugged/lightline.vim/test/highlight.vim	/^function! s:suite.visual()$/;"	f
s:suite.visual	vim/.vim/plugged/lightline.vim/test/link.vim	/^function! s:suite.visual()$/;"	f
s:suite.win_execute_setfiletype	vim/.vim/plugged/lightline.vim/test/popup.vim	/^function! s:suite.win_execute_setfiletype()$/;"	f
s:supports_star	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:supports_star = v:version > 703 || (v:version == 703 && has("patch596"))$/;"	v
s:surroundings	vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^function! s:surroundings() abort$/;"	f
s:sw	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^  function s:sw()$/;"	f
s:sw	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^  function s:sw()$/;"	f
s:sw	vim/.vim/plugged/vim-jsx-typescript/after/indent/typescriptreact.vim	/^  function! s:sw()$/;"	f
s:switch_in	vim/.vim/autoload/plug.vim	/^function! s:switch_in()$/;"	f
s:switch_out	vim/.vim/autoload/plug.vim	/^function! s:switch_out(...)$/;"	f
s:syn_at	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^function s:syn_at(l,c)$/;"	f
s:syng_com	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^let s:syng_com = 'comment\\|doc'$/;"	v
s:syng_linecom	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^let s:syng_linecom = 'linecomment\\c'$/;"	v
s:syng_multiline	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^let s:syng_multiline = 'comment\\c'$/;"	v
s:syng_str	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^let s:syng_str = 'string\\|template\\|special'$/;"	v
s:syng_strcom	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^let s:syng_strcom = 'string\\|comment\\|regex\\|special\\|doc\\|template\\%(braces\\)\\@!'$/;"	v
s:syng_strcom	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^let s:syng_strcom = 'string\\|regex\\|comment\\c'$/;"	v
s:syng_string	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^let s:syng_string = 'regex\\c'$/;"	v
s:syntax	vim/.vim/autoload/plug.vim	/^function! s:syntax()$/;"	f
s:syntax	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^  let s:syntax = ''$/;"	v
s:system	vim/.vim/autoload/plug.vim	/^function! s:system(cmd, ...)$/;"	f
s:system	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! s:system(cmd)$/;"	f
s:system	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:system(cmd, bg) abort$/;"	f
s:system_chomp	vim/.vim/autoload/plug.vim	/^function! s:system_chomp(...)$/;"	f
s:tab	vim/.vim/plugged/lightline.vim/test/tabs.vim	/^function! s:tab(number, ...) abort$/;"	f
s:tabcnt	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^let s:tabcnt = -1$/;"	v
s:table	vim/.vim/plugged/lightline.vim/autoload/lightline/colortable.vim	/^let s:table = s:load()$/;"	v
s:tabline	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^let s:tabline = ''$/;"	v
s:tabline_active_bg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_active_bg = '#00afaf'$/;"	v
s:tabline_active_bg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_active_bg = s:window$/;"	v
s:tabline_active_fg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_active_fg = '#1c1c1c'$/;"	v
s:tabline_active_fg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_active_fg = s:foreground$/;"	v
s:tabline_bg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_bg = '#3a3a3a'$/;"	v
s:tabline_bg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_bg = s:navy$/;"	v
s:tabline_inactive_bg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_inactive_bg = '#585858'$/;"	v
s:tabline_inactive_bg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_inactive_bg = s:aqua$/;"	v
s:tabline_inactive_fg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:tabline_inactive_fg = '#c6c6c6'$/;"	v
s:tabline_inactive_fg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:tabline_inactive_fg = s:background$/;"	v
s:tabnew	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! s:tabnew()$/;"	f
s:tabnr	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^let s:tabnr = -1$/;"	v
s:tags	vim/.vim/plugged/vim-graphql/after/syntax/javascript/graphql.vim	/^let s:tags = '\\%(' . join(graphql#javascript_tags(), '\\|') . '\\)'$/;"	v
s:tags	vim/.vim/plugged/vim-graphql/after/syntax/typescript/graphql.vim	/^let s:tags = '\\%(' . join(graphql#javascript_tags(), '\\|') . '\\)'$/;"	v
s:tags_sink	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:tags_sink(lines)$/;"	f
s:teal	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:teal = [ '#008080', 6 ]$/;"	v
s:temp_buffer	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:temp_buffer = tempname()$/;"	v
s:temp_files	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:temp_from	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:temp_from = tempname()$/;"	v
s:temp_scripts	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^  let s:temp_scripts = {}$/;"	v
s:term	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^function! s:term(p) abort$/;"	f
s:term_black	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_black = 235$/;"	v
s:term_blue	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_blue = 39$/;"	v
s:term_green	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_green = 114$/;"	v
s:term_grey	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_grey = 236$/;"	v
s:term_marker	vim/.vim/plugged/fzf/plugin/fzf.vim	/^  let s:term_marker = ";#FZF"$/;"	v
s:term_marker	vim/.vim/plugged/fzf/plugin/fzf.vim	/^  let s:term_marker = '&::FZF'$/;"	v
s:term_purple	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_purple = 170$/;"	v
s:term_red	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_red = 204$/;"	v
s:term_white	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_white = 145$/;"	v
s:term_yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/deus.vim	/^let s:term_yellow = 180$/;"	v
s:tern_col	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^function s:tern_col(p)$/;"	f
s:tern_skip	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^function s:tern_skip(p)$/;"	f
s:ternary	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^let s:ternary = '^\\s\\+[?|:]'$/;"	v
s:ternary_e	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^let s:ternary_e = '^\\s\\+:'$/;"	v
s:ternary_q	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^let s:ternary_q = '^\\s\\+?'$/;"	v
s:test	vim/.vim/plugged/vim-vue-plugin/indent/vue.vim	/^let s:test = exists('g:vim_vue_plugin_test')$/;"	v
s:test	vim/.vim/plugged/vim-vue-plugin/syntax/vue.vim	/^let s:test = exists('g:vim_vue_plugin_test')$/;"	v
s:test_repo	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^let s:test_repo   = s:current_dir.'\/test-repo'$/;"	v
s:tests	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^  let s:tests = filter(s:tests, 'v:val =~ argv(1)')$/;"	v
s:tests	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^let s:tests = split(substitute(@q, 'function \\(\\k*()\\)', '\\1', 'g'))$/;"	v
s:tests	vim/.vim/plugged/vim-rooter/test/runner.vim	/^  let s:tests = filter(s:tests, 'v:val =~ argv(1)')$/;"	v
s:tests	vim/.vim/plugged/vim-rooter/test/runner.vim	/^let s:tests = split(substitute(@q, 'function \\(\\k*()\\)', '\\1', 'g'))$/;"	v
s:textobject	vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^function! s:textobject(inner) abort$/;"	f
s:throw	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:throw(string) abort$/;"	f
s:throw	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! s:throw(string) abort$/;"	f
s:tick	vim/.vim/autoload/plug.vim	/^function! s:tick()$/;"	f
s:timer	vim/.vim/plugged/vim-vue-plugin/indent/vue.vim	/^let s:timer = exists('*timer_start') && !exists('SessionLoad') && !s:test$/;"	v
s:timer	vim/.vim/plugged/vim-vue-plugin/syntax/vue.vim	/^let s:timer = exists('*timer_start') && !exists('SessionLoad') && !s:test$/;"	v
s:tmux_enabled	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:tmux_enabled()$/;"	f
s:to_a	vim/.vim/autoload/plug.vim	/^function! s:to_a(v)$/;"	f
s:to_mode	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:to_mode = ''$/;"	v
s:to_s	vim/.vim/autoload/plug.vim	/^function! s:to_s(v)$/;"	f
s:toggle	vim/.vim/plugged/vim-rooter/plugin/rooter.vim	/^function! s:toggle()$/;"	f
s:toggle_global_golden_ratio	vim/.vim/plugged/golden-ratio/plugin/golden_ratio.vim	/^function! s:toggle_global_golden_ratio()$/;"	f
s:token	vim/.vim/plugged/typescript-vim/indent/typescript.vim	/^function s:token()$/;"	f
s:tracked	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! s:tracked(fugitive_repo, file)$/;"	f
s:traverse_branches	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:traverse_branches(motion) abort$/;"	f
s:traverse_groups	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:traverse_groups(motion) abort$/;"	f
s:trees	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:trees = {}$/;"	v
s:trigger_gitgutter	vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:trigger_gitgutter()$/;"	f
s:triggers	vim/.vim/autoload/plug.vim	/^let s:triggers = get(s:, 'triggers', {})$/;"	v
s:trim	vim/.vim/autoload/plug.vim	/^function! s:trim(str)$/;"	f
s:trim	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! s:trim(str)$/;"	f
s:trim	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! s:trim(arg)$/;"	f
s:tsx_cpo	vim/.vim/plugged/vim-jsx-typescript/after/syntax/typescriptreact.vim	/^let s:tsx_cpo = &cpo$/;"	v
s:type	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! s:type(visual)$/;"	f
s:type	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^let s:type         = [ 'none', 'hex', 'rgba', 'css', 'none' ] " with wraparound for index() == -/;"	v
s:unc_path	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:unc_path(bufnr)$/;"	f
s:undo	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:undo(hunk_diff)$/;"	f
s:undo_params_meta	vim/.vim/plugged/far.vim/autoload/far.vim	/^let s:undo_params_meta = {$/;"	v
s:uniq	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^  function! s:uniq(xs) abort$/;"	f
s:uniq	vim/.vim/plugged/lightline.vim/autoload/lightline.vim	/^  let s:uniq = function('uniq')$/;"	v
s:uniq	vim/.vim/plugged/lightline.vim/test/uniq.vim	/^function! s:uniq(...)$/;"	f
s:unix_redir	vim/.vim/plugged/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unix_redir	vim/.vim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:upconvert	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:upconvert(nr) abort$/;"	f
s:update	vim/.vim/autoload/plug.vim	/^function! s:update(force, names)$/;"	f
s:update_far_buffer	vim/.vim/plugged/far.vim/autoload/far.vim	/^function! s:update_far_buffer(far_ctx, bufnr) abort "{{{$/;"	f
s:update_finish	vim/.vim/autoload/plug.vim	/^function! s:update_finish()$/;"	f
s:update_impl	vim/.vim/autoload/plug.vim	/^function! s:update_impl(pull, force, args) abort$/;"	f
s:update_in_progress	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^    let s:update_in_progress[module] = []$/;"	v
s:update_in_progress	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^let s:update_in_progress = {}$/;"	v
s:update_last_branch_under_cursor	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! s:update_last_branch_under_cursor() abort$/;"	f
s:update_progress	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:update_progress(bufnr, width, ts) abort$/;"	f
s:update_python	vim/.vim/autoload/plug.vim	/^function! s:update_python()$/;"	f
s:update_queue	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^    let s:update_queue[module] = []$/;"	v
s:update_queue	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^let s:update_queue = {}$/;"	v
s:update_ruby	vim/.vim/autoload/plug.vim	/^function! s:update_ruby()$/;"	f
s:update_tags	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:update_tags(bufno, module, write_mode, queue_mode) abort$/;"	f
s:update_vim	vim/.vim/autoload/plug.vim	/^function! s:update_vim()$/;"	f
s:update_visual_markers	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:update_visual_markers(region)$/;"	f
s:upgrade	vim/.vim/autoload/plug.vim	/^function! s:upgrade()$/;"	f
s:upgrade_specs	vim/.vim/autoload/plug.vim	/^function! s:upgrade_specs()$/;"	f
s:upsert_new_gitgutter_signs	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:upsert_new_gitgutter_signs(bufnr, modified_lines) abort$/;"	f
s:url_encode	vim/.vim/plugged/vim-rhubarb/autoload/rhubarb.vim	/^function! s:url_encode(str) abort$/;"	f
s:use_known_shell	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:use_known_shell() abort$/;"	f
s:use_sh	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:use_sh()$/;"	f
s:use_word_boundary	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:use_word_boundary = 1$/;"	v
s:useful_diff_colours	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:useful_diff_colours()$/;"	f
s:validate_layout	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:validate_layout(layout)$/;"	f
s:var	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:var = '\\%(<\\%(cword\\|cWORD\\|cexpr\\|cfile\\|sfile\\|slnum\\|afile\\|abuf\\|amatch' . (/;"	v
s:var_stmt	vim/.vim/plugged/vim-vue-plugin/lib/indent/typescript.vim	/^let s:var_stmt = '^\\s*var'$/;"	v
s:variables	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! s:variables(bufnr) abort$/;"	f
s:version_requirement	vim/.vim/autoload/plug.vim	/^function! s:version_requirement(val, min)$/;"	f
s:versions	vim/.vim/plugged/fzf/plugin/fzf.vim	/^let s:versions = {}$/;"	v
s:veryDarkGray	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:veryDarkGray = [ '#1c1d21' , 234 ]$/;"	v
s:vim8	vim/.vim/autoload/plug.vim	/^let s:vim8 = has('patch-8.0.0039') && exists('*job_start')$/;"	v
s:vim_api_version	vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^let s:vim_api_version = 10$/;"	v
s:vim_version	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:vim_version()$/;"	f
s:violet	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/simpleblack.vim	/^let s:violet = [ '#cf73e6', '170' ]$/;"	v
s:violet	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:violet = [ '#6c71c4', s:cuicolors.violet[s:cuiindex] ]$/;"	v
s:visual_bg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:visual_bg = '#8787af'$/;"	v
s:visual_fg	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:visual_fg = '#000000'$/;"	v
s:vue3_keywords	vim/.vim/plugged/vim-vue-plugin/syntax/patch/vue-keyword.vim	/^let s:vue3_keywords = join([s:basic_reactive, s:refs, s:computed_and_watch, s:composition, s:glo/;"	v
s:vue3_keywords_regexp	vim/.vim/plugged/vim-vue-plugin/syntax/patch/vue-keyword.vim	/^let s:vue3_keywords_regexp = '\\v<('$/;"	v
s:vue_keywords	vim/.vim/plugged/vim-vue-plugin/syntax/patch/vue-keyword.vim	/^let s:vue_keywords = 'name parent functional delimiters comments components directives filters e/;"	v
s:wait_for_user_input	vim/.vim/plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:wait_for_user_input(mode)$/;"	f
s:warn	vim/.vim/autoload/plug.vim	/^function! s:warn(cmd, msg)$/;"	f
s:warn	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:warn(message)$/;"	f
s:warn	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:warn(msg)$/;"	f
s:warn	vim/.vim/plugged/gv.vim/plugin/gv.vim	/^function! s:warn(message)$/;"	f
s:warned	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:warned = 0$/;"	v
s:warning_sign	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^let s:warning_sign = get(g:, 'coc_status_warning_sign', has('mac') ? '⚠️ ' : 'W')$/;"	v
s:watched_keys	vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^let s:watched_keys = []$/;"	v
s:white	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:white = [ '#ffffff', 15 ]$/;"	v
s:white	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:white = [ '#ffffff' , 15 ]$/;"	v
s:white	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:white = [ '#a9b7c6', 250 ]$/;"	v
s:white	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:white = [ '#f8f8f2', 234 ]$/;"	v
s:white	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:white = [ '#d0d0d0', 252 ]$/;"	v
s:white	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:white = [ '#fce8c3', 15 ]$/;"	v
s:wide	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:wide = 120$/;"	v
s:wildignores_options_path	vim/.vim/plugged/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:wildignores_options_path = ''$/;"	v
s:win_close_float	vim/.vim/plugged/vim-translator/autoload/translator/window/float.vim	/^function! s:win_close_float() abort$/;"	f
s:win_close_preview	vim/.vim/plugged/vim-translator/autoload/translator/window/preview.vim	/^function! s:win_close_preview() abort$/;"	f
s:win_execute	vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^  function! s:win_execute(win_id, cmd, ...) abort$/;"	f
s:win_execute	vim/.vim/plugged/vim-translator/autoload/translator/window/float.vim	/^function! s:win_execute(winid, command) abort$/;"	f
s:win_exists	vim/.vim/plugged/vim-translator/autoload/translator/window/float.vim	/^function! s:win_exists(winid) abort$/;"	f
s:win_exists	vim/.vim/plugged/vim-translator/autoload/translator/window/preview.vim	/^function! s:win_exists(winid) abort$/;"	f
s:win_getoptions	vim/.vim/plugged/vim-translator/autoload/translator/window.vim	/^function! s:win_getoptions(width, height) abort$/;"	f
s:win_getsize	vim/.vim/plugged/vim-translator/autoload/translator/window.vim	/^function! s:win_getsize(translation, max_width, max_height) abort$/;"	f
s:win_gettype	vim/.vim/plugged/vim-translator/autoload/translator/window.vim	/^function! s:win_gettype() abort$/;"	f
s:win_params_meta	vim/.vim/plugged/far.vim/autoload/far.vim	/^let s:win_params_meta = {$/;"	v
s:win_setview	vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:win_setview(winid, topline, lnum) abort$/;"	f
s:win_setview	vim/.vim/plugged/vim-translator/autoload/translator/window/float.vim	/^function! s:win_setview(winid, topline, lnum) abort$/;"	f
s:window	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_dark.vim	/^let s:window = '#efefef'$/;"	v
s:window	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/PaperColor_light.vim	/^let s:window = '#efefef'$/;"	v
s:window_list	vim/.vim/plugged/golden-ratio/plugin/golden_ratio.vim	/^function! s:window_list()$/;"	f
s:windows_sink	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:windows_sink(line)$/;"	f
s:winid	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^let s:winid = 0$/;"	v
s:winid	vim/.vim/plugged/vim-translator/autoload/translator/window/float.vim	/^let s:winid = -1$/;"	v
s:winid	vim/.vim/plugged/vim-translator/autoload/translator/window/preview.vim	/^let s:winid = -1$/;"	v
s:winshell	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^function! s:winshell() abort$/;"	f
s:winshell	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:winshell()$/;"	f
s:wintype	vim/.vim/plugged/vim-translator/autoload/translator/window.vim	/^let s:wintype = s:win_gettype()$/;"	v
s:with_cd	vim/.vim/autoload/plug.vim	/^function! s:with_cd(cmd, dir, ...)$/;"	f
s:worktree_error	vim/.vim/plugged/vim-fugitive/autoload/fugitive.vim	/^let s:worktree_error = "core.worktree is required when using an external Git dir"$/;"	v
s:worktree_for_dir	vim/.vim/plugged/vim-fugitive/plugin/fugitive.vim	/^let s:worktree_for_dir = {}$/;"	v
s:wrap	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:wrap(name, opts, bang)$/;"	f
s:wrap_cmds	vim/.vim/autoload/plug.vim	/^  function! s:wrap_cmds(cmds)$/;"	f
s:wrap_cmds	vim/.vim/plugged/fzf/plugin/fzf.vim	/^  function! s:wrap_cmds(cmds)$/;"	f
s:write_buffer	vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:write_buffer(bufnr, file)$/;"	f
s:write_triggered_update_tags	vim/.vim/plugged/vim-gutentags/autoload/gutentags.vim	/^function! s:write_triggered_update_tags(bufno) abort$/;"	f
s:xterm_launcher	vim/.vim/plugged/fzf/plugin/fzf.vim	/^function! s:xterm_launcher()$/;"	f
s:xtermcolor	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^		let s:xtermcolor[idx] = s:rgb2din99( map(s:xtermcolor[idx], 'v:val \/ 255.0') )$/;"	v
s:xtermcolor	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^	let s:xtermcolor += map( range(24), 'repeat( [10 * v:val + 8], 3 )' )$/;"	v
s:xtermcolor	vim/.vim/plugged/vim-css-color/autoload/css_color.vim	/^	let s:xtermcolor = [$/;"	v
s:yank_to_register	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:yank_to_register(data)$/;"	f
s:yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:yellow = [ '#ffff00', 11 ]$/;"	v
s:yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/OldHope.vim	/^let s:yellow = [ '#e5cd52' , 221 ]$/;"	v
s:yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:yellow = '#eab700'$/;"	v
s:yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:yellow = '#f0c674'$/;"	v
s:yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:yellow = '#ffeead'$/;"	v
s:yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:yellow = '#e7c547'$/;"	v
s:yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:yellow = '#ffcc66'$/;"	v
s:yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/apprentice.vim	/^let s:yellow       = [ '#ffffaf', 229 ]$/;"	v
s:yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_dark.vim	/^let s:yellow = '#e6b673'$/;"	v
s:yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_light.vim	/^let s:yellow = '#E6B673'$/;"	v
s:yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/ayu_mirage.vim	/^let s:yellow = '#ffc44c'$/;"	v
s:yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/darcula.vim	/^let s:yellow = [ '#ffc66d', 222 ]$/;"	v
s:yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:yellow = [ '#ffb964', 215 ]$/;"	v
s:yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/materia.vim	/^let s:yellow = '#ffcc00'$/;"	v
s:yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/material.vim	/^let s:yellow = '#ffcb6b'$/;"	v
s:yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/molokai.vim	/^let s:yellow = [ '#e6db74', 229 ]$/;"	v
s:yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/one.vim	/^let s:yellow = [ '#e5c07b', 180 ]$/;"	v
s:yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_black.vim	/^let s:yellow    = ['#dbb32d', 3]$/;"	v
s:yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_dark.vim	/^let s:yellow    = ['#dbb32d', 3]$/;"	v
s:yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_light.vim	/^let s:yellow    = ['#ad8900', 3]$/;"	v
s:yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/selenized_white.vim	/^let s:yellow    = ['#c49700', 3]$/;"	v
s:yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/seoul256.vim	/^let s:yellow = [ '#d8af5f', 3 ]$/;"	v
s:yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^let s:yellow = [ '#b58900', s:cuicolors.yellow[s:cuiindex] ]$/;"	v
s:yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/srcery_drk.vim	/^let s:yellow = [ '#fbb829', 3 ]$/;"	v
s:yellow	vim/.vim/plugged/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:yellow = [ '#cae682', 180 ]$/;"	v
s:z	vim/.vim/plugged/vim-javascript/indent/javascript.vim	/^let s:z = has('patch-7.4.984') ? 'z' : ''$/;"	v
sB	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
sC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
sD	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
sG	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let f of this._placeholders)if(f.index==o&&f.id<s&&f.line==e.range.start.line){let d=thi/;"	f
sI	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
sJ	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
sK	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
sL	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
sM	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	v
sQ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
sS	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
sU	vim/.vim/plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
sV	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
sW	vim/.vim/plugged/coc.nvim/build/index.js	/^`;function sW(r,e){var t=[],i="";typeof e=="string"?e={section:e,whitespace:!1}:(e=e||{},e.white/;"	f
sX	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
sZ	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
s_	vim/.vim/plugged/coc.nvim/build/index.js	/^`:"")}get lineCount(){return this.lines.length+(this.eol?1:0)}getText(e){if(e){let t=this.offset/;"	v
sa	vim/.vim/plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
sae	vim/.vim/plugged/coc.nvim/build/index.js	/^`}function sae(r){return r.replace(Woe,":")}function v$(r,e=null){if(!r)return[];e=e||Sn;let t=e/;"	f
safe-buffer	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "safe-buffer": "5.1.2"$/;"	s	object:dependencies.content-disposition.requires
safe-buffer	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "safe-buffer": "~5.1.1"$/;"	s	object:dependencies.convert-source-map.requires
safe-buffer	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "safe-buffer": {$/;"	o	object:dependencies
safe-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "safe-regex": "^1.1.0"$/;"	s	object:dependencies.regex-not.requires
safe-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "safe-regex": "^1.1.0"$/;"	s	object:dependencies.to-regex.requires
safe-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "safe-regex": {$/;"	o	object:dependencies
safer-buffer	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "safer-buffer": ">= 2.1.2 < 3"$/;"	s	object:dependencies.iconv-lite.requires
safer-buffer	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "safer-buffer": {$/;"	o	object:dependencies
sane	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "sane": "^4.0.3",$/;"	s	object:dependencies.jest-haste-map.requires
sane	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "sane": {$/;"	o	object:dependencies
saxes	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "saxes": "^5.0.1",$/;"	s	object:dependencies.jsdom.requires
saxes	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "saxes": {$/;"	o	object:dependencies
sc	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
scan	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:h
scan	vim/.vim/plugged/fzf/src/matcher.go	/^func (m *Matcher) scan(request MatchRequest) (*Merger, bool) {$/;"	f	struct:fzf.Matcher	typeref:typename:(*Merger, bool)
score	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	p	class:c
scoreGapExtension	vim/.vim/plugged/fzf/src/algo/algo.go	/^	scoreGapExtension = -1$/;"	c	package:algo
scoreGapStart	vim/.vim/plugged/fzf/src/algo/algo.go	/^	scoreGapStart     = -3$/;"	c	package:algo
scoreMatch	vim/.vim/plugged/fzf/src/algo/algo.go	/^	scoreMatch        = 16$/;"	c	package:algo
script	.ctags.d/vue.ctags	/^--regex-vue=\/^(<style.*)$\/style\/s,script\/{scope=set}{exclusive}$/;"	k	langdef:vue
script_output_fn	vim/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^    $script_output_fn = [System.IO.Path]::GetTempFileName()$/;"	v
script_output_fn	vim/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$script_output_fn = ''$/;"	v
script_path	vim/.vim/plugged/vim-translator/test/test_translator.py	/^script_path = os.path.join(curr_dir, "..\/script")$/;"	v
scroll	vim/.vim/plugged/fzf/src/options.go	/^	scroll      string$/;"	m	struct:fzf.previewOpts	typeref:typename:string
scrollOff	vim/.vim/plugged/fzf/src/terminal.go	/^	scrollOff    int$/;"	m	struct:fzf.Terminal	typeref:typename:int
scrollable	vim/.vim/plugged/fzf/src/terminal.go	/^	scrollable bool$/;"	m	struct:fzf.previewer	typeref:typename:bool
scss.validate	.config/nvim_copy/coc-settings.json	/^  "scss.validate": false,$/;"	b
scss.validate	vim/.vim/coc-settings.json	/^  "scss.validate": false,$/;"	b
se	vim/.vim/plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
search	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:jW.e
search	vim/.vim/plugged/far.vim/rplugin/python3/far/sources/shell.py	/^def search(ctx, args, cmdargs):$/;"	f
searchRequest	vim/.vim/plugged/fzf/src/terminal.go	/^type searchRequest struct {$/;"	s	package:fzf
see	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
selectItem	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) selectItem(item *Item) bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
selectItemChanged	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) selectItemChanged(item *Item) bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
select_count	vim/.vim/plugged/fzf/test/test_go.rb	/^          def select_count$/;"	f	method:Tmux.until
selected	vim/.vim/plugged/fzf/src/terminal.go	/^	selected     map[int32]selectedItem$/;"	m	struct:fzf.Terminal	typeref:typename:map[int32]selectedItem
selected	vim/.vim/plugged/fzf/src/terminal.go	/^	selected bool$/;"	m	struct:fzf.itemLine	typeref:typename:bool
selectedItem	vim/.vim/plugged/fzf/src/terminal.go	/^type selectedItem struct {$/;"	s	package:fzf
selectionRange	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78ae12100.e.c
selenized_black	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### selenized_black$/;"	S	chapter:Available Colorschemes
selenized_dark	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### selenized_dark$/;"	S	chapter:Available Colorschemes
selenized_light	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### selenized_light$/;"	S	chapter:Available Colorschemes
selenized_white	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### selenized_white$/;"	S	chapter:Available Colorschemes
semver	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "semver": "^5.5.0",$/;"	s	object:dependencies.execa.dependencies.cross-spawn.requires
semver	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "semver": "2 || 3 || 4 || 5",$/;"	s	object:dependencies.normalize-package-data.requires
semver	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "semver": "7.x",$/;"	s	object:dependencies.ts-jest.requires
semver	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "semver": "^6.0.0"$/;"	s	object:dependencies.make-dir.requires
semver	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "semver": "^6.3.0"$/;"	s	object:dependencies.@babel/helper-compilation-targets.requires
semver	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "semver": "^6.3.0"$/;"	s	object:dependencies.istanbul-lib-instrument.requires
semver	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "semver": "^6.3.0",$/;"	s	object:dependencies.@babel/core.requires
semver	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "semver": "^7.2.1",$/;"	s	object:dependencies.eslint.requires
semver	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "semver": "^7.3.2"$/;"	s	object:dependencies.jest-snapshot.requires
semver	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "semver": "^7.3.2",$/;"	s	object:dependencies.@typescript-eslint/eslint-plugin.requires
semver	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "semver": "^7.3.2",$/;"	s	object:dependencies.@typescript-eslint/typescript-estree.requires
semver	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "semver": "^7.3.2",$/;"	s	object:dependencies.node-notifier.requires
semver	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "semver": "^7.3.4",$/;"	s	object:dependencies.eslint-plugin-jsdoc.requires
semver	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "semver": {$/;"	o	object:dependencies.@babel/core.dependencies
semver	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "semver": {$/;"	o	object:dependencies.@babel/helper-compilation-targets.dependencies
semver	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "semver": {$/;"	o	object:dependencies.eslint-plugin-jsdoc.dependencies
semver	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "semver": {$/;"	o	object:dependencies.execa.dependencies
semver	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "semver": {$/;"	o	object:dependencies.istanbul-lib-instrument.dependencies
semver	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "semver": {$/;"	o	object:dependencies.make-dir.dependencies
semver	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "semver": {$/;"	o	object:dependencies.normalize-package-data.dependencies
semver	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "semver": {$/;"	o	object:dependencies
sendNotification	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	p	class:f
send_keys	vim/.vim/plugged/fzf/test/test_go.rb	/^  def send_keys(*args)$/;"	f	class:Tmux
seoul256	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### seoul256$/;"	S	chapter:Available Colorschemes
separator-block-width	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        "separator-block-width": 0,$/;"	n	object:defaults
separator_left	vim/.vim/plugged/iceberg-dark/.tmux/iceberg.tmux.conf	/^separator_left="\\ue0bc"$/;"	k
separator_right	vim/.vim/plugged/iceberg-dark/.tmux/iceberg.tmux.conf	/^separator_right="\\ue0ba"$/;"	k
set-blocking	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "set-blocking": "^2.0.0",$/;"	s	object:dependencies.yargs.requires
set-blocking	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "set-blocking": {$/;"	o	object:dependencies
set-value	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "set-value": "^2.0.0",$/;"	s	object:dependencies.cache-base.requires
set-value	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "set-value": "^2.0.1"$/;"	s	object:dependencies.union-value.requires
set-value	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "set-value": {$/;"	o	object:dependencies
setBg	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) setBg() {$/;"	f	struct:tui.LightWindow
set_file_content	vim/.vim/plugged/vim-multiple-cursors/spec/benchmark_spec.rb	/^def set_file_content(string)$/;"	f
set_file_content	vim/.vim/plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def set_file_content(string)$/;"	f
set_proxy	vim/.vim/plugged/vim-translator/script/translator.py	/^    def set_proxy(self, proxy_url=None):$/;"	m	class:BaseTranslator
set_var	vim/.vim/plugged/fzf/test/test_go.rb	/^  def set_var(name, val)$/;"	f	class:TestFish
set_var	vim/.vim/plugged/fzf/test/test_go.rb	/^  def set_var(name, val)$/;"	f	module:TestShell
set_version	vim/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^                $set_version = $argv[$idx]$/;"	v
set_version	vim/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$set_version = ''$/;"	v
settings	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "settings": {$/;"	o	object:definitions.languageServerBase.properties
settings	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "settings": {},$/;"	o	object:definitions.languageServerCommand.properties
settings	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "settings": {},$/;"	o	object:definitions.languageServerModule.properties
settings	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "settings": {},$/;"	o	object:definitions.languageServerSocket.properties
settingsSchema	vim/.vim/plugged/vim-styled-components/examples/complex.js	/^const settingsSchema: Object = {$/;"	c
setup	vim/.vim/plugged/fzf/test/test_go.rb	/^  def setup$/;"	f	class:TestGoFZF
setup	vim/.vim/plugged/fzf/test/test_go.rb	/^  def setup$/;"	f	module:TestShell
setupTerminal	vim/.vim/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) setupTerminal() {$/;"	f	unknown:tui.LightRenderer
setupTerminal	vim/.vim/plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) setupTerminal() error {$/;"	f	unknown:tui.LightRenderer	typeref:typename:error
sf	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
sge	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	f
sh	vim/.vim/plugged/coc.nvim/build/index.js	/^`),0,i]]);return t[o-1]}async withProgress(e,t){return this.checkDialog()?await new bg(this.nvim/;"	f
shadow	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "shadow": {$/;"	o	object:definitions.float.properties
shadow	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "shadow": {}$/;"	o	object:properties.diagnostic.floatConfig.properties
shadow	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "shadow": {}$/;"	o	object:properties.hover.floatConfig.properties
shadow	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "shadow": {}$/;"	o	object:properties.signature.floatConfig.properties
shadow	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "shadow": {}$/;"	o	object:properties.suggest.floatConfig.properties
shape	vim/.vim/plugged/fzf/src/tui/tui.go	/^	shape       BorderShape$/;"	m	struct:tui.BorderStyle	typeref:typename:BorderShape
shebang-command	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "shebang-command": "^1.2.0",$/;"	s	object:dependencies.execa.dependencies.cross-spawn.requires
shebang-command	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "shebang-command": "^2.0.0",$/;"	s	object:dependencies.cross-spawn.requires
shebang-command	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "shebang-command": {$/;"	o	object:dependencies.execa.dependencies
shebang-command	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "shebang-command": {$/;"	o	object:dependencies
shebang-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "shebang-regex": "^1.0.0"$/;"	s	object:dependencies.execa.dependencies.shebang-command.requires
shebang-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "shebang-regex": "^3.0.0"$/;"	s	object:dependencies.shebang-command.requires
shebang-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "shebang-regex": {$/;"	o	object:dependencies.execa.dependencies
shebang-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "shebang-regex": {$/;"	o	object:dependencies
shell	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "shell": {$/;"	o	object:definitions.languageServerCommand.properties
shell	vim/.vim/plugged/fzf/test/test_go.rb	/^  def shell$/;"	f	class:TestBash
shell	vim/.vim/plugged/fzf/test/test_go.rb	/^  def shell$/;"	f	class:TestFish
shell	vim/.vim/plugged/fzf/test/test_go.rb	/^  def shell$/;"	f	class:TestZsh
shellPath	vim/.vim/plugged/fzf/src/util/util_windows.go	/^var shellPath atomic.Value$/;"	v	package:util	typeref:typename:atomic.Value
shellwords	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "shellwords": "^0.1.1",$/;"	s	object:dependencies.node-notifier.requires
shellwords	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "shellwords": {$/;"	o	object:dependencies
shutdown	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f	function:o
si	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	c
side-channel	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "side-channel": "^1.0.3"$/;"	s	object:dependencies.string.prototype.matchall.requires
side-channel	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "side-channel": "^1.0.4"$/;"	s	object:dependencies.internal-slot.requires
side-channel	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "side-channel": {$/;"	o	object:dependencies
sign	vim/.vim/plugged/vim-translator/script/translator.py	/^    def sign(self, text, salt):$/;"	m	class:YoudaoTranslator
signal-exit	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "signal-exit": "^3.0.2",$/;"	s	object:dependencies.jest-changed-files.dependencies.execa.requires
signal-exit	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "signal-exit": "^3.0.0",$/;"	s	object:dependencies.execa.requires
signal-exit	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "signal-exit": "^3.0.2",$/;"	s	object:dependencies.write-file-atomic.requires
signal-exit	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "signal-exit": {$/;"	o	object:dependencies
signature.enable	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "signature.enable": {$/;"	o	object:properties
signature.floatConfig	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "signature.floatConfig": {$/;"	o	object:properties
signature.hideOnTextChange	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "signature.hideOnTextChange": {$/;"	o	object:properties
signature.preferShownAbove	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "signature.preferShownAbove": {$/;"	o	object:properties
signature.target	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "signature.target": {$/;"	o	object:properties
signature.triggerSignatureWait	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "signature.triggerSignatureWait": {$/;"	o	object:properties
sigstop	vim/.vim/plugged/fzf/src/terminal.go	/^	sigstop      bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
simpleblack	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### simpleblack$/;"	S	chapter:Available Colorschemes
sisteransi	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "sisteransi": "^1.0.5"$/;"	s	object:dependencies.prompts.requires
sisteransi	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "sisteransi": {$/;"	o	object:dependencies
size	vim/.vim/plugged/fzf/src/options.go	/^	size        sizeSpec$/;"	m	struct:fzf.previewOpts	typeref:typename:sizeSpec
size	vim/.vim/plugged/fzf/src/options.go	/^	size    float64$/;"	m	struct:fzf.sizeSpec	typeref:typename:float64
sizeSpec	vim/.vim/plugged/fzf/src/options.go	/^type sizeSpec struct {$/;"	s	package:fzf
sj	vim/.vim/plugged/coc.nvim/build/index.js	/^`);e=Rn.Position.create(e.line-s,e.character),t=Rn.Position.create(t.line-s,t.character);let l=_/;"	v
sk	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
skip	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:h
skip	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	p	class:AnonymousFunction272f78ae2f400.t.e
slab	vim/.vim/plugged/fzf/src/matcher.go	/^	slab           []*util.Slab$/;"	m	struct:fzf.Matcher	typeref:typename:[]*util.Slab
slab	vim/.vim/plugged/fzf/src/pattern_test.go	/^var slab *util.Slab$/;"	v	package:fzf	typeref:typename:*util.Slab
slab	vim/.vim/plugged/fzf/src/terminal.go	/^	slab         *util.Slab$/;"	m	struct:fzf.Terminal	typeref:typename:*util.Slab
slab16Size	vim/.vim/plugged/fzf/src/constants.go	/^	slab16Size int = 100 * 1024 \/\/ 200KB * 32 = 12.8MB$/;"	c	package:fzf	typeref:typename:int
slab32Size	vim/.vim/plugged/fzf/src/constants.go	/^	slab32Size int = 2048       \/\/ 8KB * 32 = 256KB$/;"	c	package:fzf	typeref:typename:int
slash	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "slash": "^3.0.0"$/;"	s	object:dependencies.@jest/console.requires
slash	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "slash": "^3.0.0"$/;"	s	object:dependencies.babel-jest.requires
slash	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "slash": "^3.0.0"$/;"	s	object:dependencies.globby.requires
slash	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "slash": "^3.0.0"$/;"	s	object:dependencies.jest-resolve.requires
slash	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "slash": "^3.0.0",$/;"	s	object:dependencies.@jest/core.requires
slash	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "slash": "^3.0.0",$/;"	s	object:dependencies.@jest/reporters.requires
slash	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "slash": "^3.0.0",$/;"	s	object:dependencies.@jest/transform.requires
slash	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "slash": "^3.0.0",$/;"	s	object:dependencies.jest-message-util.requires
slash	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "slash": "^3.0.0",$/;"	s	object:dependencies.jest-runtime.requires
slash	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "slash": {$/;"	o	object:dependencies
sle	vim/.vim/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:o}}function QB(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	f
slice	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	m	class:Array
slice	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	m	class:Vf
slice	vim/.vim/plugged/fzf/src/util/chars.go	/^	slice           []byte \/\/ or []rune$/;"	m	struct:util.Chars	typeref:typename:[]byte
slice-ansi	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "slice-ansi": "^2.1.0",$/;"	s	object:dependencies.table.requires
slice-ansi	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "slice-ansi": {$/;"	o	object:dependencies
sliceChunks	vim/.vim/plugged/fzf/src/matcher.go	/^func (m *Matcher) sliceChunks(chunks []*Chunk) [][]*Chunk {$/;"	f	struct:fzf.Matcher	typeref:typename:[][]*Chunk
smcup	vim/.vim/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) smcup() {$/;"	f	struct:tui.LightRenderer
sme	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
snap	scripts/aero-snap.sh	/^snap() {$/;"	f
snapdragon	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "snapdragon": "^0.8.1",$/;"	s	object:dependencies.sane.dependencies.braces.requires
snapdragon	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "snapdragon": "^0.8.1",$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
snapdragon	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "snapdragon": "^0.8.1",$/;"	s	object:dependencies.expand-brackets.requires
snapdragon	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "snapdragon": "^0.8.1",$/;"	s	object:dependencies.extglob.requires
snapdragon	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "snapdragon": "^0.8.1",$/;"	s	object:dependencies.nanomatch.requires
snapdragon	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "snapdragon": {$/;"	o	object:dependencies
snapdragon-node	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "snapdragon-node": "^2.0.1",$/;"	s	object:dependencies.sane.dependencies.braces.requires
snapdragon-node	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "snapdragon-node": {$/;"	o	object:dependencies
snapdragon-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "snapdragon-util": "^3.0.1"$/;"	s	object:dependencies.snapdragon-node.requires
snapdragon-util	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "snapdragon-util": {$/;"	o	object:dependencies
snippet	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "snippet": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
solarized (`background=dark`)	vim/.vim/plugged/lightline.vim/README.md	/^### solarized (`background=dark`)$/;"	S	chapter:lightline.vim
solarized (`background=dark`)	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### solarized (`background=dark`)$/;"	S	chapter:Available Colorschemes
solarized (`background=light`)	vim/.vim/plugged/lightline.vim/README.md	/^### solarized (`background=light`)$/;"	S	chapter:lightline.vim
solarized (`background=light`)	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### solarized (`background=light`)$/;"	S	chapter:Available Colorschemes
someAttribute	vim/.vim/plugged/vim-styled-components/examples/typescript.ts	/^  someAttribute: boolean;$/;"	p	interface:ExistingInterface
sort	vim/.vim/plugged/fzf/src/matcher.go	/^	sort           bool$/;"	m	struct:fzf.Matcher	typeref:typename:bool
sort	vim/.vim/plugged/fzf/src/matcher.go	/^	sort       bool$/;"	m	struct:fzf.MatchRequest	typeref:typename:bool
sort	vim/.vim/plugged/fzf/src/terminal.go	/^	sort         bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
sort	vim/.vim/plugged/fzf/src/terminal.go	/^	sort    bool$/;"	m	struct:fzf.searchRequest	typeref:typename:bool
sortCriteria	vim/.vim/plugged/fzf/src/result.go	/^var sortCriteria []criterion$/;"	v	package:fzf	typeref:typename:[]criterion
sortSelected	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) sortSelected() []selectedItem {$/;"	f	struct:fzf.Terminal	typeref:typename:[]selectedItem
sortable	vim/.vim/plugged/fzf/src/pattern.go	/^	sortable      bool$/;"	m	struct:fzf.Pattern	typeref:typename:bool
sorted	vim/.vim/plugged/fzf/src/merger.go	/^	sorted  bool$/;"	m	struct:fzf.Merger	typeref:typename:bool
sound	.config/openbox/menu.xml	/^<menu id="sound" label="sound" execute="~\/scripts\/__openbox_freebsd_sound.sh" \/>$/;"	i
source-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "source-map": "^0.5.0"$/;"	s	object:dependencies.@babel/core.requires
source-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "source-map": "^0.5.0"$/;"	s	object:dependencies.@babel/generator.requires
source-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "source-map": "^0.5.6",$/;"	s	object:dependencies.snapdragon.requires
source-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "source-map": "^0.6.0"$/;"	s	object:dependencies.@jest/source-map.requires
source-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "source-map": "^0.6.0"$/;"	s	object:dependencies.source-map-support.requires
source-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "source-map": "^0.6.0",$/;"	s	object:dependencies.@jest/reporters.requires
source-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "source-map": "^0.6.1"$/;"	s	object:dependencies.istanbul-lib-source-maps.requires
source-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "source-map": "^0.6.1",$/;"	s	object:dependencies.@jest/transform.requires
source-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "source-map": "^0.7.3"$/;"	s	object:dependencies.v8-to-istanbul.requires
source-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "source-map": "~0.6.1"$/;"	s	object:dependencies.escodegen.requires
source-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "source-map": {$/;"	o	object:dependencies.@babel/core.dependencies
source-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "source-map": {$/;"	o	object:dependencies.@babel/generator.dependencies
source-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "source-map": {$/;"	o	object:dependencies.snapdragon.dependencies
source-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "source-map": {$/;"	o	object:dependencies.v8-to-istanbul.dependencies
source-map	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "source-map": {$/;"	o	object:dependencies
source-map-resolve	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "source-map-resolve": "^0.5.0",$/;"	s	object:dependencies.snapdragon.requires
source-map-resolve	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "source-map-resolve": {$/;"	o	object:dependencies
source-map-support	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "source-map-support": "^0.5.6",$/;"	s	object:dependencies.jest-runner.requires
source-map-support	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "source-map-support": {$/;"	o	object:dependencies
source-map-url	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "source-map-url": "^0.4.0",$/;"	s	object:dependencies.source-map-resolve.requires
source-map-url	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "source-map-url": {$/;"	o	object:dependencies
sp	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	v
spdx-correct	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "spdx-correct": "^3.0.0",$/;"	s	object:dependencies.validate-npm-package-license.requires
spdx-correct	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "spdx-correct": {$/;"	o	object:dependencies
spdx-exceptions	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "spdx-exceptions": "^2.1.0",$/;"	s	object:dependencies.spdx-expression-parse.requires
spdx-exceptions	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "spdx-exceptions": {$/;"	o	object:dependencies
spdx-expression-parse	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "spdx-expression-parse": "^3.0.0"$/;"	s	object:dependencies.validate-npm-package-license.requires
spdx-expression-parse	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "spdx-expression-parse": "^3.0.0",$/;"	s	object:dependencies.spdx-correct.requires
spdx-expression-parse	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "spdx-expression-parse": "^3.0.1"$/;"	s	object:dependencies.eslint-plugin-jsdoc.requires
spdx-expression-parse	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "spdx-expression-parse": {$/;"	o	object:dependencies
spdx-license-ids	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "spdx-license-ids": "^3.0.0"$/;"	s	object:dependencies.spdx-correct.requires
spdx-license-ids	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "spdx-license-ids": "^3.0.0"$/;"	s	object:dependencies.spdx-expression-parse.requires
spdx-license-ids	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "spdx-license-ids": {$/;"	o	object:dependencies
spinner	vim/.vim/plugged/fzf/src/terminal.go	/^	spinner      []string$/;"	m	struct:fzf.Terminal	typeref:typename:[]string
spinner	vim/.vim/plugged/fzf/src/terminal.go	/^	spinner    string$/;"	m	struct:fzf.previewer	typeref:typename:string
spinner	vim/.vim/plugged/fzf/src/terminal.go	/^	spinner string$/;"	m	struct:fzf.previewResult	typeref:typename:string
spinnerDuration	vim/.vim/plugged/fzf/src/constants.go	/^	spinnerDuration   = 100 * time.Millisecond$/;"	c	package:fzf
split-string	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "split-string": "^3.0.2",$/;"	s	object:dependencies.sane.dependencies.braces.requires
split-string	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "split-string": "^3.0.1"$/;"	s	object:dependencies.set-value.requires
split-string	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "split-string": {$/;"	o	object:dependencies
splitNth	vim/.vim/plugged/fzf/src/options.go	/^func splitNth(str string) []Range {$/;"	f	package:fzf	typeref:typename:[]Range
sprintf-js	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "sprintf-js": "~1.0.2"$/;"	s	object:dependencies.argparse.requires
sprintf-js	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "sprintf-js": {$/;"	o	object:dependencies
sr	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
srcery_drk	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### srcery_drk$/;"	S	chapter:Available Colorschemes
ss	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
stack-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "stack-utils": "^2.0.2"$/;"	s	object:dependencies.jest-message-util.requires
stack-utils	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "stack-utils": {$/;"	o	object:dependencies
start	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	p	class:Lae.a
startChan	vim/.vim/plugged/fzf/src/terminal.go	/^	startChan    chan bool$/;"	m	struct:fzf.Terminal	typeref:typename:chan bool
startEventPoller	vim/.vim/plugged/fzf/src/reader.go	/^func (r *Reader) startEventPoller() {$/;"	f	struct:fzf.Reader
startLine	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78aef200.e.l
state	vim/.vim/plugged/fzf/src/util/atomicbool.go	/^	state int32 \/\/ "1" is true, "0" is false$/;"	m	struct:util.AtomicBool	typeref:typename:int32
state	vim/.vim/plugged/vim-styled-components/examples/indent.js	/^    this.state = {$/;"	c	class:Test.constructor
static-extend	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "static-extend": "^0.1.1"$/;"	s	object:dependencies.class-utils.requires
static-extend	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "static-extend": {$/;"	o	object:dependencies
stderr	vim/.vim/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) stderr(str string) {$/;"	f	unknown:tui.LightRenderer
stderrInternal	vim/.vim/plugged/fzf/src/tui/light.go	/^func (r *LightRenderer) stderrInternal(str string, allowNLCR bool) {$/;"	f	unknown:tui.LightRenderer
stderrInternal	vim/.vim/plugged/fzf/src/tui/light.go	/^func (w *LightWindow) stderrInternal(str string, allowNLCR bool) {$/;"	f	struct:tui.LightWindow
stdio	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	p	class:s8.t
stdioEncoding	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "stdioEncoding": {$/;"	o	object:definitions.languageServerBase.properties
stdioEncoding	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "stdioEncoding": {},$/;"	o	object:definitions.languageServerCommand.properties
stdioEncoding	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "stdioEncoding": {},$/;"	o	object:definitions.languageServerModule.properties
stdioEncoding	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "stdioEncoding": {},$/;"	o	object:definitions.languageServerSocket.properties
stop	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:Uz.o.u
store	vim/.vim/plugged/vim-styled-components/examples/complex.js	/^      <Provider store={store}>$/;"	M	class:AppClass.render.AnonymousClass4028f9a10101
str	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
str	vim/.vim/plugged/fzf/src/tokenizer.go	/^	str   *string$/;"	m	struct:fzf.Delimiter	typeref:typename:*string
strLines	vim/.vim/plugged/fzf/src/options.go	/^func strLines(str string) []string {$/;"	f	package:fzf	typeref:typename:[]string
streamroller	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "streamroller": "^2.2.4"$/;"	s	object:dependencies.log4js.requires
streamroller	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "streamroller": {$/;"	o	object:dependencies
strictSSL	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	p	class:$T.s
strikethrough	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.modifier
string-length	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "string-length": "^4.0.1"$/;"	s	object:dependencies.jest-watcher.requires
string-length	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "string-length": "^4.0.1",$/;"	s	object:dependencies.@jest/reporters.requires
string-length	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "string-length": {$/;"	o	object:dependencies
string-width	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "string-width": "^3.0.0"$/;"	s	object:dependencies.table.requires
string-width	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "string-width": "^4.1.0",$/;"	s	object:dependencies.wrap-ansi.requires
string-width	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "string-width": "^4.2.0"$/;"	s	object:dependencies.cli-table.requires
string-width	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "string-width": "^4.2.0",$/;"	s	object:dependencies.cliui.requires
string-width	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "string-width": "^4.2.0",$/;"	s	object:dependencies.yargs.requires
string-width	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "string-width": {$/;"	o	object:dependencies.table.dependencies
string-width	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "string-width": {$/;"	o	object:dependencies
string.prototype.matchall	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "string.prototype.matchall": {$/;"	o	object:dependencies
string.prototype.trimend	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "string.prototype.trimend": "^1.0.4",$/;"	s	object:dependencies.es-abstract.requires
string.prototype.trimend	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "string.prototype.trimend": {$/;"	o	object:dependencies
string.prototype.trimstart	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "string.prototype.trimstart": "^1.0.4",$/;"	s	object:dependencies.es-abstract.requires
string.prototype.trimstart	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "string.prototype.trimstart": {$/;"	o	object:dependencies
stringify	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	m	class:AnonymousFunction272f78ae0a00.t
strings	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:AnonymousFunction272f78ae29d00.t
strip-ansi	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "strip-ansi": "^5.1.0"$/;"	s	object:dependencies.table.dependencies.string-width.requires
strip-ansi	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "strip-ansi": "^6.0.0"$/;"	s	object:dependencies.@jest/core.requires
strip-ansi	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "strip-ansi": "^6.0.0"$/;"	s	object:dependencies.string-length.requires
strip-ansi	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "strip-ansi": "^6.0.0"$/;"	s	object:dependencies.string-width.requires
strip-ansi	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "strip-ansi": "^6.0.0"$/;"	s	object:dependencies.wrap-ansi.requires
strip-ansi	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "strip-ansi": "^6.0.0",$/;"	s	object:dependencies.cliui.requires
strip-ansi	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "strip-ansi": "^6.0.0",$/;"	s	object:dependencies.eslint.requires
strip-ansi	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "strip-ansi": {$/;"	o	object:dependencies.table.dependencies
strip-ansi	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "strip-ansi": {$/;"	o	object:dependencies
strip-bom	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "strip-bom": "^4.0.0",$/;"	s	object:dependencies.jest-runtime.requires
strip-bom	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "strip-bom": {$/;"	o	object:dependencies
strip-eof	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "strip-eof": "^1.0.0"$/;"	s	object:dependencies.execa.requires
strip-eof	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "strip-eof": {$/;"	o	object:dependencies
strip-final-newline	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "strip-final-newline": "^2.0.0"$/;"	s	object:dependencies.jest-changed-files.dependencies.execa.requires
strip-final-newline	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "strip-final-newline": {$/;"	o	object:dependencies
strip-json-comments	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "strip-json-comments": "^3.1.0",$/;"	s	object:dependencies.eslint.requires
strip-json-comments	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "strip-json-comments": "^3.1.1"$/;"	s	object:dependencies.@eslint/eslintrc.requires
strip-json-comments	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "strip-json-comments": "~2.0.1"$/;"	s	object:dependencies.rc.requires
strip-json-comments	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "strip-json-comments": {$/;"	o	object:dependencies.rc.dependencies
strip-json-comments	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "strip-json-comments": {$/;"	o	object:dependencies
strong	vim/.vim/plugged/fzf/src/terminal.go	/^	strong       tui.Attr$/;"	m	struct:fzf.Terminal	typeref:typename:tui.Attr
struct	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "struct": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
style	vim/.vim/plugged/fzf/src/tui/tcell.go	/^func (p ColorPair) style() tcell.Style {$/;"	f	unknown:tui.ColorPair	typeref:typename:tcell.Style
style	vim/.vim/plugged/vim-css-color/tests/example.jsx	/^		return <div style={style}> Hi! <\/div>;$/;"	M	class:AnonymousFunction5f5fc9ae0100.AnonymousClass5f5fc9ae0201
style	vim/.vim/plugged/vim-css-color/tests/example.jsx	/^		var style = {$/;"	c	class:AnonymousFunction5f5fc9ae0100
styledcomplete#CompleteSC	vim/.vim/plugged/vim-styled-components/after/autoload/styledcomplete.vim	/^fun! styledcomplete#CompleteSC(findstart, base)$/;"	f
stylelintplus.autoFixOnSave	.config/nvim_copy/coc-settings.json	/^  "stylelintplus.autoFixOnSave": true,$/;"	b
stylelintplus.autoFixOnSave	vim/.vim/coc-settings.json	/^  "stylelintplus.autoFixOnSave": true,$/;"	b
stylelintplus.cssInJs	.config/nvim_copy/coc-settings.json	/^  "stylelintplus.cssInJs": true,$/;"	b
stylelintplus.cssInJs	vim/.vim/coc-settings.json	/^  "stylelintplus.cssInJs": true,$/;"	b
subseparator_left	vim/.vim/plugged/iceberg-dark/.tmux/iceberg.tmux.conf	/^subseparator_left="\\ue0bb"$/;"	k
subseparator_right	vim/.vim/plugged/iceberg-dark/.tmux/iceberg.tmux.conf	/^subseparator_right="\\ue0bd"$/;"	k
suggest.acceptSuggestionOnCommitCharacter	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.acceptSuggestionOnCommitCharacter": {$/;"	o	object:properties
suggest.asciiCharactersOnly	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.asciiCharactersOnly": {$/;"	o	object:properties
suggest.autoTrigger	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.autoTrigger": {$/;"	o	object:properties
suggest.completionItemKindLabels	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.completionItemKindLabels": {$/;"	o	object:properties
suggest.defaultSortMethod	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.defaultSortMethod": {$/;"	o	object:properties
suggest.detailField	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.detailField": {$/;"	o	object:properties
suggest.detailMaxLength	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.detailMaxLength": {$/;"	o	object:properties
suggest.disableKind	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.disableKind": {$/;"	o	object:properties
suggest.disableMenu	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.disableMenu": {$/;"	o	object:properties
suggest.disableMenuShortcut	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.disableMenuShortcut": {$/;"	o	object:properties
suggest.echodocSupport	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.echodocSupport": {$/;"	o	object:properties
suggest.enablePreselect	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.enablePreselect": {$/;"	o	object:properties
suggest.enablePreview	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.enablePreview": {$/;"	o	object:properties
suggest.fixInsertedWord	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.fixInsertedWord": {$/;"	o	object:properties
suggest.floatConfig	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.floatConfig": {$/;"	o	object:properties
suggest.floatEnable	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.floatEnable": {$/;"	o	object:properties
suggest.highPrioritySourceLimit	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.highPrioritySourceLimit": {$/;"	o	object:properties
suggest.invalidInsertCharacters	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.invalidInsertCharacters": {$/;"	o	object:properties
suggest.keepCompleteopt	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.keepCompleteopt": {$/;"	o	object:properties
suggest.labelMaxLength	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.labelMaxLength": {$/;"	o	object:properties
suggest.languageSourcePriority	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.languageSourcePriority": {$/;"	o	object:properties
suggest.localityBonus	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.localityBonus": {$/;"	o	object:properties
suggest.lowPrioritySourceLimit	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.lowPrioritySourceLimit": {$/;"	o	object:properties
suggest.maxCompleteItemCount	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.maxCompleteItemCount": {$/;"	o	object:properties
suggest.minTriggerInputLength	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.minTriggerInputLength": {$/;"	o	object:properties
suggest.noselect	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.noselect": {$/;"	o	object:properties
suggest.numberSelect	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.numberSelect": {$/;"	o	object:properties
suggest.preferCompleteThanJumpPlaceholder	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.preferCompleteThanJumpPlaceholder": {$/;"	o	object:properties
suggest.removeDuplicateItems	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.removeDuplicateItems": {$/;"	o	object:properties
suggest.snippetIndicator	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.snippetIndicator": {$/;"	o	object:properties
suggest.snippetsSupport	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.snippetsSupport": {$/;"	o	object:properties
suggest.timeout	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.timeout": {$/;"	o	object:properties
suggest.triggerAfterInsertEnter	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.triggerAfterInsertEnter": {$/;"	o	object:properties
suggest.triggerCompletionWait	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "suggest.triggerCompletionWait": {$/;"	o	object:properties
summary	vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^let summary = [$/;"	v
summary	vim/.vim/plugged/vim-rooter/test/runner.vim	/^let summary = [$/;"	v
supports-color	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "supports-color": "^5.3.0"$/;"	s	object:dependencies.@babel/highlight.dependencies.chalk.requires
supports-color	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "supports-color": "^5.3.0"$/;"	s	object:dependencies.cli-table.dependencies.chalk.requires
supports-color	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "supports-color": "^7.0.0"$/;"	s	object:dependencies.jest-worker.requires
supports-color	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "supports-color": "^7.0.0"$/;"	s	object:dependencies.supports-hyperlinks.requires
supports-color	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "supports-color": "^7.1.0"$/;"	s	object:dependencies.chalk.requires
supports-color	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "supports-color": "^7.1.0"$/;"	s	object:dependencies.istanbul-lib-report.requires
supports-color	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "supports-color": {$/;"	o	object:dependencies.@babel/highlight.dependencies
supports-color	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "supports-color": {$/;"	o	object:dependencies.cli-table.dependencies
supports-color	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "supports-color": {$/;"	o	object:dependencies
supports-hyperlinks	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "supports-hyperlinks": "^2.0.0"$/;"	s	object:dependencies.terminal-link.requires
supports-hyperlinks	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "supports-hyperlinks": {$/;"	o	object:dependencies
suppress	vim/.vim/plugged/fzf/src/terminal.go	/^	suppress     bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
sv	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
sw	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
sy	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
symbol-tree	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "symbol-tree": "^3.2.4",$/;"	s	object:dependencies.jsdom.requires
symbol-tree	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "symbol-tree": {$/;"	o	object:dependencies
system	.config/openbox/menu.xml	/^<menu id="system" label="system">$/;"	i
t	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f	function:j7
t	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f	function:XX
t	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	c	class:Zse
t	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f	function:Yw
t	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	f	function:Uq
t	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	c	class:e.toJSON
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunction272f78ae13000
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunction272f78ae18400
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunction272f78ae19200
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	c	class:r.getTextEditChange
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae10000
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae10a00
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae10b00
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae10c00
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae10d00
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae11400
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae11800
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae12100
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae12300
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae12400
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae12500
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae12600
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae12700
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78ae12800
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aeea00
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aeeb00
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aeec00
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aeed00
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aeee00
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aeef00
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aef000
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aef200
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aef300
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aef700
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aef800
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aef900
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aefa00
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aefc00
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aefd00
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aefe00
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f	function:AnonymousFunction272f78aeff00
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	c	class:d8
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	c	class:s8
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`),o=i.line==r.start.line?i.character-r.start.character:i.character,a=A$(s,i.line-r.start.line,o/;"	c	class:$c
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	c	class:AnonymousFunction272f78ae0a00
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:Y9
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c	class:AnonymousFunction272f78ae31800
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae2cf00
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae2de00
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae2f400
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae33300
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	c	class:AnonymousFunction272f78ae29d00
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:Rv
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	c	class:LK
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	f	function:AnonymousFunction272f78ae12900
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:AnonymousFunction272f78aea600
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f	function:AnonymousFunction272f78ae21500
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	c	class:AnonymousFunction272f78ae7400
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:KQ
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Kee
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:Vee
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:eee
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:oee
t	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:AnonymousFunction272f78ae22000
t	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	f	function:L9
t	vim/.vim/plugged/fzf/src/terminal.go	/^	t actionType$/;"	m	struct:fzf.action	typeref:typename:actionType
t$	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	v
t0	vim/.vim/plugged/coc.nvim/build/index.js	/^`+n.text):t.push(n);continue}if(e){let u="Infinite loop on byte: "+e.charCodeAt(0);if(this.optio/;"	v
t1	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	v
t2	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
t4	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
t5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
t6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
t8	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
t9	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
tA	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
tB	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
tC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
tD	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
tG	vim/.vim/plugged/coc.nvim/build/index.js	/^`])})}get nvim(){return v.nvim}createNativeSources(){try{this.disposables.push((M5(),F5).regist(/;"	v
tL	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
tN	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
tP	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function SK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	v
tR	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
tT	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
tU	vim/.vim/plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
tV	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
tW	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
tZ	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
t_	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
ta	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
table	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "table": "^5.2.3",$/;"	s	object:dependencies.eslint.requires
table	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "table": {$/;"	o	object:dependencies
tabstop	vim/.vim/plugged/fzf/src/terminal.go	/^	tabstop      int$/;"	m	struct:fzf.Terminal	typeref:typename:int
tabstop	vim/.vim/plugged/fzf/src/tui/light.go	/^	tabstop       int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
tabstop	vim/.vim/plugged/fzf/src/tui/light.go	/^	tabstop  int$/;"	m	struct:tui.LightWindow	typeref:typename:int
tac	vim/.vim/plugged/fzf/src/matcher.go	/^	tac            bool$/;"	m	struct:fzf.Matcher	typeref:typename:bool
tac	vim/.vim/plugged/fzf/src/merger.go	/^	tac     bool$/;"	m	struct:fzf.Merger	typeref:typename:bool
tae	vim/.vim/plugged/coc.nvim/build/index.js	/^`+e+"$2$3")}function m$(r){return" ".repeat(r.length)}function eae(r,e){return p$(e,r)?e:m$(d0)+/;"	f
tap	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:h
tap	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:t
tar	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "tar": {$/;"	o	object:dependencies
target/$(BINARY32)	vim/.vim/plugged/fzf/Makefile	/^target\/$(BINARY32): $(SOURCES)$/;"	t
target/$(BINARY64)	vim/.vim/plugged/fzf/Makefile	/^target\/$(BINARY64): $(SOURCES)$/;"	t
target/$(BINARYARM5)	vim/.vim/plugged/fzf/Makefile	/^target\/$(BINARYARM5): $(SOURCES)$/;"	t
target/$(BINARYARM6)	vim/.vim/plugged/fzf/Makefile	/^target\/$(BINARYARM6): $(SOURCES)$/;"	t
target/$(BINARYARM7)	vim/.vim/plugged/fzf/Makefile	/^target\/$(BINARYARM7): $(SOURCES)$/;"	t
target/$(BINARYARM8)	vim/.vim/plugged/fzf/Makefile	/^target\/$(BINARYARM8): $(SOURCES)$/;"	t
target/$(BINARYPPC64LE)	vim/.vim/plugged/fzf/Makefile	/^target\/$(BINARYPPC64LE): $(SOURCES)$/;"	t
target/$(BINARYRISCV64)	vim/.vim/plugged/fzf/Makefile	/^target\/$(BINARYRISCV64): $(SOURCES)$/;"	t
teardown	vim/.vim/plugged/fzf/test/test_go.rb	/^  def teardown$/;"	f	class:TestGoFZF
teardown	vim/.vim/plugged/fzf/test/test_go.rb	/^  def teardown$/;"	f	module:TestShell
tee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
template	.ctags.d/vue.ctags	/^--regex-vue=\/^(<template>)$\/\\1\/t,template\/{scope=set}{exclusive}$/;"	k	langdef:vue
template	vim/.vim/plugged/fzf/src/terminal.go	/^	template string$/;"	m	struct:fzf.previewRequest	typeref:typename:string
template	vim/.vim/plugged/fzf/src/terminal_test.go	/^	template string$/;"	m	struct:fzf.give	typeref:typename:string
templateToString	vim/.vim/plugged/fzf/src/terminal_test.go	/^func templateToString(format string, data interface{}) string {$/;"	f	package:fzf	typeref:typename:string
tempname	vim/.vim/plugged/fzf/test/test_go.rb	/^  def tempname$/;"	f	class:TestBase
term	vim/.vim/plugged/fzf/src/pattern.go	/^type term struct {$/;"	s	package:fzf
termEqual	vim/.vim/plugged/fzf/src/pattern.go	/^	termEqual$/;"	c	package:fzf
termExact	vim/.vim/plugged/fzf/src/pattern.go	/^	termExact$/;"	c	package:fzf
termFuzzy	vim/.vim/plugged/fzf/src/pattern.go	/^	termFuzzy termType = iota$/;"	c	package:fzf	typeref:type:termType
termPrefix	vim/.vim/plugged/fzf/src/pattern.go	/^	termPrefix$/;"	c	package:fzf
termSet	vim/.vim/plugged/fzf/src/pattern.go	/^type termSet []term$/;"	t	package:fzf	typeref:typename:[]term
termSets	vim/.vim/plugged/fzf/src/pattern.go	/^	termSets      []termSet$/;"	m	struct:fzf.Pattern	typeref:typename:[]termSet
termSuffix	vim/.vim/plugged/fzf/src/pattern.go	/^	termSuffix$/;"	c	package:fzf
termType	vim/.vim/plugged/fzf/src/pattern.go	/^type termType int$/;"	t	package:fzf	typeref:typename:int
terminal-link	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "terminal-link": "^2.0.0",$/;"	s	object:dependencies.@jest/reporters.requires
terminal-link	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "terminal-link": {$/;"	o	object:dependencies
terminate	vim/.vim/plugged/fzf/src/reader.go	/^func (r *Reader) terminate() {$/;"	f	struct:fzf.Reader
terminateTree	vim/.vim/plugged/coc.nvim/bin/terminateProcess.sh	/^terminateTree() {$/;"	f
test	vim/.vim/plugged/fzf/Makefile	/^test: $(SOURCES)$/;"	t
test	vim/.vim/plugged/vim-graphql/Makefile	/^test: .bundle\/vader.vim .bundle\/vim-javascript $/;"	t
test	vim/.vim/plugged/vim-styled-components/examples/indent.js	/^            test: {$/;"	p	class:Test.constructor.state.test.test.test
test	vim/.vim/plugged/vim-styled-components/examples/indent.js	/^          test: {$/;"	c	class:Test.constructor.state.test.test
test	vim/.vim/plugged/vim-styled-components/examples/indent.js	/^        test: {$/;"	c	class:Test.constructor.state.test
test	vim/.vim/plugged/vim-styled-components/examples/indent.js	/^      test: {$/;"	c	class:Test.constructor.state
test	vim/.vim/plugged/vim-styled-components/examples/issue-44.js	/^function test() {$/;"	f
test-exclude	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "test-exclude": "^6.0.0"$/;"	s	object:dependencies.babel-plugin-istanbul.requires
test-exclude	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "test-exclude": {$/;"	o	object:dependencies
test0	vim/.vim/plugged/vim-translator/script/translator.py	/^    def test0():$/;"	f
test1	vim/.vim/plugged/vim-translator/script/translator.py	/^    def test1():$/;"	f
test2	vim/.vim/plugged/vim-translator/script/translator.py	/^    def test2():$/;"	f
test3	vim/.vim/plugged/vim-translator/script/translator.py	/^    def test3():$/;"	f
test4	vim/.vim/plugged/vim-translator/script/translator.py	/^    def test4():$/;"	f
test5	vim/.vim/plugged/vim-translator/script/translator.py	/^    def test5():$/;"	f
test6	vim/.vim/plugged/vim-translator/script/translator.py	/^    def test6():$/;"	f
test7	vim/.vim/plugged/vim-translator/script/translator.py	/^    def test7():$/;"	f
testCase	vim/.vim/plugged/fzf/src/terminal_test.go	/^type testCase struct {$/;"	s	package:fzf
testCommands	vim/.vim/plugged/fzf/src/terminal_test.go	/^func testCommands(t *testing.T, tests []testCase) {$/;"	f	package:fzf
testParserReference	vim/.vim/plugged/fzf/src/ansi_test.go	/^func testParserReference(t testing.TB, str string) {$/;"	f	package:fzf
test_accept_non_empty	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_accept_non_empty$/;"	f	class:TestGoFZF
test_accept_non_empty_with_empty_list	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_accept_non_empty_with_empty_list$/;"	f	class:TestGoFZF
test_accept_non_empty_with_multi_selection	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_accept_non_empty_with_multi_selection$/;"	f	class:TestGoFZF
test_alt_c	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_alt_c$/;"	f	module:TestShell
test_alt_c_command	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_alt_c_command$/;"	f	module:TestShell
test_backward_delete_char_eof	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_backward_delete_char_eof$/;"	f	class:TestGoFZF
test_backward_eof	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_backward_eof$/;"	f	class:TestGoFZF
test_baicizhan	vim/.vim/plugged/vim-translator/test/test_translator.py	/^    def test_baicizhan(self):$/;"	m	class:TestTranslator
test_bind	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_bind$/;"	f	class:TestGoFZF
test_bind_print_query	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_bind_print_query$/;"	f	class:TestGoFZF
test_bind_replace_query	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_bind_replace_query$/;"	f	class:TestGoFZF
test_bing	vim/.vim/plugged/vim-translator/test/test_translator.py	/^    def test_bing(self):$/;"	m	class:TestTranslator
test_cancel	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_cancel$/;"	f	class:TestGoFZF
test_change_first_last	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_change_first_last$/;"	f	class:TestGoFZF
test_change_prompt	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_change_prompt$/;"	f	class:TestGoFZF
test_clear_list_when_header_lines_changed_due_to_reload	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_clear_list_when_header_lines_changed_due_to_reload$/;"	f	class:TestGoFZF
test_clear_query	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_clear_query$/;"	f	class:TestGoFZF
test_clear_selection	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_clear_selection$/;"	f	class:TestGoFZF
test_close	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_close$/;"	f	class:TestGoFZF
test_complete_quoted_command	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_complete_quoted_command$/;"	f	class:TestZsh
test_ctrl_r	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_ctrl_r$/;"	f	module:TestShell
test_ctrl_r_abort	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_ctrl_r_abort$/;"	f	module:TestShell
test_ctrl_r_multiline	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_ctrl_r_multiline$/;"	f	module:TestShell
test_ctrl_t	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_ctrl_t$/;"	f	module:TestShell
test_ctrl_t_unicode	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_ctrl_t_unicode$/;"	f	module:TestShell
test_custom_completion	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_custom_completion$/;"	f	module:CompletionTest
test_custom_completion_api	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_custom_completion_api$/;"	f	module:CompletionTest
test_cycle	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_cycle$/;"	f	class:TestGoFZF
test_default_extended	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_default_extended$/;"	f	class:TestGoFZF
test_dir_completion	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_dir_completion$/;"	f	module:CompletionTest
test_disabled	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_disabled$/;"	f	class:TestGoFZF
test_dynamic_completion_loader	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_dynamic_completion_loader$/;"	f	class:TestBash
test_editorconfig	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^def test_editorconfig(vim, file_name, expected_values)$/;"	f
test_escaped_meta_characters	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_escaped_meta_characters$/;"	f	class:TestGoFZF
test_exact	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_exact$/;"	f	class:TestGoFZF
test_execute	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_execute$/;"	f	class:TestGoFZF
test_execute_multi	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_execute_multi$/;"	f	class:TestGoFZF
test_execute_plus_flag	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_execute_plus_flag$/;"	f	class:TestGoFZF
test_execute_shell	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_execute_shell$/;"	f	class:TestGoFZF
test_exit_0	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_exit_0$/;"	f	class:TestGoFZF
test_exit_0_exit_code	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_exit_0_exit_code$/;"	f	class:TestGoFZF
test_exitstatus_empty	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_exitstatus_empty$/;"	f	class:TestGoFZF
test_expect	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_expect$/;"	f	class:TestGoFZF
test_expect_print_query	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_expect_print_query$/;"	f	class:TestGoFZF
test_expect_print_query_select_1	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_expect_print_query_select_1$/;"	f	class:TestGoFZF
test_expect_printable_character_print_query	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_expect_printable_character_print_query$/;"	f	class:TestGoFZF
test_file_completion	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_file_completion$/;"	f	module:CompletionTest
test_file_completion_root	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_file_completion_root$/;"	f	module:CompletionTest
test_file_completion_unicode	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_file_completion_unicode$/;"	f	module:CompletionTest
test_file_word	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_file_word$/;"	f	class:TestGoFZF
test_filter_exitstatus	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_filter_exitstatus$/;"	f	class:TestGoFZF
test_fzf_default_command	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_fzf_default_command$/;"	f	class:TestGoFZF
test_fzf_default_command_failure	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_fzf_default_command_failure$/;"	f	class:TestGoFZF
test_google	vim/.vim/plugged/vim-translator/test/test_translator.py	/^    def test_google(self):$/;"	m	class:TestTranslator
test_haici	vim/.vim/plugged/vim-translator/test/test_translator.py	/^    def test_haici(self):$/;"	m	class:TestTranslator
test_header	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_header$/;"	f	class:TestGoFZF
test_header_and_header_lines	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_header_and_header_lines$/;"	f	class:TestGoFZF
test_header_and_header_lines_reverse	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_header_and_header_lines_reverse$/;"	f	class:TestGoFZF
test_header_and_header_lines_reverse_list	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_header_and_header_lines_reverse_list$/;"	f	class:TestGoFZF
test_header_first	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_header_first$/;"	f	class:TestGoFZF
test_header_first_reverse	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_header_first_reverse$/;"	f	class:TestGoFZF
test_header_lines	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_header_lines$/;"	f	class:TestGoFZF
test_header_lines_overflow	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_header_lines_overflow$/;"	f	class:TestGoFZF
test_header_lines_reverse	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_header_lines_reverse$/;"	f	class:TestGoFZF
test_header_lines_reverse_list	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_header_lines_reverse_list$/;"	f	class:TestGoFZF
test_header_lines_with_nth	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_header_lines_with_nth$/;"	f	class:TestGoFZF
test_header_reverse	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_header_reverse$/;"	f	class:TestGoFZF
test_header_reverse_list	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_header_reverse_list$/;"	f	class:TestGoFZF
test_history	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_history$/;"	f	class:TestGoFZF
test_hscroll_off	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_hscroll_off$/;"	f	class:TestGoFZF
test_iciba	vim/.vim/plugged/vim-translator/test/test_translator.py	/^    def test_iciba(self):$/;"	m	class:TestTranslator
test_info_hidden	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_info_hidden$/;"	f	class:TestGoFZF
test_instance	vim/.vim/plugged/editorconfig-vim/tests/plugin/spec/editorconfig_spec.rb	/^def test_instance(vim)$/;"	f
test_interrupt_execute	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_interrupt_execute$/;"	f	class:TestGoFZF
test_invalid_cache	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_invalid_cache$/;"	f	class:TestGoFZF
test_invalid_cache_query_type	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_invalid_cache_query_type$/;"	f	class:TestGoFZF
test_invalid_option	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_invalid_option$/;"	f	class:TestGoFZF
test_inverse_only_search_should_not_sort_the_result	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_inverse_only_search_should_not_sort_the_result$/;"	f	class:TestGoFZF
test_item_index_reset_on_reload	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_item_index_reset_on_reload$/;"	f	class:TestGoFZF
test_jump	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_jump$/;"	f	class:TestGoFZF
test_jump_accept	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_jump_accept$/;"	f	class:TestGoFZF
test_keep_right	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_keep_right$/;"	f	class:TestGoFZF
test_key_bindings	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_key_bindings$/;"	f	class:TestGoFZF
test_kill_default_command_on_abort	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_kill_default_command_on_abort$/;"	f	class:TestGoFZF
test_kill_default_command_on_accept	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_kill_default_command_on_accept$/;"	f	class:TestGoFZF
test_kill_reload_command_on_abort	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_kill_reload_command_on_abort$/;"	f	class:TestGoFZF
test_kill_reload_command_on_accept	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_kill_reload_command_on_accept$/;"	f	class:TestGoFZF
test_long_line	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_long_line$/;"	f	class:TestGoFZF
test_margin	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_margin$/;"	f	class:TestGoFZF
test_margin_reverse	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_margin_reverse$/;"	f	class:TestGoFZF
test_margin_reverse_list	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_margin_reverse_list$/;"	f	class:TestGoFZF
test_marker	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_marker$/;"	f	class:TestGoFZF
test_multi_max	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_multi_max$/;"	f	class:TestGoFZF
test_multi_order	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_multi_order$/;"	f	class:TestGoFZF
test_no_clear	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_no_clear$/;"	f	class:TestGoFZF
test_normalized_match	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_normalized_match$/;"	f	class:TestGoFZF
test_or_operator	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_or_operator$/;"	f	class:TestGoFZF
test_partial_caching	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_partial_caching$/;"	f	class:TestGoFZF
test_pointer	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_pointer$/;"	f	class:TestGoFZF
test_pointer_with_jump	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_pointer_with_jump$/;"	f	class:TestGoFZF
test_preview	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_preview$/;"	f	class:TestGoFZF
test_preview_bindings_with_default_preview	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_preview_bindings_with_default_preview$/;"	f	class:TestGoFZF
test_preview_bindings_without_default_preview	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_preview_bindings_without_default_preview$/;"	f	class:TestGoFZF
test_preview_clear_screen	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_preview_clear_screen$/;"	f	class:TestGoFZF
test_preview_correct_tab_width_after_ansi_reset_code	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_preview_correct_tab_width_after_ansi_reset_code$/;"	f	class:TestGoFZF
test_preview_file	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_preview_file$/;"	f	class:TestGoFZF
test_preview_flags	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_preview_flags$/;"	f	class:TestGoFZF
test_preview_header	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_preview_header$/;"	f	class:TestGoFZF
test_preview_hidden	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_preview_hidden$/;"	f	class:TestGoFZF
test_preview_q_no_match	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_preview_q_no_match$/;"	f	class:TestGoFZF
test_preview_q_no_match_with_initial_query	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_preview_q_no_match_with_initial_query$/;"	f	class:TestGoFZF
test_preview_scroll_begin_and_offset	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_preview_scroll_begin_and_offset$/;"	f	class:TestGoFZF
test_preview_scroll_begin_constant	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_preview_scroll_begin_constant$/;"	f	class:TestGoFZF
test_preview_scroll_begin_expr	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_preview_scroll_begin_expr$/;"	f	class:TestGoFZF
test_preview_size_0	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_preview_size_0$/;"	f	class:TestGoFZF
test_preview_update_on_select	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_preview_update_on_select$/;"	f	class:TestGoFZF
test_preview_window_follow	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_preview_window_follow$/;"	f	class:TestGoFZF
test_process_completion	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_process_completion$/;"	f	module:CompletionTest
test_query_unicode	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_query_unicode$/;"	f	class:TestGoFZF
test_read0	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_read0$/;"	f	class:TestGoFZF
test_reload	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_reload$/;"	f	class:TestGoFZF
test_reload_even_when_theres_no_match	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_reload_even_when_theres_no_match$/;"	f	class:TestGoFZF
test_reload_should_update_preview	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_reload_should_update_preview$/;"	f	class:TestGoFZF
test_request	vim/.vim/plugged/vim-translator/script/translator.py	/^    def test_request(self, test_url):$/;"	m	class:BaseTranslator
test_scroll	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_scroll$/;"	f	class:TestGoFZF
test_scroll_off	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_scroll_off$/;"	f	class:TestGoFZF
test_scroll_off_large	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_scroll_off_large$/;"	f	class:TestGoFZF
test_select_1	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_select_1$/;"	f	class:TestGoFZF
test_select_1_exit_0_fail	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_select_1_exit_0_fail$/;"	f	class:TestGoFZF
test_select_all_deselect_all_toggle_all	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_select_all_deselect_all_toggle_all$/;"	f	class:TestGoFZF
test_select_deselect	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_select_deselect$/;"	f	class:TestGoFZF
test_smart_case_for_each_term	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_smart_case_for_each_term$/;"	f	class:TestGoFZF
test_strip_xterm_osc_sequence	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_strip_xterm_osc_sequence$/;"	f	class:TestGoFZF
test_sync	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_sync$/;"	f	class:TestGoFZF
test_tabstop	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_tabstop$/;"	f	class:TestGoFZF
test_tac	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_tac$/;"	f	class:TestGoFZF
test_tac_nosort	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_tac_nosort$/;"	f	class:TestGoFZF
test_tac_sort	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_tac_sort$/;"	f	class:TestGoFZF
test_tiebreak	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_tiebreak$/;"	f	class:TestGoFZF
test_tiebreak_begin_algo_v2	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_tiebreak_begin_algo_v2$/;"	f	class:TestGoFZF
test_tiebreak_end	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_tiebreak_end$/;"	f	class:TestGoFZF
test_tiebreak_index_begin	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_tiebreak_index_begin$/;"	f	class:TestGoFZF
test_tiebreak_length_with_nth	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_tiebreak_length_with_nth$/;"	f	class:TestGoFZF
test_toggle_preview_wrap	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_toggle_preview_wrap$/;"	f	class:TestGoFZF
test_toggle_sort	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_toggle_sort$/;"	f	class:TestGoFZF
test_translate_shell	vim/.vim/plugged/vim-translator/test/test_translator.py	/^    def test_translate_shell(self):$/;"	m	class:TestTranslator
test_unbind	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_unbind$/;"	f	class:TestGoFZF
test_unicode_case	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_unicode_case$/;"	f	class:TestGoFZF
test_unset_completion	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_unset_completion$/;"	f	module:CompletionTest
test_vanilla	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_vanilla$/;"	f	class:TestGoFZF
test_with_nth	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_with_nth$/;"	f	class:TestGoFZF
test_with_nth_ansi	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_with_nth_ansi$/;"	f	class:TestGoFZF
test_with_nth_basic	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_with_nth_basic$/;"	f	class:TestGoFZF
test_with_nth_no_ansi	vim/.vim/plugged/fzf/test/test_go.rb	/^  def test_with_nth_no_ansi$/;"	f	class:TestGoFZF
test_youdao	vim/.vim/plugged/vim-translator/test/test_translator.py	/^    def test_youdao(self):$/;"	m	class:TestTranslator
tests_cmake_ec_sort_dir	vim/.vim/plugged/editorconfig-vim/tests/core/tests/cmake/ec_sort.cmake	/^set(tests_cmake_ec_sort_dir "${CMAKE_CURRENT_LIST_DIR}")$/;"	v
tests_cmakelists_dir	vim/.vim/plugged/editorconfig-vim/tests/core/tests/CMakeLists.txt	/^set(tests_cmakelists_dir "${CMAKE_CURRENT_LIST_DIR}")$/;"	v
tests_meta_cmakelists_dir	vim/.vim/plugged/editorconfig-vim/tests/core/tests/meta/CMakeLists.txt	/^set(tests_meta_cmakelists_dir "${CMAKE_CURRENT_LIST_DIR}")$/;"	v
tests_meta_sample_dir	vim/.vim/plugged/editorconfig-vim/tests/core/tests/meta/sample.cmake	/^set( tests_meta_sample_dir "${CMAKE_CURRENT_LIST_DIR}" )$/;"	v
text	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "text": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
text	vim/.vim/plugged/fzf/src/item.go	/^	text        util.Chars    \/\/ 32 = 24 + 1 + 1 + 2 + 4$/;"	m	struct:fzf.Item	typeref:typename:util.Chars
text	vim/.vim/plugged/fzf/src/pattern.go	/^	text          []rune$/;"	m	struct:fzf.Pattern	typeref:typename:[]rune
text	vim/.vim/plugged/fzf/src/pattern.go	/^	text          []rune$/;"	m	struct:fzf.term	typeref:typename:[]rune
text	vim/.vim/plugged/fzf/src/tokenizer.go	/^	text         *util.Chars$/;"	m	struct:fzf.Token	typeref:typename:*util.Chars
text	vim/.vim/plugged/fzf/src/tui/light.go	/^	text         string$/;"	m	struct:tui.wrappedLine	typeref:typename:string
text-table	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "text-table": "^0.2.0",$/;"	s	object:dependencies.eslint.requires
text-table	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "text-table": {$/;"	o	object:dependencies
textDocument	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:r.getTextEditChange.s
textDocument	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	p	class:d8.t
tf	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
tg	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
tge	vim/.vim/plugged/coc.nvim/build/index.js	/^`+n+"\\n```"),r.push({content:n,filetype:t}))}function ege(r){return r?typeof r.filetype=="strin/;"	f
theme	vim/.vim/plugged/fzf/src/terminal.go	/^	theme        *tui.ColorTheme$/;"	m	struct:fzf.Terminal	typeref:typename:*tui.ColorTheme
theme	vim/.vim/plugged/fzf/src/tui/light.go	/^	theme         *ColorTheme$/;"	m	struct:tui.LightRenderer	typeref:typename:*ColorTheme
theme	vim/.vim/plugged/fzf/src/tui/tui.go	/^	theme        *ColorTheme$/;"	m	struct:tui.FullscreenRenderer	typeref:typename:*ColorTheme
throat	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "throat": "^5.0.0"$/;"	s	object:dependencies.jest-changed-files.requires
throat	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "throat": "^5.0.0"$/;"	s	object:dependencies.jest-jasmine2.requires
throat	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "throat": "^5.0.0"$/;"	s	object:dependencies.jest-runner.requires
throat	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "throat": {$/;"	o	object:dependencies
timeoutInterval	vim/.vim/plugged/fzf/src/tui/light_windows.go	/^	timeoutInterval = 10$/;"	c	package:tui
timestamp	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:to.K
title	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78ae12400.e.o
title	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78aef800.e.a
title	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "title": {$/;"	o	object:definitions.float.properties
title	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "title": {},$/;"	o	object:properties.diagnostic.floatConfig.properties
title	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "title": {},$/;"	o	object:properties.hover.floatConfig.properties
title	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "title": {},$/;"	o	object:properties.signature.floatConfig.properties
title	vim/.vim/plugged/vim-styled-components/examples/complex.js	/^  properties: { overlapAllowed: { type: 'boolean', title: 'Overlap allowed' } }$/;"	p	class:settingsSchema.properties.overlapAllowed
tj	vim/.vim/plugged/coc.nvim/build/index.js	/^`}}return{start:a,end:f,newText:o}}function QB(r,e,t=" "){if(r==e)return e;let i=e.indexOf(r);if/;"	v
tk	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
tl	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	c
tle	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	v
tm	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	f
tme	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
tmpl	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "tmpl": "1.0.x"$/;"	s	object:dependencies.makeerror.requires
tmpl	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "tmpl": {$/;"	o	object:dependencies
tmux	vim/.vim/plugged/fzf/test/test_go.rb	/^  attr_reader :tmux$/;"	A	class:TestBase
tmux_args=	vim/.vim/plugged/fzf/bin/fzf-tmux	/^tmux_args=()$/;"	f
to	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
to-fast-properties	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "to-fast-properties": "^2.0.0"$/;"	s	object:dependencies.@babel/types.requires
to-fast-properties	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "to-fast-properties": {$/;"	o	object:dependencies
to-object-path	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "to-object-path": "^0.3.0",$/;"	s	object:dependencies.cache-base.requires
to-object-path	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "to-object-path": {$/;"	o	object:dependencies
to-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "to-regex": "^3.0.1"$/;"	s	object:dependencies.sane.dependencies.braces.requires
to-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "to-regex": "^3.0.2"$/;"	s	object:dependencies.sane.dependencies.micromatch.requires
to-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "to-regex": "^3.0.1"$/;"	s	object:dependencies.expand-brackets.requires
to-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "to-regex": "^3.0.1"$/;"	s	object:dependencies.extglob.requires
to-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "to-regex": "^3.0.1"$/;"	s	object:dependencies.nanomatch.requires
to-regex	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "to-regex": {$/;"	o	object:dependencies
to-regex-range	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "to-regex-range": "^2.1.0"$/;"	s	object:dependencies.sane.dependencies.fill-range.requires
to-regex-range	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "to-regex-range": "^5.0.1"$/;"	s	object:dependencies.fill-range.requires
to-regex-range	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "to-regex-range": {$/;"	o	object:dependencies.sane.dependencies
to-regex-range	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "to-regex-range": {$/;"	o	object:dependencies
toActions	vim/.vim/plugged/fzf/src/terminal.go	/^func toActions(types ...actionType) []action {$/;"	f	package:fzf	typeref:typename:[]action
toAnsiString	vim/.vim/plugged/fzf/src/ansi.go	/^func toAnsiString(color tui.Color, offset int) string {$/;"	f	package:fzf	typeref:typename:string
toJSON	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	m	class:e
toJSON	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	m	class:r
toString	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	m	class:e
toString	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	m	class:r
toString	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	m	class:r
toe	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
toggleItem	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) toggleItem(item *Item) bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
toggleSort	vim/.vim/plugged/fzf/src/terminal.go	/^	toggleSort   bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
top	vim/.vim/plugged/fzf/src/tui/light.go	/^	top      int$/;"	m	struct:tui.LightWindow	typeref:typename:int
top	vim/.vim/plugged/fzf/src/tui/tcell.go	/^	top         int$/;"	m	struct:tui.TcellWindow	typeref:typename:int
top-cpu-kill	.config/openbox/menu.xml	/^  <menu id="top-cpu-kill" label="top(1) | CPU | kill(1)" execute="~\/scripts\/__openbox_stats_to/;"	i
top-cpu-renice	.config/openbox/menu.xml	/^  <menu id="top-cpu-renice" label="top(1) | CPU | renice(1)" execute="~\/scripts\/__openbox_stat/;"	i
top-mem-kill	.config/openbox/menu.xml	/^  <menu id="top-mem-kill" label="top(1) | MEM | kill(1)" execute="~\/scripts\/__openbox_stats_to/;"	i
top-mem-renice	.config/openbox/menu.xml	/^  <menu id="top-mem-renice" label="top(1) | MEM | renice(1)" execute="~\/scripts\/__openbox_stat/;"	i
topLeft	vim/.vim/plugged/fzf/src/tui/tui.go	/^	topLeft     rune$/;"	m	struct:tui.BorderStyle	typeref:typename:rune
topRight	vim/.vim/plugged/fzf/src/tui/tui.go	/^	topRight    rune$/;"	m	struct:tui.BorderStyle	typeref:typename:rune
tough-cookie	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "tough-cookie": "^4.0.0",$/;"	s	object:dependencies.jsdom.requires
tough-cookie	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "tough-cookie": {$/;"	o	object:dependencies
tp	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
tpe	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
tq	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
tr	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
tr46	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "tr46": "^2.0.2",$/;"	s	object:dependencies.whatwg-url.requires
tr46	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "tr46": {$/;"	o	object:dependencies
trace.server	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "trace.server": {$/;"	o	object:definitions.languageServerBase.properties
trace.server	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "trace.server": {}$/;"	o	object:definitions.languageServerCommand.properties
trace.server	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "trace.server": {}$/;"	o	object:definitions.languageServerModule.properties
trace.server	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "trace.server": {}$/;"	o	object:definitions.languageServerSocket.properties
traceFormat	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	p	class:f
trans	vim/.vim/plugged/fzf/src/chunklist.go	/^	trans  ItemBuilder$/;"	m	struct:fzf.ChunkList	typeref:typename:ItemBuilder
transformInput	vim/.vim/plugged/fzf/src/pattern.go	/^func (p *Pattern) transformInput(item *Item) []Token {$/;"	f	struct:fzf.Pattern	typeref:typename:[]Token
transformed	vim/.vim/plugged/fzf/src/item.go	/^	transformed *[]Token      \/\/ 8$/;"	m	struct:fzf.Item	typeref:typename:*[]Token
translate	vim/.vim/plugged/vim-translator/script/translator.py	/^    def translate(self, sl, tl, text):$/;"	m	class:BaseTranslator
translate	vim/.vim/plugged/vim-translator/script/translator.py	/^    def translate(self, sl, tl, text, options=None):$/;"	m	class:BaicizhanTranslator
translate	vim/.vim/plugged/vim-translator/script/translator.py	/^    def translate(self, sl, tl, text, options=None):$/;"	m	class:BingDict
translate	vim/.vim/plugged/vim-translator/script/translator.py	/^    def translate(self, sl, tl, text, options=None):$/;"	m	class:GoogleTranslator
translate	vim/.vim/plugged/vim-translator/script/translator.py	/^    def translate(self, sl, tl, text, options=None):$/;"	m	class:HaiciDict
translate	vim/.vim/plugged/vim-translator/script/translator.py	/^    def translate(self, sl, tl, text, options=None):$/;"	m	class:ICibaTranslator
translate	vim/.vim/plugged/vim-translator/script/translator.py	/^    def translate(self, sl, tl, text, options=None):$/;"	m	class:SdcvShell
translate	vim/.vim/plugged/vim-translator/script/translator.py	/^    def translate(self, sl, tl, text, options=None):$/;"	m	class:TranslateShell
translate	vim/.vim/plugged/vim-translator/script/translator.py	/^    def translate(self, sl, tl, text, options=None):$/;"	m	class:YoudaoTranslator
translator#action#echo	vim/.vim/plugged/vim-translator/autoload/translator/action.vim	/^function! translator#action#echo(translations) abort$/;"	f
translator#action#replace	vim/.vim/plugged/vim-translator/autoload/translator/action.vim	/^function! translator#action#replace(translations) abort$/;"	f
translator#action#window	vim/.vim/plugged/vim-translator/autoload/translator/action.vim	/^function! translator#action#window(translations) abort$/;"	f
translator#buffer#create_border	vim/.vim/plugged/vim-translator/autoload/translator/buffer.vim	/^function! translator#buffer#create_border(configs) abort$/;"	f
translator#buffer#create_scratch_buf	vim/.vim/plugged/vim-translator/autoload/translator/buffer.vim	/^function! translator#buffer#create_scratch_buf(...) abort$/;"	f
translator#buffer#init	vim/.vim/plugged/vim-translator/autoload/translator/buffer.vim	/^function! translator#buffer#init(bufnr) abort$/;"	f
translator#cmdline#complete	vim/.vim/plugged/vim-translator/autoload/translator/cmdline.vim	/^function! translator#cmdline#complete(arg_lead, cmd_line, cursor_pos) abort$/;"	f
translator#cmdline#parse	vim/.vim/plugged/vim-translator/autoload/translator/cmdline.vim	/^function! translator#cmdline#parse(bang, range, line1, line2, argstr) abort$/;"	f
translator#history#export	vim/.vim/plugged/vim-translator/autoload/translator/history.vim	/^function! translator#history#export() abort$/;"	f
translator#history#save	vim/.vim/plugged/vim-translator/autoload/translator/history.vim	/^function! translator#history#save(translations) abort$/;"	f
translator#job#jobstart	vim/.vim/plugged/vim-translator/autoload/translator/job.vim	/^function! translator#job#jobstart(cmd, type) abort$/;"	f
translator#logger#init	vim/.vim/plugged/vim-translator/autoload/translator/logger.vim	/^function! translator#logger#init() abort$/;"	f
translator#logger#log	vim/.vim/plugged/vim-translator/autoload/translator/logger.vim	/^function! translator#logger#log(info) abort$/;"	f
translator#logger#open_log	vim/.vim/plugged/vim-translator/autoload/translator/logger.vim	/^function! translator#logger#open_log() abort$/;"	f
translator#start	vim/.vim/plugged/vim-translator/autoload/translator.vim	/^function! translator#start(displaymode, bang, range, line1, line2, argstr) abort$/;"	f
translator#translate	vim/.vim/plugged/vim-translator/autoload/translator.vim	/^function! translator#translate(options, displaymode) abort$/;"	f
translator#util#echo	vim/.vim/plugged/vim-translator/autoload/translator/util.vim	/^function! translator#util#echo(group, msg) abort$/;"	f
translator#util#echon	vim/.vim/plugged/vim-translator/autoload/translator/util.vim	/^function! translator#util#echon(group, msg) abort$/;"	f
translator#util#fit_lines	vim/.vim/plugged/vim-translator/autoload/translator/util.vim	/^function! translator#util#fit_lines(linelist, width) abort$/;"	f
translator#util#pad	vim/.vim/plugged/vim-translator/autoload/translator/util.vim	/^function! translator#util#pad(text, width, char) abort$/;"	f
translator#util#safe_trim	vim/.vim/plugged/vim-translator/autoload/translator/util.vim	/^function! translator#util#safe_trim(text) abort$/;"	f
translator#util#show_msg	vim/.vim/plugged/vim-translator/autoload/translator/util.vim	/^function! translator#util#show_msg(message, ...) abort$/;"	f
translator#util#text_proc	vim/.vim/plugged/vim-translator/autoload/translator/util.vim	/^function! translator#util#text_proc(text) abort$/;"	f
translator#util#visual_select	vim/.vim/plugged/vim-translator/autoload/translator/util.vim	/^function! translator#util#visual_select(range, line1, line2) abort$/;"	f
translator#window#float#create	vim/.vim/plugged/vim-translator/autoload/translator/window/float.vim	/^function! translator#window#float#create(linelist, configs) abort$/;"	f
translator#window#float#has_scroll	vim/.vim/plugged/vim-translator/autoload/translator/window/float.vim	/^function! translator#window#float#has_scroll() abort$/;"	f
translator#window#float#scroll	vim/.vim/plugged/vim-translator/autoload/translator/window/float.vim	/^function! translator#window#float#scroll(forward, ...) abort$/;"	f
translator#window#float#scroll_win	vim/.vim/plugged/vim-translator/autoload/translator/window/float.vim	/^function! translator#window#float#scroll_win(winid, forward, amount) abort$/;"	f
translator#window#init	vim/.vim/plugged/vim-translator/autoload/translator/window.vim	/^function! translator#window#init(winid) abort$/;"	f
translator#window#open	vim/.vim/plugged/vim-translator/autoload/translator/window.vim	/^function! translator#window#open(content) abort$/;"	f
translator#window#popup#create	vim/.vim/plugged/vim-translator/autoload/translator/window/popup.vim	/^function! translator#window#popup#create(linelist, configs) abort$/;"	f
translator#window#preview#create	vim/.vim/plugged/vim-translator/autoload/translator/window/preview.vim	/^function! translator#window#preview#create(linelist, configs) abort$/;"	f
transport	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	p	class:vme.l
transport	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "transport": {$/;"	o	object:definitions.languageServerModule.properties
transportPort	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "transportPort": {$/;"	o	object:definitions.languageServerModule.properties
traverse	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "traverse": ">=0.3.0 <0.4"$/;"	s	object:dependencies.chainsaw.requires
traverse	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "traverse": {$/;"	o	object:dependencies
tre	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
tree.closedIcon	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "tree.closedIcon": {$/;"	o	object:properties
tree.key.actions	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "tree.key.actions": {$/;"	o	object:properties
tree.key.activeFilter	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "tree.key.activeFilter": {$/;"	o	object:properties
tree.key.close	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "tree.key.close": {$/;"	o	object:properties
tree.key.collapseAll	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "tree.key.collapseAll": {$/;"	o	object:properties
tree.key.invoke	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "tree.key.invoke": {$/;"	o	object:properties
tree.key.selectNext	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "tree.key.selectNext": {$/;"	o	object:properties
tree.key.selectPrevious	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "tree.key.selectPrevious": {$/;"	o	object:properties
tree.key.toggle	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "tree.key.toggle": {$/;"	o	object:properties
tree.key.toggleSelection	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "tree.key.toggleSelection": {$/;"	o	object:properties
tree.openedIcon	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "tree.openedIcon": {$/;"	o	object:properties
trimLeft	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) trimLeft(runes []rune, width int) ([]rune, int32) {$/;"	f	struct:fzf.Terminal	typeref:typename:([]rune, int32)
trimLength	vim/.vim/plugged/fzf/src/util/chars.go	/^	trimLength      uint16$/;"	m	struct:util.Chars	typeref:typename:uint16
trimLengthKnown	vim/.vim/plugged/fzf/src/util/chars.go	/^	trimLengthKnown bool$/;"	m	struct:util.Chars	typeref:typename:bool
trimMessage	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) trimMessage(message string, maxWidth int) string {$/;"	f	struct:fzf.Terminal	typeref:typename:string
trimQuery	vim/.vim/plugged/fzf/src/terminal.go	/^func trimQuery(query string) []rune {$/;"	f	package:fzf	typeref:typename:[]rune
trimRight	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) trimRight(runes []rune, width int) ([]rune, bool) {$/;"	f	struct:fzf.Terminal	typeref:typename:([]rune, bool)
truncateQuery	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) truncateQuery() {$/;"	f	struct:fzf.Terminal
trySkip	vim/.vim/plugged/fzf/src/algo/algo.go	/^func trySkip(input *util.Chars, caseSensitive bool, b byte, from int) int {$/;"	f	package:algo	typeref:typename:int
try_curl	vim/.vim/plugged/fzf/install	/^try_curl() {$/;"	f
try_wget	vim/.vim/plugged/fzf/install	/^try_wget() {$/;"	f
ts-jest	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "ts-jest": {$/;"	o	object:dependencies
tslib	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "tslib": "^1.8.1"$/;"	s	object:dependencies.tsutils.requires
tslib	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "tslib": {$/;"	o	object:dependencies.tsutils.dependencies
tslib	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "tslib": {$/;"	o	object:dependencies
tsserver.formatOnType	.config/nvim_copy/coc-settings.json	/^  "tsserver.formatOnType": true,$/;"	b
tsserver.formatOnType	vim/.vim/coc-settings.json	/^  "tsserver.formatOnType": true,$/;"	b
tsutils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "tsutils": "^3.17.1"$/;"	s	object:dependencies.@typescript-eslint/eslint-plugin.requires
tsutils	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "tsutils": "^3.17.1"$/;"	s	object:dependencies.@typescript-eslint/typescript-estree.requires
tsutils	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "tsutils": {$/;"	o	object:dependencies
ttyin	vim/.vim/plugged/fzf/src/tui/light.go	/^	ttyin         *os.File$/;"	m	struct:tui.LightRenderer	typeref:typename:*os.File
ttyinChannel	vim/.vim/plugged/fzf/src/tui/light.go	/^	ttyinChannel    chan byte$/;"	m	struct:tui.LightRenderer	typeref:typename:chan byte
ttyname	vim/.vim/plugged/fzf/src/tui/ttyname_unix.go	/^func ttyname() string {$/;"	f	package:tui	typeref:typename:string
ttyname	vim/.vim/plugged/fzf/src/tui/ttyname_windows.go	/^func ttyname() string {$/;"	f	package:tui	typeref:typename:string
tu	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
tui	vim/.vim/plugged/fzf/src/terminal.go	/^	tui          tui.Renderer$/;"	m	struct:fzf.Terminal	typeref:typename:tui.Renderer
tui	vim/.vim/plugged/fzf/src/tui/dummy.go	/^package tui$/;"	p
tui	vim/.vim/plugged/fzf/src/tui/light.go	/^package tui$/;"	p
tui	vim/.vim/plugged/fzf/src/tui/light_unix.go	/^package tui$/;"	p
tui	vim/.vim/plugged/fzf/src/tui/light_windows.go	/^package tui$/;"	p
tui	vim/.vim/plugged/fzf/src/tui/tcell.go	/^package tui$/;"	p
tui	vim/.vim/plugged/fzf/src/tui/tcell_test.go	/^package tui$/;"	p
tui	vim/.vim/plugged/fzf/src/tui/ttyname_unix.go	/^package tui$/;"	p
tui	vim/.vim/plugged/fzf/src/tui/ttyname_windows.go	/^package tui$/;"	p
tui	vim/.vim/plugged/fzf/src/tui/tui.go	/^package tui$/;"	p
tui	vim/.vim/plugged/fzf/src/tui/tui_test.go	/^package tui$/;"	p
tv	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
tw	vim/.vim/plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
twiggy	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^  augroup twiggy$/;"	a
twiggy#Branch	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! twiggy#Branch(...) abort$/;"	f
twiggy#get_branches	vim/.vim/plugged/vim-twiggy/autoload/twiggy.vim	/^function! twiggy#get_branches() abort$/;"	f
twiggy.vim	vim/.vim/plugged/vim-twiggy/README.md	/^# twiggy.vim$/;"	c
ty	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
typ	vim/.vim/plugged/fzf/src/pattern.go	/^	typ           termType$/;"	m	struct:fzf.term	typeref:typename:termType
type	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:to.K
type	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	p	class:q0.i
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerBase.properties.additionalSchemes.items
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerBase.properties.filetypes.items
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerBase.properties.ignoredRootPaths.items
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerBase.properties.rootPatterns.items
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerCommand.properties.args.items
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerModule.properties.args.items
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^            "type": "string"$/;"	s	object:definitions.languageServerModule.properties.execArgv.items
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerBase.properties.additionalSchemes
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerBase.properties.filetypes
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerBase.properties.ignoredRootPaths
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerBase.properties.rootPatterns
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerCommand.properties.args
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerModule.properties.args
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "array",$/;"	s	object:definitions.languageServerModule.properties.execArgv
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.float.properties.border
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.float.properties.close
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.float.properties.focusable
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.float.properties.shadow
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.disableCompletion
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.disableDiagnostics
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.disableDynamicRegister
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.disableSnippetCompletion
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.disableWorkspaceFolders
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.enable
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.progressOnInitialization
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerBase.properties.requireRootPattern
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerCommand.properties.detached
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "boolean",$/;"	s	object:definitions.languageServerCommand.properties.shell
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "integer",$/;"	s	object:definitions.float.properties.maxHeight
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "integer",$/;"	s	object:definitions.float.properties.maxWidth
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "integer",$/;"	s	object:definitions.float.properties.winblend
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "integer",$/;"	s	object:definitions.languageServerModule.properties.transportPort
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "integer",$/;"	s	object:definitions.languageServerSocket.properties.port
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "number",$/;"	s	object:definitions.languageServerBase.properties.formatterPriority
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "object",$/;"	s	object:definitions.languageServerBase.properties.env
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "object",$/;"	s	object:definitions.languageServerBase.properties.initializationOptions
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "object",$/;"	s	object:definitions.languageServerBase.properties.settings
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.float.properties.borderhighlight
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.float.properties.highlight
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.float.properties.title
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerBase.properties.cwd
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerBase.properties.revealOutputChannelOn
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerBase.properties.stdioEncoding
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerBase.properties.trace.server
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerCommand.properties.command
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerModule.properties.module
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerModule.properties.runtime
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerModule.properties.transport
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:definitions.languageServerSocket.properties.host
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^          "type": "string",$/;"	s	object:properties.coc.preferences.jumpCommand.anyOf.0
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "class": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.class
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "color": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.color
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "constant": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.constant
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "constructor": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.constructor
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "default": { "type": "string" }$/;"	s	object:properties.suggest.completionItemKindLabels.properties.default
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "enum": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.enum
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "enumMember": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.enumMember
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "event": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.event
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "field": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.field
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "file": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.file
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "folder": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.folder
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "function": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.function
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "interface": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.interface
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "keyword": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.keyword
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "method": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.method
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "module": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.module
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "operator": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.operator
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "property": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.property
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "reference": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.reference
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "snippet": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.snippet
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "struct": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.struct
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "text": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.text
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.preferences.formatOnSaveFiletypes.items
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.preferences.formatOnTypeFiletypes.items
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.preferences.rootPatterns.items
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.around.disableSyntaxes.items
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.buffer.disableSyntaxes.items
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.file.disableSyntaxes.items
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.file.ignorePatterns.items
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.file.triggerCharacters.items
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.coc.source.file.trimSameExts.items
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.list.source.outline.ctagsFilestypes.items
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.list.source.symbols.excludes.items
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.suggest.invalidInsertCharacters.items
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.workspace.bottomUpFiletypes.items
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "type": "string"$/;"	s	object:properties.workspace.ignoredFiletypes.items
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "type": "string",$/;"	s	object:properties.outline.codeActionKinds.items
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "typeParameter": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.typeParameter
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "unit": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.unit
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "value": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.value
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "variable": { "type": "string" },$/;"	s	object:properties.suggest.completionItemKindLabels.properties.variable
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^        { "type": "string", "minimum": 1 }$/;"	s	object:properties.coc.preferences.jumpCommand.anyOf.1
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.preferences.formatOnSaveFiletypes
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.preferences.formatOnTypeFiletypes
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.preferences.rootPatterns
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.around.disableSyntaxes
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.buffer.disableSyntaxes
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.file.disableSyntaxes
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.file.ignorePatterns
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.file.triggerCharacters
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.coc.source.file.trimSameExts
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.list.source.outline.ctagsFilestypes
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.list.source.symbols.excludes
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.outline.codeActionKinds
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.suggest.invalidInsertCharacters
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.workspace.bottomUpFiletypes
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "array",$/;"	s	object:properties.workspace.ignoredFiletypes
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.callHierarchy.enableTooltip
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.bracketEnterImprove
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.colorSupport
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.currentFunctionSymbolAutoUpdate
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.enableFloatHighlight
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.enableMarkdown
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.enableMessageDialog
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.excludeImageLinksInMarkdownDocument
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.floatActions
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.formatOnType
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.promptInput
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.promptWorkspaceEdit
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.semanticTokensHighlights
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.silentAutoupdate
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.preferences.useQuickfixForLocations
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.around.enable
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.around.firstMatch
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.buffer.enable
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.buffer.firstMatch
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.buffer.ignoreGitignore
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.file.enable
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.coc.source.file.ignoreHidden
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.codeLens.enable
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.autoRefresh
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.checkCurrentLine
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.displayByAle
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.enable
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.enableHighlightLineNumber
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.enableSign
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.locationlistUpdate
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.refreshOnInsertMode
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.separateRelatedInformationAsDiagnostics
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.showDeprecated
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.showUnused
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.virtualText
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.diagnostic.virtualTextCurrentLineOnly
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.dialog.pickerButtonShortcut
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.dialog.pickerButtons
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.hover.autoHide
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.http.proxyStrictSSL
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.list.alignColumns
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.list.extendedSearchMode
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.list.previewSplitRight
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.list.source.diagnostics.includeCode
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.outline.checkBufferSwitch
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.outline.followCursor
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.outline.keepWindow
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.outline.showLineNumber
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.refactor.saveToFile
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.signature.enable
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.signature.hideOnTextChange
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.signature.preferShownAbove
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.acceptSuggestionOnCommitCharacter
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.asciiCharactersOnly
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.disableKind
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.disableMenu
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.disableMenuShortcut
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.echodocSupport
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.enablePreselect
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.enablePreview
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.fixInsertedWord
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.floatEnable
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.keepCompleteopt
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.localityBonus
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.noselect
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.numberSelect
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.preferCompleteThanJumpPlaceholder
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.removeDuplicateItems
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.snippetsSupport
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.suggest.triggerAfterInsertEnter
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "boolean",$/;"	s	object:properties.workspace.workspaceFolderCheckCwd
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.coc.preferences.willSaveHandlerTimeout
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.coc.source.around.priority
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.coc.source.buffer.priority
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.coc.source.file.priority
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.signature.triggerSignatureWait
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.suggest.highPrioritySourceLimit
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.suggest.lowPrioritySourceLimit
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.suggest.minTriggerInputLength
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.suggest.timeout
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "integer",$/;"	s	object:properties.suggest.triggerCompletionWait
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.diagnostic.highlighLimit
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.diagnostic.highlightOffset
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.diagnostic.messageDelay
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.diagnostic.signPriority
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.diagnostic.virtualTextLines
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.dialog.maxHeight
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.dialog.maxWidth
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.hover.previewMaxHeight
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.list.height
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.list.interactiveDebounceTime
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.list.limitLines
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.list.maxPreviewHeight
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.list.signOffset
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.notification.marginRight
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.notification.marginTop
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.notification.maxHeight
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.notification.maxWidth
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.notification.minProgressWidth
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.outline.expandLevel
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.refactor.afterContext
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.refactor.beforeContext
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.suggest.detailMaxLength
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.suggest.labelMaxLength
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.suggest.languageSourcePriority
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "number",$/;"	s	object:properties.suggest.maxCompleteItemCount
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:definitions.float
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:definitions.languageServerBase
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:definitions.languageServerCommand
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:definitions.languageServerModule
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:definitions.languageServerSocket
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.diagnostic.filetypeMap
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.diagnostic.floatConfig
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.hover.floatConfig
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.languageserver
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.list.insertMappings
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.list.normalMappings
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.signature.floatConfig
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.suggest.completionItemKindLabels
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "object",$/;"	s	object:properties.suggest.floatConfig
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.callHierarchy.openCommand
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.callHierarchy.splitCommand
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.extensionUpdateCheck
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.listOfWorkspaceEdit
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.maxFileSize
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.messageLevel
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.snippetStatusText
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.preferences.watchmanPath
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.source.around.shortcut
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.source.buffer.shortcut
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.coc.source.file.shortcut
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.codeLens.separator
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.codeLens.subseparator
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.cursors.cancelKey
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.cursors.nextKey
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.cursors.previousKey
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.enableMessage
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.errorSign
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.format
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.hintSign
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.infoSign
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.level
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.messageTarget
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.virtualTextLineSeparator
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.virtualTextPrefix
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.diagnostic.warningSign
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.dialog.confirmKey
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.hover.target
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.http.proxy
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.http.proxyCA
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.indicator
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.matchHighlightGroup
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.nextKeymap
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.previewHighlightGroup
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.previousKeymap
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.selectedSignText
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.list.source.diagnostics.pathFormat
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.notification.highlightGroup
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.npm.binPath
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.outline.sortBy
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.outline.splitCommand
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.refactor.openCommand
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.signature.target
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.suggest.autoTrigger
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.suggest.defaultSortMethod
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.suggest.detailField
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.suggest.snippetIndicator
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.tree.closedIcon
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.tree.key.actions
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.tree.key.activeFilter
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.tree.key.close
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.tree.key.collapseAll
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.tree.key.invoke
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.tree.key.selectNext
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.tree.key.selectPrevious
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.tree.key.toggle
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.tree.key.toggleSelection
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": "string",$/;"	s	object:properties.tree.openedIcon
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": ["array", "null"],$/;"	a	object:properties.list.statusLineSegments
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": ["null", "string"],$/;"	a	object:properties.http.proxyAuthorization
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": ["string", "null"],$/;"	a	object:properties.dialog.floatBorderHighlight
type	vim/.vim/plugged/coc.nvim/data/schema.json	/^      "type": ["string", "null"],$/;"	a	object:properties.dialog.floatHighlight
type	vim/.vim/plugged/vim-multiple-cursors/spec/benchmark_spec.rb	/^def type(string)$/;"	f
type	vim/.vim/plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def type(string)$/;"	f
type	vim/.vim/plugged/vim-styled-components/examples/complex.js	/^  properties: { overlapAllowed: { type: 'boolean', title: 'Overlap allowed' } }$/;"	p	class:settingsSchema.properties.overlapAllowed
type	vim/.vim/plugged/vim-styled-components/examples/complex.js	/^  type: 'object',$/;"	p	class:settingsSchema
type-check	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "type-check": "~0.3.2"$/;"	s	object:dependencies.escodegen.dependencies.levn.requires
type-check	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "type-check": "~0.3.2",$/;"	s	object:dependencies.escodegen.dependencies.optionator.requires
type-check	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "type-check": "^0.4.0",$/;"	s	object:dependencies.optionator.requires
type-check	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "type-check": "~0.4.0"$/;"	s	object:dependencies.levn.requires
type-check	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "type-check": {$/;"	o	object:dependencies.escodegen.dependencies
type-check	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "type-check": {$/;"	o	object:dependencies
type-detect	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "type-detect": "4.0.8"$/;"	s	object:dependencies.@sinonjs/commons.requires
type-detect	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "type-detect": {$/;"	o	object:dependencies
type-fest	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "type-fest": "^0.21.3"$/;"	s	object:dependencies.ansi-escapes.requires
type-fest	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "type-fest": "^0.6.0"$/;"	s	object:dependencies.read-pkg.requires
type-fest	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "type-fest": "^0.8.1"$/;"	s	object:dependencies.globals.requires
type-fest	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "type-fest": "^0.8.1"$/;"	s	object:dependencies.read-pkg-up.requires
type-fest	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "type-fest": {$/;"	o	object:dependencies.ansi-escapes.dependencies
type-fest	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "type-fest": {$/;"	o	object:dependencies.read-pkg.dependencies
type-fest	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "type-fest": {$/;"	o	object:dependencies
typeParameter	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "typeParameter": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
typedarray-to-buffer	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "typedarray-to-buffer": "^3.1.5"$/;"	s	object:dependencies.write-file-atomic.requires
typedarray-to-buffer	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "typedarray-to-buffer": {$/;"	o	object:dependencies
types	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "types": "string"$/;"	s	object:properties.list.statusLineSegments.items
typescript	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "typescript": {$/;"	o	object:dependencies
tz	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
u	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
u	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
u	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
u	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f	function:AnonymousFunction272f78ae13000
u	vim/.vim/plugged/coc.nvim/build/index.js	/^`)+4,e.outputData[0].data=e._header+a.substring(l),Qo("Output buffer: %o",e.outputData[0].data))/;"	f	function:Npe
u	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
u	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c	class:Uz.o
u	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:AnonymousFunction272f78ae33b00.e
u	vim/.vim/plugged/coc.nvim/build/index.js	/^`);return r.length?r[0].length:0});Ad.prototype.render;Ad.prototype.toString=function(){var r=""/;"	f	function:AnonymousFunction272f78ae1fa00
u	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f	function:AnonymousFunction272f78ae29d00
u	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:WQ
u	vim/.vim/plugged/vim-css-color/tests/example.css	/^u { background: rgba(144, 0, 0, .5) }$/;"	s
u$	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
u0	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	f
u5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
u6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
u7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
u8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
u9	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
uB	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
uC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
uD	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
uG	vim/.vim/plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
uI	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
uK	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
uL	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
uO	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
uS	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
uV	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
uX	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	f
uae	vim/.vim/plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	f
ud	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
ue	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
uf	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
ufe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
uge	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
uh	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
uint16	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
uint32	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
uint64	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
uint8	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	p	class:wee.n
uj	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
ul	vim/.vim/plugged/vim-css-color/tests/example.css	/^ul {$/;"	s
ul li	vim/.vim/plugged/vim-css-color/tests/example.css	/^ul li {$/;"	s
ume	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
un	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),_.log(`Sending response '${z} - (${P.id})'. Processing request took ${Date.now()-K}ms`,ce)}e/;"	f
unbox-primitive	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "unbox-primitive": "^1.0.1"$/;"	s	object:dependencies.es-abstract.requires
unbox-primitive	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "unbox-primitive": {$/;"	o	object:dependencies
underline	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.modifier
unicode	vim/.vim/plugged/fzf/src/terminal.go	/^	unicode      bool$/;"	m	struct:fzf.Terminal	typeref:typename:bool
union-value	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "union-value": "^1.0.0",$/;"	s	object:dependencies.cache-base.requires
union-value	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "union-value": {$/;"	o	object:dependencies
unit	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "unit": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
universalify	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "universalify": "^0.1.0"$/;"	s	object:dependencies.streamroller.dependencies.fs-extra.requires
universalify	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "universalify": "^0.1.2"$/;"	s	object:dependencies.tough-cookie.requires
universalify	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "universalify": "^1.0.0"$/;"	s	object:dependencies.fs-extra.requires
universalify	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "universalify": "^2.0.0"$/;"	s	object:dependencies.jsonfile.requires
universalify	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "universalify": {$/;"	o	object:dependencies.jsonfile.dependencies
universalify	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "universalify": {$/;"	o	object:dependencies.streamroller.dependencies
universalify	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "universalify": {$/;"	o	object:dependencies.tough-cookie.dependencies
universalify	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "universalify": {$/;"	o	object:dependencies
unknownFn	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	p	class:AnonymousFunction272f78ae29d00.t
unset-value	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "unset-value": "^1.0.0"$/;"	s	object:dependencies.cache-base.requires
unset-value	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "unset-value": {$/;"	o	object:dependencies
unset_var	vim/.vim/plugged/fzf/test/test_go.rb	/^  def unset_var(name)$/;"	f	module:TestShell
until	vim/.vim/plugged/fzf/test/test_go.rb	/^  def until(refresh = false)$/;"	f	class:Tmux
unzip-stream	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "unzip-stream": {$/;"	o	object:dependencies
uoe	vim/.vim/plugged/coc.nvim/build/index.js	/^${l}`));return}i(a)})})}function Ic(r,e){let t=(0,jN.default)(e,100);try{let i=UN.default.watch(/;"	f
up	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1e100.i
up	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
upOneLine	vim/.vim/plugged/fzf/src/tui/light.go	/^	upOneLine     bool$/;"	m	struct:tui.LightRenderer	typeref:typename:bool
update	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	m	class:Uz.o.u
update	vim/.vim/plugged/coc.nvim/build/index.js	/^`,"\\r"];(function(r){function e(s,o,a,l){return new Jie(s,o,a,l)}r.create=e;function t(s){var o/;"	m	class:r
update	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	m	class:r
update	vim/.vim/plugged/fzf/Makefile	/^update:$/;"	t
updatePromptOffset	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) updatePromptOffset() ([]rune, []rune) {$/;"	f	struct:fzf.Terminal	typeref:typename:([]rune, []rune)
updateTerminalSize	vim/.vim/plugged/fzf/src/tui/light_unix.go	/^func (r *LightRenderer) updateTerminalSize() {$/;"	f	unknown:tui.LightRenderer
updateTerminalSize	vim/.vim/plugged/fzf/src/tui/light_windows.go	/^func (r *LightRenderer) updateTerminalSize() {$/;"	f	unknown:tui.LightRenderer
uq	vim/.vim/plugged/coc.nvim/build/index.js	/^]`).replace("lheading",he.lheading).replace("blockquote"," {0,3}>").replace("|fences","").replac/;"	v
ur	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
uri	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78ae10000.e.o
uri	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78ae12000.e.a.location
uri	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:AnonymousFunction272f78aefe00.e.o
uri	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:r.getTextEditChange.t
uri-js	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "uri-js": "^4.2.2"$/;"	s	object:dependencies.ajv.requires
uri-js	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "uri-js": {$/;"	o	object:dependencies
urix	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "urix": "^0.1.0"$/;"	s	object:dependencies.source-map-resolve.requires
urix	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "urix": {$/;"	o	object:dependencies
url_quote	vim/.vim/plugged/vim-translator/script/translator.py	/^    from urllib import quote_plus as url_quote$/;"	x	nameref:unknown:quote_plus
url_quote	vim/.vim/plugged/vim-translator/script/translator.py	/^    from urllib.parse import quote_plus as url_quote$/;"	x	nameref:unknown:quote_plus
us	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	f
usage	vim/.vim/plugged/fzf/src/options.go	/^const usage = `usage: fzf [options]$/;"	c	package:fzf
use	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "use": "^3.1.0"$/;"	s	object:dependencies.snapdragon.requires
use	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "use": {$/;"	o	object:dependencies
use_raw_list	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%FILE_LIST_CMD_IS_ABSOLUTE%"]==["1"] set use_raw_list=1$/;"	v
use_raw_list	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%PROJECT_ROOT%"]==["."] set use_raw_list=1$/;"	v
use_raw_list	vim/.vim/plugged/vim-gutentags/plat/win32/update_tags.cmd	/^        set use_raw_list=0$/;"	v
ut	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
util	vim/.vim/plugged/fzf/src/util/atomicbool.go	/^package util$/;"	p
util	vim/.vim/plugged/fzf/src/util/atomicbool_test.go	/^package util$/;"	p
util	vim/.vim/plugged/fzf/src/util/chars.go	/^package util$/;"	p
util	vim/.vim/plugged/fzf/src/util/chars_test.go	/^package util$/;"	p
util	vim/.vim/plugged/fzf/src/util/eventbox.go	/^package util$/;"	p
util	vim/.vim/plugged/fzf/src/util/eventbox_test.go	/^package util$/;"	p
util	vim/.vim/plugged/fzf/src/util/slab.go	/^package util$/;"	p
util	vim/.vim/plugged/fzf/src/util/util.go	/^package util$/;"	p
util	vim/.vim/plugged/fzf/src/util/util_test.go	/^package util$/;"	p
util	vim/.vim/plugged/fzf/src/util/util_unix.go	/^package util$/;"	p
util	vim/.vim/plugged/fzf/src/util/util_windows.go	/^package util$/;"	p
utilities-menu	.config/openbox/menu.xml	/^<menu id="utilities-menu" label="utilities">$/;"	i
uuid	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "uuid": "^8.3.0",$/;"	s	object:dependencies.node-notifier.requires
uuid	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "uuid": {$/;"	o	object:dependencies.node-notifier.dependencies
uuid	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "uuid": {$/;"	o	object:dependencies
uv	vim/.vim/plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
uw	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
ux	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
uy	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
uze	vim/.vim/plugged/coc.nvim/build/index.js	/^`),s=n.length-(t.end.line-t.start.line+1);if(this.line=this.line+s,t.end.line==this.line){let o=/;"	v
v	vim/.vim/plugged/coc.nvim/build/index.js	/^  var v = process.version$/;"	v
v	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
v	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
v$	vim/.vim/plugged/coc.nvim/build/index.js	/^`}function sae(r){return r.replace(Woe,":")}function v$(r,e=null){if(!r)return[];e=e||Sn;let t=e/;"	f
v0	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	v
v5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
v6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
v7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
v8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	f
v8-compile-cache	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "v8-compile-cache": "^2.0.3"$/;"	s	object:dependencies.eslint.requires
v8-compile-cache	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "v8-compile-cache": {$/;"	o	object:dependencies
v8-to-istanbul	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "v8-to-istanbul": "^7.0.0"$/;"	s	object:dependencies.@jest/reporters.requires
v8-to-istanbul	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "v8-to-istanbul": {$/;"	o	object:dependencies
v9	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
vB	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
vBe	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
vC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
vD	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
vF	vim/.vim/plugged/coc.nvim/build/index.js	/^`))this.outText=this.outText+n;else{let s=this.outText+t[0].toString();this.outText="",this.conn/;"	v
vG	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
vK	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
vN	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
vQ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
vV	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
vW	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
vX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
vY	vim/.vim/plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	f
vZ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
v_	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
va	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
validate-npm-package-license	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "validate-npm-package-license": "^3.0.1"$/;"	s	object:dependencies.normalize-package-data.requires
validate-npm-package-license	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "validate-npm-package-license": {$/;"	o	object:dependencies
validateSign	vim/.vim/plugged/fzf/src/options.go	/^func validateSign(sign string, signOptName string) error {$/;"	f	package:fzf	typeref:typename:error
value	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f	function:t
value	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "value": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
variable	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "variable": { "type": "string" },$/;"	o	object:properties.suggest.completionItemKindLabels.properties
vee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
version	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	p	class:r.getTextEditChange.t
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^              "version": "2.0.1",$/;"	s	object:dependencies.sane.dependencies.braces.dependencies.extend-shallow
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^              "version": "2.0.1",$/;"	s	object:dependencies.sane.dependencies.fill-range.dependencies.extend-shallow
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^              "version": "2.1.0",$/;"	s	object:dependencies.unset-value.dependencies.has-value.dependencies.isobject
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^              "version": "3.2.2",$/;"	s	object:dependencies.has-values.dependencies.is-number.dependencies.kind-of
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^              "version": "3.2.2",$/;"	s	object:dependencies.sane.dependencies.is-number.dependencies.kind-of
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "0.1.2",$/;"	s	object:dependencies.streamroller.dependencies.universalify
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "0.1.2",$/;"	s	object:dependencies.tough-cookie.dependencies.universalify
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "0.1.4",$/;"	s	object:dependencies.unset-value.dependencies.has-values
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "0.2.5",$/;"	s	object:dependencies.class-utils.dependencies.define-property
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "0.2.5",$/;"	s	object:dependencies.expand-brackets.dependencies.define-property
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "0.2.5",$/;"	s	object:dependencies.object-copy.dependencies.define-property
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "0.2.5",$/;"	s	object:dependencies.snapdragon.dependencies.define-property
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "0.2.5",$/;"	s	object:dependencies.static-extend.dependencies.define-property
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "0.21.3",$/;"	s	object:dependencies.ansi-escapes.dependencies.type-fest
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "0.3.0",$/;"	s	object:dependencies.escodegen.dependencies.levn
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "0.3.1",$/;"	s	object:dependencies.unset-value.dependencies.has-value
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "0.3.2",$/;"	s	object:dependencies.escodegen.dependencies.type-check
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "0.3.8",$/;"	s	object:dependencies.cssstyle.dependencies.cssom
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "0.5.5",$/;"	s	object:dependencies.unzip-stream.dependencies.mkdirp
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "0.5.7",$/;"	s	object:dependencies.@babel/core.dependencies.source-map
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "0.5.7",$/;"	s	object:dependencies.@babel/generator.dependencies.source-map
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "0.5.7",$/;"	s	object:dependencies.snapdragon.dependencies.source-map
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "0.6.0",$/;"	s	object:dependencies.read-pkg.dependencies.type-fest
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "0.7.3",$/;"	s	object:dependencies.v8-to-istanbul.dependencies.source-map
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "0.8.3",$/;"	s	object:dependencies.escodegen.dependencies.optionator
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.0.0",$/;"	s	object:dependencies.base.dependencies.define-property
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.0.0",$/;"	s	object:dependencies.base.dependencies.is-accessor-descriptor
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.0.0",$/;"	s	object:dependencies.base.dependencies.is-data-descriptor
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.0.0",$/;"	s	object:dependencies.define-property.dependencies.is-accessor-descriptor
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.0.0",$/;"	s	object:dependencies.define-property.dependencies.is-data-descriptor
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.0.0",$/;"	s	object:dependencies.execa.dependencies.shebang-regex
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.0.0",$/;"	s	object:dependencies.extglob.dependencies.define-property
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.0.0",$/;"	s	object:dependencies.extglob.dependencies.is-accessor-descriptor
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.0.0",$/;"	s	object:dependencies.extglob.dependencies.is-data-descriptor
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.0.0",$/;"	s	object:dependencies.snapdragon-node.dependencies.define-property
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.0.0",$/;"	s	object:dependencies.snapdragon-node.dependencies.is-accessor-descriptor
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.0.0",$/;"	s	object:dependencies.snapdragon-node.dependencies.is-data-descriptor
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.0.1",$/;"	s	object:dependencies.extend-shallow.dependencies.is-extendable
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.0.1",$/;"	s	object:dependencies.mixin-deep.dependencies.is-extendable
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.0.2",$/;"	s	object:dependencies.base.dependencies.is-descriptor
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.0.2",$/;"	s	object:dependencies.define-property.dependencies.is-descriptor
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.0.2",$/;"	s	object:dependencies.extglob.dependencies.is-descriptor
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.0.2",$/;"	s	object:dependencies.snapdragon-node.dependencies.is-descriptor
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.1.2",$/;"	s	object:dependencies.escodegen.dependencies.prelude-ls
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.1.3",$/;"	s	object:dependencies.@babel/highlight.dependencies.color-name
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.1.3",$/;"	s	object:dependencies.cli-table.dependencies.color-name
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.1.3",$/;"	s	object:dependencies.slice-ansi.dependencies.color-name
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.14.1",$/;"	s	object:dependencies.tsutils.dependencies.tslib
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.2.0",$/;"	s	object:dependencies.execa.dependencies.shebang-command
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.3.0",$/;"	s	object:dependencies.eslint-utils.dependencies.eslint-visitor-keys
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.3.0",$/;"	s	object:dependencies.espree.dependencies.eslint-visitor-keys
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.3.1",$/;"	s	object:dependencies.execa.dependencies.which
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.9.3",$/;"	s	object:dependencies.@babel/highlight.dependencies.color-convert
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.9.3",$/;"	s	object:dependencies.cli-table.dependencies.color-convert
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "1.9.3",$/;"	s	object:dependencies.slice-ansi.dependencies.color-convert
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "11.12.0",$/;"	s	object:dependencies.@babel/traverse.dependencies.globals
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "2.0.0",$/;"	s	object:dependencies.expand-brackets.dependencies.ms
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "2.0.0",$/;"	s	object:dependencies.jest-changed-files.dependencies.is-stream
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "2.0.0",$/;"	s	object:dependencies.jsonfile.dependencies.universalify
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "2.0.0",$/;"	s	object:dependencies.sane.dependencies.anymatch
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "2.0.0",$/;"	s	object:dependencies.snapdragon.dependencies.ms
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "2.0.0",$/;"	s	object:dependencies.stack-utils.dependencies.escape-string-regexp
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "2.0.1",$/;"	s	object:dependencies.execa.dependencies.path-key
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "2.0.1",$/;"	s	object:dependencies.expand-brackets.dependencies.extend-shallow
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "2.0.1",$/;"	s	object:dependencies.extglob.dependencies.extend-shallow
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "2.0.1",$/;"	s	object:dependencies.npm-run-path.dependencies.path-key
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "2.0.1",$/;"	s	object:dependencies.rc.dependencies.strip-json-comments
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "2.0.1",$/;"	s	object:dependencies.set-value.dependencies.extend-shallow
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "2.0.1",$/;"	s	object:dependencies.snapdragon.dependencies.extend-shallow
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "2.1.0",$/;"	s	object:dependencies.streamroller.dependencies.date-format
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "2.1.1",$/;"	s	object:dependencies.sane.dependencies.normalize-path
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "2.1.1",$/;"	s	object:dependencies.sane.dependencies.to-regex-range
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "2.3.2",$/;"	s	object:dependencies.sane.dependencies.braces
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "2.4.2",$/;"	s	object:dependencies.@babel/highlight.dependencies.chalk
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "2.4.2",$/;"	s	object:dependencies.cli-table.dependencies.chalk
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "2.6.9",$/;"	s	object:dependencies.expand-brackets.dependencies.debug
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "2.6.9",$/;"	s	object:dependencies.snapdragon.dependencies.debug
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "20.2.7",$/;"	s	object:dependencies.ts-jest.dependencies.yargs-parser
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "26.6.3",$/;"	s	object:dependencies.jest.dependencies.jest-cli
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "3.0.0",$/;"	s	object:dependencies.@babel/highlight.dependencies.has-flag
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "3.0.0",$/;"	s	object:dependencies.cli-table.dependencies.has-flag
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "3.0.0",$/;"	s	object:dependencies.has-values.dependencies.is-number
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "3.0.0",$/;"	s	object:dependencies.sane.dependencies.is-number
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "3.0.0",$/;"	s	object:dependencies.string-width.dependencies.is-fullwidth-code-point
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "3.1.0",$/;"	s	object:dependencies.table.dependencies.string-width
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "3.1.1",$/;"	s	object:dependencies.flat-cache.dependencies.flatted
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "3.1.10",$/;"	s	object:dependencies.sane.dependencies.micromatch
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "3.17.0-next.1",$/;"	s	object:dependencies.vscode-languageserver.dependencies.vscode-languageserver-types
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "3.17.0-next.5",$/;"	s	object:dependencies.vscode-languageserver.dependencies.vscode-languageserver-protocol
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "3.2.1",$/;"	s	object:dependencies.@babel/highlight.dependencies.ansi-styles
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "3.2.1",$/;"	s	object:dependencies.cli-table.dependencies.ansi-styles
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "3.2.1",$/;"	s	object:dependencies.slice-ansi.dependencies.ansi-styles
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "3.2.2",$/;"	s	object:dependencies.is-accessor-descriptor.dependencies.kind-of
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "3.2.2",$/;"	s	object:dependencies.is-data-descriptor.dependencies.kind-of
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "3.2.2",$/;"	s	object:dependencies.object-copy.dependencies.kind-of
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "3.2.2",$/;"	s	object:dependencies.snapdragon-util.dependencies.kind-of
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "3.2.2",$/;"	s	object:dependencies.to-object-path.dependencies.kind-of
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "4.0.0",$/;"	s	object:dependencies.has-values.dependencies.kind-of
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "4.0.0",$/;"	s	object:dependencies.sane.dependencies.fill-range
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "4.0.0",$/;"	s	object:dependencies.streamroller.dependencies.jsonfile
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "4.0.1",$/;"	s	object:dependencies.jest-changed-files.dependencies.npm-run-path
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "4.0.6",$/;"	s	object:dependencies.@eslint/eslintrc.dependencies.ignore
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "4.0.6",$/;"	s	object:dependencies.eslint.dependencies.ignore
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "4.1.0",$/;"	s	object:dependencies.jest-changed-files.dependencies.execa
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "4.1.0",$/;"	s	object:dependencies.table.dependencies.ansi-regex
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "4.3.0",$/;"	s	object:dependencies.chalk.dependencies.ansi-styles
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "4.3.0",$/;"	s	object:dependencies.expect.dependencies.ansi-styles
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "4.3.0",$/;"	s	object:dependencies.pretty-format.dependencies.ansi-styles
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "4.3.0",$/;"	s	object:dependencies.wrap-ansi.dependencies.ansi-styles
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "4.3.1",$/;"	s	object:dependencies.eslint-plugin-jsdoc.dependencies.debug
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "5.0.0",$/;"	s	object:dependencies.@istanbuljs/load-nyc-config.dependencies.resolve-from
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "5.0.0",$/;"	s	object:dependencies.domexception.dependencies.webidl-conversions
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "5.0.0",$/;"	s	object:dependencies.resolve-cwd.dependencies.resolve-from
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "5.1.0",$/;"	s	object:dependencies.is-descriptor.dependencies.kind-of
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "5.2.0",$/;"	s	object:dependencies.escodegen.dependencies.estraverse
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "5.2.0",$/;"	s	object:dependencies.esquery.dependencies.estraverse
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "5.2.0",$/;"	s	object:dependencies.esrecurse.dependencies.estraverse
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "5.2.0",$/;"	s	object:dependencies.jest-changed-files.dependencies.get-stream
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "5.2.0",$/;"	s	object:dependencies.table.dependencies.strip-ansi
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "5.5.0",$/;"	s	object:dependencies.@babel/highlight.dependencies.supports-color
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "5.5.0",$/;"	s	object:dependencies.cli-table.dependencies.supports-color
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "5.7.1",$/;"	s	object:dependencies.execa.dependencies.semver
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "5.7.1",$/;"	s	object:dependencies.normalize-package-data.dependencies.semver
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "6.0.5",$/;"	s	object:dependencies.execa.dependencies.cross-spawn
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "6.1.0-next.2",$/;"	s	object:dependencies.vscode-languageserver.dependencies.vscode-jsonrpc
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "6.2.0",$/;"	s	object:dependencies.jest-validate.dependencies.camelcase
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "6.3.0",$/;"	s	object:dependencies.@babel/core.dependencies.semver
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "6.3.0",$/;"	s	object:dependencies.@babel/helper-compilation-targets.dependencies.semver
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "6.3.0",$/;"	s	object:dependencies.istanbul-lib-instrument.dependencies.semver
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "6.3.0",$/;"	s	object:dependencies.make-dir.dependencies.semver
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "7.0.3",$/;"	s	object:dependencies.table.dependencies.emoji-regex
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "7.3.5",$/;"	s	object:dependencies.eslint-plugin-jsdoc.dependencies.semver
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "8.1.0",$/;"	s	object:dependencies.streamroller.dependencies.fs-extra
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "8.3.0",$/;"	s	object:dependencies.jsdom.dependencies.acorn
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^          "version": "8.3.2",$/;"	s	object:dependencies.node-notifier.dependencies.uuid
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.0.1",$/;"	s	object:dependencies.concat-map
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.1.0",$/;"	s	object:dependencies.chainsaw
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.1.0",$/;"	s	object:dependencies.get-package-type
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.1.0",$/;"	s	object:dependencies.object-copy
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.1.0",$/;"	s	object:dependencies.urix
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.1.1",$/;"	s	object:dependencies.buffers
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.1.1",$/;"	s	object:dependencies.copy-descriptor
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.1.1",$/;"	s	object:dependencies.is-extendable
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.1.1",$/;"	s	object:dependencies.pascalcase
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.1.1",$/;"	s	object:dependencies.posix-character-classes
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.1.1",$/;"	s	object:dependencies.shellwords
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.1.10",$/;"	s	object:dependencies.int64-buffer
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.1.15",$/;"	s	object:dependencies.ret
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.1.2",$/;"	s	object:dependencies.event-lite
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.1.2",$/;"	s	object:dependencies.exit
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.1.2",$/;"	s	object:dependencies.static-extend
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.1.26",$/;"	s	object:dependencies.msgpack-lite
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.1.3",$/;"	s	object:dependencies.@istanbuljs/schema
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.1.3",$/;"	s	object:dependencies.deep-is
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.1.4",$/;"	s	object:dependencies.imurmurhash
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.1.4",$/;"	s	object:dependencies.is-data-descriptor
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.1.6",$/;"	s	object:dependencies.is-accessor-descriptor
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.1.6",$/;"	s	object:dependencies.is-descriptor
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.11.2",$/;"	s	object:dependencies.base
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.12.7",$/;"	s	object:dependencies.esbuild
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.2.0",$/;"	s	object:dependencies.decode-uri-component
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.2.0",$/;"	s	object:dependencies.text-table
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.2.1",$/;"	s	object:dependencies.fragment-cache
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.2.1",$/;"	s	object:dependencies.is-arrayish
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.2.1",$/;"	s	object:dependencies.resolve-url
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.2.2",$/;"	s	object:dependencies.@eslint/eslintrc
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.2.2",$/;"	s	object:dependencies.map-cache
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.2.3",$/;"	s	object:dependencies.@bcoe/v8-coverage
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.2.6",$/;"	s	object:dependencies.bs-logger
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.3.0",$/;"	s	object:dependencies.@types/cli-table
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.3.0",$/;"	s	object:dependencies.binary
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.3.0",$/;"	s	object:dependencies.to-object-path
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.3.1",$/;"	s	object:dependencies.unzip-stream
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.3.2",$/;"	s	object:dependencies.array-unique
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.3.4",$/;"	s	object:dependencies.cli-table
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.3.6",$/;"	s	object:dependencies.class-utils
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.3.6",$/;"	s	object:dependencies.exec-sh
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.3.9",$/;"	s	object:dependencies.traverse
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.4.0",$/;"	s	object:dependencies.asynckit
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.4.0",$/;"	s	object:dependencies.node-int64
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.4.0",$/;"	s	object:dependencies.type-check
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.4.1",$/;"	s	object:dependencies.json-schema-traverse
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.4.1",$/;"	s	object:dependencies.levn
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.4.1",$/;"	s	object:dependencies.source-map-url
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.4.24",$/;"	s	object:dependencies.iconv-lite
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.4.4",$/;"	s	object:dependencies.cssom
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.5.19",$/;"	s	object:dependencies.source-map-support
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.5.3",$/;"	s	object:dependencies.content-disposition
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.5.3",$/;"	s	object:dependencies.source-map-resolve
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.6.0",$/;"	s	object:dependencies.cjs-module-lexer
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.6.0",$/;"	s	object:dependencies.deep-extend
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.6.1",$/;"	s	object:dependencies.source-map
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.7.1",$/;"	s	object:dependencies.regextras
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.7.2",$/;"	s	object:dependencies.emittery
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.7.6",$/;"	s	object:dependencies.comment-parser
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.8.1",$/;"	s	object:dependencies.type-fest
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.8.2",$/;"	s	object:dependencies.snapdragon
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "0.9.1",$/;"	s	object:dependencies.optionator
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.assign-symbols
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.astral-regex
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.at-least-node
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.browser-process-hrtime
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.collection-visit
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.delayed-stream
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.execa
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.fs.realpath
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.has-value
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.has-values
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.is-typedarray
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.isarray
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.map-visit
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.node-modules-regexp
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.p-finally
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.strip-eof
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.universalify
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:dependencies.unset-value
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.0-beta.2",$/;"	s	object:dependencies.gensync
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.@types/mkdirp
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.babel-preset-current-node-syntax
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.cache-base
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.collect-v8-coverage
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.functional-red-black-tree
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.has-bigints
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.is-potential-custom-element-name
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.json-stable-stringify-without-jsonify
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.object-visit
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.parent-module
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.path-is-absolute
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.rfc-3986
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.unbox-primitive
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.union-value
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.1",$/;"	s	object:dependencies.vscode-languageserver-textdocument
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.10",$/;"	s	object:dependencies.argparse
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.11",$/;"	s	object:dependencies.makeerror
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.balanced-match
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.call-bind
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.char-regex
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.for-in
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.has-symbols
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.is-bigint
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.is-windows
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.regex-not
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.w3c-hr-time
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.which-boxed-primitive
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.2",$/;"	s	object:dependencies.wrappy
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.3",$/;"	s	object:dependencies.has
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.3",$/;"	s	object:dependencies.internal-slot
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.3",$/;"	s	object:dependencies.sprintf-js
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.30001235",$/;"	s	object:dependencies.caniuse-lite
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.4",$/;"	s	object:dependencies.@cnakazawa/watch
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.4",$/;"	s	object:dependencies.is-date-object
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.4",$/;"	s	object:dependencies.is-symbol
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.4",$/;"	s	object:dependencies.mkdirp
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.4",$/;"	s	object:dependencies.reusify
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.4",$/;"	s	object:dependencies.side-channel
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.4",$/;"	s	object:dependencies.string.prototype.trimend
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.4",$/;"	s	object:dependencies.string.prototype.trimstart
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.4",$/;"	s	object:dependencies.tmpl
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.5",$/;"	s	object:dependencies.escape-string-regexp
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.5",$/;"	s	object:dependencies.is-number-object
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.5",$/;"	s	object:dependencies.nice-try
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.5",$/;"	s	object:dependencies.sisteransi
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.5",$/;"	s	object:dependencies.whatwg-encoding
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.6",$/;"	s	object:dependencies.inflight
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.6",$/;"	s	object:dependencies.is-string
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.7",$/;"	s	object:dependencies.path-parse
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.7",$/;"	s	object:dependencies.walker
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.0.8",$/;"	s	object:dependencies.combined-stream
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.1.0",$/;"	s	object:dependencies.@istanbuljs/load-nyc-config
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.1.0",$/;"	s	object:dependencies.arr-flatten
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.1.0",$/;"	s	object:dependencies.is-stream
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.1.0",$/;"	s	object:dependencies.remove-trailing-separator
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.1.0",$/;"	s	object:dependencies.safe-regex
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.1.1",$/;"	s	object:dependencies.buffer-from
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.1.1",$/;"	s	object:dependencies.function-bind
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.1.1",$/;"	s	object:dependencies.get-intrinsic
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.1.1",$/;"	s	object:dependencies.human-signals
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.1.1",$/;"	s	object:dependencies.is-boolean-object
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.1.1",$/;"	s	object:dependencies.object-keys
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.1.11",$/;"	s	object:dependencies.brace-expansion
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.1.2",$/;"	s	object:dependencies.@tootallnate/once
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.1.3",$/;"	s	object:dependencies.define-properties
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.1.3",$/;"	s	object:dependencies.is-regex
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.1.4",$/;"	s	object:dependencies.color-name
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.1.4",$/;"	s	object:dependencies.repeat-element
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.1.6",$/;"	s	object:dependencies.is-buffer
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.1.6",$/;"	s	object:dependencies.lines-and-columns
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.1.73",$/;"	s	object:dependencies.node-releases
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.10.3",$/;"	s	object:dependencies.object-inspect
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.11.0",$/;"	s	object:dependencies.fastq
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.13.0",$/;"	s	object:dependencies.follow-redirects
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.18.3",$/;"	s	object:dependencies.es-abstract
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.2.0",$/;"	s	object:dependencies.debounce
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.2.0",$/;"	s	object:dependencies.decamelize
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.2.0",$/;"	s	object:dependencies.fast-diff
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.2.0",$/;"	s	object:dependencies.run-parallel
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.2.1",$/;"	s	object:dependencies.@types/marked
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.2.1",$/;"	s	object:dependencies.es-to-primitive
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.2.1",$/;"	s	object:dependencies.ieee754
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.2.1",$/;"	s	object:dependencies.prelude-ls
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.2.13",$/;"	s	object:dependencies.nanomatch
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.2.2",$/;"	s	object:dependencies.colorette
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.2.2",$/;"	s	object:dependencies.jest-pnp-resolver
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.2.3",$/;"	s	object:dependencies.is-callable
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.2.3",$/;"	s	object:dependencies.queue-microtask
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.2.3",$/;"	s	object:dependencies.word-wrap
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.2.5",$/;"	s	object:dependencies.marked
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.2.5",$/;"	s	object:dependencies.minimist
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.2.7",$/;"	s	object:dependencies.@nodelib/fs.walk
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.2.8",$/;"	s	object:dependencies.rc
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.20.0",$/;"	s	object:dependencies.resolve
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.3.0",$/;"	s	object:dependencies.component-emitter
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.3.0",$/;"	s	object:dependencies.growly
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.3.0",$/;"	s	object:dependencies.object.pick
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.3.0",$/;"	s	object:dependencies.rfdc
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.3.1",$/;"	s	object:dependencies.regexp.prototype.flags
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.3.2",$/;"	s	object:dependencies.@types/which
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.3.2",$/;"	s	object:dependencies.error-ex
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.3.2",$/;"	s	object:dependencies.mixin-deep
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.3.6",$/;"	s	object:dependencies.make-error
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.3.749",$/;"	s	object:dependencies.electron-to-chromium
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.3.8",$/;"	s	object:dependencies.ini
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.4.0",$/;"	s	object:dependencies.colors
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.4.0",$/;"	s	object:dependencies.esquery
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.4.0",$/;"	s	object:dependencies.natural-compare
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.4.0",$/;"	s	object:dependencies.once
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.4.1",$/;"	s	object:dependencies.merge2
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.4.4",$/;"	s	object:dependencies.end-of-stream
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.48.0",$/;"	s	object:dependencies.mime-db
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.6.1",$/;"	s	object:dependencies.repeat-string
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.7.0",$/;"	s	object:dependencies.convert-source-map
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.8.0",$/;"	s	object:dependencies.psl
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "1.8.3",$/;"	s	object:dependencies.@sinonjs/commons
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "10.17.35",$/;"	s	object:dependencies.@types/node
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "10.2.1",$/;"	s	object:dependencies.decimal.js
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "11.0.3",$/;"	s	object:dependencies.globby
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "12.4.0",$/;"	s	object:dependencies.globals
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "15.0.13",$/;"	s	object:dependencies.@types/yargs
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "15.4.1",$/;"	s	object:dependencies.yargs
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "16.6.0",$/;"	s	object:dependencies.jsdom
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "17.0.2",$/;"	s	object:dependencies.react-is
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "18.1.3",$/;"	s	object:dependencies.yargs-parser
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.@types/fb-watchman
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.@types/stack-utils
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.capture-exit
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.chownr
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.ci-info
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.data-urls
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.escodegen
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.is-ci
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.is-fullwidth-code-point
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.isexe
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.merge-stream
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.require-main-filename
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.set-blocking
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.shebang-command
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.strip-final-newline
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.to-fast-properties
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.w3c-xmlserializer
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.0",$/;"	s	object:dependencies.which-module
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.1",$/;"	s	object:dependencies.color-convert
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.1",$/;"	s	object:dependencies.domexception
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.1",$/;"	s	object:dependencies.fb-watchman
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.1",$/;"	s	object:dependencies.html-encoding-sniffer
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.1",$/;"	s	object:dependencies.is-negative-zero
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.1",$/;"	s	object:dependencies.set-value
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.2",$/;"	s	object:dependencies.define-property
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.2",$/;"	s	object:dependencies.flatted
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.2",$/;"	s	object:dependencies.html-escaper
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.2",$/;"	s	object:dependencies.npm-run-path
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.2",$/;"	s	object:dependencies.which
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.3",$/;"	s	object:dependencies.@types/istanbul-lib-coverage
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.3",$/;"	s	object:dependencies.esutils
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.3",$/;"	s	object:dependencies.isuri
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.3",$/;"	s	object:dependencies.progress
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.3",$/;"	s	object:dependencies.stack-utils
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.3",$/;"	s	object:dependencies.tslib
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.4",$/;"	s	object:dependencies.extglob
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.4",$/;"	s	object:dependencies.inherits
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.4",$/;"	s	object:dependencies.is-plain-object
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.5",$/;"	s	object:dependencies.@nodelib/fs.stat
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.5",$/;"	s	object:dependencies.abab
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.5",$/;"	s	object:dependencies.get-caller-file
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.6",$/;"	s	object:dependencies.fast-levenshtein
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.0.6",$/;"	s	object:dependencies.get-value
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.1.0",$/;"	s	object:dependencies.array-union
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.1.0",$/;"	s	object:dependencies.eslint-utils
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.1.0",$/;"	s	object:dependencies.eslint-visitor-keys
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.1.0",$/;"	s	object:dependencies.fast-json-stable-stringify
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.1.0",$/;"	s	object:dependencies.fs-minipass
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.1.0",$/;"	s	object:dependencies.is-binary-path
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.1.0",$/;"	s	object:dependencies.is-generator-fn
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.1.0",$/;"	s	object:dependencies.mimic-fn
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.1.0",$/;"	s	object:dependencies.slice-ansi
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.1.0",$/;"	s	object:dependencies.tr46
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.1.1",$/;"	s	object:dependencies.bser
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.1.1",$/;"	s	object:dependencies.is-extglob
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.1.1",$/;"	s	object:dependencies.punycode
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.1.1",$/;"	s	object:dependencies.require-directory
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.1.1",$/;"	s	object:dependencies.snapdragon-node
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.1.1",$/;"	s	object:dependencies.terminal-link
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.1.2",$/;"	s	object:dependencies.atob
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.1.2",$/;"	s	object:dependencies.minizlib
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.1.2",$/;"	s	object:dependencies.ms
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.1.2",$/;"	s	object:dependencies.safer-buffer
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.1.2",$/;"	s	object:dependencies.vscode-uri
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.1.3",$/;"	s	object:dependencies.fsevents
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.1.31",$/;"	s	object:dependencies.mime-types
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.1.4",$/;"	s	object:dependencies.expand-brackets
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.1.5",$/;"	s	object:dependencies.@nodelib/fs.scandir
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.2.0",$/;"	s	object:dependencies.@types/minipass
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.2.0",$/;"	s	object:dependencies.binary-extensions
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.2.0",$/;"	s	object:dependencies.is-wsl
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.2.0",$/;"	s	object:dependencies.json5
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.2.0",$/;"	s	object:dependencies.nwsapi
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.2.0",$/;"	s	object:dependencies.p-each-series
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.2.0",$/;"	s	object:dependencies.p-try
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.2.0",$/;"	s	object:dependencies.supports-hyperlinks
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.2.0",$/;"	s	object:dependencies.xmlchars
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.2.1",$/;"	s	object:dependencies.is-docker
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.2.3",$/;"	s	object:dependencies.@types/prettier
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.2.4",$/;"	s	object:dependencies.streamroller
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.3.0",$/;"	s	object:dependencies.cssstyle
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.3.0",$/;"	s	object:dependencies.p-limit
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.3.0",$/;"	s	object:dependencies.picomatch
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.3.0",$/;"	s	object:dependencies.spdx-exceptions
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.3.0",$/;"	s	object:dependencies.v8-compile-cache
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.3.0",$/;"	s	object:dependencies.whatwg-mimetype
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.3.1",$/;"	s	object:dependencies.json-parse-even-better-errors
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.3.1",$/;"	s	object:dependencies.jsonc-parser
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.3.6",$/;"	s	object:dependencies.enquirer
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.4.0",$/;"	s	object:dependencies.@types/normalize-package-data
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.4.0",$/;"	s	object:dependencies.is-core-module
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.4.1",$/;"	s	object:dependencies.prompts
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.5.0",$/;"	s	object:dependencies.normalize-package-data
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.5.2",$/;"	s	object:dependencies.jsesc
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "2.8.9",$/;"	s	object:dependencies.hosted-git-info
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "20.2.0",$/;"	s	object:dependencies.@types/yargs-parser
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "24.1.3",$/;"	s	object:dependencies.eslint-plugin-jest
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.0.0",$/;"	s	object:dependencies.jest-docblock
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.0.0",$/;"	s	object:dependencies.jest-regex-util
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.0.18",$/;"	s	object:dependencies.@types/jest
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.3.0",$/;"	s	object:dependencies.jest-get-type
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.4.4",$/;"	s	object:dependencies.ts-jest
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.@jest/console
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.@jest/environment
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.@jest/fake-timers
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.@jest/globals
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.@jest/reporters
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.@jest/source-map
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.@jest/test-result
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.@jest/transform
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.@jest/types
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.babel-plugin-jest-hoist
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.babel-preset-jest
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.diff-sequences
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.expect
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-changed-files
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-diff
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-each
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-environment-jsdom
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-environment-node
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-haste-map
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-leak-detector
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-matcher-utils
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-message-util
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-mock
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-resolve
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-serializer
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-snapshot
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-util
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-validate
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-watcher
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.jest-worker
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.2",$/;"	s	object:dependencies.pretty-format
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.3",$/;"	s	object:dependencies.@jest/core
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.3",$/;"	s	object:dependencies.@jest/test-sequencer
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.3",$/;"	s	object:dependencies.babel-jest
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.3",$/;"	s	object:dependencies.jest
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.3",$/;"	s	object:dependencies.jest-config
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.3",$/;"	s	object:dependencies.jest-jasmine2
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.3",$/;"	s	object:dependencies.jest-resolve-dependencies
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.3",$/;"	s	object:dependencies.jest-runner
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "26.6.3",$/;"	s	object:dependencies.jest-runtime
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.@types/debounce
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.@types/events
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.@types/istanbul-lib-report
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.date-format
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.doctrine
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.istanbul-lib-coverage
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.istanbul-lib-report
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.normalize-path
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.pump
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.resolve-cwd
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.shebang-regex
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.slash
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.0",$/;"	s	object:dependencies.xml-name-validator
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.1",$/;"	s	object:dependencies.@types/istanbul-reports
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.1",$/;"	s	object:dependencies.dir-glob
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.1",$/;"	s	object:dependencies.form-data
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.1",$/;"	s	object:dependencies.isobject
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.1",$/;"	s	object:dependencies.snapdragon-util
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.1",$/;"	s	object:dependencies.spdx-expression-parse
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.2",$/;"	s	object:dependencies.braces
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.2",$/;"	s	object:dependencies.extend-shallow
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.2",$/;"	s	object:dependencies.import-local
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.2",$/;"	s	object:dependencies.istanbul-reports
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.2",$/;"	s	object:dependencies.rimraf
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.2",$/;"	s	object:dependencies.to-regex
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.3",$/;"	s	object:dependencies.@types/minimatch
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.3",$/;"	s	object:dependencies.kleur
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.3",$/;"	s	object:dependencies.signal-exit
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.3",$/;"	s	object:dependencies.write-file-atomic
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.4",$/;"	s	object:dependencies.flat-cache
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.4",$/;"	s	object:dependencies.minimatch
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.4",$/;"	s	object:dependencies.validate-npm-package-license
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.0.9",$/;"	s	object:dependencies.spdx-license-ids
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.1.0",$/;"	s	object:dependencies.arr-union
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.1.0",$/;"	s	object:dependencies.bytes
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.1.0",$/;"	s	object:dependencies.callsites
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.1.0",$/;"	s	object:dependencies.detect-newline
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.1.0",$/;"	s	object:dependencies.leven
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.1.0",$/;"	s	object:dependencies.make-dir
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.1.0",$/;"	s	object:dependencies.mimic-response
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.1.0",$/;"	s	object:dependencies.regexpp
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.1.0",$/;"	s	object:dependencies.split-string
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.1.1",$/;"	s	object:dependencies.escalade
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.1.1",$/;"	s	object:dependencies.path-key
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.1.1",$/;"	s	object:dependencies.spdx-correct
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.1.1",$/;"	s	object:dependencies.strip-json-comments
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.1.1",$/;"	s	object:dependencies.use
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.1.2",$/;"	s	object:dependencies.anymatch
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.1.2",$/;"	s	object:dependencies.promise.prototype.finally
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.1.3",$/;"	s	object:dependencies.fast-deep-equal
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.1.3",$/;"	s	object:dependencies.minipass
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.1.5",$/;"	s	object:dependencies.typedarray-to-buffer
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.14.1",$/;"	s	object:dependencies.js-yaml
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.15.1",$/;"	s	object:dependencies.vscode-languageserver-types
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.15.3",$/;"	s	object:dependencies.vscode-languageserver-protocol
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.2.4",$/;"	s	object:dependencies.symbol-tree
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.2.5",$/;"	s	object:dependencies.fast-glob
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.21.0",$/;"	s	object:dependencies.tsutils
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.3.0",$/;"	s	object:dependencies.import-fresh
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.4.3",$/;"	s	object:dependencies.chokidar
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "3.5.0",$/;"	s	object:dependencies.readdirp
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "30.7.13",$/;"	s	object:dependencies.eslint-plugin-jsdoc
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.arr-diff
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.has-flag
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.istanbul-lib-source-maps
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.js-tokens
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.path-exists
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.path-type
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.resolve-from
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.strip-bom
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.tough-cookie
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.0.0",$/;"	s	object:dependencies.yallist
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.0.1",$/;"	s	object:dependencies.esprima
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.0.1",$/;"	s	object:dependencies.http-proxy-agent
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.0.1",$/;"	s	object:dependencies.is-glob
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.0.1",$/;"	s	object:dependencies.pirates
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.0.2",$/;"	s	object:dependencies.string-length
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.0.3",$/;"	s	object:dependencies.istanbul-lib-instrument
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.0.3",$/;"	s	object:dependencies.string.prototype.matchall
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.0.3",$/;"	s	object:dependencies.y18n
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.0.4",$/;"	s	object:dependencies.@types/tar
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.0.4",$/;"	s	object:dependencies.micromatch
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.0.8",$/;"	s	object:dependencies.type-detect
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.1.0",$/;"	s	object:dependencies.find-up
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.1.0",$/;"	s	object:dependencies.get-stream
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.1.0",$/;"	s	object:dependencies.p-locate
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.1.0",$/;"	s	object:dependencies.sane
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.1.1",$/;"	s	object:dependencies.ansi-colors
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.1.1",$/;"	s	object:dependencies.chalk
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.1.1",$/;"	s	object:dependencies.debug
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.1.2",$/;"	s	object:dependencies.lodash.memoize
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.1.2",$/;"	s	object:dependencies.object.assign
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.1.2",$/;"	s	object:dependencies.typescript
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.1.5",$/;"	s	object:dependencies.@types/graceful-fs
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/eslint-plugin
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/experimental-utils
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/parser
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/scope-manager
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/types
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/typescript-estree
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.11.1",$/;"	s	object:dependencies.@typescript-eslint/visitor-keys
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.16.6",$/;"	s	object:dependencies.browserslist
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.17.21",$/;"	s	object:dependencies.lodash
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.2.0",$/;"	s	object:dependencies.pkg-dir
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.2.0",$/;"	s	object:dependencies.string-width
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.2.2",$/;"	s	object:dependencies.deepmerge
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.2.4",$/;"	s	object:dependencies.graceful-fs
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.3.0",$/;"	s	object:dependencies.esrecurse
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.3.0",$/;"	s	object:dependencies.estraverse
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.3.2",$/;"	s	object:dependencies.ansi-escapes
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.4.1",$/;"	s	object:dependencies.uri-js
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.6.0",$/;"	s	object:dependencies.co
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "4.8.5",$/;"	s	object:dependencies.rsvp
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "5.0.0",$/;"	s	object:dependencies.ansi-regex
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "5.0.0",$/;"	s	object:dependencies.ansi-styles
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "5.0.0",$/;"	s	object:dependencies.https-proxy-agent
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "5.0.0",$/;"	s	object:dependencies.locate-path
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "5.0.0",$/;"	s	object:dependencies.throat
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "5.0.1",$/;"	s	object:dependencies.saxes
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "5.0.1",$/;"	s	object:dependencies.to-regex-range
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "5.0.1",$/;"	s	object:dependencies.vscode-jsonrpc
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "5.1.1",$/;"	s	object:dependencies.eslint-scope
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "5.1.2",$/;"	s	object:dependencies.glob-parent
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "5.1.2",$/;"	s	object:dependencies.onetime
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "5.1.2",$/;"	s	object:dependencies.safe-buffer
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "5.1.8",$/;"	s	object:dependencies.ignore
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "5.2.0",$/;"	s	object:dependencies.parse-json
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "5.2.0",$/;"	s	object:dependencies.read-pkg
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "5.2.12",$/;"	s	object:dependencies.@chemzqm/neovim
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "5.3.1",$/;"	s	object:dependencies.acorn-jsx
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "5.3.1",$/;"	s	object:dependencies.camelcase
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "5.4.6",$/;"	s	object:dependencies.table
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "6.0.0",$/;"	s	object:dependencies.acorn-globals
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "6.0.0",$/;"	s	object:dependencies.babel-plugin-istanbul
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "6.0.0",$/;"	s	object:dependencies.cliui
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "6.0.0",$/;"	s	object:dependencies.decompress-response
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "6.0.0",$/;"	s	object:dependencies.lru-cache
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "6.0.0",$/;"	s	object:dependencies.strip-ansi
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "6.0.0",$/;"	s	object:dependencies.test-exclude
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "6.0.1",$/;"	s	object:dependencies.@sinonjs/fake-timers
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "6.0.1",$/;"	s	object:dependencies.file-entry-cache
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "6.0.1",$/;"	s	object:dependencies.parse5
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "6.0.2",$/;"	s	object:dependencies.agent-base
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "6.0.3",$/;"	s	object:dependencies.kind-of
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "6.0.5",$/;"	s	object:dependencies.tar
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "6.1.0",$/;"	s	object:dependencies.jsonfile
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "6.1.0",$/;"	s	object:dependencies.webidl-conversions
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "6.12.6",$/;"	s	object:dependencies.ajv
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "6.2.0",$/;"	s	object:dependencies.wrap-ansi
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "6.3.0",$/;"	s	object:dependencies.log4js
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.0.0",$/;"	s	object:dependencies.is-number
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.0.1",$/;"	s	object:dependencies.fill-range
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.0.1",$/;"	s	object:dependencies.read-pkg-up
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.0.3",$/;"	s	object:dependencies.cross-spawn
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.0.3",$/;"	s	object:dependencies.uuid
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.0.7",$/;"	s	object:dependencies.@types/json-schema
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.1.0-next.4",$/;"	s	object:dependencies.vscode-languageserver
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.1.14",$/;"	s	object:dependencies.@types/babel__core
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.1.2",$/;"	s	object:dependencies.v8-to-istanbul
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.1.3",$/;"	s	object:dependencies.@types/glob
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.1.6",$/;"	s	object:dependencies.glob
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.10.4",$/;"	s	object:dependencies.@babel/plugin-syntax-import-meta
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.10.4",$/;"	s	object:dependencies.@babel/plugin-syntax-logical-assignment-operators
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.10.4",$/;"	s	object:dependencies.@babel/plugin-syntax-numeric-separator
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.11.1",$/;"	s	object:dependencies.@types/babel__traverse
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.12.13",$/;"	s	object:dependencies.@babel/code-frame
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.12.13",$/;"	s	object:dependencies.@babel/helper-get-function-arity
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.12.13",$/;"	s	object:dependencies.@babel/helper-optimise-call-expression
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.12.13",$/;"	s	object:dependencies.@babel/helper-split-export-declaration
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.12.13",$/;"	s	object:dependencies.@babel/plugin-syntax-class-properties
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.12.13",$/;"	s	object:dependencies.@babel/plugin-syntax-top-level-await
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.12.13",$/;"	s	object:dependencies.@babel/template
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.12.17",$/;"	s	object:dependencies.@babel/helper-validator-option
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.13.0",$/;"	s	object:dependencies.@babel/helper-plugin-utils
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.13.12",$/;"	s	object:dependencies.@babel/helper-member-expression-to-functions
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.13.12",$/;"	s	object:dependencies.@babel/helper-module-imports
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.13.12",$/;"	s	object:dependencies.@babel/helper-simple-access
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.14.0",$/;"	s	object:dependencies.@babel/helper-validator-identifier
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.14.0",$/;"	s	object:dependencies.@babel/helpers
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.14.0",$/;"	s	object:dependencies.@babel/highlight
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.14.2",$/;"	s	object:dependencies.@babel/helper-function-name
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.14.2",$/;"	s	object:dependencies.@babel/helper-module-transforms
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.14.2",$/;"	s	object:dependencies.@babel/traverse
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.14.3",$/;"	s	object:dependencies.@babel/core
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.14.3",$/;"	s	object:dependencies.@babel/generator
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.14.4",$/;"	s	object:dependencies.@babel/compat-data
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.14.4",$/;"	s	object:dependencies.@babel/helper-compilation-targets
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.14.4",$/;"	s	object:dependencies.@babel/helper-replace-supers
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.14.4",$/;"	s	object:dependencies.@babel/parser
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.14.4",$/;"	s	object:dependencies.@babel/types
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.15.0",$/;"	s	object:dependencies.eslint
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.2.0",$/;"	s	object:dependencies.acorn-walk
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.2.0",$/;"	s	object:dependencies.supports-color
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.3.1",$/;"	s	object:dependencies.espree
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.3.2",$/;"	s	object:dependencies.semver
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.3.4",$/;"	s	object:dependencies.@types/semver
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.4.0",$/;"	s	object:dependencies.@types/babel__template
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.4.1",$/;"	s	object:dependencies.acorn
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.4.6",$/;"	s	object:dependencies.ws
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.6.2",$/;"	s	object:dependencies.@types/babel__generator
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.8.3",$/;"	s	object:dependencies.@babel/plugin-syntax-bigint
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.8.3",$/;"	s	object:dependencies.@babel/plugin-syntax-json-strings
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.8.3",$/;"	s	object:dependencies.@babel/plugin-syntax-nullish-coalescing-operator
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.8.3",$/;"	s	object:dependencies.@babel/plugin-syntax-object-rest-spread
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.8.3",$/;"	s	object:dependencies.@babel/plugin-syntax-optional-catch-binding
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.8.3",$/;"	s	object:dependencies.@babel/plugin-syntax-optional-chaining
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "7.8.4",$/;"	s	object:dependencies.@babel/plugin-syntax-async-generators
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "8.0.0",$/;"	s	object:dependencies.emoji-regex
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "8.0.2",$/;"	s	object:dependencies.node-notifier
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "8.3.0",$/;"	s	object:dependencies.@types/uuid
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "8.5.0",$/;"	s	object:dependencies.whatwg-url
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "9.0.0",$/;"	s	object:dependencies.jsdoctypeparser
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "9.0.1",$/;"	s	object:dependencies.fs-extra
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^      "version": "9.0.6",$/;"	s	object:dependencies.@types/fs-extra
version	vim/.vim/plugged/coc.nvim/package-lock.json	/^  "version": "0.0.80",$/;"	s
version	vim/.vim/plugged/fzf/install.ps1	/^$version="0.28.0"$/;"	v
version	vim/.vim/plugged/fzf/main.go	/^var version string = "0.28"$/;"	v	package:main	typeref:typename:string
version	vim/.vim/plugged/fzf/src/terminal.go	/^	version      int64$/;"	m	struct:fzf.Terminal	typeref:typename:int64
version	vim/.vim/plugged/fzf/src/terminal.go	/^	version    int64$/;"	m	struct:fzf.previewer	typeref:typename:int64
version	vim/.vim/plugged/fzf/src/terminal.go	/^	version  int64$/;"	m	struct:fzf.previewed	typeref:typename:int64
version	vim/.vim/plugged/fzf/src/terminal.go	/^	version int64$/;"	m	struct:fzf.previewResult	typeref:typename:int64
vertical	vim/.vim/plugged/fzf/src/tui/tui.go	/^	vertical    rune$/;"	m	struct:tui.BorderStyle	typeref:typename:rune
vesc	vim/.vim/plugged/editorconfig-vim/tests/core/ecvimlib.ps1	/^function global:vesc($str) {$/;"	f
vf	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
vg	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
vge	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	f
vi	vim/.vim/plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
vie	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
vim-LanguageTool	vim/.vim/plugged/vim-LanguageTool/README.md	/^vim-LanguageTool$/;"	s
vim-javascript	vim/.vim/plugged/vim-javascript/README.md	/^# vim-javascript$/;"	c
vim-jsx-typescript	vim/.vim/plugged/vim-jsx-typescript/README.md	/^# vim-jsx-typescript$/;"	c
vim-multiple-cursors	vim/.vim/plugged/vim-multiple-cursors/README.md	/^# vim-multiple-cursors$/;"	c
vim-plug	vim/.vim/plugged/vim-toml/README.md	/^### vim-plug$/;"	S	section:vim-toml""Installation
vim-plug instructions	vim/.vim/plugged/vim-multiple-cursors/README.md	/^### vim-plug instructions$/;"	S	section:vim-multiple-cursors""Installation
vim-styled-components	vim/.vim/plugged/vim-styled-components/README.md	/^# vim-styled-components$/;"	c
vim-toml	vim/.vim/plugged/vim-toml/README.md	/^# vim-toml$/;"	c
vim-translator	vim/.vim/plugged/vim-translator/README.md	/^# vim-translator$/;"	c
vim-vue-plugin [![Build Status][12]](https://travis-ci.com/leafOfTree/vim-vue-plugin)	vim/.vim/plugged/vim-vue-plugin/README.md	/^# vim-vue-plugin [![Build Status][12]](https:\/\/travis-ci.com\/leafOfTree\/vim-vue-plugin)$/;"	c
vim_args	vim/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$vim_args = @($/;"	v
vim_vue_plugin	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^  augroup vim_vue_plugin$/;"	a
vimrc_rooter	.config/nvim_copy/init.vim	/^augroup vimrc_rooter$/;"	a
vimrc_rooter	vim/.vimrc	/^augroup vimrc_rooter$/;"	a
vimstatus	vim/.vim/plugged/editorconfig-vim/tests/core/editorconfig2.ps1	/^$vimstatus = run_process $VIM -stdout $debug -stderr $debug `$/;"	v
visible	vim/.vim/plugged/vim-styled-components/examples/issue-30-3.js	/^          visible={!selectedCoffee}$/;"	M	class:CoffeeList
visual mode when multiple lines are selected	vim/.vim/plugged/vim-multiple-cursors/README.md	/^### visual mode when multiple lines are selected$/;"	S	section:vim-multiple-cursors""Quick Start
vk	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	v
vle	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
vm	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
vme	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	f
vmove	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) vmove(o int, allowCycle bool) {$/;"	f	struct:fzf.Terminal
vp	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	f
vr	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	v
vscode-jsonrpc	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "vscode-jsonrpc": "6.1.0-next.2",$/;"	s	object:dependencies.vscode-languageserver.dependencies.vscode-languageserver-protocol.requires
vscode-jsonrpc	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "vscode-jsonrpc": "^5.0.1",$/;"	s	object:dependencies.vscode-languageserver-protocol.requires
vscode-jsonrpc	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "vscode-jsonrpc": {$/;"	o	object:dependencies.vscode-languageserver.dependencies
vscode-jsonrpc	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "vscode-jsonrpc": {$/;"	o	object:dependencies
vscode-languageserver	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "vscode-languageserver": {$/;"	o	object:dependencies
vscode-languageserver-protocol	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "vscode-languageserver-protocol": "3.17.0-next.5"$/;"	s	object:dependencies.vscode-languageserver.requires
vscode-languageserver-protocol	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "vscode-languageserver-protocol": {$/;"	o	object:dependencies.vscode-languageserver.dependencies
vscode-languageserver-protocol	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "vscode-languageserver-protocol": {$/;"	o	object:dependencies
vscode-languageserver-textdocument	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "vscode-languageserver-textdocument": {$/;"	o	object:dependencies
vscode-languageserver-types	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "vscode-languageserver-types": "3.17.0-next.1"$/;"	s	object:dependencies.vscode-languageserver.dependencies.vscode-languageserver-protocol.requires
vscode-languageserver-types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "vscode-languageserver-types": "3.15.1"$/;"	s	object:dependencies.vscode-languageserver-protocol.requires
vscode-languageserver-types	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "vscode-languageserver-types": {$/;"	o	object:dependencies.vscode-languageserver.dependencies
vscode-languageserver-types	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "vscode-languageserver-types": {$/;"	o	object:dependencies
vscode-uri	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "vscode-uri": {$/;"	o	object:dependencies
vse	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
vset	vim/.vim/plugged/fzf/src/terminal.go	/^func (t *Terminal) vset(o int) bool {$/;"	f	struct:fzf.Terminal	typeref:typename:bool
vu	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
vue	.ctags.d/vue.ctags	/^--langdef=vue$/;"	l
vue#AlterSyntaxForEmmetVim	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! vue#AlterSyntaxForEmmetVim(name, syntax)$/;"	f
vue#GetBlockSyntax	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! vue#GetBlockSyntax(lnum)$/;"	f
vue#GetBlockTag	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! vue#GetBlockTag(lnum)$/;"	f
vue#GetConfig	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! vue#GetConfig(name, default)$/;"	f
vue#GetSyntaxList	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! vue#GetSyntaxList(config_syntax)$/;"	f
vue#IncludeOrEqual	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! vue#IncludeOrEqual(listOrString, item)$/;"	f
vue#LoadDefaultSyntax	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! vue#LoadDefaultSyntax(group, syntax)$/;"	f
vue#LoadFullSyntax	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! vue#LoadFullSyntax(group, syntax)$/;"	f
vue#LoadSyntax	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! vue#LoadSyntax(group, syntax)$/;"	f
vue#Log	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! vue#Log(msg)$/;"	f
vue#LogWithLnum	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! vue#LogWithLnum(msg)$/;"	f
vue#SyntaxSecondAtEnd	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! vue#SyntaxSecondAtEnd(lnum)$/;"	f
vue#Warn	vim/.vim/plugged/vim-vue-plugin/autoload/vue.vim	/^function! vue#Warn(msg)$/;"	f
vv	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
vw	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
vx	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
vy	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
vz	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
w	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
w	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
w	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
w	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:$0
w$	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
w0	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
w1	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Mf.checkPaths(r,e,"copy/;"	v
w3c-hr-time	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "w3c-hr-time": "^1.0.2",$/;"	s	object:dependencies.jsdom.requires
w3c-hr-time	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "w3c-hr-time": {$/;"	o	object:dependencies
w3c-xmlserializer	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "w3c-xmlserializer": "^2.0.0",$/;"	s	object:dependencies.jsdom.requires
w3c-xmlserializer	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "w3c-xmlserializer": {$/;"	o	object:dependencies
w4	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
w4e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
w5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
w6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
w8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
w9	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
wB	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
wBe	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
wC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
wD	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
wE	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
wG	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
wK	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function wK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
wL	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
wM	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	v
wN	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
wR	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
wT	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
wV	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
wW	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	f
wX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
wZ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
w_	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
wae	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
wait	vim/.vim/plugged/fzf/src/reader.go	/^	wait     bool$/;"	m	struct:fzf.Reader	typeref:typename:bool
wait	vim/.vim/plugged/fzf/test/test_go.rb	/^def wait$/;"	f
walker	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "walker": "^1.0.7"$/;"	s	object:dependencies.jest-haste-map.requires
walker	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "walker": "~1.0.5"$/;"	s	object:dependencies.sane.requires
walker	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "walker": {$/;"	o	object:dependencies
want	vim/.vim/plugged/fzf/src/terminal_test.go	/^	want$/;"	M	struct:fzf.testCase	typeref:typename:want
want	vim/.vim/plugged/fzf/src/terminal_test.go	/^type want struct {$/;"	s	package:fzf
warning	vim/.vim/plugged/iceberg-dark/iceberg-dark-powerline.json	/^        "warning": {$/;"	o	object:defaults
wc	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
we	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
webidl-conversions	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "webidl-conversions": "^5.0.0"$/;"	s	object:dependencies.domexception.requires
webidl-conversions	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "webidl-conversions": "^6.1.0"$/;"	s	object:dependencies.whatwg-url.requires
webidl-conversions	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "webidl-conversions": "^6.1.0",$/;"	s	object:dependencies.jsdom.requires
webidl-conversions	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "webidl-conversions": {$/;"	o	object:dependencies.domexception.dependencies
webidl-conversions	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "webidl-conversions": {$/;"	o	object:dependencies
wee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
wg	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
wge	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
whatwg-encoding	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "whatwg-encoding": "^1.0.5"$/;"	s	object:dependencies.html-encoding-sniffer.requires
whatwg-encoding	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "whatwg-encoding": "^1.0.5",$/;"	s	object:dependencies.jsdom.requires
whatwg-encoding	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "whatwg-encoding": {$/;"	o	object:dependencies
whatwg-mimetype	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "whatwg-mimetype": "^2.3.0",$/;"	s	object:dependencies.data-urls.requires
whatwg-mimetype	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "whatwg-mimetype": "^2.3.0",$/;"	s	object:dependencies.jsdom.requires
whatwg-mimetype	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "whatwg-mimetype": {$/;"	o	object:dependencies
whatwg-url	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "whatwg-url": "^8.0.0"$/;"	s	object:dependencies.data-urls.requires
whatwg-url	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "whatwg-url": "^8.5.0",$/;"	s	object:dependencies.jsdom.requires
whatwg-url	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "whatwg-url": {$/;"	o	object:dependencies
which	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "which": "^1.2.9"$/;"	s	object:dependencies.execa.dependencies.cross-spawn.requires
which	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "which": "^2.0.1"$/;"	s	object:dependencies.cross-spawn.requires
which	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "which": "^2.0.2"$/;"	s	object:dependencies.node-notifier.requires
which	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "which": {$/;"	o	object:dependencies.execa.dependencies
which	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "which": {$/;"	o	object:dependencies
which-boxed-primitive	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "which-boxed-primitive": "^1.0.2"$/;"	s	object:dependencies.unbox-primitive.requires
which-boxed-primitive	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "which-boxed-primitive": {$/;"	o	object:dependencies
which-module	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "which-module": "^2.0.0",$/;"	s	object:dependencies.yargs.requires
which-module	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "which-module": {$/;"	o	object:dependencies
white	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
whiteBright	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
whiteSuffix	vim/.vim/plugged/fzf/src/terminal.go	/^var whiteSuffix *regexp.Regexp$/;"	v	package:fzf	typeref:typename:*regexp.Regexp
width	vim/.vim/plugged/fzf/src/terminal.go	/^	width    int$/;"	m	struct:fzf.itemLine	typeref:typename:int
width	vim/.vim/plugged/fzf/src/tui/light.go	/^	width         int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
width	vim/.vim/plugged/fzf/src/tui/light.go	/^	width    int$/;"	m	struct:tui.LightWindow	typeref:typename:int
width	vim/.vim/plugged/fzf/src/tui/tcell.go	/^	width       int$/;"	m	struct:tui.TcellWindow	typeref:typename:int
wie	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
win	vim/.vim/plugged/fzf/test/test_go.rb	/^  attr_reader :win$/;"	A	class:Tmux
winblend	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "winblend": {$/;"	o	object:definitions.float.properties
winblend	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "winblend": {},$/;"	o	object:properties.diagnostic.floatConfig.properties
winblend	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "winblend": {},$/;"	o	object:properties.hover.floatConfig.properties
winblend	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "winblend": {},$/;"	o	object:properties.signature.floatConfig.properties
winblend	vim/.vim/plugged/coc.nvim/data/schema.json	/^        "winblend": {},$/;"	o	object:properties.suggest.floatConfig.properties
window	vim/.vim/plugged/fzf/src/terminal.go	/^	window       tui.Window$/;"	m	struct:fzf.Terminal	typeref:typename:tui.Window
windowPosition	vim/.vim/plugged/fzf/src/options.go	/^type windowPosition int$/;"	t	package:fzf	typeref:typename:int
with	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	m	class:r
withIndex	vim/.vim/plugged/fzf/src/result_test.go	/^func withIndex(i *Item, index int) *Item {$/;"	f	package:fzf	typeref:typename:*Item
withPrefixLengths	vim/.vim/plugged/fzf/src/tokenizer.go	/^func withPrefixLengths(tokens []string, begin int) []Token {$/;"	f	package:fzf	typeref:typename:[]Token
wme	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	f
wombat	vim/.vim/plugged/lightline.vim/README.md	/^### wombat$/;"	S	chapter:lightline.vim
wombat	vim/.vim/plugged/lightline.vim/colorscheme.md	/^### wombat$/;"	S	chapter:Available Colorschemes
word-wrap	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "word-wrap": "~1.2.3"$/;"	s	object:dependencies.escodegen.dependencies.optionator.requires
word-wrap	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "word-wrap": "^1.2.3"$/;"	s	object:dependencies.optionator.requires
word-wrap	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "word-wrap": {$/;"	o	object:dependencies
wordNext	vim/.vim/plugged/fzf/src/terminal.go	/^	wordNext     string$/;"	m	struct:fzf.Terminal	typeref:typename:string
wordRubout	vim/.vim/plugged/fzf/src/terminal.go	/^	wordRubout   string$/;"	m	struct:fzf.Terminal	typeref:typename:string
workspace.bottomUpFiletypes	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "workspace.bottomUpFiletypes": {$/;"	o	object:properties
workspace.ignoredFiletypes	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "workspace.ignoredFiletypes": {$/;"	o	object:properties
workspace.workspaceFolderCheckCwd	vim/.vim/plugged/coc.nvim/data/schema.json	/^    "workspace.workspaceFolderCheckCwd": {$/;"	o	object:properties
wp	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
wr	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
wrap	vim/.vim/plugged/fzf/src/options.go	/^	wrap        bool$/;"	m	struct:fzf.previewOpts	typeref:typename:bool
wrap-ansi	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "wrap-ansi": "^6.2.0"$/;"	s	object:dependencies.cliui.requires
wrap-ansi	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "wrap-ansi": {$/;"	o	object:dependencies
wrapLine	vim/.vim/plugged/fzf/src/tui/light.go	/^func wrapLine(input string, prefixLength int, max int, tabstop int) []wrappedLine {$/;"	f	package:tui	typeref:typename:[]wrappedLine
wrapped.newsink	vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! wrapped.newsink(lines)$/;"	f
wrappedLine	vim/.vim/plugged/fzf/src/tui/light.go	/^type wrappedLine struct {$/;"	s	package:tui
wrappy	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "wrappy": "1"$/;"	s	object:dependencies.inflight.requires
wrappy	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "wrappy": "1"$/;"	s	object:dependencies.once.requires
wrappy	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "wrappy": {$/;"	o	object:dependencies
write	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f	function:o
write-file-atomic	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "write-file-atomic": "^3.0.0"$/;"	s	object:dependencies.@jest/transform.requires
write-file-atomic	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "write-file-atomic": {$/;"	o	object:dependencies
writeTemporaryFile	vim/.vim/plugged/fzf/src/terminal.go	/^func writeTemporaryFile(data []string, printSep string) string {$/;"	f	package:fzf	typeref:typename:string
writelines	vim/.vim/plugged/fzf/test/test_go.rb	/^  def writelines(path, lines)$/;"	f	class:TestBase
ws	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
ws	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "ws": "^7.4.5",$/;"	s	object:dependencies.jsdom.requires
ws	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "ws": {$/;"	o	object:dependencies
wse	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
wt	vim/.vim/plugged/coc.nvim/build/index.js	/^`).split(\/\\r?\\n\/);c.length&&(await this.nvim.command('echo ""'),await D.echoLines(c,e))}}asy/;"	v
wte	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
ww	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
wx	vim/.vim/plugged/coc.nvim/build/index.js	/^`;function KI(r,e){if(vs.existsSync(r))return;let t=vs.openSync(r,e.flags,e.mode);vs.closeSync(t/;"	v
wxss.validate	.config/nvim_copy/coc-settings.json	/^  "wxss.validate": false,$/;"	b
wxss.validate	vim/.vim/coc-settings.json	/^  "wxss.validate": false,$/;"	b
wy	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
wz	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
x	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
x	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
x	vim/.vim/plugged/coc.nvim/build/index.js	/^var x9=Object.create;var Al=Object.defineProperty,S9=Object.defineProperties,ZD=Object.getOwnPro/;"	v
x	vim/.vim/plugged/fzf/src/tui/light.go	/^	x             int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
x	vim/.vim/plugged/vim-css-color/tests/example.ts	/^let x = '#20513e';$/;"	v
x$	vim/.vim/plugged/coc.nvim/build/index.js	/^`}compose(...e){return(...t)=>{for(let i=e.length;i-- >0;)t=[e[i].apply(this,t)];return t[0]}}st/;"	f
x0	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
x11	.config/openbox/menu.xml	/^<menu id="x11" label="x11">$/;"	i
x3	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
x4	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
x5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
x6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
x7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
x8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
xB	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
xC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
xD	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
xE	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
xF	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}errWrite(e){this.notify(`${this.prefix}err_write`,[e])}errWriteLine(e){this.notify(`${this.pr/;"	v
xG	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
xI	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
xIe	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
xK	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}}function wK(r,e){let t=e.colouredLayout;return r.layout&&(t=e.layout(r.layout.type,r.layout)/;"	f
xN	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
xP	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	v
xQ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
xR	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
xS	vim/.vim/plugged/coc.nvim/build/index.js	/^`}debug(e,...t){tF!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	v
xV	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
xX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
xZ	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
x_	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	v
xae	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	f
xc	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
xee	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
xg	vim/.vim/plugged/coc.nvim/build/index.js	/^`,close:t.cancellable==!0,title:t.title},!1);this.option=t;O.on("BufWinLeave",i=>{i==this.bufnr&/;"	v
xge	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
xh	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
xi	.config/openbox/rc.xml	/^<openbox_config xmlns="http:\/\/openbox.org\/3.4\/rc" xmlns:xi="http:\/\/www.w3.org\/2001\/XIncl/;"	n	uri:http://www.w3.org/2001/XInclude
xk	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	v
xl	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
xle	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
xme	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	f
xml-name-validator	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "xml-name-validator": "^3.0.0"$/;"	s	object:dependencies.jsdom.requires
xml-name-validator	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "xml-name-validator": "^3.0.0"$/;"	s	object:dependencies.w3c-xmlserializer.requires
xml-name-validator	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "xml-name-validator": {$/;"	o	object:dependencies
xmlchars	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "xmlchars": "^2.2.0"$/;"	s	object:dependencies.saxes.requires
xmlchars	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "xmlchars": {$/;"	o	object:dependencies
xn	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
xoffset	vim/.vim/plugged/fzf/src/terminal.go	/^	xoffset      int$/;"	m	struct:fzf.Terminal	typeref:typename:int
xp	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Iie
xp	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
xpe	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	f
xr	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
xse	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
xt	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
xte	vim/.vim/plugged/coc.nvim/build/index.js	/^`}debug(e,...t){tF!="debug"||this.stream==null||this.stream.write(this.getText("debug",e,t))}inf/;"	f
xw	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
xy	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
y	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	f
y	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
y	vim/.vim/plugged/coc.nvim/build/index.js	/^`),a++,c=i,o=14;switch(w){case 123:return i++,o=1;case 125:return i++,o=2;case 91:return i++,o=3/;"	v
y	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f	function:OR
y	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
y	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f	function:a
y	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f	function:$0
y	vim/.vim/plugged/fzf/src/tui/light.go	/^	y             int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
y	vim/.vim/plugged/vim-css-color/tests/example.ts	/^let y = foo('#20513e');$/;"	v
y$	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
y0	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),c=c.replace(\/\\s*$\/,"");let f=c.split(\/\\n\/);for(let d=0;d<f.length;d++){let h=f[d];if(!/;"	f
y0e	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
y18n	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "y18n": "^4.0.0",$/;"	s	object:dependencies.yargs.requires
y18n	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "y18n": {$/;"	o	object:dependencies
y2	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
y5	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
y6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
y7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
y8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
y9	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
yB	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
yC	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
yD	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	v
yG	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	f
yJ	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	f
yK	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	f
yN	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
yPe	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
yV	vim/.vim/plugged/coc.nvim/build/index.js	/^${c}(line ${u+1}): ${l.message}`;let f=s.get(l.location.uri)||[];f.push(C.Diagnostic.create(l.lo/;"	f
yW	vim/.vim/plugged/coc.nvim/build/index.js	/^`)s=!1,a+=l(r,o,c),o=c;else if(!s&&t+i==="\/*"){a+=r.slice(o,c),o=c,s=cW,c++;continue}else if(s=/;"	v
yX	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	f
y_	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	v
yallist	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "yallist": "^4.0.0"$/;"	s	object:dependencies.lru-cache.requires
yallist	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "yallist": "^4.0.0"$/;"	s	object:dependencies.minipass.requires
yallist	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "yallist": "^4.0.0"$/;"	s	object:dependencies.minizlib.requires
yallist	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "yallist": "^4.0.0"$/;"	s	object:dependencies.tar.requires
yallist	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "yallist": {$/;"	o	object:dependencies
yanked	vim/.vim/plugged/fzf/src/terminal.go	/^	yanked       []rune$/;"	m	struct:fzf.Terminal	typeref:typename:[]rune
yargs	vim/.vim/plugged/coc.nvim/package-lock.json	/^            "yargs": "^15.4.1"$/;"	s	object:dependencies.jest.dependencies.jest-cli.requires
yargs	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "yargs": "^15.4.1"$/;"	s	object:dependencies.jest-runtime.requires
yargs	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "yargs": {$/;"	o	object:dependencies
yargs-parser	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "yargs-parser": "20.x"$/;"	s	object:dependencies.ts-jest.requires
yargs-parser	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "yargs-parser": "^18.1.2"$/;"	s	object:dependencies.yargs.requires
yargs-parser	vim/.vim/plugged/coc.nvim/package-lock.json	/^        "yargs-parser": {$/;"	o	object:dependencies.ts-jest.dependencies
yargs-parser	vim/.vim/plugged/coc.nvim/package-lock.json	/^    "yargs-parser": {$/;"	o	object:dependencies
yc	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
ye	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
yellow	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
yellowBright	vim/.vim/plugged/coc.nvim/build/index.js	/^`)});var b=f(n.bottom,n["bottom-left"]||n.bottom,n["bottom-right"]||n.bottom,n["bottom-mid"]);re/;"	p	class:Uoe.e.color
yf	vim/.vim/plugged/coc.nvim/build/index.js	/^GFS4: `),console.error(r)});li[dn]||(gP=global[dn]||[],mP(li,gP),li.close=function(r){function e/;"	v
yge	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
yh	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
yie	vim/.vim/plugged/coc.nvim/build/index.js	/^`,CF=class{constructor(e="utf-8"){this._encoding=e,this._chunks=[],this._totalLength=0}get encod/;"	f
yle	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"utf8"))}async clean(){try{await Io.default.unlink(this.file)}catch(e){}}}});function a_(r,e,/;"	f
ym	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
yme	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}},SD=class{constructor(e,t){this._client=e;this._setting=t;this._listeners=[]}start(){return /;"	f
yo	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
yoffset	vim/.vim/plugged/fzf/src/tui/light.go	/^	yoffset       int$/;"	m	struct:tui.LightRenderer	typeref:typename:int
yp	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
yr	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}:null}var Jp=class{constructor(e){if(!e)throw new Error("No category provided.");this.categor/;"	v
yse	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
yt	vim/.vim/plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	v
yte	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	f
yw	vim/.vim/plugged/coc.nvim/build/index.js	/^`).trim();await this.nvim.call("coc#util#echo_hover",[o])}else this.documentLines=s,await this.n/;"	v
yy	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	v
yze	vim/.vim/plugged/coc.nvim/build/index.js	/^`)||u.range.start.line!=u.range.end.line)){this.cancel();return}if(a.length==s.length){let u;for/;"	v
z	vim/.vim/plugged/coc.nvim/build/index.js	/^Please report this to https:\/\/github.com\/markedjs\/marked.`,e.silent)return"<p>An error occur/;"	p	class:AnonymousFunction272f78ae1df00.n
z	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	p	class:OR.$
z	vim/.vim/plugged/coc.nvim/build/index.js	/^`,Pie;(function(r){function e(t){let i=t;return i&&od.func(i.dispose)&&od.func(i.onClose)&&od.fu/;"	f	function:Il
z$	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}clear(e){if(!this.validate())return;let{nvim:t}=this;this.lines=e?this.lines.slice(-e):[],!!t/;"	v
z0	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
z3	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
z3e	vim/.vim/plugged/coc.nvim/build/index.js	/^`)&&l.slice(o.character).length&&(h.newText=h.newText+c,u=u+c),this.applying=!0,await s.applyEdi/;"	v
z4	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
z5	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
z6	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
z7	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
z8	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
z9	vim/.vim/plugged/coc.nvim/build/index.js	/^`+s),r.push(n+"m+"+Tp.exports.humanize(this.diff)+"[0m")}else r[0]=z9()+e+" "+r[0]}function z9(/;"	f
zB	vim/.vim/plugged/coc.nvim/build/index.js	/^>>> no match, partial?`,r,u,e,f),u===o))}var h;if(typeof l=="string"?(i.nocase?h=c.toLowerCase()/;"	f
zC	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
zD	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
zEe	vim/.vim/plugged/coc.nvim/build/index.js	/^`)[0],s=sh(e.severity).slice(0,1).toUpperCase();return{bufnr:r,lnum:t.line+1,col:t.character+1,t/;"	v
zG	vim/.vim/plugged/coc.nvim/build/index.js	/^`}),a[c]=u}return this.changing=!0,await v.applyEdit({changes:a}),this.changing=!1,e.pauseNotifi/;"	v
zH	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	v
zI	vim/.vim/plugged/coc.nvim/build/index.js	/^`;typeof e=="object"&&e!==null&&(e.spaces&&(t=e.spaces),e.EOL&&(i=e.EOL));var n=JSON.stringify(r/;"	v
zM	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	v
zN	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&n++}i&&t.length>0&&e.push(t.length),this._lineOffsets=e}return this._lineOffsets},r.prototype/;"	f
zO	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`);let{srcStat:i,destStat:/;"	v
zP	vim/.vim/plugged/coc.nvim/build/index.js	/^    see https:\/\/github.com\/jprichardson\/node-fs-extra\/issues\/269`),Cf.checkPaths(r,e,"copy/;"	f
zT	vim/.vim/plugged/coc.nvim/build/index.js	/^`)){for(let i of e.split(\/\\r?\\n\/))this.addLine(i,t);return}if(t&&this.highlights.push({lnum:/;"	v
zV	vim/.vim/plugged/coc.nvim/build/index.js	/^`)}if(i){s.addLine("ARGUMENTS","Label"),s.addLine("");for(let a of e.options)s.addLine(a.name,"S/;"	v
za	vim/.vim/plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	f
zb	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	v
zc	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
zce	vim/.vim/plugged/coc.nvim/build/index.js	/^`));continue}return!1}for(;!this._accept(4);){if(this._token.type!==14){n+=this._accept(void 0,!/;"	f
zd	vim/.vim/plugged/coc.nvim/build/index.js	/^`.indexOf(r.charAt(e))!==-1}var N0=R(()=>{_g();"use strict"});function fB(r,e,t){e===void 0&&(e=/;"	f
zf	vim/.vim/plugged/coc.nvim/build/index.js	/^`,finalEOL:t=!0,replacer:i=null,spaces:n}={}){let s=t?e:"";return JSON.stringify(r,i,n).replace(/;"	v
zi	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	c
zie	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	f
zj	vim/.vim/plugged/coc.nvim/build/index.js	/^`&&(e.call("append",[0,a],!0),e.command("normal! Gdd",!0)),e.call("winrestview",[u],!0),await e./;"	f
zm	vim/.vim/plugged/coc.nvim/build/index.js	/^`)),z){let ce=P.error?` Request failed: ${P.error.message} (${P.error.code}).`:"";_.log(`Receive/;"	v
zme	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	f
zoe	vim/.vim/plugged/coc.nvim/build/index.js	/^`),i=[];return t.forEach(function(n){if(!n)return;let s=n.replace(Hoe,"").split(c$);i.push(s.spl/;"	v
zpe	vim/.vim/plugged/coc.nvim/build/index.js	/^`);let{statusCode:h,buffered:p}=yield d;if(h===200){if(e.once("socket",Wpe),t.secureEndpoint){le/;"	f
zsh	vim/.vim/plugged/fzf/test/test_go.rb	/^    def zsh$/;"	S	class:Shell
zt	vim/.vim/plugged/coc.nvim/build/index.js	/^`))}return[s,o]}function re(r){return Buffer.byteLength(r)}function Fc(r){return r?r[0].toUpperC/;"	f
zu	vim/.vim/plugged/coc.nvim/build/index.js	/^`),"error"),!1):!0}waitClient(e){let t=this.getService(e);return t&&t.state==Ee.Running?Promise./;"	f
zue	vim/.vim/plugged/coc.nvim/build/index.js	/^`}):l&&typeof l=="object"?t.push(s):i+=ou(s)+n+ou(l)+z_}),e.section&&i.length&&(i="["+ou(e.secti/;"	f
zw	vim/.vim/plugged/coc.nvim/build/index.js	/^`).map(e=>e.trim()).join(" ")};dR.O=function(r){return this.inspectOpts.colors=this.useColors,Ep/;"	v
zy	vim/.vim/plugged/coc.nvim/build/index.js	/^ ${l.stack}`),o()})}));for(let o of i){let a=o.split(":"),l=a[0];if(l=="onLanguage"){if(v.filety/;"	v
zz	vim/.vim/plugged/coc.nvim/build/index.js	/^`).reduce(ede,Object.create(null)),ede=(r,e)=>{let t=parseInt(e,10);if(t!==Buffer.byteLength(e)+/;"	v
